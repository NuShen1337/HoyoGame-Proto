// ex-RushiaLover ProtoDumper
syntax = "proto3";
import "google/protobuf/any.proto";

// CmdId: 5887
message DCDDLFPDILA {
	DDNPDNIOOKA CPEPJEPHPBD = 6; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 11570
}

// CmdId: 8128
message CDAIFMNPJIG {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 11960
}

enum ChessUIIconType {
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_NONE = 0;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_COIN = 1;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_GOLD = 2;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_MECHANISM = 3;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_HP = 4;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_ATK = 5;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_COUNTDOWN = 6;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_KEY = 7;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_CLUE = 8;
	CHESS_UI_ICON_TYPE_CHESS_UI_ICON_TYPE_CARD = 9;
}

enum GPHOMCPODCD {
	GPHOMCPODCD_AGLCHMJEHGM = 0;
	GPHOMCPODCD_HLMEEDBKIBK = 1;
	GPHOMCPODCD_DDLGJGBDGND = 2;
	GPHOMCPODCD_OMJGCGMMNDJ = 3;
}

message EFBCIHHFBLN {
	uint32 GJIJHECJOMI = 12; // offset: 24, xor const: 13626
	uint32 LBNPKJJNPJP = 4; // offset: 32, xor const: 74
	uint32 AEGIPOACBJB = 9; // offset: 28, xor const: 5123
}

message CAJAABCPNDJ {
	uint32 NCAGHHFDAOG = 12; // offset: 28, xor const: 8040
	float EFCFBIFDBJF = 9; // offset: 32, xor const: 0
	float EFLPLGPDEGF = 3; // offset: 24, xor const: 0
}

// CmdId: 9509
message BFNGLKGNIBM {
	HCOODNLABCC LBOCHJLNDMH = 10; // offset: 24, xor const: 0
}

enum KEAIEBNLEPE {
	KEAIEBNLEPE_KJIOEECEGNJ = 0;
	KEAIEBNLEPE_EAEIFNHNHID = 1;
}

// CmdId: 298
message AEAKFONNHHE {
	uint32 OPFEAMDPIAG = 4; // offset: 24, xor const: 13579
	int32 IHIGNMLCHDK = 1; // offset: 28, xor const: 2212
}

enum ODOLDPKCPMA {
	ODOLDPKCPMA_EPKKODLDCFH = 0;
	ODOLDPKCPMA_DOJGIEBPKHG = 1;
	ODOLDPKCPMA_CEFKNCPEAOG = 2;
	ODOLDPKCPMA_KBLLFHBDAGL = 3;
}

message KCDCHOIKCDL {
	uint32 IHBPOCCGLKB = 2; // offset: 32, xor const: 3443
	uint32 FAMEFJHIFMH = 11; // offset: 36, xor const: 15496
	bool BKFADLJNBPJ = 9; // offset: 24, xor const: 0
	uint32 ENCANOPLLDM = 3; // offset: 28, xor const: 4156
}

message FIGBNPPGJHN {
	repeated uint32 PMNKDOHJDAP = 1; // offset: 48, xor const: 0
	repeated uint32 KCIAGPAFEBH = 8; // offset: 24, xor const: 0
	repeated uint32 BDCGCPEPMGC = 2; // offset: 32, xor const: 0
	uint32 JHFBOHABIAL = 3; // offset: 56, xor const: 2530
	repeated uint32 ANCKFLCONNN = 10; // offset: 16, xor const: 0
}

// CmdId: 7670
message ADJKINCFFKC {
	int64 JNLAKNOIKEG = 14; // offset: 32, xor const: 8649
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 10326
}

message LFNODLENPID {
	uint32 FNGJJKEONPJ = 10; // offset: 32, xor const: 14555
	uint32 OEPGKHPDABP = 6; // offset: 28, xor const: 5147
	uint32 GELGNCOHHLE = 14; // offset: 24, xor const: 15885
}

message JGIEJIOIDEF {
	repeated uint32 JCDCGDGGEGM = 16; // offset: 80, xor const: 0
	double LHGMIHPKCFB = 5; // offset: 120, xor const: 0
	string KDJIMMHIDEJ = 7; // offset: 104, xor const: 0
	repeated uint32 EHMCIJPKAHH = 9; // offset: 64, xor const: 0
	map<int32, IMDCCMAKBDB> DJNKPENOGGI = 3; // offset: 16, xor const: 0
	EDGCAIEHLHH NNAHMCADIGI = 2; // offset: 56, xor const: 0
	string DAILJGPFGIJ = 10; // offset: 24, xor const: 0
	float FPAMMKPBAGA = 15; // offset: 112, xor const: 0
	string DOOJHIOCDLE = 8; // offset: 48, xor const: 0
	NNNBNGBBDEH NPEAEBDEBFG = 1; // offset: 116, xor const: 0
	bytes NBKPBOGACAO = 13; // offset: 96, xor const: 0
	string IKMBJIKDBHC = 4; // offset: 72, xor const: 0
	NMEOBPHNHAC MPEGJBBHCNP = 12; // offset: 88, xor const: 0
	bytes CABNOCIBGKA = 14; // offset: 40, xor const: 0
}

message LFCCLDHIJFM {
	FGKJFCJILIL PGGGNINDNCP = 2; // offset: 32, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 24, xor const: 0
}

// CmdId: 2462
message KEKLAIKACAD {
	repeated uint32 IFNLFALJEDC = 2; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 14632
}

message MKBNDBCGBLO {
	bool GFDLKNDBOGB = 14; // offset: 70, xor const: 0
	uint32 CPEGDKBNGDH = 9; // offset: 84, xor const: 15327
	bool IDGHKFBMLFJ = 4; // offset: 68, xor const: 0
	uint32 DFMKBBDOFBA = 8; // offset: 80, xor const: 3181
	uint32 ECPANJGKLDE = 3; // offset: 88, xor const: 14846
	uint32 IEJAFPFIMEN = 1; // offset: 72, xor const: 6417
	int64 HGPEPEFAGAA = 2; // offset: 48, xor const: 3247
	bool BFOKPAJHIMD = 756; // offset: 69, xor const: 0
	uint32 AMIJIAHGPMC = 12; // offset: 76, xor const: 9120
	repeated uint32 LOKKGEDBAGE = 5; // offset: 32, xor const: 0
	uint32 CIHANDNPAMA = 13; // offset: 60, xor const: 1453
	uint32 DLMLGALCIBC = 1658; // offset: 56, xor const: 8142
	uint32 NOBBNIHGMAH = 10; // offset: 44, xor const: 14574
	uint32 PGNHCFJNBAC = 7; // offset: 64, xor const: 13432
	bool ANMGJBMLLMK = 15; // offset: 71, xor const: 0
	string JJOBDEFMGEA = 11; // offset: 24, xor const: 0
	uint32 HIMNJDFAOCH = 6; // offset: 40, xor const: 9818
}

message EKBEHKEMAMD {
	string FGEALGMJBFF = 4; // offset: 24, xor const: 0
	string DDJLPNFOFBD = 2; // offset: 16, xor const: 0
	string BDBMKGAJDPC = 3; // offset: 32, xor const: 0
	FGKJFCJILIL PBNBMCJMAMF = 1; // offset: 48, xor const: 0
}

message GOLKAMLAHHJ {
	string MJLNODOAGGC = 1; // offset: 24, xor const: 0
}

enum KIPMLHICKLM {
	KIPMLHICKLM_AKHDKFBDKKA = 0;
	KIPMLHICKLM_NMEILEFIOOA = 1;
	KIPMLHICKLM_CMMJMEAFHHI = 2;
}

message LLKGPNFKBPP {
	JCAIEKOGNGC KIAMDFIOGJD = 7; // offset: 24, xor const: 0
}

// CmdId: 3433
message MFODAILNPNC {
	uint32 NJFOLJNDPGG = 7; // offset: 28, xor const: 14102
	uint32 KCFEIJAALGK = 3; // offset: 24, xor const: 4313
	uint32 EINBPKAJCMM = 14; // offset: 32, xor const: 2139
	uint32 EKLGNOIEMLA = 12; // offset: 36, xor const: 3632
}

// CmdId: 3628
message EKAIICKDMLA {
	PDMKMHLLPHI EILDHJJLINK = 9; // offset: 16, xor const: 0
}

enum HMHIOFKOHPB {
	HMHIOFKOHPB_CGJMGCJDFEJ = 0;
	HMHIOFKOHPB_JPNHCPAAHLI = 1;
	HMHIOFKOHPB_OPNOKABGMJH = 2;
	HMHIOFKOHPB_HIKJPFMOICJ = 3;
}

enum MOGIBJFBOFI {
	MOGIBJFBOFI_IGNBBMNFPBP = 0;
}

message MLNDJLMAOBK {
	uint32 AKDCAPHBLDC = 1; // offset: 24, xor const: 0
}

message NGCGCJILJDK {
	string BONBBPKCDMI = 2; // offset: 24, xor const: 0
	uint32 OBKONCIIPDN = 1; // offset: 32, xor const: 0
}

// CmdId: 1825
message BOIKKHKDEGD {
	uint32 BFPINNDKOIK = 13; // offset: 28, xor const: 8494
	uint32 KLJOMJNCFEP = 5; // offset: 32, xor const: 6215
	bool JKAJJOLENHH = 11; // offset: 24, xor const: 0
	uint32 MMIEFOOGOBA = 9; // offset: 36, xor const: 2081
}

// CmdId: 1903
message OKNNOIBDOHL {
	ENMHIBPOADD CPEPJEPHPBD = 7; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 14; // offset: 48, xor const: 9465
	uint32 KMKPPDICOKA = 9; // offset: 56, xor const: 14308
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 12040
}

message NLDFCKOOECG {
	FKDDPIBBKCD KLMLCFPLMPF = 14; // offset: 16, xor const: 0
}

message DNCPEJNCNEK {
	repeated EIGPBOIECHG IDKDKJBILGJ = 1; // offset: 16, xor const: 0
	EIGPBOIECHG GFODNCPKFMK = 10; // offset: 24, xor const: 0
}

// CmdId: 961
message APJHIJDMPMC {
	bool BFOKPAJHIMD = 2; // offset: 24, xor const: 0
}

// CmdId: 4034
message NOENKMKBAPC {
}

// CmdId: 8470
message HGJINBLAPHL {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 471
}

message DHDBEIFENAJ {
	GEHKNLCAAOE AADKLGBDEFO = 5; // offset: 16, xor const: 0
	uint32 BKPPOOKFECD = 6; // offset: 40, xor const: 8158
	int32 PPOCAKNMNOJ = 15; // offset: 48, xor const: 1395
	IMJIJLIDHEC HLADBGMOMGH = 1; // offset: 32, xor const: 0
	uint32 GDLNJMCLCID = 10; // offset: 44, xor const: 12341
}

message NGLCFLHIONC {
	FOFHBENHIOC DIONHPBOEKB = 1; // offset: 24, xor const: 0
}

message AKPCHBBOLLG {
	uint32 KEICLBBOONP = 6; // offset: 32, xor const: 9572
	uint32 PBOAMDEBIGO = 15; // offset: 36, xor const: 11905
	uint32 IIIGDHJPFMI = 7; // offset: 44, xor const: 288
	uint32 OPFEAMDPIAG = 1; // offset: 28, xor const: 7093
	uint32 IMKAOHPLMMG = 12; // offset: 40, xor const: 860
	uint32 FFNLPMFILHP = 10; // offset: 24, xor const: 13511
}

message DJDLMFBMNAD {
	OAFBFNEKLEE HLEAEPDDBLE = 3; // offset: 32, xor const: 0
	bool EABOHHKFEEM = 5; // offset: 46, xor const: 0
	bool AIILCIIMLLP = 9; // offset: 45, xor const: 0
	int32 NBNJEFMBCEE = 4; // offset: 24, xor const: 0
	bool GGHCFJLOIPG = 6; // offset: 47, xor const: 0
	int32 FPAMMKPBAGA = 2; // offset: 40, xor const: 0
	bool HLOPDECPFMA = 8; // offset: 44, xor const: 0
	int32 IPKLDCAFBOJ = 7; // offset: 36, xor const: 0
	int32 JFNKJPCIOGM = 1; // offset: 28, xor const: 0
}

message OBDANNCGMLF {
	FGKJFCJILIL NEFAAKJKNDC = 1; // offset: 16, xor const: 0
	string OJBPJNCNIJN = 2; // offset: 24, xor const: 0
}

message KFAGAKGLEPG {
	uint32 LKBNAHDCMKM = 3; // offset: 32, xor const: 0
	uint32 DLBGFKGHKDL = 1; // offset: 36, xor const: 0
	repeated IKIJDHJEOHH IFMGJAFPOBF = 6; // offset: 24, xor const: 0
	uint32 NPDNALNAJEB = 5; // offset: 44, xor const: 0
	uint32 EGMFMGNDIIP = 4; // offset: 48, xor const: 0
	uint32 HFGKIABILNK = 2; // offset: 40, xor const: 0
}

// CmdId: 1870
message AJJHNIBENIE {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 6974
}

message PAPBHEBAOCC {
	string ALEHPEKIJLC = 3; // offset: 40, xor const: 0
	FGKJFCJILIL GMAHHCIJJLM = 1; // offset: 32, xor const: 0
	FGKJFCJILIL DICLCEKPCFI = 2; // offset: 16, xor const: 0
}

// CmdId: 4962
message EHOGKEILJMJ {
	AOBGOPGONEP BKIHIFEJFDD = 11; // offset: 32, xor const: 0
	DJKEKABJKOL OKDGBOJADLF = 12; // offset: 16, xor const: 0
}

enum CIEFALINCHB {
	CIEFALINCHB_IFCLBHDJFCD = 0;
	CIEFALINCHB_EEBOEKAHGOC = 1;
	CIEFALINCHB_EBMFMPMEDEO = 3001;
	CIEFALINCHB_DIEIBLMDBLC = 3002;
	CIEFALINCHB_PCMOEBNHGND = 3003;
	CIEFALINCHB_HBHFELNEPEF = 3006;
	CIEFALINCHB_HJKEGDKECCF = 3007;
	CIEFALINCHB_JAGKBMFIKDG = 3008;
	CIEFALINCHB_FKAOJLAIKBJ = 3009;
	CIEFALINCHB_EDGNKGIFHPG = 3010;
	CIEFALINCHB_KGMHHFGLBPL = 3011;
	CIEFALINCHB_EIEFICLNANN = 3012;
	CIEFALINCHB_PCCJMAJNIOG = 3014;
	CIEFALINCHB_MLDLMBNHJIK = 3017;
	CIEFALINCHB_JMPCBAABDGG = 3018;
	CIEFALINCHB_NPBALAPEEPC = 3022;
	CIEFALINCHB_DMNAMACDKCA = 3023;
	CIEFALINCHB_OCNINMMKGGM = 3024;
	CIEFALINCHB_KKGDAGLNFGL = 3025;
	CIEFALINCHB_MLKJJDJEFKK = 3026;
	CIEFALINCHB_DIOOLIDBHKF = 3029;
	CIEFALINCHB_JDNBAMKCINE = 3030;
	CIEFALINCHB_MDPJEKDIFJL = 3031;
	CIEFALINCHB_FMLFAHNMOFN = 3032;
	CIEFALINCHB_NBIHAPFNMIO = 3033;
	CIEFALINCHB_GBLBMKALDMF = 3034;
	CIEFALINCHB_IKBHCFLONKH = 3035;
	CIEFALINCHB_FGJEFLCOOEE = 3036;
	CIEFALINCHB_NMPFKCBLEFF = 3040;
	CIEFALINCHB_HFJPHDJOCIM = 3041;
	CIEFALINCHB_FEHHEFOPELK = 3042;
	CIEFALINCHB_MDFDDCANBEE = 3044;
	CIEFALINCHB_JHFNPDNJEPJ = 3045;
	CIEFALINCHB_IKIODCNPCKG = 3046;
	CIEFALINCHB_NAFCBBGHOIL = 3047;
	CIEFALINCHB_BHOGAJKEANI = 3048;
	CIEFALINCHB_EABGEKCFANP = 3049;
	CIEFALINCHB_PAPEPBLKLBI = 3050;
	CIEFALINCHB_HPFMGNIADLB = 3051;
	CIEFALINCHB_GBMGADKNFBI = 3052;
	CIEFALINCHB_CKGMDFKGPDJ = 3053;
	CIEFALINCHB_FDFPOMBECHI = 3054;
	CIEFALINCHB_GBKPMMIGGBM = 3055;
	CIEFALINCHB_JJLOJHLOENO = 3056;
	CIEFALINCHB_CNJAPELCDEL = 3057;
	CIEFALINCHB_CGKBFFDDLNO = 3058;
	CIEFALINCHB_JCCIBHNBDHG = 3059;
	CIEFALINCHB_EGBOIHNCKNC = 3060;
	CIEFALINCHB_MIMOGHONKNE = 3061;
	CIEFALINCHB_JJBDOKDOBBH = 3062;
	CIEFALINCHB_OIHJLKCPIFC = 3063;
	CIEFALINCHB_ILLPNAJJJMC = 3064;
	CIEFALINCHB_GMLDFMHDDJE = 3065;
	CIEFALINCHB_MBPDHGJPBEA = 3066;
	CIEFALINCHB_IHOCBPALOOI = 3067;
	CIEFALINCHB_JLMBPFBLAGI = 3068;
	CIEFALINCHB_JNEHEJGNKBL = 3069;
	CIEFALINCHB_HKGPICBFGEL = 3070;
	CIEFALINCHB_IIIGCJEBIDK = 3071;
	CIEFALINCHB_IGHHMOKADOI = 3072;
	CIEFALINCHB_BBGOGACPBEG = 3073;
	CIEFALINCHB_IBILBLOGLCJ = 3074;
	CIEFALINCHB_KGEKOBPANPN = 3075;
	CIEFALINCHB_JCKHPBNIDAD = 3076;
	CIEFALINCHB_DLOFJEJNFME = 3077;
	CIEFALINCHB_BLGGPOKBGCE = 3078;
	CIEFALINCHB_KOOBIGMBNBH = 3079;
	CIEFALINCHB_KDLJKLDHBPB = 3080;
	CIEFALINCHB_JBDEIDBFGOK = 3088;
	CIEFALINCHB_OPLPBOANOPL = 3089;
	CIEFALINCHB_EAOICAIAEIO = 3090;
	CIEFALINCHB_LHICOFPILBD = 3091;
	CIEFALINCHB_OKFJELNMPJG = 3092;
	CIEFALINCHB_ILEPBBHFFJN = 3093;
	CIEFALINCHB_OGNJOPJEMJO = 3094;
	CIEFALINCHB_CEDNCHJJMCF = 3095;
	CIEFALINCHB_ANEDNCALHGF = 3096;
	CIEFALINCHB_HBJEJOGMAEH = 3097;
	CIEFALINCHB_KLFPLFFIJBI = 3098;
	CIEFALINCHB_LJDCNGJDGMD = 3100;
	CIEFALINCHB_OCKEFBILJDO = 3101;
	CIEFALINCHB_KBAMHNHKGEF = 3102;
	CIEFALINCHB_KPPGMNLCGAG = 3103;
	CIEFALINCHB_PPPNGFJLHMI = 3104;
	CIEFALINCHB_HEDKNACBMGE = 3105;
	CIEFALINCHB_HBMKOPGAFAA = 3106;
	CIEFALINCHB_CEIDFADPMLI = 3107;
	CIEFALINCHB_MKLFDLKMPPF = 3108;
	CIEFALINCHB_HCKHPHLOEIE = 3109;
	CIEFALINCHB_LPMONDFHPOK = 3110;
	CIEFALINCHB_CICBMNLJEIO = 3111;
	CIEFALINCHB_CHAFJPHCMIG = 3112;
	CIEFALINCHB_LMDPCKOBHAM = 3113;
	CIEFALINCHB_LPPJCNIHKMP = 3114;
	CIEFALINCHB_LCFNMMIKOFG = 3115;
	CIEFALINCHB_POFEGEADFDN = 3116;
	CIEFALINCHB_HHDMADELMAG = 3117;
	CIEFALINCHB_NLKELLELNJG = 3118;
	CIEFALINCHB_LMMKHLPNKKI = 3119;
	CIEFALINCHB_DMAAEOEFNKK = 3120;
	CIEFALINCHB_MNMOOBFCPJP = 3121;
	CIEFALINCHB_HKJAACGNGPM = 3122;
	CIEFALINCHB_CLGAGGLLEKE = 3123;
	CIEFALINCHB_DDFNHOCILDM = 3124;
	CIEFALINCHB_GEPJJKFKJCP = 3125;
	CIEFALINCHB_BKHGHLLGIOF = 3126;
	CIEFALINCHB_AFNCANFGGBI = 3127;
	CIEFALINCHB_OJOJAMBEOEI = 3128;
	CIEFALINCHB_BBIIGJJJBEL = 3129;
	CIEFALINCHB_FKDGDJGEBMI = 3130;
	CIEFALINCHB_BMCNDMIGFBI = 3131;
	CIEFALINCHB_FAGEJBOIAMN = 3132;
	CIEFALINCHB_ELODOJPNFFO = 3133;
	CIEFALINCHB_OBGDINDLBON = 3134;
	CIEFALINCHB_GFKIFFEFPEI = 3135;
	CIEFALINCHB_FACJFLGBIPE = 3136;
	CIEFALINCHB_CHHANFLMJOM = 3137;
	CIEFALINCHB_PFIEBLKPPIP = 3138;
	CIEFALINCHB_NCNKKPJHIFL = 3139;
	CIEFALINCHB_FAIJLPNJKOP = 3140;
	CIEFALINCHB_EGLABNAMOCN = 3141;
	CIEFALINCHB_DNMDCCGBHMI = 3142;
	CIEFALINCHB_DANCJPGHILK = 3143;
	CIEFALINCHB_ECHHAPFBKCB = 3144;
	CIEFALINCHB_MLHNDFEAJHP = 3145;
	CIEFALINCHB_LDPDOGBKBMG = 3146;
	CIEFALINCHB_CECBAFHOOJH = 3147;
	CIEFALINCHB_KEFODCGIHJK = 3148;
	CIEFALINCHB_NBAMKNGJONO = 3149;
	CIEFALINCHB_JMKDPGGAHHM = 3150;
	CIEFALINCHB_CNECJGMGKLO = 3151;
	CIEFALINCHB_IAMPEBIPEJK = 3152;
	CIEFALINCHB_CEECOANKIDD = 3153;
	CIEFALINCHB_KCGAFCACDLE = 3154;
	CIEFALINCHB_PNIHHKCEBAN = 3155;
	CIEFALINCHB_IFOCJDIOJDD = 3156;
	CIEFALINCHB_BMEKFKIBPBL = 3157;
	CIEFALINCHB_MFBEKKCIFFN = 3158;
	CIEFALINCHB_FNFLDANGBFG = 3159;
	CIEFALINCHB_MOAGKLDCFIC = 3160;
	CIEFALINCHB_JNLBIDKBNGJ = 3161;
	CIEFALINCHB_KGLJBAOMJJA = 3162;
	CIEFALINCHB_JMGGIHHENLD = 3163;
	CIEFALINCHB_KMKKLADKLEO = 3164;
	CIEFALINCHB_BMELODJPLCO = 3165;
	CIEFALINCHB_NDCCOLGAEDE = 3166;
	CIEFALINCHB_OGHPFCJEPOK = 3167;
	CIEFALINCHB_MFIGBLHLPGO = 3168;
	CIEFALINCHB_BODDDACFBKG = 3169;
	CIEFALINCHB_CFIELMKJDAK = 3170;
	CIEFALINCHB_BNEPKEPJHJK = 3171;
	CIEFALINCHB_GLEKGOGMLEP = 3172;
	CIEFALINCHB_IMMOHOINNAD = 3173;
	CIEFALINCHB_ABHHICFPAPN = 3174;
	CIEFALINCHB_BHNLLCEGHEC = 3175;
	CIEFALINCHB_KOFMHAKEKNG = 3176;
	CIEFALINCHB_HCAOKDCNBDJ = 3177;
	CIEFALINCHB_GGIBAGJANCE = 3178;
	CIEFALINCHB_GBPFAPAENPP = 3179;
	CIEFALINCHB_HHHCDOAKLNK = 3180;
	CIEFALINCHB_DCAIBLIFFHD = 3181;
	CIEFALINCHB_HFNNDFDDAGC = 3182;
	CIEFALINCHB_PBMNHKEONII = 3183;
	CIEFALINCHB_BFMOCBPPBBI = 3184;
	CIEFALINCHB_PJBEBJCGGGE = 3185;
	CIEFALINCHB_DIBICPMKGCG = 3186;
	CIEFALINCHB_FDEFFLFPDDJ = 3187;
	CIEFALINCHB_ABAHJNNIDKJ = 3188;
	CIEFALINCHB_CBMAHGMPBME = 3189;
	CIEFALINCHB_JEDHEHOLGPE = 3190;
	CIEFALINCHB_MADNDMHJBBA = 3191;
	CIEFALINCHB_DMDGNOFJKGM = 3192;
	CIEFALINCHB_HHHLGMKPNLG = 3193;
	CIEFALINCHB_BKLMFMEMLCL = 3194;
	CIEFALINCHB_MDMICJLPEOC = 3195;
	CIEFALINCHB_GLDKBHJDBKB = 3196;
	CIEFALINCHB_JKMNEMGIKEI = 3197;
	CIEFALINCHB_MFIAFGECIAI = 3198;
	CIEFALINCHB_JKLCFEHLNAM = 3199;
	CIEFALINCHB_BAPJEJJMEBG = 3200;
	CIEFALINCHB_EIGLDFNMDBM = 3201;
	CIEFALINCHB_JFCOEMIKPII = 3202;
	CIEFALINCHB_AEGJOKNMCGL = 3203;
	CIEFALINCHB_JOPLPNLDFFN = 3204;
	CIEFALINCHB_HJEHDBECNDN = 3205;
	CIEFALINCHB_OGNMHJLLDOF = 3206;
	CIEFALINCHB_IDPLGEKKLCI = 3207;
	CIEFALINCHB_JMCNEAHHJON = 3208;
	CIEFALINCHB_OOEMNDMOAPC = 3209;
	CIEFALINCHB_HBFABCNCMIC = 3210;
	CIEFALINCHB_KAKNAPLPHJC = 3211;
	CIEFALINCHB_FDKODMPHCFF = 3212;
	CIEFALINCHB_JFCCNOJGJAG = 3213;
	CIEFALINCHB_FHLFIOFDPAD = 3214;
	CIEFALINCHB_GNNKJPPMCND = 3215;
	CIEFALINCHB_ONOHNOEGLIN = 3216;
	CIEFALINCHB_GAPIKGMELCM = 3217;
	CIEFALINCHB_BABMLIHEFGK = 3218;
	CIEFALINCHB_JGMFOGGBLCK = 3219;
	CIEFALINCHB_NNBHMMIGCML = 3220;
	CIEFALINCHB_LIHDMPGCPHA = 3221;
	CIEFALINCHB_KJNJDFGFDEJ = 3222;
	CIEFALINCHB_HJIOEIMBJPA = 3223;
	CIEFALINCHB_JNBPDADPEFE = 3224;
	CIEFALINCHB_BHPKKIMKDEJ = 3225;
	CIEFALINCHB_NKENFEFLHCP = 3226;
	CIEFALINCHB_MHNKHKJFCPF = 3227;
	CIEFALINCHB_LCNCGKBAGLM = 3228;
	CIEFALINCHB_BCBKDOGINIL = 3229;
	CIEFALINCHB_PGKGKAAPJGC = 3230;
	CIEFALINCHB_EHBANFCGMEH = 3231;
	CIEFALINCHB_CNEHFCOGJHA = 3232;
	CIEFALINCHB_ELBANDNDHKK = 3233;
	CIEFALINCHB_DEIDFDBFKDP = 3234;
	CIEFALINCHB_JEJOJGFPLOK = 3235;
	CIEFALINCHB_KACPEEGDKOE = 3236;
	CIEFALINCHB_HHNKBFABKLG = 3237;
	CIEFALINCHB_BMNCIHHEJPP = 3238;
	CIEFALINCHB_MGNNEIEBHHG = 3239;
	CIEFALINCHB_PLEGLDMNKMH = 3240;
	CIEFALINCHB_CCBGOPOLOKH = 3241;
	CIEFALINCHB_OGILGHDALBE = 3242;
	CIEFALINCHB_KOPKMNCBIPC = 3243;
	CIEFALINCHB_LPJAINKFJMA = 3244;
	CIEFALINCHB_PNOCKBBAGDM = 3245;
	CIEFALINCHB_AJBFCIJMDPC = 3246;
	CIEFALINCHB_KEGOGGLDJHO = 3247;
	CIEFALINCHB_HBBDGMIHOPH = 3248;
	CIEFALINCHB_FJACBNJDKAK = 3249;
	CIEFALINCHB_FPACGBJDHNM = 3250;
	CIEFALINCHB_ABBPFIFMMOH = 3251;
	CIEFALINCHB_LMDDDNLDMBC = 3252;
	CIEFALINCHB_FINEGBAIFEG = 3253;
	CIEFALINCHB_BEGCNCOILFG = 3254;
	CIEFALINCHB_OKFDLCPKCNB = 3255;
	CIEFALINCHB_FCOBLLEJIFL = 3256;
	CIEFALINCHB_LFHAOEIKFNG = 3257;
	CIEFALINCHB_DINFPJPGJMK = 3258;
	CIEFALINCHB_MIJJIPPHDKB = 3259;
	CIEFALINCHB_LHFLEBFPGKA = 3260;
	CIEFALINCHB_CDINIGOCIKD = 3261;
	CIEFALINCHB_MBCILPLMGEC = 3262;
	CIEFALINCHB_CGPNMDGIPML = 3263;
	CIEFALINCHB_IPEHNLDACOB = 3264;
	CIEFALINCHB_JPNJHPELDFA = 3265;
	CIEFALINCHB_KKHEHFGCJHC = 3266;
	CIEFALINCHB_HDKPAMCCMKN = 3267;
	CIEFALINCHB_GICAFKHJODH = 3268;
	CIEFALINCHB_NOAEHCFPMMO = 3269;
	CIEFALINCHB_DOAPPFJINNF = 3270;
	CIEFALINCHB_NNAEJOFKCGA = 3271;
	CIEFALINCHB_LIIPNPEDAIG = 3272;
	CIEFALINCHB_EANAAAGLGKH = 3273;
	CIEFALINCHB_ELKIFEIJAMD = 3274;
	CIEFALINCHB_APIOHNPEJEL = 3275;
	CIEFALINCHB_ALEOIIEJBMK = 3276;
	CIEFALINCHB_KNHJAPFEPNP = 3277;
	CIEFALINCHB_HFEHDKAGLJJ = 3278;
	CIEFALINCHB_KDNGKJKNOAA = 3279;
	CIEFALINCHB_BBFGKCNFCBK = 3280;
	CIEFALINCHB_HGIMDLMNLBJ = 3281;
	CIEFALINCHB_ACPKPBBKEAK = 3282;
	CIEFALINCHB_KMCMGCOJALM = 3283;
	CIEFALINCHB_GCLDBGDOADF = 3284;
	CIEFALINCHB_PCNDFGAKLFB = 3285;
	CIEFALINCHB_BEOEAJHBCHK = 3286;
	CIEFALINCHB_AGHJIBMGINB = 3287;
	CIEFALINCHB_OMKPLMAOLAA = 3288;
	CIEFALINCHB_HPFHONEHHHO = 3289;
	CIEFALINCHB_JPEPMKEDEMI = 3290;
	CIEFALINCHB_JDLHJCLJDEK = 3291;
	CIEFALINCHB_OHHBHFLAHDH = 3292;
	CIEFALINCHB_CMJMLFEDLMG = 3293;
	CIEFALINCHB_PHOEALNJLKI = 3294;
	CIEFALINCHB_FDNPONCEJFK = 3295;
	CIEFALINCHB_BEFDEMFPFDD = 3296;
	CIEFALINCHB_DFLEIMHNEJO = 3297;
	CIEFALINCHB_MHFDIGMIDGC = 3298;
	CIEFALINCHB_OBMMEBOJABC = 3299;
	CIEFALINCHB_OAPPGLENJPO = 3300;
	CIEFALINCHB_NLNGAMFDOEA = 3301;
	CIEFALINCHB_PFMPEOMBAGK = 3302;
	CIEFALINCHB_LGHBOLLGMDM = 3303;
	CIEFALINCHB_NJGJCKBGDLK = 3304;
	CIEFALINCHB_EJIGMKBLJHD = 3305;
	CIEFALINCHB_EEEPGNMFEMJ = 3306;
	CIEFALINCHB_NHOEMBHDNDC = 3307;
	CIEFALINCHB_ALNKJDOFBBE = 3308;
	CIEFALINCHB_GDDNHFIAOMD = 3309;
	CIEFALINCHB_JOMEEBBMAOD = 3310;
	CIEFALINCHB_LGAAPHCMOPL = 3311;
	CIEFALINCHB_JNAEEPPEJDG = 3312;
	CIEFALINCHB_JIFNKLCMJBN = 3313;
	CIEFALINCHB_DPHEEKDDLCG = 3314;
	CIEFALINCHB_HIBKGLNMHOK = 3315;
	CIEFALINCHB_NNKKOIKIIOC = 3316;
	CIEFALINCHB_CJONMNHPKIE = 3317;
	CIEFALINCHB_MFBFLLEKCFM = 3318;
	CIEFALINCHB_GPFIHLDIEPA = 3319;
	CIEFALINCHB_CELKPDAPICN = 3320;
	CIEFALINCHB_HAGDHGBMFFL = 3321;
	CIEFALINCHB_HGGHPJOAFGP = 3322;
	CIEFALINCHB_PBHGBJLNDOA = 3323;
	CIEFALINCHB_LOFNOCLNLHF = 3324;
	CIEFALINCHB_OKILJFGDGNA = 3325;
	CIEFALINCHB_AHIIHMKMAHM = 3326;
	CIEFALINCHB_CHBJFAHKFCF = 3327;
	CIEFALINCHB_JGDKBPLFLMM = 3328;
	CIEFALINCHB_EIOEMKNKAHN = 3329;
	CIEFALINCHB_KBPOGMHKGPF = 3330;
	CIEFALINCHB_PMKGOKLNBDK = 3331;
	CIEFALINCHB_CKMHDLDJEGF = 3332;
	CIEFALINCHB_FIKOJEONPCC = 3333;
	CIEFALINCHB_KAOJHBFBCII = 3334;
	CIEFALINCHB_CCPPNEHDOLM = 3335;
	CIEFALINCHB_LDBDGGPEAML = 3336;
	CIEFALINCHB_PIHBJENOGFJ = 3337;
	CIEFALINCHB_PKACIGJOGLD = 3338;
	CIEFALINCHB_GNPDKJOLJLL = 3339;
	CIEFALINCHB_CENBPHMMGMF = 3340;
	CIEFALINCHB_LABAPABCFBD = 3341;
	CIEFALINCHB_DKLMNAOINHF = 3342;
	CIEFALINCHB_AGOKAHHBNED = 3343;
	CIEFALINCHB_DMOKHAOEPHA = 3344;
	CIEFALINCHB_KCALHLNAHJC = 3345;
	CIEFALINCHB_PLHFDGHDBMP = 3347;
	CIEFALINCHB_EGEFIFHMKMM = 3348;
	CIEFALINCHB_BGDIPFDFCCP = 3349;
	CIEFALINCHB_CCGHCJJIGIM = 3350;
	CIEFALINCHB_PFCPNCBAFFH = 3351;
	CIEFALINCHB_PDMNBLBFBJL = 3352;
	CIEFALINCHB_JBKLDAJIKEI = 3353;
	CIEFALINCHB_BJPFIANLPDL = 3354;
	CIEFALINCHB_KLDOOPPBKKM = 3355;
	CIEFALINCHB_HBIDKNLEDFC = 3356;
	CIEFALINCHB_JMDPEKJOKKO = 3357;
	CIEFALINCHB_IFKJDLKELBD = 3358;
	CIEFALINCHB_NPIKBLCENHD = 3359;
	CIEFALINCHB_MNFEHKKOLMA = 3360;
	CIEFALINCHB_EAPKFDGHJHC = 3361;
	CIEFALINCHB_EECBFLCPAEF = 3362;
	CIEFALINCHB_DNFBFEKOMOL = 3363;
	CIEFALINCHB_CJLGJFNMHCC = 3364;
	CIEFALINCHB_LNKDOHAHBEN = 3365;
	CIEFALINCHB_LMBIHNEHDIH = 3366;
	CIEFALINCHB_EAIOMMAGPHC = 3367;
	CIEFALINCHB_NPPNGOHMDEJ = 3368;
	CIEFALINCHB_KNGJEALAHOC = 3369;
	CIEFALINCHB_OMDMKNFGIOH = 3370;
	CIEFALINCHB_AHFJHBEMCML = 3371;
	CIEFALINCHB_IEDDPDBODOE = 3372;
	CIEFALINCHB_KPFCKEIDOGA = 3373;
	CIEFALINCHB_MJLPDMGGMEP = 3374;
	CIEFALINCHB_ACJBAFDLGPI = 3375;
	CIEFALINCHB_BBKAJLKLKLH = 3376;
	CIEFALINCHB_MHCPIOHOLLD = 3377;
	CIEFALINCHB_EMHBGEBOKCL = 3378;
	CIEFALINCHB_HHOFHBFAHKE = 3379;
	CIEFALINCHB_LKBMDJINKBI = 3380;
	CIEFALINCHB_KMMJLFPCJNC = 3381;
	CIEFALINCHB_EEAIGKEHKMB = 3382;
	CIEFALINCHB_GEOAAJCBDMP = 3383;
	CIEFALINCHB_PBKODKOBBHF = 3384;
	CIEFALINCHB_MCLKGKFPLHF = 3385;
	CIEFALINCHB_DEFINIHEICL = 3386;
	CIEFALINCHB_BBLBILHECMI = 3387;
	CIEFALINCHB_DEFEEHKNDCE = 3388;
	CIEFALINCHB_JLDGOKPGDCB = 3389;
	CIEFALINCHB_LOGFLPCEEMH = 3390;
	CIEFALINCHB_IPODKKDILPH = 3391;
	CIEFALINCHB_FGLPIKKNFBG = 3392;
	CIEFALINCHB_GOOCNIOGMEJ = 3393;
	CIEFALINCHB_OAADBNEIAKD = 3394;
	CIEFALINCHB_BHOCFIHAPHA = 3395;
	CIEFALINCHB_HFGPPHNCMEC = 3396;
	CIEFALINCHB_IICBGCIAKOC = 3397;
	CIEFALINCHB_OKFLPILLEKA = 3398;
	CIEFALINCHB_IKEJFHBCDOF = 3399;
	CIEFALINCHB_KAIALJLHFBJ = 3400;
	CIEFALINCHB_ILHJBLBGJAB = 3401;
	CIEFALINCHB_KKOGOBGLJIM = 3402;
	CIEFALINCHB_ENKJDEPFJDA = 3403;
	CIEFALINCHB_MFGIKLPHDKA = 3404;
	CIEFALINCHB_LCPGOKJDKJN = 3405;
	CIEFALINCHB_MBEHJJLJONN = 3406;
	CIEFALINCHB_GICMHDPKMKN = 3407;
	CIEFALINCHB_JLBDEOLEAIN = 3408;
	CIEFALINCHB_HGKIBPLEEND = 3409;
	CIEFALINCHB_IBJFIPDPEJC = 3412;
	CIEFALINCHB_MMNHIDMGJBD = 3413;
	CIEFALINCHB_PBHPCMFCEIE = 3414;
	CIEFALINCHB_BLFKAIBPCPL = 3417;
}

// CmdId: 1881
message KHFGKNCDNHD {
	uint64 DIMEDPILOOA = 9; // offset: 24, xor const: 13095
}

message NJBICLMFHNK {
	int32 NCAGHHFDAOG = 9; // offset: 32, xor const: 14381
	int32 EFLPLGPDEGF = 4; // offset: 24, xor const: 13080
	int32 HHALEGBBNFO = 2; // offset: 28, xor const: 4314
	int32 GCOLEONOCOD = 15; // offset: 36, xor const: 15845
	int32 OGOIFACKOBF = 11; // offset: 40, xor const: 4059
}

message DCOEAIKCKFF {
	bool LGLCBJFMJOO = 3; // offset: 32, xor const: 0
	FGKJFCJILIL NJFOLJNDPGG = 1; // offset: 24, xor const: 0
}

enum BDJGBKJPOAE {
	BDJGBKJPOAE_NOHJAOPJMJM = 0;
	BDJGBKJPOAE_CMCJKABAJLM = 1;
	BDJGBKJPOAE_DCDJPJCKJDM = 2;
	BDJGBKJPOAE_GDHFGHENOJP = 3;
	BDJGBKJPOAE_PDFLDCLHNJE = 4;
}

message GAKADGOEGHE {
	repeated uint32 AGPFALIIODG = 8; // offset: 16, xor const: 0
}

// CmdId: 8967
message FOEDFPMMENK {
}

message NMCPELHNCCL {
	int64 EFOCIEHGBNA = 2; // offset: 72, xor const: 1457
	uint32 FCMGEFFGKFG = 495; // offset: 80, xor const: 4052
	bool OKIGCMGMJHO = 1; // offset: 110, xor const: 0
	bool BKFADLJNBPJ = 1270; // offset: 108, xor const: 0
	uint32 LGLGBJONIFO = 232; // offset: 116, xor const: 5936
	string NCABHJLHKBD = 11; // offset: 40, xor const: 0
	int64 MOHHBACKBOK = 4; // offset: 64, xor const: 5992
	uint32 AIGGHCPMCJF = 7; // offset: 112, xor const: 15450
	uint32 PECCMAAANAF = 1675; // offset: 56, xor const: 16212
	bool NFNJBCACFDM = 540; // offset: 109, xor const: 0
	uint32 MBOABCJENFG = 8; // offset: 100, xor const: 6015
	uint32 AEPPHMAENCO = 816; // offset: 96, xor const: 6672
	uint32 LLNPIFPKJGM = 9; // offset: 60, xor const: 9034
	bool DBNKMEEPHCK = 13; // offset: 111, xor const: 0
	int64 ODJBLJOHKIF = 6; // offset: 88, xor const: 16147
	string FMGKHAEEHJK = 5; // offset: 16, xor const: 0
	uint32 LKIJKPLMPJB = 10; // offset: 104, xor const: 6406
	repeated LPIFJEKNHIJ IKDIPHBLNNM = 3; // offset: 24, xor const: 0
	string FFPBLFHADFH = 14; // offset: 32, xor const: 0
}

message BIHIAIAHLFB {
}

message FEHNADBCFMH {
	bool ANFIPPGADMD = 4; // offset: 32, xor const: 0
	string NDPDGFJGEIF = 2; // offset: 24, xor const: 0
}

// CmdId: 7759
message BAKBPGBNGPP {
	DKJGGIMKCFE GELAFKOFDGH = 12; // offset: 16, xor const: 0
}

message JFHLOLAFLML {
	bytes CPNBJBBCGIF = 2; // offset: 16, xor const: 0
	uint32 OPEPHJKFCIB = 1; // offset: 32, xor const: 0
}

message IHCCBMOIHCM {
	repeated HGDEOONKAOF GLENGCDAEFP = 2; // offset: 16, xor const: 0
	FGKJFCJILIL DICHAMEKMKL = 1; // offset: 24, xor const: 0
}

message MDOHILOAIAE {
	uint32 MJHHEINMPGD = 11; // offset: 80, xor const: 0
	uint32 HJIEEMOHALD = 6; // offset: 56, xor const: 0
	KMIPCLLILAN EFOJIHJFCOF = 2; // offset: 64, xor const: 0
	repeated HIKBCFGFFCI GJHPDKHHONE = 7; // offset: 24, xor const: 0
	PCFEPJDNMBM FJJLFABNKGG = 5; // offset: 16, xor const: 0
	bool DIGBCGENEDP = 8; // offset: 60, xor const: 0
	PNHMKMECKBM LKKJHFPKECH = 4; // offset: 52, xor const: 0
	uint32 IJEBJJNMLBD = 9; // offset: 84, xor const: 0
	uint32 OBPMOEHGAIM = 3; // offset: 48, xor const: 0
	uint64 DIMEDPILOOA = 1; // offset: 72, xor const: 0
	repeated uint32 PHGBBMMMNCD = 10; // offset: 40, xor const: 0
}

enum DMEFKKIIEBN {
	DMEFKKIIEBN_KCHHCJGLAPH = 0;
	DMEFKKIIEBN_BLEIMGBAEFC = 1;
	DMEFKKIIEBN_NPPIDKHIIMM = 2;
	DMEFKKIIEBN_GOKDGIIFMFA = 3;
	DMEFKKIIEBN_PKHCPIJOOGD = 4;
	DMEFKKIIEBN_ELOFEJLNOIN = 5;
	DMEFKKIIEBN_NOPCDNIKDLL = 6;
	DMEFKKIIEBN_NGCCEKAGGAG = 7;
	DMEFKKIIEBN_OONKNGGNAHO = 8;
	DMEFKKIIEBN_OKJLPENLAFN = 9;
	DMEFKKIIEBN_LGMBLLHJLGF = 10;
	DMEFKKIIEBN_OHAGPJEHGKL = 11;
	DMEFKKIIEBN_APPOHMNOAPF = 15;
	DMEFKKIIEBN_PFCNGKDJEEI = 16;
	DMEFKKIIEBN_NDHIJNNEHBB = 20;
	DMEFKKIIEBN_NFEFGDIKJDO = 21;
	DMEFKKIIEBN_GAHMABGDAGA = 22;
	DMEFKKIIEBN_BKOJBBANDNJ = 23;
	DMEFKKIIEBN_LJENDDGMOND = 24;
	DMEFKKIIEBN_ONMHHGJHGOI = 25;
	DMEFKKIIEBN_AJGNJMJMHOK = 26;
	DMEFKKIIEBN_FMLBGIMMKMN = 27;
	DMEFKKIIEBN_GPEFJEAIJJK = 28;
	DMEFKKIIEBN_IAGBIBJKBDH = 29;
	DMEFKKIIEBN_JIIBGCBNEAH = 30;
}

message EDCMBDAAJLK {
	bool KKLHNHBKFDM = 3; // offset: 80, xor const: 0
	repeated int32 DALBJGKKDAC = 8; // offset: 24, xor const: 0
	uint32 JOPKNFKKKLI = 4; // offset: 72, xor const: 13277
	uint32 JEABLEIPFMJ = 10; // offset: 76, xor const: 4888
	repeated uint32 IHHMJICCBPL = 1; // offset: 56, xor const: 0
	repeated uint32 GMPABOEAPBM = 12; // offset: 32, xor const: 0
	repeated uint32 KNBALIJLCPC = 5; // offset: 16, xor const: 0
	repeated uint32 GHLIDFEBOGP = 9; // offset: 40, xor const: 0
	map<uint32, uint32> JMBNGNMDIGA = 15; // offset: 64, xor const: 0
}

message FHPMOJABOME {
	int32 ACPGPLMFNOL = 5; // offset: 72, xor const: 0
	float MCGEJEKOFEL = 6; // offset: 68, xor const: 0
	int32 PBOAMDEBIGO = 9; // offset: 64, xor const: 0
	repeated PCPKPLCDIID ACEMBJPDCDK = 1; // offset: 48, xor const: 0
	repeated PCPKPLCDIID APHPHLDCKIA = 4; // offset: 40, xor const: 0
	repeated PCPKPLCDIID EGMNCPAMHNE = 2; // offset: 16, xor const: 0
	int32 FOBNPCJLGDD = 7; // offset: 56, xor const: 0
	int32 KBKLJLLBLCD = 8; // offset: 60, xor const: 0
	repeated PCPKPLCDIID BPIOGPIFLDE = 3; // offset: 32, xor const: 0
}

// CmdId: 7209
message PCACHCPPHID {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 3529
}

// CmdId: 8643
message JPPFKDHPILC {
	HBFBNKAODPJ NCAGHHFDAOG = 2; // offset: 32, xor const: 0
	IFGDJNNPCAN CKBOJACIJDI = 5; // offset: 24, xor const: 0
	uint32 HONFNLBAIAN = 10; // offset: 40, xor const: 14326
	int32 LMICCDBPCLK = 7; // offset: 44, xor const: 2131
}

// CmdId: 437
message PHGDDCKHIEO {
	repeated uint32 JBBKPEHCJOJ = 9; // offset: 24, xor const: 0
}

message DLDFAHMMJKI {
	FGKJFCJILIL OMAGKOPBJEB = 1; // offset: 24, xor const: 0
}

// CmdId: 8495
message CKMMNLLCFFO {
	OFGNLKPKAEA EKHBCLMOGGA = 8; // offset: 52, xor const: 0
	uint32 BIPGPOLOMCN = 11; // offset: 56, xor const: 77
	repeated DBBHGNOLOHL NBMLEJACFIE = 6; // offset: 40, xor const: 0
	MHODKLJBLDI OFJAEJIMIAE = 10; // offset: 16, xor const: 0
	uint32 GJJPLJDNNJE = 4; // offset: 48, xor const: 7207
	string IPBCLANJJGI = 2; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 14; // offset: 64, xor const: 12919
}

message FGNNCMNCFIH {
	int32 ENCANOPLLDM = 2; // offset: 32, xor const: 0
	string ECBFKCKFLDI = 1; // offset: 24, xor const: 0
}

message MEBGOAOODLI {
}

enum LMANHPJHLGC {
	LMANHPJHLGC_IPHJGHEAHFL = 0;
	LMANHPJHLGC_EKNCFDLHFJH = 1;
	LMANHPJHLGC_POGHELDDHAK = 2;
	LMANHPJHLGC_MCNLPGPPNCB = 3;
	LMANHPJHLGC_IBCPGBNHCOP = 4;
	LMANHPJHLGC_AEAHBPCDJHM = 5;
	LMANHPJHLGC_EBLILPGBFCB = 6;
	LMANHPJHLGC_AEFFKODENIL = 7;
}

message CHODCOEGENM {
	repeated OBGMIDEMMAE EPDLJMJMHDK = 2; // offset: 24, xor const: 0
	uint32 HEFCNDIOEPD = 1; // offset: 32, xor const: 0
}

message JFAKNDOAOFB {
	uint32 PCMJKHPKKBG = 15; // offset: 28, xor const: 13516
	uint32 AMIJIAHGPMC = 1; // offset: 24, xor const: 7040
}

// CmdId: 5814
message PGIGGANIGCH {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 9542
}

// CmdId: 5894
message ACPPIHJDKMB {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 10648
}

message ILCDBIBCDGO {
	repeated COKLGKNFDOP KBEGDFLLAMA = 4; // offset: 40, xor const: 0
	repeated MCDNJPCODBB BBLCHBANJID = 3; // offset: 24, xor const: 0
	string LGACBJMGNKH = 2; // offset: 16, xor const: 0
	uint32 KMJBJLCIBNI = 1; // offset: 48, xor const: 0
}

// CmdId: 8429
message NHONGGOOKFG {
	repeated uint32 ONKIDHEMGMO = 12; // offset: 16, xor const: 0
}

// CmdId: 7535
message AFPOANMBFLA {
	repeated uint32 OLEABCBGCCG = 11; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 8; // offset: 40, xor const: 7852
	repeated uint32 AEEDKACDIGK = 4; // offset: 24, xor const: 0
}

message EGEEJGKCOAG {
	repeated LIADEHAICFL JEJINECIOAK = 3; // offset: 16, xor const: 0
}

enum HNGOJGJNNHM {
	HNGOJGJNNHM_ETT_NONE = 0;
	HNGOJGJNNHM_ETT_INIT = 1;
	HNGOJGJNNHM_ETT_ADD = 2;
	HNGOJGJNNHM_ETT_END = 3;
	HNGOJGJNNHM_ETT_EXIT = 4;
	HNGOJGJNNHM_ETT_OVERNIGHT = 5;
	HNGOJGJNNHM_ETT_ENTER_SECTION = 6;
	HNGOJGJNNHM_ETT_BEFORE_ENTER = 7;
	HNGOJGJNNHM_ETT_LEAVE_SYSTEM = 8;
	HNGOJGJNNHM_ETT_TRACK_QUEST = 9;
	HNGOJGJNNHM_ETT_FINISH_PHOTO = 10;
	HNGOJGJNNHM_ETT_AREA_CHECK = 11;
	HNGOJGJNNHM_ETT_ACCEPT_RECOMMEND = 12;
	HNGOJGJNNHM_ETT_ENTER_OVA = 13;
	HNGOJGJNNHM_ETT_EXIT_HALL_GAME = 14;
	HNGOJGJNNHM_ETT_PARTNER_DATE_TRIGGER = 15;
	HNGOJGJNNHM_ETT_HALL_GAME_FINISH = 16;
	HNGOJGJNNHM_ETT_ELPIS_REVIVAL_FINISH_LEVEL = 17;
	HNGOJGJNNHM_ETT_ELPIS_GO_FISHING = 18;
	HNGOJGJNNHM_ETT_RIDU_BOO_GAME_END = 19;
}

message DDNPDNIOOKA {
	repeated EPGPLJJPCPP FBKFEEMGDKC = 3; // offset: 24, xor const: 0
}

// CmdId: 3991
message OIHMMJPFOEN {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 1076
}

message NCEFMBPMCDK {
	IAFEDFLABID MMBDBOGDFAG = 2; // offset: 32, xor const: 0
	FGKJFCJILIL PFPAHBMCJPL = 1; // offset: 24, xor const: 0
}

enum DMJCOHDDCFO {
	DMJCOHDDCFO_NJIDFEHPJFE = 0;
	DMJCOHDDCFO_NFGHDCMIEPD = 1;
	DMJCOHDDCFO_GMHJIICJLDD = 2;
	DMJCOHDDCFO_FIAOHLFAAMD = 3;
	DMJCOHDDCFO_MPMFJCOFLAP = 4;
}

message GOJGNHNKLGB {
	repeated int32 ABLFIDJMILN = 14; // offset: 64, xor const: 0
	FGKJFCJILIL JBKEBHIPLPP = 8; // offset: 16, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 12; // offset: 96, xor const: 0
	repeated int32 HLEAEPDDBLE = 6; // offset: 56, xor const: 0
	LEHENCIPJIE CKBOJACIJDI = 3; // offset: 116, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 5; // offset: 72, xor const: 0
	string GJFLLIADLKC = 13; // offset: 88, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 2; // offset: 104, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 4; // offset: 80, xor const: 0
	repeated int32 GECCHBHNBJB = 9; // offset: 24, xor const: 0
	repeated int32 BCHMFALGALA = 10; // offset: 48, xor const: 0
	bool CEGKGPPKAAB = 11; // offset: 112, xor const: 0
	HGLOMBGGODB OEGNJPJCIOI = 7; // offset: 120, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 1; // offset: 40, xor const: 0
}

message CNOIIOOJPLN {
	repeated string APKGADLNBKF = 7; // offset: 16, xor const: 0
	repeated string DCLNCMIBHFA = 6; // offset: 24, xor const: 0
	CJINCICAPIL AGGDHGHDMBN = 2; // offset: 64, xor const: 0
	repeated FNNFKBFGGGO GEPOOMMPPPH = 4; // offset: 40, xor const: 0
	repeated string BDPDFBCKKOL = 5; // offset: 56, xor const: 0
	repeated int32 MNIHGAGLCMP = 3; // offset: 32, xor const: 0
	AEJLOBOKMEO KBBEJLMCCDB = 1; // offset: 68, xor const: 0
}

message LCIJDIMHPEM {
	repeated GDKMBJLDAHG IPMNJDHIHBM = 7; // offset: 16, xor const: 0
}

message BNFEEBNJCJC {
	repeated ENIAFFJKLPO FMBOJKDOGGD = 1; // offset: 16, xor const: 0
}

message PNCLOIAGHCO {
	string DBOACCIJPDL = 2; // offset: 40, xor const: 0
	map<string, FGKJFCJILIL> APINIAJAPMK = 4; // offset: 32, xor const: 0
	JPPHPHLOEFJ KMOBAHJLFMD = 3; // offset: 48, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 1; // offset: 52, xor const: 0
	string PMCOPBJCCLK = 5; // offset: 24, xor const: 0
}

message JLNKNEHMJLK {
	uint32 OBEFAEKODFE = 8; // offset: 32, xor const: 1087
	uint32 ECJCIHMIDGN = 3; // offset: 36, xor const: 15195
	PPJPFHFLOAB KLNNHOPCNIP = 13; // offset: 16, xor const: 0
}

message EDFJEJPOFFP {
	AFKEKCNBNHJ GGDHOACMHKB = 6; // offset: 104, xor const: 0
	repeated uint32 MOLFLBKMKFM = 1; // offset: 72, xor const: 0
	BOCMBNOADMB FPPKHIJKIPC = 2; // offset: 16, xor const: 0
	bool JOAGFMOINOI = 15; // offset: 97, xor const: 0
	bool MEOPINGEJLI = 14; // offset: 96, xor const: 0
	uint32 PKALOKNLAKH = 3; // offset: 108, xor const: 377
	uint32 CKCLOFPICJP = 11; // offset: 84, xor const: 4633
	repeated BOCMBNOADMB OJADMEHBJPD = 12; // offset: 64, xor const: 0
	repeated uint32 ALHBIFOPJFM = 4; // offset: 56, xor const: 0
	uint32 LDMKBAMJLMK = 9; // offset: 100, xor const: 12850
	FBACJIGMLCF ABKJLNIKCAP = 70; // offset: 88, xor const: 0
	repeated DENMEOPFNHB HGJFIKHPHDD = 7; // offset: 32, xor const: 0
	uint32 AEDNAIBLBCE = 10; // offset: 80, xor const: 7592
	repeated uint32 MLIHFBDNNNK = 8; // offset: 48, xor const: 0
	uint32 APGJCNKODIJ = 13; // offset: 92, xor const: 5153
	repeated PIOHNMEFJIA JFGCLDAGIKM = 5; // offset: 40, xor const: 0
}

message JLNLHBOGFII {
	float EFJPPJJFNJM = 9; // offset: 24, xor const: 0
	float AEIHIBLACCM = 14; // offset: 28, xor const: 0
}

message KLBFGFCEEAH {
	repeated uint32 COOLODFHKPO = 3; // offset: 24, xor const: 0
	repeated uint32 BBFEDPBAPGM = 5; // offset: 32, xor const: 0
	repeated uint32 KBEGCHNENHA = 8; // offset: 40, xor const: 0
}

enum CKCFJILDPEA {
	CKCFJILDPEA_HGCGHEDKKKO = 0;
}

// CmdId: 3134
message EEDFFNJLDNI {
	map<uint32, int32> LCGHCELADPK = 12; // offset: 24, xor const: 0
	map<uint32, int32> FPHMHAIIKNM = 10; // offset: 48, xor const: 0
	map<uint32, int32> JHLIHCONEII = 6; // offset: 16, xor const: 0
	map<uint32, int32> FPGBIALCKGK = 2; // offset: 40, xor const: 0
}

message PHGHJIOEJND {
	string MKFKPOJOOIJ = 10; // offset: 16, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 4; // offset: 40, xor const: 0
	int32 FDJPHMHHDIN = 7; // offset: 44, xor const: 1913
	string CBDJHCJDDGL = 1; // offset: 24, xor const: 0
}

message AJHGKJINFHL {
	int64 BFPLINLLOFE = 6; // offset: 48, xor const: 8721
	repeated int32 JPHHMDAKJBA = 15; // offset: 16, xor const: 0
	uint32 JFHHBHAIBLF = 2; // offset: 56, xor const: 12732
	uint32 OPFEAMDPIAG = 11; // offset: 64, xor const: 8288
	bool OPNPJBFOBED = 1; // offset: 60, xor const: 0
	repeated int32 ONDKOLPNHLO = 4; // offset: 32, xor const: 0
	repeated string LBAJFGIMFKB = 13; // offset: 40, xor const: 0
}

enum PPBPLIOAOOI {
	PPBPLIOAOOI_HOLLOW_GAME_UI_TYPE_DEFAULT = 0;
	PPBPLIOAOOI_HOLLOW_GAME_UI_TYPE_ACTIVITY_HACKER = 1;
	PPBPLIOAOOI_HOLLOW_GAME_UI_TYPE_BLESS = 2;
}

message PLGLDECMJGA {
	string CBDJHCJDDGL = 9; // offset: 32, xor const: 0
	bool GLNFOAAKAOH = 10; // offset: 76, xor const: 0
	int32 EJGAJHHMIHO = 6; // offset: 64, xor const: 0
	int32 KKBEKMEMDIA = 5; // offset: 80, xor const: 0
	repeated EDGCAIEHLHH JIFKKPKGAMA = 3; // offset: 40, xor const: 0
	HollowEntityType HPALGIHBENM = 2; // offset: 68, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 7; // offset: 72, xor const: 0
	string MKFKPOJOOIJ = 8; // offset: 16, xor const: 0
	repeated int32 CMIANHKFKJM = 4; // offset: 48, xor const: 0
	repeated int32 GHFLIKFGEFJ = 1; // offset: 24, xor const: 0
}

// CmdId: 7819
message EBPHLLNKACM {
	uint32 PDNFHBMBFLO = 14; // offset: 24, xor const: 9147
}

enum IHHJNHHDNHN {
	IHHJNHHDNHN_VARIABLE_SCOPE_NONE = 0;
	IHHJNHHDNHN_SCENE = 1;
	IHHJNHHDNHN_SECTION = 2;
	IHHJNHHDNHN_SCRIPT_GLOBAL = 3;
	IHHJNHHDNHN_SCRIPT = 4;
	IHHJNHHDNHN_FUNCTION = 5;
	IHHJNHHDNHN_HOLLOW_QUEST = 6;
	IHHJNHHDNHN_HALL_GAME = 7;
	IHHJNHHDNHN_QUEST = 8;
}

// CmdId: 7025
message HAOMIDKMFEE {
	uint32 DCENCIPOBMC = 5; // offset: 24, xor const: 2305
}

// CmdId: 5070
message OGODLBLJICA {
	uint64 DIMEDPILOOA = 11; // offset: 24, xor const: 6813
}

message GHAJHNBAMMN {
	repeated DNHKBGMEMNF BCHPPAELHFC = 11; // offset: 24, xor const: 0
}

// CmdId: 1477
message KHJNELOHGMK {
	uint32 BCCEOLDLIFA = 10; // offset: 36, xor const: 3619
	uint32 BHDLCHFDHNO = 4; // offset: 32, xor const: 8621
	string EBGONDCPMJO = 5; // offset: 24, xor const: 0
}

message CNHKJDKBJGN {
	uint32 FFBKJJJFGGL = 12; // offset: 36, xor const: 6781
	map<uint32, uint32> OBEHPNINEMM = 9; // offset: 16, xor const: 0
	uint32 COONBILLNKD = 14; // offset: 32, xor const: 2220
}

message FHFCMFCBOOG {
	string GJOIOEMOBFN = 1; // offset: 32, xor const: 0
	string HBJOLGODPID = 2; // offset: 16, xor const: 0
}

message PGGBLKDEAPK {
	bool BGKBBCOMAHE = 1; // offset: 24, xor const: 0
}

message POJLKHAEIFM {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 24, xor const: 0
	FGKJFCJILIL DOJOAAAAJDC = 3; // offset: 16, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 40, xor const: 0
}

message OGPGGIGGAIP {
	uint32 MJCFHKAAHCG = 2; // offset: 28, xor const: 0
	uint32 BDGEFPEDGNM = 1; // offset: 24, xor const: 0
}

message MFKDEOEHEHI {
	repeated int32 LJHHDLEMAJN = 2; // offset: 16, xor const: 0
	MNOFMNFDCBC HLEAEPDDBLE = 1; // offset: 32, xor const: 0
}

enum PNHMKMECKBM {
	PNHMKMECKBM_DIABANKEPFP = 0;
	PNHMKMECKBM_OJAFJLBPJNL = 1;
	PNHMKMECKBM_BOHOCCFAAOA = 2;
	PNHMKMECKBM_OIKMLIIIPAC = 3;
	PNHMKMECKBM_OAANDLMECDG = 4;
}

enum BLJNKGPPKAC {
	BLJNKGPPKAC_ODJIHFPBHJN = 0;
	BLJNKGPPKAC_LHLGFMGIJHK = 1;
}

// CmdId: 2992
message IBCGNGHGJKI {
	BLKBPPNEKNC CPEPJEPHPBD = 13; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 1; // offset: 56, xor const: 541
	uint64 HEJBMNAOJFL = 7; // offset: 48, xor const: 12302
	uint64 AEDAEPKDOAL = 15; // offset: 40, xor const: 9130
}

message EBKIFGJOOIB {
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 48, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 4; // offset: 52, xor const: 0
	FGKJFCJILIL BBLCHBANJID = 2; // offset: 40, xor const: 0
	FGKJFCJILIL KKAOFFOLMOM = 5; // offset: 24, xor const: 0
	FGKJFCJILIL CEEAJBNFKDB = 1; // offset: 16, xor const: 0
}

// CmdId: 1757
message LDHCNFJOMCM {
}

// CmdId: 634
message OEEHOKHHEMH {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 6925
}

message FKKOIGHEKKE {
	float OFKFLAOIFDH = 13; // offset: 32, xor const: 0
	int32 ONDPFLCKHDA = 11; // offset: 24, xor const: 6984
	bool FCKONCOJHLD = 8; // offset: 40, xor const: 0
	int32 NODBAHCCOBD = 3; // offset: 36, xor const: 9536
	int32 DEDJLIGKAMG = 14; // offset: 28, xor const: 1062
	uint32 KBKLJLLBLCD = 5; // offset: 48, xor const: 77
	float NBNJEFMBCEE = 12; // offset: 44, xor const: 0
}

// CmdId: 4257
message BACCDFAJION {
	BCGDAFBAGFD HLEAEPDDBLE = 1; // offset: 28, xor const: 0
	int32 EFLPLGPDEGF = 14; // offset: 24, xor const: 3671
}

// CmdId: 1933
message KDEEJBHINAA {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 5113
}

message LBEHJJJGPEI {
	FGKJFCJILIL PPFNOCIMHAD = 3; // offset: 32, xor const: 0
	NFNNEDOGLOF HLEAEPDDBLE = 1; // offset: 40, xor const: 0
	FGKJFCJILIL AOEJCDNNHEJ = 2; // offset: 24, xor const: 0
}

// CmdId: 7453
message HBKNFCBCMDN {
	uint32 AFJOGKIENOC = 15; // offset: 32, xor const: 1393
	bool CBPLOJMODHF = 6; // offset: 28, xor const: 0
	uint32 LPEKBBJAKBP = 12; // offset: 24, xor const: 6424
}

// CmdId: 1227
message JDAGPANHMPM {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 5451
}

message MFFAFLJJHBP {
	OLPBIDDABFD AHCMBJNEBPC = 3; // offset: 40, xor const: 0
	JECNIHBLDCI FPLHBHAPNOF = 1; // offset: 48, xor const: 0
	PCHHBCGBMFG AHCBLFIBINB = 5; // offset: 16, xor const: 0
	DKHMBOJPJJL CLMMFPJELGN = 4; // offset: 56, xor const: 0
	ONIAFONDFHP HOIJLEMFBEC = 2; // offset: 32, xor const: 0
}

message PGNOEFIANJN {
	FGKJFCJILIL OAEIFBNNCNJ = 3; // offset: 24, xor const: 0
	FGKJFCJILIL MEJBFCEPKKP = 2; // offset: 32, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 16, xor const: 0
}

// CmdId: 4066
message HCDHMCKJBOM {
	uint32 NMHNBHDEKBP = 8; // offset: 28, xor const: 10021
	uint32 AIKLNDGPHKB = 6; // offset: 24, xor const: 8603
}

// CmdId: 7389
message BOMMLPJDKGA {
	uint64 DIMEDPILOOA = 12; // offset: 24, xor const: 468
}

// CmdId: 4686
message NBKAKFMJMFC {
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 10969
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 5; // offset: 48, xor const: 856
	uint64 AEDAEPKDOAL = 6; // offset: 56, xor const: 5061
	NJBICLMFHNK CPEPJEPHPBD = 1; // offset: 24, xor const: 0
}

message CKIAKPIPBFO {
	uint32 KINEKLHNPOO = 1; // offset: 28, xor const: 0
	uint32 MJMIJENCMPM = 2; // offset: 24, xor const: 0
}

message DKOLNHPBAPF {
	repeated MBBIBJLPFEH BACKBCOIHOH = 9; // offset: 24, xor const: 0
	bool BKFADLJNBPJ = 5; // offset: 148, xor const: 0
	repeated NPOJLEABBBA EHHADGAPJDD = 4; // offset: 88, xor const: 0
	AMAJPGNKBCE NBJEJFBNKAE = 1265; // offset: 112, xor const: 0
	repeated uint32 IBMMOHBCJLN = 3; // offset: 72, xor const: 0
	repeated LKBOGOCMNPP ACMNKFKGFJG = 13; // offset: 96, xor const: 0
	OAJECCPGACM AMKMMJHOHNF = 12; // offset: 16, xor const: 0
	uint32 PLFCIIAEIFC = 2; // offset: 144, xor const: 14679
	NMBLKMPCBFP JIMJFLNIJLG = 1488; // offset: 104, xor const: 0
	OFOGIGNONPK EMBLMCNMBAC = 11; // offset: 56, xor const: 0
	PHMGBGCPBGD ANPCJLMMNNF = 2012; // offset: 136, xor const: 0
	FIPHFCEKHFA OHEAPDDBFPN = 667; // offset: 80, xor const: 0
	LNEBJIHEJHG CCGLGBHFPGF = 14; // offset: 48, xor const: 0
	bool EBNIHMMNEDN = 10; // offset: 149, xor const: 0
	IBINJKKKDHI FLEDNPLGLIE = 7; // offset: 128, xor const: 0
	NALMCJGGGMB OEPKHBEIAJG = 8; // offset: 64, xor const: 0
	MDJIABIEBHM BMMPOPNFLLD = 15; // offset: 40, xor const: 0
	HELNIDGJEGF JDPAKDBBJHC = 1; // offset: 32, xor const: 0
}

message BJCEEGOLILN {
	FGKJFCJILIL NEIDELBBIAK = 12; // offset: 120, xor const: 0
	NNNBNGBBDEH NPEAEBDEBFG = 1; // offset: 132, xor const: 0
	FGKJFCJILIL PBDHEGBPNDO = 10; // offset: 56, xor const: 0
	FGKJFCJILIL NDMCLAAHFAD = 11; // offset: 48, xor const: 0
	FGKJFCJILIL IKMBJIKDBHC = 7; // offset: 80, xor const: 0
	FGKJFCJILIL LHGMIHPKCFB = 8; // offset: 40, xor const: 0
	AJENIKNKEDJ MPEGJBBHCNP = 9; // offset: 24, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 4; // offset: 72, xor const: 0
	FGKJFCJILIL EIKCJAKEABO = 6; // offset: 104, xor const: 0
	repeated IKNMNICOCNM HMIMHBPNOGM = 14; // offset: 32, xor const: 0
	FGKJFCJILIL FPAMMKPBAGA = 15; // offset: 96, xor const: 0
	CFHPLBHGACJ BJEECGEGEPC = 2; // offset: 88, xor const: 0
	repeated LDDJOLMINNI IBEDCBAMMDN = 13; // offset: 64, xor const: 0
	LEHENCIPJIE CFJGLHBDPNO = 3; // offset: 128, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 5; // offset: 16, xor const: 0
}

message KMIICOOLMJO {
	bool MCIFAGNEDOO = 12; // offset: 24, xor const: 0
	uint32 OPFEAMDPIAG = 13; // offset: 28, xor const: 7541
	bool OPNPJBFOBED = 14; // offset: 25, xor const: 0
}

// CmdId: 1745
message OEMNLAMKDID {
}

message ABAGAAGNFDE {
	string DICHOLEBGIH = 1; // offset: 16, xor const: 0
}

// CmdId: 6041
message EDLHLNGDFJP {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 9176
}

message AABOOKOFCDH {
	string NMMADBDFJCK = 1; // offset: 32, xor const: 0
	string ABEEBEMFDMF = 2; // offset: 24, xor const: 0
}

message AFNFKCMCOGG {
	repeated DFDMNKAKCBF APAIGDHMBLO = 1; // offset: 24, xor const: 0
	uint32 LOABNMJMDNI = 14; // offset: 40, xor const: 13130
	bool BKFADLJNBPJ = 4; // offset: 45, xor const: 0
	uint32 CPEGDKBNGDH = 6; // offset: 52, xor const: 2266
	repeated DFDMNKAKCBF CHPIJCHLDGC = 3; // offset: 16, xor const: 0
	uint32 OPFEAMDPIAG = 10; // offset: 60, xor const: 6924
	bool BKDHFLEJNAC = 13; // offset: 46, xor const: 0
	uint32 IIIGDHJPFMI = 11; // offset: 56, xor const: 13138
	uint32 HIMNJDFAOCH = 5; // offset: 48, xor const: 8641
	bool DNPHNLKKBLF = 7; // offset: 44, xor const: 0
}

message KEFLHGDONAF {
	uint32 AEGIPOACBJB = 3; // offset: 24, xor const: 0
	uint32 EDFEJDEFMIB = 1; // offset: 28, xor const: 0
	uint32 DMEJPGOIOGJ = 2; // offset: 32, xor const: 0
}

// CmdId: 1345
message JMLMPHFEKLO {
	uint64 AEDAEPKDOAL = 10; // offset: 56, xor const: 6133
	FAHEJJLFEMA CPEPJEPHPBD = 14; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 40, xor const: 1312
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 1; // offset: 48, xor const: 15068
}

// CmdId: 6809
message IIONIIGNAFN {
	uint32 ABHCMMOPFHK = 10; // offset: 28, xor const: 13364
	uint32 HLEAEPDDBLE = 7; // offset: 24, xor const: 12240
}

// CmdId: 3935
message AFDKDIFOKKC {
	uint32 AMIJIAHGPMC = 7; // offset: 24, xor const: 9750
}

message HICCLIPILJM {
	string CCHMOEOOHDP = 3; // offset: 24, xor const: 0
}

// CmdId: 8146
message HNMNAOAFNIF {
	PFLHIFLEKBG NKEDDJKGOPI = 7; // offset: 16, xor const: 0
	uint32 EAFLFKCFANH = 8; // offset: 32, xor const: 4493
}

// CmdId: 8316
message HNDLPLGEMLB {
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 14183
	uint32 KMKPPDICOKA = 14; // offset: 40, xor const: 4756
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 48, xor const: 14320
	AGLILFJFGKA CPEPJEPHPBD = 1; // offset: 16, xor const: 0
}

// CmdId: 5836
message MHNMKOHDINJ {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 16033
}

enum FEBGCHHDAKK {
	FEBGCHHDAKK_MKCMBPECOFN = 0;
	FEBGCHHDAKK_FLEIHHLFLFG = 100000001;
	FEBGCHHDAKK_JLGIFGDJOMI = 100000002;
	FEBGCHHDAKK_PHJFOPBPODJ = 100000003;
	FEBGCHHDAKK_OJOGPICNCKP = 100000004;
}

// CmdId: 8461
message NBBEDMOBFLG {
	bool PDCGEGPEODA = 9; // offset: 32, xor const: 0
	repeated string PELFOOACPAA = 14; // offset: 24, xor const: 0
}

// CmdId: 5115
message JICCGJKAIDH {
	uint64 HEJBMNAOJFL = 5; // offset: 48, xor const: 2409
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 40, xor const: 12039
	uint32 KMKPPDICOKA = 13; // offset: 56, xor const: 7259
	EMEKEGCALJJ CPEPJEPHPBD = 3; // offset: 24, xor const: 0
}

message JIDIEDOMPFL {
	repeated HGIPJOCNKDF APKKBCHHMGA = 1; // offset: 16, xor const: 0
	repeated uint32 FLDPMBKFEKL = 2; // offset: 24, xor const: 0
	uint32 CBELLMGEFDA = 3; // offset: 40, xor const: 0
}

enum ENFABDPICPB {
	ENFABDPICPB_KJNIMCBJNHK = 0;
	ENFABDPICPB_ICJIPJICLPE = 1;
	ENFABDPICPB_PJJMIBJOFKH = 2;
}

message HNHDIENLGOF {
	repeated uint32 DBCOKAPABIA = 4; // offset: 32, xor const: 0
	bool MLCAIFBMJNH = 7; // offset: 48, xor const: 0
	repeated KPOIAEDEGHG GGBIOBOEKLB = 14; // offset: 16, xor const: 0
	repeated uint32 LBPDHMPOIKC = 13; // offset: 24, xor const: 0
}

message GMIONEPFFIG {
	uint64 KHJBNCBPCDN = 6; // offset: 56, xor const: 9086
	uint64 AEDAEPKDOAL = 11; // offset: 32, xor const: 7295
	uint64 HEJBMNAOJFL = 7; // offset: 24, xor const: 13151
	uint32 DOHCPECNABL = 9; // offset: 40, xor const: 13534
	uint64 HKCHPDBIJHC = 1; // offset: 48, xor const: 11894
	uint32 NIJLEDIPBGF = 12; // offset: 44, xor const: 2269
}

message GHKKMHDNEJA {
	map<uint32, uint32> JOMFMLIOCAC = 1; // offset: 16, xor const: 0
}

message JFOHELMBLGN {
	uint32 MHINMINPONI = 13; // offset: 52, xor const: 3248
	bool GBKNCJDLDJB = 14; // offset: 40, xor const: 0
	HEJIEMOJOPI HLEAEPDDBLE = 7; // offset: 44, xor const: 0
	FOPEBPFODFK IOMODDHHNEK = 1; // offset: 16, xor const: 0
	uint32 IIIGDHJPFMI = 4; // offset: 48, xor const: 8628
	repeated IMJIJLIDHEC DPCBPCPKBEI = 2; // offset: 24, xor const: 0
	bool EEBCIFACHMB = 5; // offset: 41, xor const: 0
}

enum CCOFODONHFM {
	CCOFODONHFM_MPH_ENTITY_TYPE_NONE = 0;
	CCOFODONHFM_MPH_ENTITY_TYPE_PLAYER = 1;
	CCOFODONHFM_MPH_ENTITY_TYPE_NPC = 2;
	CCOFODONHFM_MPH_ENTITY_TYPE_GRID = 3;
	CCOFODONHFM_MPH_ENTITY_TYPE_SECTION = 4;
}

message CMFFFGLDOLK {
	APOOIHEDIFA GADHMCMBNPM = 3; // offset: 40, xor const: 0
	uint32 OBPMOEHGAIM = 2; // offset: 24, xor const: 0
	uint64 HCIKOCHONNP = 1; // offset: 32, xor const: 0
	uint32 BOOECBEGOBL = 4; // offset: 28, xor const: 0
}

message PLIFLCONFFF {
	uint32 MHDFOCGAOPO = 1; // offset: 24, xor const: 0
}

message MEPINEBCPAJ {
	string IOFKNPIMHJA = 2; // offset: 32, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 16, xor const: 0
	repeated BGBCMCFAKPL ONDKOLPNHLO = 3; // offset: 40, xor const: 0
}

message NMGELGMJOFC {
	string FAPGCILCDNK = 1; // offset: 32, xor const: 0
	bool KNGEKGAAANM = 3; // offset: 40, xor const: 0
	repeated string FBBNIMHEMLJ = 2; // offset: 24, xor const: 0
}

message AOHPJMGPICM {
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 4867
	BBMHBHHDOCD EOKGJGCHAHM = 6; // offset: 16, xor const: 0
}

// CmdId: 7532
message JDBHMCBDIJC {
}

message NNOHICGMHCF {
	FGKJFCJILIL EFNFANEIJMH = 1; // offset: 16, xor const: 0
}

enum HCOODNLABCC {
	HCOODNLABCC_AAICANFMCBO = 0;
	HCOODNLABCC_NLKKIMHCMKF = 1;
	HCOODNLABCC_NBIFIHMFMAO = 2;
	HCOODNLABCC_EABODIDCJEJ = 3;
	HCOODNLABCC_CLLOONPNKIA = 4;
}

message KELFGOCOEKO {
	FGKJFCJILIL LJEHCDLJOIG = 2; // offset: 16, xor const: 0
	bool NGHPMFNDFFM = 3; // offset: 57, xor const: 0
	bool MBFFDICGCFA = 6; // offset: 56, xor const: 0
	string BIEPLLGGAID = 5; // offset: 32, xor const: 0
	repeated FGKJFCJILIL JHNICIPMNJG = 7; // offset: 48, xor const: 0
	string OGKBAELBNDJ = 4; // offset: 24, xor const: 0
	HollowEntityType OAEJPMIBGDP = 1; // offset: 60, xor const: 0
}

message LCPMAAKIJHD {
	uint32 JFPGDDPDLBL = 3; // offset: 48, xor const: 14129
	repeated uint32 IBEHHFDNHOA = 14; // offset: 32, xor const: 0
	repeated uint32 GCJKKFDPABN = 11; // offset: 40, xor const: 0
	repeated uint32 PNJCIGNEICK = 1; // offset: 24, xor const: 0
}

// CmdId: 4437
message MFEBONAOKMC {
	uint32 MFEEALCFDPL = 7; // offset: 24, xor const: 14331
}

// CmdId: 1850
message HECGMGJEAAE {
	repeated uint32 NMLBIEONLBF = 6; // offset: 16, xor const: 0
	repeated uint32 HEEHBIJLGDJ = 9; // offset: 24, xor const: 0
}

// CmdId: 1912
message MKOOJIHNBCB {
	COOJIMABDGH CPEPJEPHPBD = 4; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 6; // offset: 40, xor const: 9187
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 4315
	uint32 KMKPPDICOKA = 9; // offset: 48, xor const: 2455
}

enum LBNFGKNOGDO {
	LBNFGKNOGDO_BAGMNPCIEOI = 0;
	LBNFGKNOGDO_MALPPPIJIGP = 1;
	LBNFGKNOGDO_AJBFMJFEKBL = 2;
}

// CmdId: 7905
message EFNPIDJLEJE {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 12216
}

message LJJDIKKKAME {
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 40, xor const: 0
	FGKJFCJILIL NMIGPBNKNDF = 4; // offset: 32, xor const: 0
	bool EMOGMCANGMA = 6; // offset: 56, xor const: 0
	FGKJFCJILIL MEJBFCEPKKP = 3; // offset: 24, xor const: 0
	FGKJFCJILIL KFEFNFFNLPE = 2; // offset: 48, xor const: 0
	bool GLJGAGLKCHA = 5; // offset: 57, xor const: 0
}

message ACHODHPJINA {
	HollowSystemUIState PBOAMDEBIGO = 2; // offset: 36, xor const: 0
	repeated HollowSystemType DBOACCIJPDL = 1; // offset: 16, xor const: 0
	bool EABOHHKFEEM = 3; // offset: 32, xor const: 0
}

message IBINJKKKDHI {
	LDIEOFMEHIC BEMCPENMOEC = 4; // offset: 16, xor const: 0
}

enum NJEIGPPNHFC {
	NJEIGPPNHFC_KNBLBFDMJBG = 0;
	NJEIGPPNHFC_JGBCPDPDEFE = 1;
}

message NLIKKNNCBCK {
	uint32 IHDAEEOMHKD = 6; // offset: 68, xor const: 8215
	uint32 EACMMHHDFKM = 12; // offset: 80, xor const: 14819
	uint32 CKHMCJAAHAN = 9; // offset: 84, xor const: 989
	string MGEMBOOEJFP = 7; // offset: 56, xor const: 0
	bool PAGKKCBCOCG = 4; // offset: 76, xor const: 0
	repeated uint32 AAPIKEIMPKA = 10; // offset: 32, xor const: 0
	bool ONEBMNEOBNA = 13; // offset: 77, xor const: 0
	repeated uint32 CEHILLOPAJM = 1; // offset: 16, xor const: 0
	uint32 POKAFKFPDBC = 8; // offset: 64, xor const: 4784
	bool AIDJILLKJCG = 11; // offset: 79, xor const: 0
	uint32 HLDODPOBCHH = 2; // offset: 96, xor const: 15979
	uint32 KMJBJLCIBNI = 5; // offset: 88, xor const: 11702
	bool LDBPEBHLLEB = 3; // offset: 78, xor const: 0
	string AKPIAFHFFDP = 15; // offset: 48, xor const: 0
	uint32 PGOOAOMFAMG = 14; // offset: 92, xor const: 4441
	HHPFFCGOBBF DIKOEIDMBKH = 1090; // offset: 40, xor const: 0
	uint32 PHFKAEHHBNF = 1996; // offset: 72, xor const: 16316
}

enum ALFAIAAFKHD {
	ALFAIAAFKHD_JDIINLIDDGN = 0;
	ALFAIAAFKHD_HFHHIPJGIKC = 1;
	ALFAIAAFKHD_CJNIAMKMHMJ = 2;
}

message BBDJGDCHMBM {
	int64 MOHHBACKBOK = 1; // offset: 88, xor const: 8899
	uint32 BDHBFHKBPNK = 12; // offset: 76, xor const: 8860
	map<uint32, uint32> GLPLNJBEIPF = 9; // offset: 32, xor const: 0
	string CFDDOHAILFB = 11; // offset: 40, xor const: 0
	uint32 JIFHJEMHGNK = 4; // offset: 80, xor const: 1649
	uint32 NNOHFEEHNEJ = 8; // offset: 56, xor const: 5587
	uint32 FAICJCFFGDB = 5; // offset: 68, xor const: 6226
	uint32 FOEAJHDEEJP = 14; // offset: 64, xor const: 3828
	CFODGNKBIMM HLEAEPDDBLE = 3; // offset: 84, xor const: 0
	string KMGDMJGCBFC = 6; // offset: 16, xor const: 0
	uint32 OPFEAMDPIAG = 2; // offset: 60, xor const: 13674
	JOLNLKCBKAM PFCIOMCFGKL = 13; // offset: 72, xor const: 0
	string PGPOIMHKFPL = 10; // offset: 24, xor const: 0
}

message ILEFFNEOPJB {
	repeated PMFLGCCMCPP EHHADGAPJDD = 13; // offset: 16, xor const: 0
}

// CmdId: 8278
message CHAKPGCJEKB {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 13022
}

enum NJEINKKOPGJ {
	NJEINKKOPGJ_TARGET_TYPE_NONE = 0;
	NJEINKKOPGJ_TARGET_TYPE_EVENT = 1;
	NJEINKKOPGJ_TARGET_TYPE_NPC = 2;
}

message DNPNHNDJHMC {
	int32 GIIDABOKJDH = 14; // offset: 32, xor const: 13528
	repeated PIPPJNLOPOG HDAFHGFGNNM = 10; // offset: 16, xor const: 0
	int32 CCHBCDDMCMO = 6; // offset: 36, xor const: 6618
}

message AMAJPGNKBCE {
	repeated uint32 CDHCMKCHPDG = 15; // offset: 16, xor const: 0
	uint32 CPEGDKBNGDH = 5; // offset: 48, xor const: 14002
	repeated AMAGPAFMFCC KDEACCLEHHJ = 7; // offset: 40, xor const: 0
	repeated uint32 IGEKLAGIFHL = 10; // offset: 32, xor const: 0
}

// CmdId: 5774
message CGIEEEJIMHE {
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 8276
	uint64 HEJBMNAOJFL = 10; // offset: 40, xor const: 10852
	uint64 AEDAEPKDOAL = 7; // offset: 48, xor const: 10808
	IDKIJHEOEEL CPEPJEPHPBD = 8; // offset: 24, xor const: 0
}

message ELJPPHECKKB {
	OCLAJEEICBL COAPBMGHADD = 1; // offset: 28, xor const: 0
	uint32 GFCLKDAOMBM = 9; // offset: 24, xor const: 12118
}

message COKLGKNFDOP {
	uint32 CBELLMGEFDA = 2; // offset: 32, xor const: 0
	string BONBBPKCDMI = 1; // offset: 16, xor const: 0
}

message ENNHHBMIPPP {
	uint32 PCPNKFCFPCC = 12; // offset: 28, xor const: 6338
	uint32 GGNKBBEPPHA = 15; // offset: 24, xor const: 15208
}

message MCCHCGFJKJF {
	int32 PANFIGOPHFA = 1; // offset: 24, xor const: 0
}

enum PMBCDDLJNFF {
	PMBCDDLJNFF_OEAFEICHHNC = 0;
}

message PNAGIEDJHMJ {
	bool IGADOMHOINM = 1; // offset: 24, xor const: 0
}

// CmdId: 1405
message HAHICHOIAGE {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 4175
}

message MGKIHHLOAEE {
	FGKJFCJILIL PBOAMDEBIGO = 1; // offset: 32, xor const: 0
	bool BFCJAOMNIMN = 4; // offset: 40, xor const: 0
	FGKJFCJILIL ICLCHMFPMMA = 2; // offset: 16, xor const: 0
	bool DLACECPOBPM = 3; // offset: 41, xor const: 0
}

// CmdId: 4006
message DGGLLPGJGAB {
	uint32 ELLAHKKNHAM = 7; // offset: 32, xor const: 15572
	map<uint32, uint32> MKFIHMJHFEJ = 15; // offset: 16, xor const: 0
	JAJBJJKMFMA BKIHIFEJFDD = 3; // offset: 36, xor const: 0
}

// CmdId: 2265
message DICCHHNOEFF {
	uint32 DGPMEEKBLKG = 5; // offset: 24, xor const: 2099
}

enum DPBDGOFLFHE {
	DPBDGOFLFHE_IACHGHFEFKL = 0;
	DPBDGOFLFHE_ANNLOOBDMAC = 1;
	DPBDGOFLFHE_PJGPCECJOIO = 2;
}

enum FEBOKKCJEBE {
	FEBOKKCJEBE_CLMPMPENGAM = 0;
	FEBOKKCJEBE_IANAGIKNOFL = 1;
}

// CmdId: 56
message GONHHAMDOCK {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 12598
}

message CHCBDJBHLGK {
	FGKJFCJILIL DBOACCIJPDL = 1; // offset: 16, xor const: 0
	FGKJFCJILIL ABDEFNDIGFF = 2; // offset: 24, xor const: 0
}

message HBMJHBJFILA {
	uint32 MHINMINPONI = 13; // offset: 28, xor const: 15760
	uint32 GNOPMPEJPHF = 8; // offset: 24, xor const: 13501
}

enum EFBNADIGKGE {
	EFBNADIGKGE_FLEA_MARKET_STATE_NONE = 0;
	EFBNADIGKGE_FLEA_MARKET_STATE_HAS_LOCKED_AND_EXCHANGED = 1;
	EFBNADIGKGE_FLEA_MARKET_STATE_HAS_LOCKED_AND_UNEXCHANGED = 2;
	EFBNADIGKGE_FLEA_MARKET_STATE_ALL_UNLOCKED = 3;
	EFBNADIGKGE_FLEA_MARKET_STATE_ALL_EXCHANGED = 4;
}

message ACNGKHDGKII {
	int32 ENEGAHHFOPK = 3; // offset: 24, xor const: 1765
	int32 PGBADFMPAPK = 10; // offset: 36, xor const: 10617
	int32 OECNBLJGPGD = 11; // offset: 32, xor const: 15701
	int32 ABNALIPAMAB = 14; // offset: 28, xor const: 12075
}

message BJCNLOJJINN {
	JIGPDFKHLPL IJHOPKLKPKJ = 14; // offset: 24, xor const: 0
	JIGPDFKHLPL FJOECPEAHPN = 6; // offset: 16, xor const: 0
	int32 GJCKKMFMHPH = 10; // offset: 40, xor const: 5063
}

message JIGPDFKHLPL {
	AOCPINNOFHP PPKOKAKLAIN = 3; // offset: 32, xor const: 0
	int32 HOLOINOKDPB = 2; // offset: 36, xor const: 0
	int32 NNNFJOIJEOL = 4; // offset: 24, xor const: 0
	int32 OOPFKJLAKKJ = 1; // offset: 28, xor const: 0
}

enum PFDBOMCIEDI {
	PFDBOMCIEDI_MFACGCMPHBO = 0;
	PFDBOMCIEDI_OLFEIPLLKDP = 1;
	PFDBOMCIEDI_MIFLOHFOFCG = 2;
}

message GCMBJIINODE {
	repeated int32 MAJALPLMDBO = 12; // offset: 24, xor const: 0
}

message DMMDEFAPAIA {
	uint32 HLEAEPDDBLE = 7; // offset: 40, xor const: 13703
	INLFFDKGPNK AODMMCCECAP = 15; // offset: 24, xor const: 0
	uint64 NCAGHHFDAOG = 11; // offset: 32, xor const: 407
}

message FLBAOAPBMNC {
	uint32 DAJDGBNANPA = 12; // offset: 24, xor const: 15024
}

message MDKPBEJHKEP {
	string GOPCOFEMCID = 2; // offset: 32, xor const: 0
	FGKJFCJILIL EKBIPLODADD = 1; // offset: 16, xor const: 0
}

message NAAIAGPJDGC {
	repeated LLCKKHHMKLH GJHPDKHHONE = 2; // offset: 16, xor const: 0
	uint32 BEKFLJGFLJD = 1; // offset: 32, xor const: 0
}

message OEDFAKGEFGJ {
	repeated DNHKBGMEMNF BCHPPAELHFC = 10; // offset: 16, xor const: 0
}

// CmdId: 8719
message DFPODACEIAL {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 8423
}

message LDEICBEPODH {
	CGNOCJFODJE KOGEIGJFFEN = 12; // offset: 24, xor const: 0
}

message FEBDNJDAJOB {
	GEHKNLCAAOE AADKLGBDEFO = 8; // offset: 16, xor const: 0
	IMJIJLIDHEC HHFJBHBINNG = 14; // offset: 24, xor const: 0
	uint32 MNDILCIIICE = 13; // offset: 48, xor const: 13565
	string FBMPIAPJECO = 10; // offset: 32, xor const: 0
}

// CmdId: 7192
message HELJEHEFADK {
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 11403
	INBHIPGHCND ILMNPPMLHOG = 5; // offset: 16, xor const: 0
}

enum EAJAKLDAKMP {
	EAJAKLDAKMP_KIGKLFAODBO = 0;
	EAJAKLDAKMP_NICIMGKKBGG = 1;
}

enum JMMAIHPCECD {
	JMMAIHPCECD_LDOLOENCJCK = 0;
}

message PGBFJLGLIFB {
	enum LGBDGIKNBDG {
		LGBDGIKNBDG_NONE = 0;
		LGBDGIKNBDG_FLOAT_VALUE = 3;
		LGBDGIKNBDG_STRING_VALUE = 4;
		LGBDGIKNBDG_INT_VALUE = 5;
		LGBDGIKNBDG_UINT_VALUE = 6;
	}

	MACHBHLABPG MFIOHKNGJLA = 2; // offset: 40, xor const: 0
	MEGKPCHHBBM DBOACCIJPDL = 1; // offset: 16, xor const: 0
	oneof COGOJDJLJMK {
		string string_value = 4;
		int32 int_value = 5;
		uint32 uint_value = 6;
		float float_value = 3;
	}
}

// CmdId: 3332
message IINIEAIJDMB {
	uint32 CPEGJHGIFAA = 14; // offset: 24, xor const: 640
	uint32 HOEDIFAPIHM = 8; // offset: 28, xor const: 9950
}

message AEOLPNBMACJ {
}

message ONJAHEEPLIF {
	repeated FGKJFCJILIL DNDEMNCEGBC = 2; // offset: 16, xor const: 0
	FGKJFCJILIL OHBENCBKDHK = 1; // offset: 24, xor const: 0
	JMDLPBFPCHO JGNENIDGJDA = 3; // offset: 40, xor const: 0
}

// CmdId: 7423
message DBLGMJKGFOO {
	repeated uint32 BNCCIPJKMIE = 4; // offset: 40, xor const: 0
	repeated uint32 NFHNMOIPPPF = 9; // offset: 48, xor const: 0
	repeated uint32 CFLMKEKGJFN = 7; // offset: 16, xor const: 0
	repeated uint32 DLGJMHENADP = 13; // offset: 56, xor const: 0
	uint32 CPEGDKBNGDH = 15; // offset: 64, xor const: 7669
	int32 IHIGNMLCHDK = 6; // offset: 68, xor const: 15209
	repeated LIGFAPBODMD DIGJMHHPMEB = 5; // offset: 24, xor const: 0
}

// CmdId: 6168
message IJPAIJGHEBG {
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 24, xor const: 0
	BELHDAJJLLC CPEPJEPHPBD = 2; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 7; // offset: 56, xor const: 403
	uint32 KMKPPDICOKA = 12; // offset: 48, xor const: 3932
	uint64 HEJBMNAOJFL = 5; // offset: 40, xor const: 7911
}

message HOJAILAHCMA {
	int32 KCEAADABACD = 3; // offset: 68, xor const: 274
	int32 GBEEMABJEMO = 9; // offset: 64, xor const: 10636
	repeated int32 EGLPBAGIAAP = 14; // offset: 16, xor const: 0
	bool MDMOPNMHOHJ = 15; // offset: 76, xor const: 0
	repeated int32 MIGBLDENGPO = 13; // offset: 40, xor const: 0
	int32 AMOOIKBKLPC = 4; // offset: 72, xor const: 3083
	repeated int32 IGJDOPJFEAL = 1; // offset: 32, xor const: 0
	repeated int32 BIHEKCLHGPM = 6; // offset: 48, xor const: 0
	int32 LJLDEIDBPEA = 2; // offset: 60, xor const: 12125
	int32 LAACPPOOIBG = 7; // offset: 56, xor const: 4506
}

message KNEJHPBCIID {
	FGKJFCJILIL MPHLIEKKFIK = 1; // offset: 16, xor const: 0
	FGKJFCJILIL ENCANOPLLDM = 2; // offset: 32, xor const: 0
	bool LCGHMAJLILN = 4; // offset: 44, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 3; // offset: 40, xor const: 0
}

// CmdId: 3204
message ILDGBOAHELC {
	HKFNGOHGADC HLEAEPDDBLE = 8; // offset: 24, xor const: 0
}

// CmdId: 5381
message OKGGBEOIGOL {
	HJCGJNOIPPG NKOPDEHLMCE = 12; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 13532
}

message KMIDLLKHCAL {
}

// CmdId: 9605
message ILLIFCAAICM {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 4499
}

message CBLMJKPANPI {
	int32 BEIBHOAJPPD = 2; // offset: 24, xor const: 0
	uint32 IPNANHEPICK = 1; // offset: 28, xor const: 0
}

enum GCMAAMMJELH {
	GCMAAMMJELH_HMDNIILMMHF = 0;
}

// CmdId: 3892
message DILCPCPAECG {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 5728
}

// CmdId: 1780
message FENCHFLBFCB {
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	NGKGLKCOGLG CPEPJEPHPBD = 12; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 40, xor const: 13939
	uint64 HEJBMNAOJFL = 2; // offset: 56, xor const: 14762
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 7267
}

message EFIPJIDEEOM {
	string JGGKGHJMDFA = 1; // offset: 16, xor const: 0
}

// CmdId: 4994
message LDBKNILIBIB {
	uint32 IIIGDHJPFMI = 9; // offset: 24, xor const: 14833
	uint32 HONFNLBAIAN = 3; // offset: 28, xor const: 11910
}

// CmdId: 4672
message DEHJAOMJNHE {
	FMHFMIJBIME MOKENOKMODA = 1; // offset: 16, xor const: 0
	uint32 EFNFANEIJMH = 8; // offset: 40, xor const: 1076
	KKHPKIGGGAL CKBOJACIJDI = 13; // offset: 24, xor const: 0
	bool MEKICIKMAKK = 15; // offset: 44, xor const: 0
}

// CmdId: 5077
message OLECFEDFLKH {
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 24, xor const: 0
	DLDNBDLEIMD CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 56, xor const: 641
	uint64 AEDAEPKDOAL = 12; // offset: 48, xor const: 9825
	uint64 HEJBMNAOJFL = 7; // offset: 40, xor const: 4429
}

message NFCNGKMEIEB {
	bool NEFOCGANEEO = 14; // offset: 48, xor const: 0
	uint32 CMOLKPGAPEO = 13; // offset: 52, xor const: 13224
	uint32 MAPCMCKCKEK = 11; // offset: 40, xor const: 8978
	uint32 IACFJPOKLHE = 3; // offset: 44, xor const: 16088
	repeated int32 JCMILONLMLN = 6; // offset: 16, xor const: 0
	bool DKGBMPIAAPC = 15; // offset: 49, xor const: 0
	repeated int32 ALIDKKCIBIO = 1; // offset: 32, xor const: 0
}

message JDAPEMOLLEH {
	int32 MHDFOCGAOPO = 2; // offset: 24, xor const: 0
	int32 PIIPPIBBFBE = 1; // offset: 28, xor const: 0
}

enum DHMNNAPFLCB {
	DHMNNAPFLCB_HOLLOW_MINI_GAME_TYPE_NONE = 0;
	DHMNNAPFLCB_HOLLOW_MINI_GAME_TYPE_HACKER = 1;
}

// CmdId: 1773
message DPAIKFHFHIM {
	uint32 LHDHLCKNFIG = 7; // offset: 32, xor const: 13549
	KKHPKIGGGAL CKBOJACIJDI = 9; // offset: 16, xor const: 0
	bool PBFOCMGKEEK = 2; // offset: 36, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 40, xor const: 5016
	uint32 EFNFANEIJMH = 4; // offset: 44, xor const: 2321
}

message EHEPBOHBIGC {
	repeated NINCKOKAFPJ KANNIAKOPCL = 11; // offset: 24, xor const: 0
	repeated OJJDLLFLHHP NNKDOJEMFHE = 15; // offset: 32, xor const: 0
}

message HJHKBGGCOEG {
	uint32 CPEGDKBNGDH = 8; // offset: 28, xor const: 3330
	uint32 GCGPNHPGPLH = 11; // offset: 24, xor const: 12145
}

enum JDNECNLCOOL {
	JDNECNLCOOL_LNGNLLAKKAL = 0;
	JDNECNLCOOL_BKOKKODAKKM = 1;
	JDNECNLCOOL_AKOHNGCLFIF = 2;
	JDNECNLCOOL_GBLCIDFOBIN = 3;
	JDNECNLCOOL_JHHKDAGJONP = 4;
	JDNECNLCOOL_DAEOADEPCHF = 5;
	JDNECNLCOOL_DAOAIDAIGLF = 6;
	JDNECNLCOOL_CDIGBHOHEDF = 7;
	JDNECNLCOOL_DPECNDEGGHC = 8;
	JDNECNLCOOL_DOOEDDHLIKK = 9;
	JDNECNLCOOL_ODPMBAGKPKD = 10;
	JDNECNLCOOL_JEAHLGGFFNM = 11;
	JDNECNLCOOL_IENBJCAMHHF = 12;
	JDNECNLCOOL_FPINPPGNIPN = 13;
	JDNECNLCOOL_PHNLHFKFEPM = 14;
	JDNECNLCOOL_GANCFLFLGMI = 15;
	JDNECNLCOOL_NAPDEEAMJCC = 16;
	JDNECNLCOOL_MKHFOCDHMBA = 17;
	JDNECNLCOOL_EGIEMDMENHF = 18;
	JDNECNLCOOL_EDGDHKCGJMI = 19;
	JDNECNLCOOL_KKPKHNHNINP = 20;
	JDNECNLCOOL_PCADBOPDLCN = 21;
}

message BDGBEIMKJPI {
	OEDPLCLFPLI PHNBMLLAADP = 12; // offset: 40, xor const: 0
	string HMAINMCDBPK = 14; // offset: 16, xor const: 0
	repeated uint32 NKBEOFENFOO = 7; // offset: 32, xor const: 0
	int32 JJDFJLDNEGB = 2; // offset: 48, xor const: 10778
	uint32 JPHICFDKIAP = 1; // offset: 52, xor const: 8113
}

// CmdId: 700
message DALPFKJFALL {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 11932
}

message CPCNMAENIKA {
}

message IAIFHONNPFH {
	repeated uint32 LBFFCNAOGFG = 1; // offset: 16, xor const: 0
	repeated uint32 BGLKPIOEFPG = 2; // offset: 24, xor const: 0
}

message OMOOFNPOLOE {
	uint32 HLEAEPDDBLE = 11; // offset: 32, xor const: 8735
	repeated uint32 ONDKOLPNHLO = 14; // offset: 16, xor const: 0
}

// CmdId: 2764
message NABABDNNCDB {
}

enum BPJBHAIJCPB {
	BPJBHAIJCPB_JHAOBFGGJFH = 0;
}

message NJNHCOMGCNO {
	OFHLMPNLFFC DMOKCEGAGAC = 488; // offset: 232, xor const: 0
	uint32 CIBNBECPDGE = 7; // offset: 276, xor const: 12733
	uint32 AJHBLCOFPJC = 971; // offset: 260, xor const: 9472
	bool AOCCOPFHFMB = 1544; // offset: 256, xor const: 0
	repeated uint32 BFINIOPONGC = 844; // offset: 168, xor const: 0
	repeated uint32 NIPJDMKKDDE = 12; // offset: 72, xor const: 0
	FKPEGLLDDFF JMINHOJJOCM = 729; // offset: 128, xor const: 0
	AFDAIICLOJP PLJDMNOFPPG = 817; // offset: 120, xor const: 0
	uint32 LLNBPJPHCED = 9; // offset: 280, xor const: 1077
	HMJFABAGHKM DKDAEMDHLFP = 1685; // offset: 192, xor const: 0
	map<uint32, int32> ABGCDKPNNBN = 10; // offset: 224, xor const: 0
	HDJAOMBLFMN NCJODEKBAFB = 709; // offset: 184, xor const: 0
	DKJGGIMKCFE OJPDDKIDBAJ = 1579; // offset: 48, xor const: 0
	repeated AGEPCHBGANA AJBPIPJILNA = 13; // offset: 176, xor const: 0
	uint32 CNOLHLIHKDF = 292; // offset: 272, xor const: 14159
	bool HMDAJIAFIDB = 1110; // offset: 259, xor const: 0
	repeated uint32 FHACLDNHIMM = 958; // offset: 240, xor const: 0
	NGDMCEHFIDH MJADBNEKDCM = 603; // offset: 160, xor const: 0
	GCBNCOAGBDO HBNDGOFBBGP = 3; // offset: 40, xor const: 0
	uint32 DMIMGNLILLP = 1339; // offset: 288, xor const: 10712
	repeated uint32 CMLEENDHBML = 1657; // offset: 24, xor const: 0
	bool EPCCLBNKNAL = 1649; // offset: 258, xor const: 0
	LAEIDAJPAMD JJCFNNHDLCO = 1133; // offset: 16, xor const: 0
	AHNENPPHPLD GCLJKKGCCAB = 15; // offset: 136, xor const: 0
	uint32 EKLGNOIEMLA = 6; // offset: 292, xor const: 8169
	repeated MIMBHHMCKEO OKMCJGCLNNH = 4; // offset: 200, xor const: 0
	uint32 IEAKOGOLIFG = 1539; // offset: 284, xor const: 14165
	bool KBFMGHKPGEM = 954; // offset: 257, xor const: 0
	repeated AHMGLHGDNDF AHFPBAKINLH = 477; // offset: 96, xor const: 0
	repeated uint32 DKFJOJIIGNP = 14; // offset: 208, xor const: 0
	repeated uint32 LGFJGONFMNF = 1232; // offset: 56, xor const: 0
	map<uint32, uint32> BNAJDJHBECP = 1; // offset: 64, xor const: 0
	repeated GCBNCOAGBDO GCPEDDINJEN = 1878; // offset: 216, xor const: 0
	uint32 CFFJGPJECBK = 618; // offset: 264, xor const: 3714
	JGOPFNMNPOE JPFODHOJDDN = 2; // offset: 80, xor const: 0
	MIPKEFLJBBP MCIACIGMPLO = 1454; // offset: 152, xor const: 0
	IMHDKNCJLEB PMBONHEKEHI = 1179; // offset: 112, xor const: 0
	repeated uint32 GLFAIDIPKHL = 1719; // offset: 144, xor const: 0
	uint32 NOBBNIHGMAH = 1992; // offset: 268, xor const: 14528
	JIMJJLJGLDL CIEPBBKFDOK = 11; // offset: 88, xor const: 0
	CBLHLEEDDOK LOEFJECIAHE = 5; // offset: 32, xor const: 0
	int64 DEHDJDKCBKG = 8; // offset: 248, xor const: 6410
}

message AIHKJAJGBIK {
	repeated FGKJFCJILIL AEAMBCAGKEC = 3; // offset: 24, xor const: 0
	repeated FGKJFCJILIL PDEJFBLBKPN = 7; // offset: 56, xor const: 0
	FGKJFCJILIL PGBADFMPAPK = 2; // offset: 16, xor const: 0
	repeated string HMHIKBELPIA = 4; // offset: 32, xor const: 0
	bool JGCHIJNOFKC = 6; // offset: 72, xor const: 0
	repeated FGKJFCJILIL AHPEDNEOCKK = 5; // offset: 40, xor const: 0
	repeated FGKJFCJILIL BPINHPPKMIP = 8; // offset: 64, xor const: 0
}

message EOOJIKPFNJL {
}

enum EJODHGBHCKA {
	EJODHGBHCKA_CHANGE_CHARACTER_MODE_BY_AVATAR_ID = 0;
	EJODHGBHCKA_CHANGE_CHARACTER_MODE_BY_POS = 2;
	EJODHGBHCKA_CHANGE_CHARACTER_MODE_BY_RANDOM = 3;
	EJODHGBHCKA_CHANGE_CHARACTER_MODE_BY_ROBOT_ID = 4;
}

message FGCMEPNBOHH {
	int32 JHMFEPPLDOJ = 8; // offset: 24, xor const: 9923
}

enum GGFLPLIJGCD {
	GGFLPLIJGCD_EAHFCNMAENP = 0;
	GGFLPLIJGCD_OAKFFEONPKH = 1;
	GGFLPLIJGCD_ICCKKJHMGEM = 2;
	GGFLPLIJGCD_HKJHNEALFJL = 3;
	GGFLPLIJGCD_LALDNPLHEAE = 4;
	GGFLPLIJGCD_PHAMMDDOLEB = 5;
	GGFLPLIJGCD_MNALADHMPKJ = 6;
}

// CmdId: 1160
message KHGAFNJMEIB {
	uint64 AEDAEPKDOAL = 9; // offset: 56, xor const: 9366
	uint32 KMKPPDICOKA = 13; // offset: 40, xor const: 8035
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 24, xor const: 0
	MLHBLIGCPEE CPEPJEPHPBD = 3; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 15; // offset: 48, xor const: 8097
}

message NBACDAGGAHE {
	string FJGOPGPDIJA = 2; // offset: 24, xor const: 0
	uint32 KINEKLHNPOO = 1; // offset: 44, xor const: 0
	repeated uint32 FMKCNIBMMOB = 4; // offset: 32, xor const: 0
	int32 PFCIOMCFGKL = 3; // offset: 40, xor const: 0
}

// CmdId: 3961
message KKEAGBDBKKL {
	bool LDAJOGGNMOA = 15; // offset: 32, xor const: 0
	NJHCCJPHMCC FPPHBHBOAOP = 11; // offset: 16, xor const: 0
}

message NNNIFCICLAB {
	EAIEOGODGOP IOMNKEHPJOA = 1154; // offset: 24, xor const: 0
}

message NCNHDALOCAL {
	string GOIHDGPFHGA = 1; // offset: 16, xor const: 0
}

message KDLBKCONLNG {
}

message LDAGDEGHMNA {
	repeated uint32 COPEDIDJBJK = 3; // offset: 32, xor const: 0
	repeated uint32 DBCOKAPABIA = 7; // offset: 40, xor const: 0
	repeated KPOIAEDEGHG FAIIOBCADHD = 6; // offset: 24, xor const: 0
	bool MLCAIFBMJNH = 9; // offset: 48, xor const: 0
}

message DPJEPBFIJAO {
	repeated int32 HJAEDABENOJ = 2; // offset: 24, xor const: 0
	string MPHLIEKKFIK = 1; // offset: 16, xor const: 0
}

// CmdId: 3911
message PJKCOPHCCOC {
	repeated FEJNHNCFGCO PDNCKGLOMEL = 4; // offset: 24, xor const: 0
	uint32 EKLGNOIEMLA = 5; // offset: 32, xor const: 1509
}

message JCDEOBCOEBA {
	bool HHEOJJDIBIA = 14; // offset: 33, xor const: 0
	int64 BPCLKADELFF = 5; // offset: 40, xor const: 13058
	uint32 MHIHFGKDOMB = 1; // offset: 28, xor const: 5356
	bool GBKNCJDLDJB = 12; // offset: 32, xor const: 0
	uint32 DFKOCLNFPNN = 10; // offset: 24, xor const: 4728
}

// CmdId: 4868
message DACNAINHADC {
}

message HCOBGHLOJIN {
}

message FBBCPBOCNKC {
	repeated uint32 BCCICJMBIDG = 1; // offset: 24, xor const: 0
}

message AAHLNBJKHGF {
	uint32 MPCJAJNKKDE = 3; // offset: 48, xor const: 0
	uint32 PEOCJCBFHJE = 2; // offset: 52, xor const: 0
	map<string, FGKJFCJILIL> EJKEBPHDJKL = 5; // offset: 24, xor const: 0
	FGKJFCJILIL EBPKOEFDAEB = 1; // offset: 32, xor const: 0
	map<string, string> MJLEJNJHLON = 4; // offset: 16, xor const: 0
}

message PJOFBKFIKIK {
	map<int32, int64> AEKEIGHEPGD = 3; // offset: 16, xor const: 0
}

enum PDJJFEEKMOA {
	PDJJFEEKMOA_DACIPKPABAL = 0;
	PDJJFEEKMOA_JMFEGHBGCEA = 1;
	PDJJFEEKMOA_MNAGOJJLPIH = 2;
	PDJJFEEKMOA_NILFBFCHEHI = 3;
	PDJJFEEKMOA_KFIHMOMFDPE = 4;
	PDJJFEEKMOA_NHLKLACPKMB = 5;
}

enum NFNNEDOGLOF {
	NFNNEDOGLOF_REPAIR_ICON_TYPE_NONE = 0;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_TB = 3;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_RT = 5;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_BR = 6;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_BRT = 7;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_TL = 9;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_LB = 10;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_TLB = 11;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_LR = 12;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_TLR = 13;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_LBR = 14;
	NFNNEDOGLOF_REPAIR_ICON_TYPE_FULL = 15;
}

message KOEADKBOAPP {
	repeated uint32 CBIMBDIAPON = 2; // offset: 24, xor const: 0
}

message NFIKEHAEAAN {
	IOHJLHCJMPD PBOAMDEBIGO = 5; // offset: 28, xor const: 0
	uint32 OPFEAMDPIAG = 7; // offset: 24, xor const: 3221
}

message CKNAOEHOBHH {
	bool JGDKIAKGMJD = 4; // offset: 41, xor const: 0
	bool NKPHGNCDDPF = 3; // offset: 40, xor const: 0
	FGKJFCJILIL BCCEOLDLIFA = 1; // offset: 16, xor const: 0
	FGKJFCJILIL PBOAMDEBIGO = 2; // offset: 24, xor const: 0
}

message GEBNOAMDNOC {
	uint64 PAAMIHBAMIF = 5; // offset: 32, xor const: 3912
	uint64 IMFLEBLMMDB = 7; // offset: 24, xor const: 3913
}

// CmdId: 5254
message ELGAFEBEMGE {
}

// CmdId: 6350
message AGGODLBMHEH {
}

// CmdId: 6707
message MIJNKPLADHM {
}

// CmdId: 9257
message JLKCAIPDAIK {
	bool PJOPGAAHLJE = 5; // offset: 24, xor const: 0
}

message LHDMGLDEGOE {
	int32 NLMHFPBBNNI = 4; // offset: 44, xor const: 0
	int32 PBBDNBIGFMI = 5; // offset: 48, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 2; // offset: 16, xor const: 0
	int32 OOPFKJLAKKJ = 3; // offset: 40, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 32, xor const: 0
}

message MDDIDJCJOKK {
	map<int32, int32> BMENBCEGCEE = 7; // offset: 16, xor const: 0
}

message CBFIOJMGFNP {
	string JMHDDGLGFEA = 2; // offset: 24, xor const: 0
	string JIMPHFMPFBO = 1; // offset: 16, xor const: 0
	string NPIBLGNNMND = 3; // offset: 48, xor const: 0
	repeated int64 FBHKFEENMDD = 4; // offset: 32, xor const: 0
}

message BHKJPOBIOOP {
	int32 BDAGOLKDEAB = 2; // offset: 36, xor const: 0
	int32 IOLBACJHBCG = 3; // offset: 32, xor const: 0
	int32 NMHNBHDEKBP = 1; // offset: 40, xor const: 0
	IFGDJNNPCAN FOCOFNBLDCC = 4; // offset: 24, xor const: 0
}

message OMJAODEMIGP {
	repeated uint32 IEGOOPBGNNN = 10; // offset: 40, xor const: 0
	repeated uint32 MOLJGFPIJEO = 3; // offset: 16, xor const: 0
	repeated uint32 CELCFANKBAD = 9; // offset: 48, xor const: 0
	repeated uint32 ADFHELJBBMP = 15; // offset: 32, xor const: 0
	repeated NHONHCAONJN MAENGMEKKIM = 4; // offset: 64, xor const: 0
	uint64 HPPNIEIKOAC = 1; // offset: 96, xor const: 8403
	repeated uint32 KDNIGKMLKPD = 5; // offset: 80, xor const: 0
	bool HBFIJAOOCDO = 7; // offset: 104, xor const: 0
	repeated uint32 DDBJAHHCGKC = 8; // offset: 24, xor const: 0
	uint32 BFNPIAAJIBP = 13; // offset: 108, xor const: 7619
	uint32 NMKEPDKNGBL = 14; // offset: 92, xor const: 11428
	uint32 CPEGDKBNGDH = 12; // offset: 88, xor const: 6338
	repeated uint32 IHPLIALACAM = 6; // offset: 72, xor const: 0
}

// CmdId: 289
message CMJGDFHLHFM {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 12660
}

// CmdId: 743
message COLLAJOAGPK {
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	HJGMHPAHOMI CPEPJEPHPBD = 2; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 7034
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 15847
	uint64 HEJBMNAOJFL = 6; // offset: 48, xor const: 4939
}

// CmdId: 8419
message NHGPNJFADKC {
	uint32 EOHENAABBLD = 14; // offset: 108, xor const: 4280
	uint32 FABGBAHDDJA = 866; // offset: 84, xor const: 5066
	map<string, int32> BMHPLOOJMDC = 8; // offset: 16, xor const: 0
	map<string, string> AAJGPGJKKOK = 4; // offset: 64, xor const: 0
	map<string, string> LIFKLPHIDFH = 1792; // offset: 24, xor const: 0
	uint32 DCENCIPOBMC = 1; // offset: 104, xor const: 11561
	map<string, int32> ONKEOHNGJBA = 13; // offset: 72, xor const: 0
	ONHNIHHFMIN OJLOLPPLLEO = 10; // offset: 92, xor const: 0
	uint32 AGDDDGNMKPE = 7; // offset: 116, xor const: 15125
	DHHDGKMFLNB OAEJPMIBGDP = 9; // offset: 88, xor const: 0
	uint32 DDHAIAPKEOD = 12; // offset: 96, xor const: 13807
	string OGDINHBBPOA = 15; // offset: 40, xor const: 0
	bytes MOINDNGKHCK = 11; // offset: 56, xor const: 0
	uint32 MJIJGNBMIKH = 5; // offset: 100, xor const: 4919
	repeated string JIPHMHLKKFH = 6; // offset: 32, xor const: 0
	uint32 CDAGGFJILEJ = 3; // offset: 112, xor const: 1282
	uint32 EFNFANEIJMH = 2; // offset: 80, xor const: 9535
}

message PJLAEGMFLNF {
	GBCOFNONGJI NNHPDFGKIGB = 12; // offset: 40, xor const: 0
	KKHLDOCOEIC IMKPPIOIKPB = 2; // offset: 48, xor const: 0
	LBCAMPGCHMD NIHOKMADHDJ = 10; // offset: 56, xor const: 0
	ILEFFNEOPJB IFIOILMDBAO = 5; // offset: 32, xor const: 0
	HCFOBACEHKH DEDIMCANELO = 11; // offset: 16, xor const: 0
}

message IJAPFKJDJHB {
	int32 BDAGOLKDEAB = 2; // offset: 28, xor const: 0
	int32 DGPMEEKBLKG = 1; // offset: 24, xor const: 0
}

// CmdId: 8379
message JDNHNLBKBFH {
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 3559
	uint32 DMIMGNLILLP = 4; // offset: 36, xor const: 9236
	BBKFIMOJLAE GEBOGEADIEE = 12; // offset: 16, xor const: 0
}

enum OKONCHKIDGG {
	OKONCHKIDGG_PREDICATE_TYPE_NONE = 0;
	OKONCHKIDGG_BY_ITEM_ID = 1;
	OKONCHKIDGG_BY_SCENE_PROPERTY = 2;
	OKONCHKIDGG_BY_TAROT_CARD = 3;
	OKONCHKIDGG_BY_HOLLOW_LEVEL = 4;
	OKONCHKIDGG_BY_JUMP = 5;
	OKONCHKIDGG_BY_EMPTY = 6;
	OKONCHKIDGG_BY_ABILITY = 7;
	OKONCHKIDGG_BY_CHOICE_SERVER = 8;
	OKONCHKIDGG_BY_JUMP_SERVER = 9;
	OKONCHKIDGG_BY_RANDOM = 10;
	OKONCHKIDGG_BY_HOLLOW_VARIABLE = 11;
	OKONCHKIDGG_BY_CHARACTER_STATE = 12;
	OKONCHKIDGG_BY_OR = 13;
	OKONCHKIDGG_BY_SPECIALS = 14;
	OKONCHKIDGG_BY_CURSE = 15;
	OKONCHKIDGG_BY_TAROT_CARD_GENRE = 16;
	OKONCHKIDGG_BY_CAN_GET_ITEM = 17;
	OKONCHKIDGG_BY_CHALLENGE = 18;
	OKONCHKIDGG_BY_EVENT_STATE = 19;
	OKONCHKIDGG_BY_DIRECTION = 20;
	OKONCHKIDGG_BY_MAIN_CHARACTER = 21;
	OKONCHKIDGG_BY_NOT = 22;
	OKONCHKIDGG_BY_CHARACTER_TYPE = 23;
	OKONCHKIDGG_BY_AVATAR_ID = 26;
	OKONCHKIDGG_BY_VHS_STORE_MATCH_LEVEL = 27;
	OKONCHKIDGG_BY_VHS_STORE_COMPLETE_HISTORY = 28;
	OKONCHKIDGG_BY_MAIN_CITY_TIME = 29;
	OKONCHKIDGG_BY_MULTIPASS = 30;
	OKONCHKIDGG_BY_NPC_NOT_HAS_QUEST = 31;
	OKONCHKIDGG_BY_COMPARE_PARAM = 32;
	OKONCHKIDGG_BY_PLAYER_LEVEL = 33;
	OKONCHKIDGG_BY_POSITION_IN_RANGE = 34;
	OKONCHKIDGG_BY_HOLLOW_NPC_STATE = 35;
	OKONCHKIDGG_BY_AFK_STATE = 36;
	OKONCHKIDGG_BY_CONTROL_CHARACTER = 37;
	OKONCHKIDGG_BY_PARTNER_TRUST = 38;
	OKONCHKIDGG_BY_PARTNER_TRUST_LEVEL = 39;
	OKONCHKIDGG_BY_HOLLOW_POS_CHANGED_REASON = 40;
	OKONCHKIDGG_BY_INTERACT_VARIABLE = 41;
	OKONCHKIDGG_BY_AND = 42;
	OKONCHKIDGG_BY_DAILY_QUEST_STATE = 43;
	OKONCHKIDGG_BY_GRID_TYPE = 44;
	OKONCHKIDGG_BY_FIRST_MEET = 45;
	OKONCHKIDGG_BY_MAIN_CITY_TIME_PERIOD = 46;
	OKONCHKIDGG_BY_HAVE_RESTED = 47;
	OKONCHKIDGG_BY_ACTIVITY_BUBBLE_STATE = 48;
	OKONCHKIDGG_BY_NEWSSTAND_UPDATE = 49;
	OKONCHKIDGG_BY_GUEST_RECOMMEND_SUCCESS = 50;
	OKONCHKIDGG_BY_VHS_STORE_VHS_ID = 51;
	OKONCHKIDGG_BY_VHS_STORE_TAG_LEVEL = 52;
	OKONCHKIDGG_BY_TRASH_HAVE_NEW = 53;
	OKONCHKIDGG_BY_TRASH_EMPTY = 54;
	OKONCHKIDGG_BY_HOLLOW_NPC_LEADER = 55;
	OKONCHKIDGG_BY_HOLLOW_PROGRESS = 56;
	OKONCHKIDGG_BY_STORY_MODE_ON = 57;
	OKONCHKIDGG_BY_HOLLOW_NPC_UID_EXIST = 58;
	OKONCHKIDGG_BY_COMPARE_QUEST_STATE = 59;
	OKONCHKIDGG_BY_INDEX_IN_BOUND = 60;
	OKONCHKIDGG_BY_COMPARE_QUEST_FINISH_COUNT = 61;
	OKONCHKIDGG_BY_NPC_HP = 62;
	OKONCHKIDGG_BY_PLAY_MINI_GAME = 63;
	OKONCHKIDGG_BY_GRID_FINISH_STATE = 64;
	OKONCHKIDGG_BY_TIME_EVENT = 65;
	OKONCHKIDGG_BY_INTER_KNOT_STATE = 66;
	OKONCHKIDGG_BY_IS_LIGHT_AFFECTED = 67;
	OKONCHKIDGG_BY_LIGHT_TYPE = 68;
	OKONCHKIDGG_BY_PLUGIN_COLLECTION = 69;
	OKONCHKIDGG_BY_OWNED_LIGHT_TYPE = 70;
	OKONCHKIDGG_BY_EXECUTION_TARGET = 71;
	OKONCHKIDGG_BY_REPAIR_ZONE_STATE = 72;
	OKONCHKIDGG_BY_HOLLOW_ENTRANCE = 73;
	OKONCHKIDGG_BY_FIRST_INTERACT = 74;
	OKONCHKIDGG_BY_FLEA_MARKET_STATE = 75;
	OKONCHKIDGG_BY_HOLLOW_DIALOG_STATE = 76;
	OKONCHKIDGG_BY_COMPARE_VEC_2 = 77;
	OKONCHKIDGG_BY_POST_STATE = 78;
	OKONCHKIDGG_BY_TODAY_CLOSED_QUEST = 79;
	OKONCHKIDGG_BY_BUDDY_ID = 80;
	OKONCHKIDGG_BY_ENTITY_CATEGORY = 81;
	OKONCHKIDGG_BY_CHESSBOARD_TAG = 82;
	OKONCHKIDGG_BY_HOLLOW_QUEST_TYPE = 83;
	OKONCHKIDGG_BY_COMPARE_INT_OR = 84;
	OKONCHKIDGG_BY_COMPARE_INT_AND = 85;
	OKONCHKIDGG_BY_ENTITY_TYPE = 86;
	OKONCHKIDGG_BY_ENTITY_HAS_FUNCTION = 87;
	OKONCHKIDGG_BY_SECTION_LAYER_TYPE = 88;
	OKONCHKIDGG_BY_ENTITY_HAS_COMPONENT = 89;
	OKONCHKIDGG_BY_PARTNER_EVENT = 90;
	OKONCHKIDGG_BY_LIFT_STATUS = 91;
	OKONCHKIDGG_BY_RANDOM_PLAY_RECOMMEND_RESULT = 92;
	OKONCHKIDGG_BY_RP_INCREASE_PRICE = 93;
	OKONCHKIDGG_BY_HAVE_CAT_NAME = 94;
	OKONCHKIDGG_BY_SECTION = 95;
	OKONCHKIDGG_BY_CAN_MOD_CAT_NAME = 96;
	OKONCHKIDGG_BY_UNLOCK_TAROT_CARD = 97;
	OKONCHKIDGG_BY_UNLOCK_TAROT_CARD_GENRE = 98;
	OKONCHKIDGG_BY_LIMBO_AVATAR_QUEST_FINISH = 99;
	OKONCHKIDGG_BY_IS_FIRST_TURN = 100;
	OKONCHKIDGG_BY_POP_CHOICE_PARAM = 101;
	OKONCHKIDGG_BY_IS_MULTI_HOLLOW_OUT_FLOOR = 102;
	OKONCHKIDGG_BY_IS_HAVE_RAMEN_BUFF = 103;
	OKONCHKIDGG_BY_IS_QUEST_HISTORY_CLOSED = 104;
	OKONCHKIDGG_BY_IS_RAMEN_EAT_LIMIT_REACHED = 105;
	OKONCHKIDGG_BY_CUSTOM_RET_1 = 106;
	OKONCHKIDGG_BY_CUSTOM_RET_2 = 107;
	OKONCHKIDGG_BY_CUSTOM_RET_3 = 108;
	OKONCHKIDGG_BY_CUSTOM_RET_4 = 109;
	OKONCHKIDGG_BY_CUSTOM_RET_5 = 110;
	OKONCHKIDGG_BY_MAP_SPECIALS = 1000;
}

// CmdId: 3760
message KGJIBGPBJJN {
	OOMPCKNPEDI CPEPJEPHPBD = 6; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 40, xor const: 4582
	uint64 HEJBMNAOJFL = 3; // offset: 48, xor const: 8201
	uint32 KMKPPDICOKA = 2; // offset: 56, xor const: 2707
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
}

message JGKLEOEDGCM {
	DHJOJLIONBI AFLKOOLENPI = 12; // offset: 24, xor const: 0
	ECIAJFMPHHB NKEDDJKGOPI = 1449; // offset: 160, xor const: 0
	BMFILAJPFMC HMINDFFOFKM = 7; // offset: 120, xor const: 0
	NOMLPMJIFAE AOKONHJOHHA = 6; // offset: 168, xor const: 0
	PFEBLIMPHIN MLEDGNLCHEE = 1114; // offset: 104, xor const: 0
	EPIPDNFHHPJ CCNDABPFKKO = 3; // offset: 144, xor const: 0
	LDIEOFMEHIC HPBDGCNAKHJ = 1; // offset: 96, xor const: 0
	DDJGFCHDFJM HADKLCCPNGB = 9; // offset: 72, xor const: 0
	IEIGCNMEEEJ BHLEGPPDKIN = 14; // offset: 128, xor const: 0
	OMJAODEMIGP GEFPNMFEBEN = 4; // offset: 64, xor const: 0
	BPHJHJIJDPC FJHDIMKNMMI = 8; // offset: 16, xor const: 0
	AHPAHENOKIL DCOAOBICDBO = 414; // offset: 112, xor const: 0
	ALNPMNFDNEF BKLKJEDBCAG = 1753; // offset: 80, xor const: 0
	LOIAPKHMHBD IGJANFBEHNB = 11; // offset: 136, xor const: 0
	LFKBMDBHEJP NFCDBLIKAJE = 15; // offset: 48, xor const: 0
	GKKDGIAJBAL BPPMHINOJGN = 148; // offset: 152, xor const: 0
	LBLOINFEDGK CICFDOEAHPJ = 2; // offset: 88, xor const: 0
	GAKADGOEGHE LIEAELGPOPF = 5; // offset: 40, xor const: 0
	BDGBEIMKJPI APMEEIFACBP = 13; // offset: 56, xor const: 0
}

// CmdId: 8758
message GDLFGLALNCE {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 6893
}

// CmdId: 8019
message FODOFIAIMAI {
	KNDEEEODDAE CPEPJEPHPBD = 11; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 13; // offset: 40, xor const: 1968
	uint32 KMKPPDICOKA = 14; // offset: 48, xor const: 10062
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 8762
}

// CmdId: 3492
message OPIMHBHFIIO {
}

// CmdId: 4042
message DNNENPDOCCH {
	uint32 OMGOMPKNPGM = 12; // offset: 32, xor const: 6138
	bool JMLECJIFDHP = 4; // offset: 24, xor const: 0
	uint32 BBPJKDPGIPG = 14; // offset: 28, xor const: 11966
}

message MGKKKHEHEIK {
	MILONCGNDLG FMKEDPLBDOJ = 3; // offset: 24, xor const: 0
}

message FEJNHNCFGCO {
	uint32 IFAINEOAGEM = 2; // offset: 28, xor const: 0
	JNHIKOEOOBD PKPOEKNLJKC = 1; // offset: 24, xor const: 0
}

// CmdId: 7289
message PNHPPCMMIBN {
	uint32 KMKPPDICOKA = 1; // offset: 40, xor const: 11130
	uint64 AEDAEPKDOAL = 15; // offset: 48, xor const: 7103
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
	AOHPJMGPICM CPEPJEPHPBD = 8; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 2; // offset: 56, xor const: 12575
}

// CmdId: 676
message HAGFJLELMLO {
	DBNNNNHLAEF LMKFMFLJNJM = 2; // offset: 24, xor const: 0
}

// CmdId: 1022
message MHEALFEPDBB {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 11967
}

// CmdId: 8565
message OMLIMOIFOHC {
	uint32 BCCEOLDLIFA = 8; // offset: 24, xor const: 6590
}

message LKGLAMDOIHI {
	uint32 CKADMGLIGFA = 13; // offset: 24, xor const: 7211
}

message NNGOPDLMEIP {
}

enum EKIKCNIJLBB {
	EKIKCNIJLBB_LDGMJOOJMCB = 0;
	EKIKCNIJLBB_LCGNFKGCFJB = 1;
	EKIKCNIJLBB_DFLCJPNBJOI = 2;
	EKIKCNIJLBB_POFIJELNCAG = 3;
}

// CmdId: 6822
message AJBAFPDCHCE {
	uint32 OPFEAMDPIAG = 8; // offset: 24, xor const: 8858
}

message IFNBJNMJGAO {
}

message PHEKIFPFHMI {
}

// CmdId: 7890
message FBMLEKANEAO {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 15111
}

// CmdId: 4431
message BKKIDHKMDEJ {
	uint32 CKCLOFPICJP = 4; // offset: 32, xor const: 1058
	repeated uint32 KPOFFBOODOC = 7; // offset: 16, xor const: 0
}

message CEIFHIKPEDF {
	uint32 EFNFANEIJMH = 13; // offset: 32, xor const: 8846
	KKHPKIGGGAL CKBOJACIJDI = 12; // offset: 24, xor const: 0
	uint32 LHDHLCKNFIG = 4; // offset: 36, xor const: 11121
}

message HLOOHFAAEKK {
	uint32 PLEDFAAEGBK = 1; // offset: 32, xor const: 0
	repeated KNKAAMAPEIH GBBOICDJGAA = 3; // offset: 24, xor const: 0
	uint32 EFKFHDPCMJB = 2; // offset: 36, xor const: 0
}

message HOIBDBDOFFE {
	repeated uint32 JKHCMCDKJEG = 1; // offset: 24, xor const: 0
	int32 FDJPHMHHDIN = 3; // offset: 40, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 2; // offset: 36, xor const: 0
	int32 MNDILCIIICE = 4; // offset: 32, xor const: 0
}

// CmdId: 9653
message JGKGIJGNJCC {
	JAMIPMDCAJB ACOBONELBKA = 3; // offset: 16, xor const: 0
}

message NEICNIAKAOF {
	uint32 KBLKLBACIOO = 1; // offset: 24, xor const: 0
	uint32 DCIGFJKJBKL = 3; // offset: 32, xor const: 0
	uint32 OPFEAMDPIAG = 2; // offset: 28, xor const: 0
}

message FIIFMENIPKP {
	FGKJFCJILIL PKPOEKNLJKC = 5; // offset: 48, xor const: 0
	string EFCFBIFDBJF = 8; // offset: 16, xor const: 0
	string PBOAMDEBIGO = 7; // offset: 56, xor const: 0
	string PGOGJAAPNFC = 9; // offset: 32, xor const: 0
	string AMIJIAHGPMC = 6; // offset: 24, xor const: 0
}

// CmdId: 5650
message GBEEEAIJFEN {
	repeated DHDBEIFENAJ BHEBCGEEMCB = 1; // offset: 16, xor const: 0
}

enum LMIAEPPKJKG {
	LMIAEPPKJKG_FPNGGLHMNCE = 0;
	LMIAEPPKJKG_CPHAGNENAPA = 1;
}

message EDBDGDJAOGE {
	repeated HEEKPCLIGPI KGEMIBOCHGI = 9; // offset: 48, xor const: 0
	uint32 CKCLOFPICJP = 7; // offset: 60, xor const: 4586
	repeated uint32 IIGAFGGCONN = 14; // offset: 16, xor const: 0
	uint32 HKMIKAEFOBA = 6; // offset: 64, xor const: 13461
	NLIKKNNCBCK MALDIJFANDM = 10; // offset: 32, xor const: 0
	repeated uint32 BDINFKPAFNE = 15; // offset: 40, xor const: 0
	uint32 JLAGPJNHNGG = 1; // offset: 72, xor const: 7133
	uint32 IPJGGIAHGGE = 13; // offset: 56, xor const: 5944
	uint32 CNNGIJJBJLG = 2; // offset: 68, xor const: 11548
}

// CmdId: 3728
message NCOKEKLNCFJ {
}

// CmdId: 2097
message LNCJIOLHMDM {
	HBFBNKAODPJ NCAGHHFDAOG = 9; // offset: 16, xor const: 0
	int32 APOLHOEEIFD = 1; // offset: 32, xor const: 5629
}

message HEIFJNGLDEJ {
	FGKJFCJILIL BPELJHPDEBO = 2; // offset: 24, xor const: 0
	FGKJFCJILIL IOEFEPHHDEI = 1; // offset: 32, xor const: 0
	FGKJFCJILIL EFNFANEIJMH = 3; // offset: 16, xor const: 0
}

// CmdId: 2750
message JOHBACOHLBP {
	repeated IMJOMAPGGCB NNPHGPLGKBI = 13; // offset: 16, xor const: 0
	repeated EKNBFJLMCBA IHPGPAEANJL = 9; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 40, xor const: 3039
}

// CmdId: 9865
message NMLBKLCLEGA {
	uint64 HEJBMNAOJFL = 11; // offset: 40, xor const: 13700
	uint32 KMKPPDICOKA = 6; // offset: 56, xor const: 12390
	uint64 AEDAEPKDOAL = 9; // offset: 48, xor const: 11180
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 24, xor const: 0
	CKBEKELLHKN CPEPJEPHPBD = 2; // offset: 32, xor const: 0
}

// CmdId: 4182
message FDEAEPFKDEP {
}

message IFAOCHMMCOO {
	FDNCLONHJLL HLEAEPDDBLE = 1; // offset: 32, xor const: 0
	LDHKJGEMKIO BBLCHBANJID = 2; // offset: 24, xor const: 0
}

// CmdId: 9706
message AOAIPNFAJBA {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 9781
}

message AOKBMGJCGCE {
	uint32 GCGPNHPGPLH = 15; // offset: 28, xor const: 3502
	uint32 CPEGDKBNGDH = 10; // offset: 24, xor const: 7528
}

message FDDNGHKJDJA {
	bool PCGFEFAEPCK = 812; // offset: 252, xor const: 0
	repeated int32 ILLMKMOIJHB = 1747; // offset: 96, xor const: 0
	repeated uint32 HINPCNKJGAA = 1586; // offset: 184, xor const: 0
	repeated int32 MFCDIEAHPJM = 432; // offset: 144, xor const: 0
	string HILFDGCAAGK = 917; // offset: 120, xor const: 0
	repeated string FAJLMBGMMEA = 110; // offset: 40, xor const: 0
	uint32 AFJOGKIENOC = 1813; // offset: 260, xor const: 11510
	uint32 MPEHHLEOPAP = 14; // offset: 256, xor const: 8592
	repeated uint32 IKKCICIHKIH = 1920; // offset: 176, xor const: 0
	bool OLJBKKBDAJJ = 1893; // offset: 253, xor const: 0
	uint32 DLMLGALCIBC = 1166; // offset: 212, xor const: 12514
	repeated int32 HDNPMDHHAOH = 94; // offset: 72, xor const: 0
	uint32 EKKEDIGJJDF = 3; // offset: 240, xor const: 14096
	repeated uint32 PJKOLPPLOLB = 1172; // offset: 128, xor const: 0
	repeated HFFBPENOCGG KIOFHPMJAIO = 1005; // offset: 24, xor const: 0
	map<string, int32> HGJDNEFOIMG = 7; // offset: 160, xor const: 0
	bool DICGABOENEB = 939; // offset: 254, xor const: 0
	uint32 HGGEMOLGKAC = 10; // offset: 216, xor const: 12879
	repeated FMHFMIJBIME BFKDJMOAKFK = 1899; // offset: 136, xor const: 0
	repeated int32 FNEMBOOACFL = 1025; // offset: 112, xor const: 0
	uint32 CPPIIEANBFE = 5; // offset: 224, xor const: 3604
	uint32 AEIOGIJPKDA = 8; // offset: 244, xor const: 6032
	uint32 NAHIEHJOLIK = 360; // offset: 248, xor const: 4598
	map<int32, int32> JIMOHCAHMJI = 2; // offset: 80, xor const: 0
	repeated HONCMAFOEHG DMPGCFCNHHC = 1179; // offset: 88, xor const: 0
	AHDLPDHEMHM FBCILPDHFLL = 4; // offset: 152, xor const: 0
	map<uint32, uint32> FGHCBNLBKIL = 17; // offset: 32, xor const: 0
	uint32 EFINMGELGGO = 13; // offset: 228, xor const: 10421
	KKHPKIGGGAL CKBOJACIJDI = 15; // offset: 168, xor const: 0
	repeated IBEMPFGCLKL OPJBPHHHHKL = 1; // offset: 192, xor const: 0
	uint32 CIHANDNPAMA = 1615; // offset: 232, xor const: 7441
	uint32 MAHEIHMMJEA = 9; // offset: 208, xor const: 3605
	repeated AHDLPDHEMHM NGECCIMHKBP = 6; // offset: 16, xor const: 0
	AHDLPDHEMHM CEIHLKCPIOF = 12; // offset: 56, xor const: 0
	repeated string ONANGIHNEGN = 665; // offset: 104, xor const: 0
	uint32 FGIEGOLKIEC = 543; // offset: 200, xor const: 12166
	uint32 DAJDGBNANPA = 1307; // offset: 236, xor const: 8665
	uint32 LBMFDPOMACM = 500; // offset: 220, xor const: 9078
	repeated GNDMFNDCNDK FKNHJKPOGGO = 321; // offset: 48, xor const: 0
	uint32 EFNFANEIJMH = 11; // offset: 204, xor const: 11651
}

message POGCILDLNBH {
	bool GIBMBJFPPBE = 4; // offset: 52, xor const: 0
	int64 LBOCMFOOMGB = 3; // offset: 40, xor const: 0
	uint32 OPFEAMDPIAG = 1; // offset: 48, xor const: 0
	uint64 NKMCMFDPEDP = 5; // offset: 32, xor const: 0
	uint32 DCIGFJKJBKL = 2; // offset: 24, xor const: 0
}

// CmdId: 4533
message GDCAFOBBDOA {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 2069
}

// CmdId: 7991
message BLBOMONJCBE {
	DDGENGBPHMK PCMCIIBCGAB = 10; // offset: 16, xor const: 0
	NJNHCOMGCNO PFGJCEJCDKC = 9; // offset: 24, xor const: 0
}

message FGKDHMPBHCB {
	float EFJPPJJFNJM = 15; // offset: 28, xor const: 0
	float AEIHIBLACCM = 11; // offset: 24, xor const: 0
}

// CmdId: 9229
message CGHPKIKILDH {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 6022
}

message LBLOINFEDGK {
	int32 EELDLMADHPK = 13; // offset: 24, xor const: 1567
}

message LAFOEEKAAAC {
	repeated uint32 GHDFNHICMJJ = 12; // offset: 24, xor const: 0
	int32 ODIEODCGOGA = 6; // offset: 92, xor const: 12103
	bool MIGIFNKNJGM = 1; // offset: 72, xor const: 0
	int64 DEHDJDKCBKG = 13; // offset: 80, xor const: 4157
	repeated uint32 APKKBCHHMGA = 10; // offset: 16, xor const: 0
	NELNFEENILC PKEGMHFMOII = 14; // offset: 32, xor const: 0
	uint32 EKLGNOIEMLA = 4; // offset: 56, xor const: 6094
	uint32 NIPFFIMIMCM = 7; // offset: 88, xor const: 4088
	int32 LKHEIPHOLFD = 5; // offset: 64, xor const: 469
	uint32 CNCBKJIMDKK = 2; // offset: 68, xor const: 5039
	int32 GPJMFJPEPKD = 3; // offset: 60, xor const: 505
	NELNFEENILC FJODEBCOKKJ = 15; // offset: 40, xor const: 0
}

message BGFICLDCMBP {
	repeated uint32 KCBKPGKFHJD = 11; // offset: 16, xor const: 0
}

message HNEDNEHECJP {
	repeated GGOEPICFDKA BJAMKJEFMOA = 10; // offset: 16, xor const: 0
}

// CmdId: 499
message FIIIFKBGMCN {
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 9761
	NHEGLHDLJJG GPBLFGHGEAL = 14; // offset: 24, xor const: 0
}

// CmdId: 2783
message GEOHKNBJEOO {
}

message GMKOJEJGALB {
	HNMHLFMJFHI LEMMGCEJFGB = 14; // offset: 16, xor const: 0
}

// CmdId: 5273
message OMOHBJAEELI {
	uint64 DIMEDPILOOA = 11; // offset: 24, xor const: 5532
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 3502
}

message ECIKMKPFOIA {
	bool PBIOOKKGJDH = 4; // offset: 40, xor const: 0
	repeated int32 AILIOJLEMPO = 3; // offset: 16, xor const: 0
	JCLGCIMJDEA MLOCGOPJHKA = 1; // offset: 36, xor const: 0
	bool OGDBOKGCNDF = 5; // offset: 41, xor const: 0
	int32 PCLCJMELELL = 2; // offset: 32, xor const: 0
}

// CmdId: 3771
message BJJOBNMOAHK {
	uint32 EKLGNOIEMLA = 6; // offset: 32, xor const: 10742
	repeated AGEPCHBGANA AJBPIPJILNA = 15; // offset: 24, xor const: 0
}

message LOGKICPODEC {
	string NBNAHKFOJNA = 6; // offset: 56, xor const: 0
	int32 LCFCEPOOKOB = 13; // offset: 92, xor const: 0
	bool DBKHGPGOGBD = 17; // offset: 98, xor const: 0
	string DPPMGLAEDKD = 8; // offset: 72, xor const: 0
	int32 EICHPLAMIJE = 4; // offset: 120, xor const: 0
	string OLANPFHKOCI = 9; // offset: 24, xor const: 0
	int32 AOMGCDOFEGA = 3; // offset: 112, xor const: 0
	string JFNDGCBCDJF = 5; // offset: 80, xor const: 0
	uint32 IIIGDHJPFMI = 12; // offset: 88, xor const: 0
	string DMICGIPOOGF = 1; // offset: 48, xor const: 0
	string CFDADOHPPNI = 2; // offset: 32, xor const: 0
	bool PLPGGKDANFH = 14; // offset: 97, xor const: 0
	string MOPPGEFNOGO = 7; // offset: 64, xor const: 0
	string HOAJKFKJDFD = 16; // offset: 40, xor const: 0
	uint32 CBELLMGEFDA = 18; // offset: 104, xor const: 0
	OOLEHBAIOKG CPDBDPHJLOL = 10; // offset: 100, xor const: 0
	OILNIEEMEDL MEFEEKFCNLP = 11; // offset: 116, xor const: 0
	bool BPKJPOLAIKA = 19; // offset: 96, xor const: 0
	int32 LDBINENNNAF = 15; // offset: 108, xor const: 0
}

message FFCFDLBKGAN {
}

enum DirectType {
	DIRECT_TYPE_DIRECT_TYPE_NONE = 0;
	DIRECT_TYPE_DIRECT_UP = 1;
	DIRECT_TYPE_DIRECT_DOWN = 2;
	DIRECT_TYPE_CHANGE_GRID = 3;
	DIRECT_TYPE_SWITCH_CHESS_UP = 4;
	DIRECT_TYPE_SWITCH_CHESS_DOWN = 5;
	DIRECT_TYPE_BIG_TV_ENTER = 6;
	DIRECT_TYPE_BIG_TV_EXIT = 7;
	DIRECT_TYPE_RESET_GRID = 8;
	DIRECT_TYPE_REPAIR = 9;
	DIRECT_TYPE_TIME_REWIND_ENTER = 10;
	DIRECT_TYPE_TIME_REWIND_EXIT = 11;
	DIRECT_TYPE_TIME_SEGMENT_ENTER = 12;
	DIRECT_TYPE_REPAIR_EXIT = 13;
}

enum LAMNOAJHOLI {
	LAMNOAJHOLI_JAFDFLABPFC = 0;
	LAMNOAJHOLI_CFIEECJEHOM = 1;
	LAMNOAJHOLI_AGDGAKCIMGE = 2;
	LAMNOAJHOLI_PEJDFFPFOCK = 3;
	LAMNOAJHOLI_CMAHKGFDHJM = 4;
}

enum OFJJMLKFPNH {
	OFJJMLKFPNH_CHESSBOARD_PERFORM_MODE_NONE = 0;
	OFJJMLKFPNH_CHESSBOARD_PERFORM_MODE_OPEN = 1;
	OFJJMLKFPNH_CHESSBOARD_PERFORM_MODE_CLOSE = 2;
	OFJJMLKFPNH_CHESSBOARD_PERFORM_MODE_BLOCK = 3;
	OFJJMLKFPNH_CHESSBOARD_PERFORM_MODE_UNBLOCK = 4;
}

message CIANPIDLILL {
	repeated PKOICIFKDLF NFGGNHFAPEP = 2; // offset: 24, xor const: 0
	uint32 FOGIGMHBMMI = 7; // offset: 40, xor const: 11536
	repeated uint32 KDMLEOEMNGG = 10; // offset: 32, xor const: 0
}

message FLEFOKKNIKI {
	map<uint32, GHKKMHDNEJA> BIJMIOMKDAP = 11; // offset: 80, xor const: 0
	FAJMGACKNNH AMJNKNMBLGN = 209; // offset: 56, xor const: 0
	FMCJHDKCJGF CEGLDJFHFPD = 1075; // offset: 48, xor const: 0
	int32 IAMDKHCKLNM = 4; // offset: 112, xor const: 10287
	uint32 LKNKAHLGGGM = 15; // offset: 108, xor const: 10411
	MFFAFLJJHBP FFHLFMCMBOP = 6; // offset: 32, xor const: 0
	map<int32, int32> GJBIEDPMGFD = 7; // offset: 40, xor const: 0
	bool JJBJAHJDNEI = 13; // offset: 118, xor const: 0
	FGHICGPHKJA MDOMKGALJHK = 8; // offset: 24, xor const: 0
	PFLDHLPDKLE CHPOCCOBICJ = 3; // offset: 16, xor const: 0
	bool LLLGLALICOG = 681; // offset: 117, xor const: 0
	HKFNGOHGADC JNDMHKEJGKB = 10; // offset: 104, xor const: 0
	string JGLPEFFEGHC = 1; // offset: 64, xor const: 0
	uint32 EJJCNJFHHEC = 12; // offset: 100, xor const: 6213
	uint32 BOAGCIGKGEJ = 1602; // offset: 96, xor const: 14408
	string JPCBCBKPEPK = 2; // offset: 88, xor const: 0
	bool NEJIKGJGEFM = 266; // offset: 116, xor const: 0
}

message JLLPDMNBNHN {
	repeated uint32 JBBOFHEAOIB = 14; // offset: 24, xor const: 0
}

message COBDOGEIDAB {
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 24, xor const: 0
}

// CmdId: 3308
message FCCJHEOHKGL {
	repeated uint32 ONKIDHEMGMO = 6; // offset: 24, xor const: 0
}

message FMDJEDMELKA {
	FGKJFCJILIL PDEJFBLBKPN = 6; // offset: 32, xor const: 0
	repeated FGKJFCJILIL NPEFFKFJFCP = 3; // offset: 40, xor const: 0
	repeated FGKJFCJILIL HNLFIOJCAFE = 5; // offset: 24, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 4; // offset: 56, xor const: 0
}

// CmdId: 1616
message AKLFFBFHDEG {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 13229
}

message BEELFEPMMIP {
	uint32 DDMIIIEJHPE = 1; // offset: 24, xor const: 0
	bool AKIHFBEENOK = 2; // offset: 28, xor const: 0
	bool OKNLMMNCPOC = 3; // offset: 29, xor const: 0
}

// CmdId: 4459
message PHBOFNHHIKC {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 10257
}

// CmdId: 8028
message PJEPEEFDNEK {
	DLCEMKGCCCA EILDHJJLINK = 3; // offset: 16, xor const: 0
}

message JKHFCKMAFPA {
	int32 JBDCBJIEKFM = 1; // offset: 24, xor const: 11915
	int32 MJGBIHKNKAH = 9; // offset: 28, xor const: 4039
}

enum IMHMHBLEKDN {
	IMHMHBLEKDN_MONSTER_TYPE_TAG_DEFAULT = 0;
	IMHMHBLEKDN_MONSTER_TYPE_TAG_ETHER = 1;
	IMHMHBLEKDN_MONSTER_TYPE_TAG_CORRUPTED = 2;
	IMHMHBLEKDN_MONSTER_TYPE_TAG_NEPS = 3;
	IMHMHBLEKDN_MONSTER_TYPE_TAG_THUG = 4;
	IMHMHBLEKDN_MONSTER_TYPE_TAG_ARMY = 5;
	IMHMHBLEKDN_MONSTER_TYPE_TAG_ENERGY = 6;
}

message AHDLPDHEMHM {
	uint32 EKLGNOIEMLA = 12; // offset: 24, xor const: 7265
	uint32 GNJOJFFOCBF = 11; // offset: 32, xor const: 394
	uint32 DKBHKBKMMGF = 7; // offset: 28, xor const: 15958
	uint32 AEJJPFOLCNF = 4; // offset: 36, xor const: 11728
}

// CmdId: 9808
message MAFHMKJKGIC {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 3383
}

message GAHCIEKLJOH {
	bytes FHCFMPCNFAO = 9; // offset: 16, xor const: 0
	uint64 EPCDFFDPNJG = 8; // offset: 32, xor const: 8943
}

enum MOCCHCKNHOD {
	MOCCHCKNHOD_JKFHELBCEGH = 0;
	MOCCHCKNHOD_LOCMJBHBKLB = 1;
	MOCCHCKNHOD_OANDLDJIJDC = 2;
	MOCCHCKNHOD_PCBMBBFDANE = 3;
	MOCCHCKNHOD_EMAGIACMDKD = 4;
	MOCCHCKNHOD_OHJKIMELGGM = 5;
	MOCCHCKNHOD_ELHLIGMHHMH = 6;
	MOCCHCKNHOD_MHCHAFBPFBD = 7;
	MOCCHCKNHOD_EDHGFJLDFNH = 8;
	MOCCHCKNHOD_FFGFBPDCJGE = 9;
	MOCCHCKNHOD_FAKLJLAAFFI = 10;
	MOCCHCKNHOD_DCGENCFJOCP = 11;
	MOCCHCKNHOD_AILMEFONFNJ = 12;
	MOCCHCKNHOD_HGGEPGBCPEI = 13;
	MOCCHCKNHOD_GDDFAKOEEGL = 14;
	MOCCHCKNHOD_GDCOIFHFDKN = 15;
	MOCCHCKNHOD_KOGIEHKFJGN = 16;
	MOCCHCKNHOD_ACMDGKPBBNM = 17;
	MOCCHCKNHOD_KDNMMNDICME = 18;
	MOCCHCKNHOD_CHHLJJNPAPO = 19;
	MOCCHCKNHOD_HDLOOJBKKIO = 20;
	MOCCHCKNHOD_EJKOCDIIFAI = 21;
	MOCCHCKNHOD_BEEPANELNIG = 22;
	MOCCHCKNHOD_DFDGDIGMGLF = 23;
	MOCCHCKNHOD_MNFEIBCFNEC = 24;
	MOCCHCKNHOD_EHGMPEBPLEL = 25;
	MOCCHCKNHOD_LCKCLHGMOFE = 26;
	MOCCHCKNHOD_DMGMDDHAGHN = 27;
	MOCCHCKNHOD_FOGBBEAGKOB = 28;
	MOCCHCKNHOD_HAAJGLMGPHO = 29;
	MOCCHCKNHOD_KGLAJMOPKNC = 30;
	MOCCHCKNHOD_OMNJHPFPKNB = 31;
	MOCCHCKNHOD_MAIDJNPPAIM = 32;
	MOCCHCKNHOD_PJKOOCAKBNA = 33;
	MOCCHCKNHOD_MKICCMCODIN = 34;
	MOCCHCKNHOD_IMFFHIOMAEI = 35;
	MOCCHCKNHOD_BGPJGGGMACP = 36;
	MOCCHCKNHOD_APJHFPEACPI = 37;
	MOCCHCKNHOD_NNPKDHEAFHM = 38;
	MOCCHCKNHOD_MEGMIAOMOFB = 39;
	MOCCHCKNHOD_FAGHMGMEJMB = 40;
	MOCCHCKNHOD_HMAOHCMJLLO = 41;
	MOCCHCKNHOD_DAIJMIGPOGM = 42;
	MOCCHCKNHOD_CGAAODOCFMD = 43;
	MOCCHCKNHOD_PJMINGEHCAD = 44;
	MOCCHCKNHOD_NDNGDAINPPF = 45;
	MOCCHCKNHOD_CJMMHDAEIMC = 46;
	MOCCHCKNHOD_GPNPPGNLIFF = 47;
	MOCCHCKNHOD_FMAFPCMOEHM = 48;
	MOCCHCKNHOD_BPEIBFFJPIB = 49;
	MOCCHCKNHOD_EJKPGFGALHC = 50;
	MOCCHCKNHOD_FDAONAAPMDD = 51;
	MOCCHCKNHOD_ACOFFABBFFG = 52;
	MOCCHCKNHOD_KNJKDOGJDFN = 53;
	MOCCHCKNHOD_LOEJAOMLHMG = 54;
	MOCCHCKNHOD_LOMLBNHAGBD = 55;
	MOCCHCKNHOD_PLDJKIDPNLJ = 56;
	MOCCHCKNHOD_GDBDDCGLMAN = 57;
	MOCCHCKNHOD_JBINFBEBMKG = 58;
	MOCCHCKNHOD_OLKEKDEAOHH = 59;
	MOCCHCKNHOD_LPIFPOCGDCH = 60;
	MOCCHCKNHOD_IPPGDKJIDNF = 61;
	MOCCHCKNHOD_GNDAIJJPGMF = 62;
	MOCCHCKNHOD_ALDHPDNDION = 63;
	MOCCHCKNHOD_ABINLIOPJGF = 64;
	MOCCHCKNHOD_NNOPJCIOODF = 65;
	MOCCHCKNHOD_FFAKJIPAHIH = 66;
	MOCCHCKNHOD_HCDJHINCJLG = 67;
	MOCCHCKNHOD_PHPPJCKAKBM = 68;
	MOCCHCKNHOD_LFOMECMINMD = 69;
	MOCCHCKNHOD_CKFOMKNADFA = 70;
	MOCCHCKNHOD_DBPOLLEEJDG = 71;
	MOCCHCKNHOD_ELMLPKMCBPE = 72;
	MOCCHCKNHOD_FGFDPILCBAL = 73;
	MOCCHCKNHOD_DCFMGPINEPI = 74;
	MOCCHCKNHOD_GJFBGBDBBFA = 75;
	MOCCHCKNHOD_AGBLLKDDFAD = 76;
	MOCCHCKNHOD_BIOECOPJEFM = 77;
	MOCCHCKNHOD_JDOGGMOKCCG = 78;
	MOCCHCKNHOD_BDCBAPCEMOK = 79;
	MOCCHCKNHOD_BJPPOJDFEAH = 80;
	MOCCHCKNHOD_DKDPCHJEJFM = 81;
	MOCCHCKNHOD_PPMMLAIIFDC = 82;
	MOCCHCKNHOD_KKFEKEEDIPM = 83;
	MOCCHCKNHOD_FEDFGKMLABG = 84;
	MOCCHCKNHOD_CEBBBHIFNMC = 85;
	MOCCHCKNHOD_GABGNGGNFAI = 86;
	MOCCHCKNHOD_HMJEEIPGOIA = 87;
	MOCCHCKNHOD_HGJEOACAIBB = 88;
	MOCCHCKNHOD_PLFPMJAEOCI = 89;
	MOCCHCKNHOD_EDEFBMPFNKE = 90;
	MOCCHCKNHOD_MENPKKCOPNO = 91;
	MOCCHCKNHOD_HCNFAGPOCGN = 92;
	MOCCHCKNHOD_KHJLIFLJKMF = 93;
	MOCCHCKNHOD_DACIDGOIGJD = 94;
	MOCCHCKNHOD_PHHFNDNBKIP = 95;
	MOCCHCKNHOD_OIDGFIJPBPK = 96;
	MOCCHCKNHOD_FINCGFMFIPJ = 97;
	MOCCHCKNHOD_ENOEOJNPHOL = 98;
	MOCCHCKNHOD_CGDHPPIAHNO = 99;
	MOCCHCKNHOD_JMKBMNJGCPO = 100;
	MOCCHCKNHOD_BEBHAAANOBO = 101;
	MOCCHCKNHOD_KNGBEOFJGKN = 102;
	MOCCHCKNHOD_ILDEKJMMOLA = 103;
	MOCCHCKNHOD_KBCODFMGHKO = 104;
	MOCCHCKNHOD_MOEBFJMODDJ = 105;
	MOCCHCKNHOD_CPIEHKAALLN = 106;
	MOCCHCKNHOD_JKPHBGHPJPN = 107;
}

message CEEIHDINFLC {
	bool PPKOKAKLAIN = 7; // offset: 24, xor const: 0
}

enum GDNGJAOLEPK {
	GDNGJAOLEPK_GJJCIIANPAI = 0;
	GDNGJAOLEPK_LKLPBOJJIHI = 1;
	GDNGJAOLEPK_NJACEOCGHFE = 2;
}

// CmdId: 2429
message EHIGDCIBHJJ {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 11284
}

// CmdId: 4189
message DJDBFBHGALG {
	repeated uint32 DECKKAKKNCB = 14; // offset: 16, xor const: 0
	uint32 BCCEOLDLIFA = 1; // offset: 52, xor const: 5503
	repeated uint32 CLMOJILIKLH = 11; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 40, xor const: 686
	uint32 IOOJIMNOEKF = 5; // offset: 44, xor const: 5823
	uint32 MHINMINPONI = 8; // offset: 48, xor const: 6967
	uint32 NNCOLAHBBEJ = 13; // offset: 56, xor const: 6171
}

message FKPEGLLDDFF {
	repeated MJFOCMMNNML PHGJIPKOBLO = 12; // offset: 24, xor const: 0
}

// CmdId: 2261
message AIHMIJMDLIM {
}

enum LICJGHJCLJC {
	LICJGHJCLJC_HLCJFGMBMKH = 0;
	LICJGHJCLJC_KEGIBOLCJAA = 1;
	LICJGHJCLJC_CEBLKECOILL = 2;
}

message FIEKHMIAJCO {
	int32 LGLOBCEMLCM = 8; // offset: 48, xor const: 10253
	IFGDJNNPCAN FOCOFNBLDCC = 3; // offset: 16, xor const: 0
	IFGDJNNPCAN CKBOJACIJDI = 1; // offset: 32, xor const: 0
	uint32 AAFMNDENHLA = 6; // offset: 44, xor const: 10448
	int32 LINDFBJIGNK = 15; // offset: 40, xor const: 12015
}

// CmdId: 949
message KDGIDOBPEFG {
	uint32 LGNMJDDJCDC = 6; // offset: 28, xor const: 6394
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 1448
}

// CmdId: 3457
message BIOCFLEIKBD {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 13547
}

enum MBGCDIHFOLG {
	MBGCDIHFOLG_LNGFMHILMDJ = 0;
	MBGCDIHFOLG_DFBEJEKMCIL = 1;
	MBGCDIHFOLG_EPALBPFMCFB = 2;
	MBGCDIHFOLG_DKOFHLKCHGE = 3;
	MBGCDIHFOLG_FIFBMNBJGLE = 4;
}

// CmdId: 3305
message PBCEGGCKDBH {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 5579
}

enum KICMNIHEDPB {
	KICMNIHEDPB_BEMPIBCOIGL = 0;
	KICMNIHEDPB_GGKCKJLIEPK = 1;
}

message NPCEFPFKCOJ {
	bool JICDCEDMFEI = 4; // offset: 42, xor const: 0
	bool KEBJKBBDCHF = 6; // offset: 41, xor const: 0
	NJEINKKOPGJ JBDCBJIEKFM = 2; // offset: 44, xor const: 0
	bool ENENONKFKOB = 3; // offset: 40, xor const: 0
	FGKJFCJILIL FNNGEDGDEPE = 1; // offset: 16, xor const: 0
	FGKJFCJILIL EIAIDCKMAJJ = 5; // offset: 24, xor const: 0
}

// CmdId: 7365
message HJJLONCNALN {
	repeated LAEMBIKJBPG GGMHCEMGEEM = 2; // offset: 24, xor const: 0
	repeated BIBEJCCLOBH IDDHDNPMGKL = 6; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 68, xor const: 5201
	repeated uint32 JNBGDLAPNOC = 11; // offset: 40, xor const: 0
	repeated uint32 OJJKKCOKOFG = 7; // offset: 56, xor const: 0
	repeated NEDCGJKAFDD HEGDPBJFDIF = 12; // offset: 48, xor const: 0
	uint32 PKLDEGFMGLB = 1; // offset: 64, xor const: 8018
}

message NPJCILPDNBL {
	LDHKJGEMKIO OCAOFHJGJPC = 1; // offset: 24, xor const: 0
	repeated int32 BCHMFALGALA = 3; // offset: 56, xor const: 0
	int32 CNMBFFPIHAO = 8; // offset: 64, xor const: 0
	int32 MCINJMKPHIO = 7; // offset: 76, xor const: 0
	BDEANJLNPKC DDMIPKHLKDL = 9; // offset: 68, xor const: 0
	repeated int32 LMOLLBOEGEH = 4; // offset: 16, xor const: 0
	repeated int32 GECCHBHNBJB = 5; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 48, xor const: 0
	int32 FMMHGIAKLAP = 6; // offset: 72, xor const: 0
}

// CmdId: 7636
message COILODINMDL {
	uint32 DCENCIPOBMC = 1; // offset: 24, xor const: 11081
}

message LNCKLAKAJKK {
	FGKJFCJILIL JPEPDHLHFKD = 1; // offset: 16, xor const: 0
}

// CmdId: 424
message AHGMMHJAKBD {
	int32 HLIOCKDDGCM = 12; // offset: 32, xor const: 1325
	map<uint32, int32> GLNCBAGDJLJ = 15; // offset: 16, xor const: 0
}

message PIMODHDBCIO {
	bool NJMJILECMMB = 5; // offset: 41, xor const: 0
	int32 OFCFGGLEBMI = 12; // offset: 32, xor const: 14763
	bool JANPIJIKKHN = 7; // offset: 40, xor const: 0
	map<uint32, uint32> PIBOFIEOGHI = 9; // offset: 16, xor const: 0
	bool FMFKBIHPNIN = 8; // offset: 42, xor const: 0
	int32 FNDFDMDBCLA = 3; // offset: 36, xor const: 14500
}

message BMNCEHAOICK {
	string KOEHBBBALHE = 2; // offset: 32, xor const: 0
	repeated string JJIEEGMOBJF = 1; // offset: 24, xor const: 0
}

message JBHNKHNIMLN {
	MCBCEJKHAGI PMHDIDFIJGH = 5; // offset: 32, xor const: 0
	uint32 EKLGNOIEMLA = 11; // offset: 36, xor const: 6949
	repeated BEJNABLIMEJ NLBMLJLMLPA = 15; // offset: 16, xor const: 0
}

// CmdId: 5999
message HEEGGBDJBPH {
}

// CmdId: 7908
message ACPPONDDIBA {
}

message KJCAAFPNOHO {
	uint32 AKGAFOMFKJG = 5; // offset: 44, xor const: 0
	repeated LAGPOPCEGGD PHKPFKMBLNJ = 2; // offset: 24, xor const: 0
	int64 MOHHBACKBOK = 4; // offset: 56, xor const: 0
	int64 EFOCIEHGBNA = 3; // offset: 48, xor const: 0
	uint32 EELDLMADHPK = 1; // offset: 40, xor const: 0
	repeated uint32 ALAGOIMNAPJ = 6; // offset: 32, xor const: 0
}

message CIPGDMHOHHH {
	repeated uint32 GCJKKFDPABN = 7; // offset: 16, xor const: 0
	uint32 JFPGDDPDLBL = 11; // offset: 40, xor const: 13494
	repeated uint32 JJMNKINIKCA = 4; // offset: 24, xor const: 0
}

enum GNFACNLDKDG {
	GNFACNLDKDG_PJJNLJILAAK = 0;
	GNFACNLDKDG_GFHMAEHGAEA = 1;
}

// CmdId: 6495
message FGDCBDEDOFI {
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 9; // offset: 56, xor const: 6964
	uint64 HEJBMNAOJFL = 3; // offset: 48, xor const: 13080
	MAIPCLCILCA CPEPJEPHPBD = 8; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 40, xor const: 1246
}

message BHIHNCDEBAI {
	uint32 NCAGHHFDAOG = 13; // offset: 28, xor const: 9683
	int32 EFFMOLNLHLM = 14; // offset: 24, xor const: 10588
}

// CmdId: 5955
message AHNIBDFPMKC {
	LCPFLIBBPFE MNADOGADBIE = 14; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 40, xor const: 7698
	repeated LGGABHFHOPA PKKFNEHLMHF = 4; // offset: 24, xor const: 0
}

// CmdId: 1707
message FLGPNIKOJEN {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 14868
}

message OBDNCNHJIIO {
	repeated uint32 CCNKKPHNBMH = 4; // offset: 32, xor const: 0
	EDGCAIEHLHH OIGDDEBKDGA = 2; // offset: 40, xor const: 0
	bytes DHLEGHCPJDI = 5; // offset: 24, xor const: 0
	HollowGridLink ACPGPLMFNOL = 1; // offset: 56, xor const: 0
	bytes GJNFOLBDDPG = 3; // offset: 16, xor const: 0
}

message FDKGDLGABPG {
	APHAKDPNIGD EAJLLKADOGA = 3; // offset: 16, xor const: 0
}

// CmdId: 3371
message KLPEOFDBPLO {
	bool NCPKBCEMCEH = 1; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 36, xor const: 7588
	EBDAIGALHDI DBOACCIJPDL = 13; // offset: 24, xor const: 0
}

message ECCGAEKPCKN {
	uint32 AFJOGKIENOC = 6; // offset: 52, xor const: 0
	uint32 CPPIIEANBFE = 5; // offset: 48, xor const: 0
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 32, xor const: 0
	uint32 MAHEIHMMJEA = 4; // offset: 44, xor const: 0
	int32 EKKEDIGJJDF = 2; // offset: 40, xor const: 0
	string KFHKGELKJBD = 3; // offset: 16, xor const: 0
}

// CmdId: 7617
message ELNDKDFIGMD {
	int32 BCMPKLAOIHK = 1; // offset: 24, xor const: 5848
}

message OMHKMPHDKCF {
	bool MIKNOEILGIL = 8; // offset: 72, xor const: 0
	string FHIIIPELENE = 2; // offset: 56, xor const: 0
	repeated LOGKICPODEC DKNJIHKFFHN = 5; // offset: 40, xor const: 0
	LOGKICPODEC FHBODIGDBNH = 6; // offset: 64, xor const: 0
	string PGPOIMHKFPL = 1; // offset: 24, xor const: 0
	LOGKICPODEC HCAHGMGNJEH = 7; // offset: 48, xor const: 0
	bool FMCGAHFGHGP = 9; // offset: 73, xor const: 0
	string NKNBEAHDGCH = 3; // offset: 16, xor const: 0
	PAPEPFMIPFB NNELBDMFOHB = 4; // offset: 76, xor const: 0
}

message DGEPBENHCHM {
}

enum BBDHCNEJJGI {
	BBDHCNEJJGI_KGHOGPPFGMI = 0;
	BBDHCNEJJGI_NJAIPFHNAJG = 1;
}

message BJLAJDPPILM {
	uint32 HJHFOICGOAC = 1; // offset: 32, xor const: 0
	uint64 OLIDNFIANHN = 6; // offset: 40, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 5; // offset: 16, xor const: 0
	uint32 KBKLJLLBLCD = 3; // offset: 36, xor const: 0
	HHDBEICLNMH PBOAMDEBIGO = 4; // offset: 48, xor const: 0
	uint32 CBDBIPMJEPJ = 2; // offset: 52, xor const: 0
}

// CmdId: 3055
message DKCLLJMNJGC {
	uint32 ABHCMMOPFHK = 9; // offset: 24, xor const: 7405
}

message EOMAAGDOIBC {
	MLIGDKKLKFG EJNNGCMNFCH = 3; // offset: 40, xor const: 0
	GCDPKACBLAM ELHLEMFEMBF = 1; // offset: 32, xor const: 0
	EIKJCAIFDAF ACEMBJPDCDK = 2; // offset: 16, xor const: 0
}

enum ILOJLCIAACK {
	ILOJLCIAACK_ELBMEEBKDCK = 0;
	ILOJLCIAACK_HFBGFIMNPCJ = 1;
	ILOJLCIAACK_OCCKNJFIMPG = 2;
	ILOJLCIAACK_KPGBLBKJGGK = 3;
	ILOJLCIAACK_CNKAGBKFGML = 4;
}

message OOBGAGGILBA {
	FGKJFCJILIL LDGENACPION = 2; // offset: 24, xor const: 0
	FGKJFCJILIL PJFLHPDGIGO = 1; // offset: 16, xor const: 0
}

// CmdId: 5282
message LMMLMNBOBAJ {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 3690
}

message LPNLHJHCNFO {
	repeated JIDIEDOMPFL OJKDMCAEMON = 1; // offset: 16, xor const: 0
}

enum EIFOGHMICIK {
	EIFOGHMICIK_CLDIGDHOOKF = 0;
	EIFOGHMICIK_FJOOKHINKDM = 1;
}

message AMMPOLGLJNL {
	FHJHFMCLGJM PEHFNKFJLGC = 3; // offset: 24, xor const: 0
	uint32 ACEMBJPDCDK = 15; // offset: 44, xor const: 14280
	IIFOMFJLEPA NGGDKJGKELE = 7; // offset: 40, xor const: 0
	repeated FEJNHNCFGCO PDNCKGLOMEL = 5; // offset: 32, xor const: 0
}

// CmdId: 232
message GOLPJPCAFPF {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 14356
}

message OBGMIDEMMAE {
	int32 PBOAMDEBIGO = 6; // offset: 24, xor const: 0
	int32 EFCFBIFDBJF = 5; // offset: 40, xor const: 0
	uint32 NCAGHHFDAOG = 2; // offset: 44, xor const: 0
	uint32 JPBCGGACFHH = 3; // offset: 28, xor const: 0
	uint32 HEFCNDIOEPD = 1; // offset: 36, xor const: 0
	uint32 ILGNBOMHJOI = 4; // offset: 32, xor const: 0
}

message FLECAMABLMC {
	bool GOEBFEJMCGJ = 5; // offset: 68, xor const: 0
	repeated EKHCKNKFLMA CDKKHGDJAKL = 9; // offset: 40, xor const: 0
	int32 CENMKDLDNAN = 1; // offset: 72, xor const: 0
	int32 CPEGDKBNGDH = 2; // offset: 60, xor const: 0
	string CKHKHOIIOHO = 11; // offset: 32, xor const: 0
	int32 DGBMLEKEEOB = 8; // offset: 48, xor const: 0
	int32 ILGNBOMHJOI = 7; // offset: 64, xor const: 0
	HBFBNKAODPJ OAAJPGLLLEM = 4; // offset: 24, xor const: 0
	int32 CGONOJBFCFF = 3; // offset: 56, xor const: 0
	int32 MOIMDGDEMDJ = 6; // offset: 52, xor const: 0
	uint64 BFHGIPFPNIH = 10; // offset: 80, xor const: 0
}

// CmdId: 8257
message HMNMGCDNAIA {
	uint32 HONFNLBAIAN = 10; // offset: 32, xor const: 12670
	HBFBNKAODPJ NCAGHHFDAOG = 13; // offset: 24, xor const: 0
	int32 LMICCDBPCLK = 15; // offset: 36, xor const: 13544
}

message KGOCOMMKLGB {
	FGKJFCJILIL CNLOGPKEGFL = 2; // offset: 24, xor const: 0
	int32 NECLECGLKED = 1; // offset: 32, xor const: 0
}

message MHDHENMMNON {
	int32 HLEAEPDDBLE = 2; // offset: 24, xor const: 0
	bool GMCAABHABEO = 3; // offset: 32, xor const: 0
	bool MKKJCFLOAJC = 4; // offset: 33, xor const: 0
	int32 OHBMEIKLLOE = 1; // offset: 28, xor const: 0
}

message GDOBBOHGOBG {
	CJMGKMHACJK DOBNPPNIMMB = 6; // offset: 16, xor const: 0
	uint32 NCAGHHFDAOG = 7; // offset: 32, xor const: 8003
}

// CmdId: 8695
message MMAFKGAOKNA {
	repeated uint32 AGKOGFMEKBL = 14; // offset: 16, xor const: 0
}

// CmdId: 3161
message CIHHKFFACNM {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 11242
}

message EIKHHNFBGHC {
}

// CmdId: 9411
message EBPGPBNPIAI {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 14491
	bool GFPCCKLOPFK = 15; // offset: 28, xor const: 0
}

message OLBJGCFEPHF {
	uint32 NBGGBOKFJOB = 4; // offset: 52, xor const: 14754
	NLIKKNNCBCK MALDIJFANDM = 12; // offset: 32, xor const: 0
	uint32 ONEODGNJJAM = 3; // offset: 48, xor const: 12507
	bool NAODGHJGPGE = 8; // offset: 40, xor const: 0
	CEHOOCNNKPF IDCMJDLNPEB = 13; // offset: 16, xor const: 0
	PBADIIBPLCN PPCNCKBKEJB = 7; // offset: 44, xor const: 0
}

message IAJBNBEABLB {
	repeated BEELFEPMMIP KKPLDOGJBOF = 1; // offset: 24, xor const: 0
	bool LKEENIDDLCK = 5; // offset: 40, xor const: 0
	bool ANFIPPGADMD = 2; // offset: 41, xor const: 0
	repeated EDGCAIEHLHH GPFNPNDPMPC = 3; // offset: 32, xor const: 0
}

// CmdId: 6895
message NKLKFOLBOIG {
	uint32 PLFCIIAEIFC = 9; // offset: 28, xor const: 4741
	uint32 KCOMKNFGGAC = 3; // offset: 32, xor const: 9672
	uint32 CHELJLHNGKF = 11; // offset: 24, xor const: 8199
}

message LJOFAHECOGO {
	enum CKCHDDEHMJH {
		CKCHDDEHMJH_JJMFODJNBAI = 0;
		CKCHDDEHMJH_GCOIMBBIGGF = 1;
		CKCHDDEHMJH_ODGDLMENBKF = 2;
		CKCHDDEHMJH_HDENNJOABEE = 3;
	}

	LJOFAHECOGO.CKCHDDEHMJH BGFCGLNNGGE = 1; // offset: 36, xor const: 0
	uint32 KIDMJMLFGEF = 5; // offset: 44, xor const: 0
	uint32 EAPKGPFJCIJ = 2; // offset: 24, xor const: 0
	uint32 BBPJKDPGIPG = 4; // offset: 40, xor const: 0
	uint32 AEGIPOACBJB = 3; // offset: 32, xor const: 0
	uint32 DLOEDCFFPNA = 6; // offset: 28, xor const: 0
}

message EKJFPKEFHHM {
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 24, xor const: 0
	bool POAAOHFPFFE = 4; // offset: 40, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 2; // offset: 32, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 44, xor const: 0
}

message AHMGLHGDNDF {
	map<string, int32> EJKEBPHDJKL = 1; // offset: 16, xor const: 0
	string OKLNEJHPCMG = 12; // offset: 40, xor const: 0
	string JGEJBCECOOM = 10; // offset: 32, xor const: 0
}

enum PCMEFCINGOP {
	PCMEFCINGOP_KDMKAIBHLDG = 0;
	PCMEFCINGOP_GODNHHCGPPP = 1;
	PCMEFCINGOP_OBJDPCIKKKL = 2;
	PCMEFCINGOP_OGDDCBGKHML = 3;
}

message BGLDMDHBGPJ {
	uint32 BBHOCMGEKEJ = 4; // offset: 64, xor const: 0
	string MEPDLLGAFEE = 2; // offset: 24, xor const: 0
	uint32 CBELLMGEFDA = 8; // offset: 68, xor const: 0
	uint32 IIIGDHJPFMI = 9; // offset: 56, xor const: 0
	string DMICGIPOOGF = 1; // offset: 48, xor const: 0
	bool FKGKBGNDPDA = 7; // offset: 72, xor const: 0
	string IONKFAMHHBD = 6; // offset: 16, xor const: 0
	uint32 COPPIDLDGPF = 5; // offset: 60, xor const: 0
	string CFDADOHPPNI = 3; // offset: 32, xor const: 0
}

// CmdId: 1973
message MANAJNMMLGN {
	repeated OMOOFNPOLOE CAJKLHEMOEB = 12; // offset: 16, xor const: 0
}

enum APOOIHEDIFA {
	APOOIHEDIFA_JDLKLNHIOGD = 0;
	APOOIHEDIFA_OMFBEGJPIGL = 1;
	APOOIHEDIFA_EGHNHJKJDND = 2;
	APOOIHEDIFA_JAIDHIEEIPM = 3;
	APOOIHEDIFA_OMJADBPBOKM = 4;
}

message IKLBAIHGIPL {
	bool FBGOIHDMDME = 2; // offset: 32, xor const: 0
	FGKJFCJILIL NHEIEINJCJO = 1; // offset: 16, xor const: 0
}

// CmdId: 3058
message FMIEDLDOOAN {
}

message IFLLCPCNGAA {
	GMIONEPFFIG EOKGJGCHAHM = 3; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 3203
}

message HAABPIIDIDJ {
}

// CmdId: 3731
message JPOIENCNOLF {
	int32 IHIGNMLCHDK = 8; // offset: 36, xor const: 15857
	uint32 GFOBLCFLFBH = 12; // offset: 32, xor const: 2902
	NMCPELHNCCL FCNOKELEBCC = 10; // offset: 24, xor const: 0
}

message MLIBEAMJADL {
	FGKJFCJILIL OKLMBMKDNEL = 3; // offset: 24, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 32, xor const: 0
	HollowGridLink IGIAKNHPPOC = 2; // offset: 40, xor const: 0
}

// CmdId: 1949
message AHKGFCBONNH {
	uint32 AKEKFONOGGJ = 14; // offset: 24, xor const: 9094
}

// CmdId: 8280
message OGANKIAABJK {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 10746
}

// CmdId: 1660
message HMMGLNOKKDA {
	BLJNKGPPKAC LDJADGOOKIJ = 7; // offset: 24, xor const: 0
}

// CmdId: 8363
message NBBAIMPAOHN {
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 5811
	repeated NOADHMBHHNN OKMCJGCLNNH = 6; // offset: 16, xor const: 0
}

message BLAICGNIFAI {
	int32 AMIJIAHGPMC = 1; // offset: 24, xor const: 0
}

message LEOFBPBGKEL {
	uint64 LNHMDPKJIBF = 1; // offset: 24, xor const: 0
}

// CmdId: 939
message KAOEJMDKKIA {
}

// CmdId: 9131
message HBOLLEPICEF {
}

message JOCNKBCDOCL {
	FGKJFCJILIL MHINMINPONI = 2; // offset: 16, xor const: 0
	FGKJFCJILIL MMDFEJBOBKA = 1; // offset: 24, xor const: 0
}

// CmdId: 8407
message PHFDMMOHEPA {
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 14263
	map<string, string> NMJMLAALJON = 1; // offset: 16, xor const: 0
}

// CmdId: 7864
message NFOMPIMAFKP {
	AMFBOIFGKAA CPEPJEPHPBD = 9; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 7; // offset: 56, xor const: 8197
	uint32 KMKPPDICOKA = 5; // offset: 40, xor const: 11106
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 15018
}

message LCLOMKOEOPO {
	bool MLDBNLBBBKG = 15; // offset: 45, xor const: 0
	JLNLHBOGFII CKENFLDFJOG = 12; // offset: 24, xor const: 0
	uint32 FPPKGHCDJNI = 10; // offset: 36, xor const: 15914
	bool NAEOBCJOMDH = 9; // offset: 46, xor const: 0
	int32 COFLJIDICCF = 3; // offset: 32, xor const: 6647
	bool CIEDDNLMMNN = 1; // offset: 44, xor const: 0
	int32 PBOAMDEBIGO = 13; // offset: 40, xor const: 7922
}

message JCABMHACPON {
	repeated FGKJFCJILIL CMIANHKFKJM = 12; // offset: 16, xor const: 0
	BJGFGIFKEFJ FIHDOKPOBDK = 1; // offset: 112, xor const: 0
	FGKJFCJILIL BKBGBJHLNFA = 4; // offset: 88, xor const: 0
	repeated FGKJFCJILIL PNFOBCBGNFF = 11; // offset: 56, xor const: 0
	FGKJFCJILIL CLAPEIBGOMD = 3; // offset: 104, xor const: 0
	FGKJFCJILIL MDEBHDLCALH = 7; // offset: 48, xor const: 0
	repeated FGKJFCJILIL IODCHHAFPMC = 9; // offset: 72, xor const: 0
	LEHENCIPJIE HKJGLBFDMIF = 2; // offset: 116, xor const: 0
	FGKJFCJILIL ONIJOBCFHED = 6; // offset: 96, xor const: 0
	string FCHNHEJBNOG = 13; // offset: 80, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 8; // offset: 64, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 5; // offset: 40, xor const: 0
	repeated FGKJFCJILIL INJEIFFDFKL = 10; // offset: 24, xor const: 0
}

// CmdId: 2804
message HDDDBGCPAIL {
	NGICOGKAEBG HLEAEPDDBLE = 9; // offset: 36, xor const: 0
	string KNEPHHIBEOP = 4; // offset: 16, xor const: 0
	uint32 DCENCIPOBMC = 14; // offset: 32, xor const: 4045
}

message HCGDJIMMJOE {
}

message FLFABDJNIIE {
	map<uint32, HMNHANEHCHI> DEFPGANMAGH = 10; // offset: 48, xor const: 0
	uint32 LJLDEIDBPEA = 14; // offset: 84, xor const: 11008
	uint32 LJCIJFAIFOL = 6; // offset: 80, xor const: 12940
	repeated uint32 FJJDLJFPKGJ = 13; // offset: 56, xor const: 0
	repeated GKDEKBPAIAG GNLAAGJGAOE = 9; // offset: 32, xor const: 0
	uint32 HIMPFGLFPPC = 4; // offset: 76, xor const: 16381
	uint32 LJGGMKKMCAL = 3; // offset: 68, xor const: 11583
	uint32 EAMIMKLDOFA = 2; // offset: 72, xor const: 485
	uint32 BBDDIAMHEBG = 7; // offset: 88, xor const: 10099
	uint32 IFIIAAEANDC = 1; // offset: 92, xor const: 5791
	HMNHANEHCHI LOCKKKOCJLO = 8; // offset: 40, xor const: 0
	IODKMLDEAGC GOKDPHLGHHP = 11; // offset: 16, xor const: 0
	uint32 EMEGBPMABPD = 15; // offset: 64, xor const: 12877
}

// CmdId: 6278
message FAIKFHKKNGD {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 12087
}

message NPDCMAPCCGD {
	FHJHFMCLGJM GGPPMELMEEM = 14; // offset: 16, xor const: 0
	int64 IJNKMMJIBBG = 6; // offset: 32, xor const: 11327
}

// CmdId: 8826
message CFACAGHJBNB {
	bool LOLBNDNJPEC = 14; // offset: 24, xor const: 0
}

enum ENAIFDHJAEH {
	ENAIFDHJAEH_IOAPGGMIFDL = 0;
	ENAIFDHJAEH_LPEOAHOCHMN = 1;
	ENAIFDHJAEH_JLKODCIHHIF = 2;
	ENAIFDHJAEH_HOGHBAIGNNG = 3;
	ENAIFDHJAEH_HDPPIMKNONL = 4;
	ENAIFDHJAEH_IEFGPMDPILN = 5;
	ENAIFDHJAEH_EHNMBBIFACH = 6;
	ENAIFDHJAEH_JOOFBBGOIAA = 7;
	ENAIFDHJAEH_LIBBHCNLDAB = 8;
	ENAIFDHJAEH_AAOBIANPNEB = 9;
	ENAIFDHJAEH_BNCMCJPGAFE = 10;
	ENAIFDHJAEH_DJMDJGGPABD = 11;
	ENAIFDHJAEH_GEFEJJHNIGH = 12;
}

message OKLEIONNCCC {
	int64 BPCLKADELFF = 9; // offset: 24, xor const: 1662
	uint32 PEDKNCIMHLA = 15; // offset: 32, xor const: 8664
	bool KNACEIOABOK = 2; // offset: 40, xor const: 0
	uint32 IHIEIMELEEH = 1; // offset: 36, xor const: 15595
}

message PCONJKKHINA {
	FGKJFCJILIL ACOICHAOLPF = 2; // offset: 32, xor const: 0
	FGKJFCJILIL KHHOIDNFKMC = 1; // offset: 24, xor const: 0
}

// CmdId: 4645
message GBPGCCCEEIK {
	JCBFCDHDPCG CPEPJEPHPBD = 5; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 3692
	uint64 HEJBMNAOJFL = 6; // offset: 56, xor const: 4451
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 8; // offset: 40, xor const: 12822
}

message PNOHGNJHDOP {
	bool OGDBOKGCNDF = 4; // offset: 33, xor const: 0
	bool PBIOOKKGJDH = 3; // offset: 32, xor const: 0
	FGKJFCJILIL JEKCINEAIJN = 2; // offset: 24, xor const: 0
	BOKEMLFMOFL MLOCGOPJHKA = 1; // offset: 36, xor const: 0
}

// CmdId: 8459
message NJKJAAJHNKB {
	KPAFLKHPIGN HALINMEACLC = 12; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 6204
}

// CmdId: 1904
message MHFPDMMIKPK {
	uint32 MOIMDGDEMDJ = 15; // offset: 24, xor const: 9066
}

message GKPGDEGJCLO {
	string PCBMPJHNGIP = 2; // offset: 16, xor const: 0
	repeated string OFHAPHALALM = 1; // offset: 24, xor const: 0
}

// CmdId: 6791
message BOCBPGANDBD {
	repeated HIFJLLPLFOC FDGCJDPENIC = 12; // offset: 16, xor const: 0
}

// CmdId: 5493
message BPMDELCLIFL {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 9531
}

// CmdId: 2558
message GIKPCDDGNPI {
	repeated FDLHCDMKEPF EPDLJMJMHDK = 9; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 11; // offset: 40, xor const: 2257
	repeated PFLDHLPDKLE OONANCGGHHK = 10; // offset: 24, xor const: 0
}

enum GDLKLCIHNNP {
	GDLKLCIHNNP_PELDICADBOH = 0;
}

// CmdId: 2008
message LDFDHHFJHBP {
}

message JCAIEKOGNGC {
	JLNMIBOODLK IEFPKIGHHIB = 3; // offset: 16, xor const: 0
	IGJEKICLDDF BLKMDABGLAE = 1; // offset: 64, xor const: 0
	MJFHOBPMDMO OKNDDEHGJBB = 4; // offset: 40, xor const: 0
	KDIIDGANHKH IDANNPKMANM = 6; // offset: 24, xor const: 0
	GEDBFLPCJLJ MNOMAGLEDKP = 2; // offset: 32, xor const: 0
	HNMHCPGCJCO HDDPIGJMCNB = 5; // offset: 48, xor const: 0
}

// CmdId: 6147
message HCGOAILECOC {
	int64 HPIPAEGPHPF = 1; // offset: 24, xor const: 9890
}

message MIAALHEBCAM {
	repeated PIMODHDBCIO OCDMIHFCPAN = 4; // offset: 24, xor const: 0
	repeated uint32 AMLDNFKPDGJ = 6; // offset: 16, xor const: 0
}

message KPIOLGMPIHN {
	int32 HKCHPDBIJHC = 8; // offset: 24, xor const: 8446
	int32 IHIGNMLCHDK = 12; // offset: 32, xor const: 9800
	int32 CLIOOGMIIIP = 5; // offset: 40, xor const: 9160
	int32 LCPDGEFCADA = 4; // offset: 28, xor const: 1789
	int32 LGLGBJONIFO = 10; // offset: 44, xor const: 14019
	int32 GNBFPEIBLDK = 14; // offset: 36, xor const: 8917
}

// CmdId: 3443
message CPPDEBBOJMF {
	map<uint32, uint32> BIADBCJCICL = 6; // offset: 24, xor const: 0
}

// CmdId: 6242
message JGBMPOFKOAH {
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 40, xor const: 1471
	uint32 KMKPPDICOKA = 12; // offset: 56, xor const: 6004
	uint64 HEJBMNAOJFL = 5; // offset: 48, xor const: 13937
	LEJKGLFGIAB CPEPJEPHPBD = 7; // offset: 24, xor const: 0
}

// CmdId: 6861
message LHNOIHONFGC {
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 6; // offset: 40, xor const: 6052
	uint64 AEDAEPKDOAL = 10; // offset: 48, xor const: 9203
	uint32 KMKPPDICOKA = 7; // offset: 56, xor const: 15858
	IABJANECNCC CPEPJEPHPBD = 14; // offset: 32, xor const: 0
}

message AGJGHJHEEEG {
}

// CmdId: 830
message EOBOOOANFCC {
}

message FHJHFMCLGJM {
	HLGDHJAOIOB FEEGAHHDDDM = 1; // offset: 64, xor const: 0
	repeated LEJLANPGDAE EOECDMOEOJO = 13; // offset: 72, xor const: 0
	string LCIHMDFPAEB = 5; // offset: 40, xor const: 0
	bool IKCKNOAKAIL = 7; // offset: 89, xor const: 0
	bool IMLEAEGGIAG = 8; // offset: 90, xor const: 0
	MLGHMGAMJCB MHMALDKEFJH = 10; // offset: 24, xor const: 0
	int64 FNHCLGNDFCP = 3; // offset: 80, xor const: 0
	EAALBLOAHJC FGMLMGFJFKI = 12; // offset: 16, xor const: 0
	string KOOBCJHIBBC = 4; // offset: 56, xor const: 0
	KDEAIPEPJFI LIENCBNOCBM = 6; // offset: 48, xor const: 0
	bool KHOGCGJIFDG = 11; // offset: 91, xor const: 0
	bool FFODBEHPODO = 2; // offset: 88, xor const: 0
	int32 MPIJKLDBGNA = 9; // offset: 92, xor const: 0
}

message CDFEMOBKLKN {
	repeated PMFLGCCMCPP EJLHFGBOEOC = 4; // offset: 24, xor const: 0
	repeated uint32 DCHDPJALODJ = 10; // offset: 48, xor const: 0
	repeated uint32 CFHHNNKJFJG = 7; // offset: 40, xor const: 0
	repeated uint32 NCDGMKIBCFB = 11; // offset: 16, xor const: 0
}

message GAJAKNENDNI {
	repeated LFNODLENPID AFCENAAEMKP = 11; // offset: 24, xor const: 0
}

// CmdId: 5121
message AAEMMPNABGC {
}

// CmdId: 4054
message FAIILJCFAPC {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 6102
}

// CmdId: 4138
message LFNCLLDGIPL {
	uint32 MDHJEKIIDIO = 10; // offset: 24, xor const: 9826
}

message KGLMKPOJDFP {
	FGKJFCJILIL CNNFHILKJPI = 1; // offset: 16, xor const: 0
}

message FKECAPEANNI {
	bool BBLJNKMEAGL = 1; // offset: 24, xor const: 0
}

message DGFHJDNHMDF {
	repeated uint32 HONIAFPIOBC = 2; // offset: 24, xor const: 0
	bool LLLEDJLENDP = 1; // offset: 32, xor const: 0
}

// CmdId: 6104
message LBMHONMNHPP {
	GPJFDOPGKEP CPEPJEPHPBD = 13; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 9; // offset: 56, xor const: 2829
	uint64 HEJBMNAOJFL = 14; // offset: 40, xor const: 4023
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 8406
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
}

message FLBGJOBPECG {
	repeated JLNKNEHMJLK PNOBHKFJFDA = 10; // offset: 24, xor const: 0
}

message COIOOIMOLBJ {
	repeated bool OCHJPOJHHPO = 1; // offset: 24, xor const: 0
}

// CmdId: 5414
message NGOMHAFICCD {
	uint32 IIIGDHJPFMI = 1; // offset: 24, xor const: 3153
}

message NEDCHKONEKO {
	repeated HHPLBEOFHGA OOIAKHEHJCE = 6; // offset: 16, xor const: 0
	map<int32, HHPLBEOFHGA> MOJENBDJPBE = 1; // offset: 32, xor const: 0
	int32 LFIPGDIJNPE = 2; // offset: 48, xor const: 10395
	HHPLBEOFHGA MMFOBGCKJEB = 9; // offset: 40, xor const: 0
}

// CmdId: 7737
message LNBIKCNEENF {
	map<uint32, uint64> AEADBCCLLGH = 2; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 8; // offset: 32, xor const: 9518
}

message JCMBNKENBBE {
	uint32 KFEFNFFNLPE = 2; // offset: 36, xor const: 0
	EDGCAIEHLHH NMIGPBNKNDF = 4; // offset: 24, xor const: 0
	uint32 MEJBFCEPKKP = 3; // offset: 40, xor const: 0
	bool GLJGAGLKCHA = 5; // offset: 32, xor const: 0
	uint32 LJEHCDLJOIG = 1; // offset: 44, xor const: 0
	bool EMOGMCANGMA = 6; // offset: 33, xor const: 0
}

// CmdId: 8474
message DLIHNHMDJCO {
	repeated uint32 CGJNOCHBBPO = 7; // offset: 16, xor const: 0
	bool LGGOMPOKDNM = 8; // offset: 32, xor const: 0
}

enum CFEOOCOIDPF {
	CFEOOCOIDPF_HBIHBMNDFNF = 0;
	CFEOOCOIDPF_OLCGDCDKOKD = 1;
	CFEOOCOIDPF_IHIBOIFNCPB = 2;
	CFEOOCOIDPF_CKIHAILKGPO = 3;
	CFEOOCOIDPF_IMAGPEEAOAL = 4;
	CFEOOCOIDPF_GJDLFNMMHPH = 5;
}

// CmdId: 7682
message EGILGBAGEFB {
	uint32 IKDJDPPLNOM = 14; // offset: 24, xor const: 5364
}

// CmdId: 4677
message DJLOLNHCLNK {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 15663
	BCGDAFBAGFD HLEAEPDDBLE = 6; // offset: 28, xor const: 0
	int32 EFLPLGPDEGF = 10; // offset: 32, xor const: 7967
}

enum DDNKJIFHNIA {
	DDNKJIFHNIA_EHMFKOJLGJO = 0;
	DDNKJIFHNIA_FNPECODMMFD = 1;
	DDNKJIFHNIA_JPDDOHJHMOH = 2;
}

enum NEPFHEONFHE {
	NEPFHEONFHE_WAY_OF_CHECK_HOLLOW_NPC_EXIST_NONE = 0;
	NEPFHEONFHE_CHECK_HOLLOW_NPC_EXIST_BY_UID = 1;
	NEPFHEONFHE_CHECK_HOLLOW_NPC_EXIST_BY_POS = 2;
}

message HDLLHADJPHE {
	int32 CLIOOGMIIIP = 7; // offset: 44, xor const: 16232
	FKDDPIBBKCD KLMLCFPLMPF = 5; // offset: 16, xor const: 0
	int32 HKCHPDBIJHC = 12; // offset: 36, xor const: 13125
	int32 GNBFPEIBLDK = 3; // offset: 32, xor const: 7894
	int32 LCPDGEFCADA = 14; // offset: 40, xor const: 9798
	int32 LGLGBJONIFO = 1; // offset: 48, xor const: 12273
}

// CmdId: 3372
message BNIDIFNNEIE {
	repeated uint32 APKKBCHHMGA = 2; // offset: 16, xor const: 0
	uint32 EKLGNOIEMLA = 7; // offset: 40, xor const: 15354
	repeated uint32 GHDFNHICMJJ = 8; // offset: 24, xor const: 0
}

// CmdId: 9637
message CDBKEIIMJHN {
	uint32 JJHIDNMILIL = 15; // offset: 24, xor const: 10769
}

message PBBGEFEJKNE {
	repeated int32 ENBPGEIKDBD = 1; // offset: 24, xor const: 0
}

enum MKPCPBFFAFH {
	MKPCPBFFAFH_MKBILKNAADJ = 0;
	MKPCPBFFAFH_IEHNAAAFIAH = 1;
	MKPCPBFFAFH_FCMIMLMCNCJ = 2;
}

message GJJILBOGFLJ {
	repeated uint32 PPBCKBHDIIH = 12; // offset: 24, xor const: 0
	uint32 ABHCMMOPFHK = 9; // offset: 32, xor const: 13378
}

message JFDMCBJEIJM {
	float EFJPPJJFNJM = 2; // offset: 28, xor const: 0
	float HEDOHAABKHD = 3; // offset: 24, xor const: 0
	float AEIHIBLACCM = 1; // offset: 32, xor const: 0
}

enum LMMCLEEIHPE {
	LMMCLEEIHPE_DROP_TYPE_VARIABLE_LIST = 0;
	LMMCLEEIHPE_DROP_TYPE_DIRECTLY_ADD = 1;
}

message EBGLGFBKAEK {
	bool GKLAMFNJGMO = 2; // offset: 25, xor const: 0
	bool BKFADLJNBPJ = 3; // offset: 24, xor const: 0
	bool PPAJBIIBBOA = 1; // offset: 26, xor const: 0
}

message AFBNMBNIGKJ {
	map<uint32, int32> MICILDBBIMJ = 15; // offset: 32, xor const: 0
	uint32 HIMNJDFAOCH = 2; // offset: 56, xor const: 1206
	IEGBEGDBNGE LEMMGCEJFGB = 7; // offset: 24, xor const: 0
	uint32 CPEGDKBNGDH = 13; // offset: 60, xor const: 14159
	uint32 IHIEIMELEEH = 4; // offset: 72, xor const: 8002
	repeated HJHKBGGCOEG BIHEKCLHGPM = 14; // offset: 16, xor const: 0
	uint32 OPFEAMDPIAG = 5; // offset: 64, xor const: 14134
	repeated AFNFKCMCOGG AADPNMEEKPC = 3; // offset: 48, xor const: 0
	uint32 NLAIODPEIEI = 6; // offset: 68, xor const: 13581
}

// CmdId: 7334
message EKAOJONNCNE {
	int32 IHIGNMLCHDK = 9; // offset: 28, xor const: 7227
	bool ALAFPCPKCNA = 3; // offset: 24, xor const: 0
}

message AEIFPEEIAHG {
	uint32 NCAGHHFDAOG = 7; // offset: 28, xor const: 9970
	int32 JGDNPBBHOMF = 15; // offset: 24, xor const: 8819
	int32 ECAPMCDCLJF = 14; // offset: 32, xor const: 9468
}

// CmdId: 7756
message FICEJHBGHLJ {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 4364
}

// CmdId: 3511
message MLBEPDIFDAO {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 10215
}

message NHKAIJNOJIF {
	int32 JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

// CmdId: 6795
message HKBNFJDFHKE {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 10412
}

message DHJOJLIONBI {
	int32 HMDCALELCIM = 1; // offset: 44, xor const: 14916
	uint32 HMJHFMHOOFF = 12; // offset: 52, xor const: 4065
	int32 JJEOKAIMLOA = 8; // offset: 32, xor const: 6476
	int32 OIDBCEEEFNI = 15; // offset: 48, xor const: 5717
	string AFLKOOLENPI = 4; // offset: 24, xor const: 0
	int32 CDEGLKLGDFP = 3; // offset: 36, xor const: 71
	int32 OGPHBJGMBFB = 7; // offset: 40, xor const: 11821
}

message HEMMBKMDIIG {
	int32 DLBNHCNNDPJ = 7; // offset: 32, xor const: 6129
	map<int32, int32> LKGLNAPLMGI = 5; // offset: 24, xor const: 0
}

// CmdId: 2667
message OENGIFKEGDI {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 10388
}

// CmdId: 6709
message DMHAHNOIHOA {
	string GNEPJCKGALK = 8; // offset: 32, xor const: 0
	bool CHCGCJMDMEA = 4; // offset: 40, xor const: 0
	string GODMJFHBGDB = 11; // offset: 16, xor const: 0
}

message CMEGBBONKIC {
	JLNLHBOGFII ACEMBJPDCDK = 5; // offset: 16, xor const: 0
	int32 KBKLJLLBLCD = 13; // offset: 40, xor const: 9344
	int32 JNKIGHBAAKG = 12; // offset: 32, xor const: 9243
	uint32 OBODOFGCPHN = 11; // offset: 44, xor const: 13874
	uint32 EBNKNPMKNDC = 2; // offset: 36, xor const: 13871
}

// CmdId: 2235
message PBDNECAGHPF {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 14298
}

message GHGFEEBEBNO {
	repeated IAHCILMMPDJ PNOBHKFJFDA = 15; // offset: 24, xor const: 0
}

message CDCKBKINECM {
	uint32 EFNFANEIJMH = 13; // offset: 28, xor const: 2770
	uint32 IOEFEPHHDEI = 1; // offset: 24, xor const: 6476
}

enum ModTimeType {
	MOD_TIME_TYPE_MOD_TIME_TYPE_NONE = 0;
	MOD_TIME_TYPE_MOD_TIME_SET = 1;
	MOD_TIME_TYPE_MOD_TIME_ADD_PERIOD = 2;
	MOD_TIME_TYPE_MOD_TIME_ADD_MINUTE = 3;
}

message JDEBIOFLNGD {
	uint32 CPEGDKBNGDH = 6; // offset: 24, xor const: 1685
	uint32 OPFEAMDPIAG = 14; // offset: 28, xor const: 13935
}

enum BIBOPILHHLE {
	BIBOPILHHLE_IJMCNIBLHKN = 0;
	BIBOPILHHLE_CDOIIDMPPIK = 1;
	BIBOPILHHLE_JJIAHFMODME = 2;
}

message EMMALAIIOJE {
	FGKJFCJILIL PHCBPCMCPJM = 1; // offset: 16, xor const: 0
}

enum CHMHDMKBIMH {
	CHMHDMKBIMH_MONPIGFECLK = 0;
}

enum IPNAJKDNBBO {
	IPNAJKDNBBO_BPMJNKAJOMA = 0;
	IPNAJKDNBBO_GGBGIBIAJMK = 1;
	IPNAJKDNBBO_FHFNGGJAPBM = 2;
}

// CmdId: 324
message PBLFJDHKGHG {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 11814
}

message DGBKBOBGGBF {
	repeated MGCCOABJHMP MPHIBCAPJCC = 8; // offset: 32, xor const: 0
	repeated int32 DKHKGPNFAGC = 3; // offset: 16, xor const: 0
}

// CmdId: 6601
message CJLDCEENBPH {
	uint32 GBIIGMLDAIO = 5; // offset: 48, xor const: 12784
	uint32 FHGKJKIGMBM = 9; // offset: 40, xor const: 8212
	BGHKOBHAHJH NONPKIJNJKE = 8; // offset: 24, xor const: 0
	uint32 MHDFOCGAOPO = 11; // offset: 44, xor const: 11304
	uint32 CPEGJHGIFAA = 2; // offset: 32, xor const: 12090
	uint32 JBHFPIFLGEC = 10; // offset: 36, xor const: 7345
}

// CmdId: 165
message DHHCGIMAHHB {
	uint32 DCENCIPOBMC = 15; // offset: 24, xor const: 5662
}

message LHKIJBJJFAK {
	repeated EDGCAIEHLHH GPFNPNDPMPC = 2; // offset: 24, xor const: 0
	string OBECILHKFJO = 1; // offset: 32, xor const: 0
}

enum PGDMANGLMND {
	PGDMANGLMND_CAMERA_POSITION_TYPE_NONE = 0;
	PGDMANGLMND_CAMERA_POSITION_TYPE_BOUND = 1;
	PGDMANGLMND_CAMERA_POSITION_TYPE_POSITION = 2;
	PGDMANGLMND_CAMERA_POSITION_TYPE_RETURN = 3;
}

enum LBKFHOCNFMP {
	LBKFHOCNFMP_OPDEKNIDLAI = 0;
	LBKFHOCNFMP_NGLHGEMOFAE = 1;
	LBKFHOCNFMP_CEKGFCELHMI = 2;
	LBKFHOCNFMP_JBEFEHHMNDI = 3;
	LBKFHOCNFMP_MEDIOEPPNDH = 5;
	LBKFHOCNFMP_IDPNKKPOMFC = 6;
	LBKFHOCNFMP_MNFFFPFFECI = 7;
	LBKFHOCNFMP_LKPJGOINONK = 8;
	LBKFHOCNFMP_NMEOAEPGKKL = 9;
	LBKFHOCNFMP_IMOHCBONELM = 10;
	LBKFHOCNFMP_GHIDBINPIJI = 11;
	LBKFHOCNFMP_MLPEFFPLCNA = 12;
	LBKFHOCNFMP_GPBHHOPDBPO = 20;
	LBKFHOCNFMP_ODBNBPAPOCD = 21;
	LBKFHOCNFMP_IFOHDPLBONP = 22;
	LBKFHOCNFMP_CDLOAKHMCEP = 23;
	LBKFHOCNFMP_KBECPGEPCDL = 31;
	LBKFHOCNFMP_NDBPLALPEGD = 32;
}

message OMDDFOOEMAA {
	string JMLPAAKNHNE = 3; // offset: 40, xor const: 0
	repeated string PIMJAKCLAAB = 1; // offset: 24, xor const: 0
	DAGDMBCAIFC BKPJCKGFLIP = 2; // offset: 32, xor const: 0
}

// CmdId: 2273
message KHFIJGDPMAM {
	uint32 OJLOLPPLLEO = 7; // offset: 48, xor const: 5584
	JOJGPLIBGPI GILNBPEMICH = 8; // offset: 32, xor const: 0
	NGJCFHNEGBB FADLMMKNNPM = 13; // offset: 40, xor const: 0
	bytes NIPJILAKCBN = 1; // offset: 16, xor const: 0
}

message ENCGALKCOHD {
	int32 KBKLJLLBLCD = 9; // offset: 24, xor const: 8951
}

// CmdId: 9791
message HHHGNEKCDHA {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 7539
}

// CmdId: 7728
message EEDNOPHEPJN {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 1605
}

enum HGLOMBGGODB {
	HGLOMBGGODB_ALL = 0;
	HGLOMBGGODB_CORE = 1;
	HGLOMBGGODB_NONCORE = 2;
}

message DMJMOJLGGBK {
	FGKJFCJILIL EFCFBIFDBJF = 3; // offset: 24, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 40, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 16, xor const: 0
}

message BIBEJCCLOBH {
	bool HHEOJJDIBIA = 9; // offset: 24, xor const: 0
	uint32 CONOAJMMHMB = 1; // offset: 28, xor const: 15520
}

// CmdId: 8323
message JIGLNFEEDDH {
	uint64 AEDAEPKDOAL = 11; // offset: 56, xor const: 15697
	uint32 KMKPPDICOKA = 12; // offset: 40, xor const: 12301
	uint64 HEJBMNAOJFL = 14; // offset: 48, xor const: 4973
	HCOBGHLOJIN CPEPJEPHPBD = 2; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 16, xor const: 0
}

// CmdId: 995
message NPKGMMLNEJJ {
	int32 OGPCLMDOEND = 8; // offset: 64, xor const: 6526
	NIMDPKCAJMI GKDDNGOCBCC = 7; // offset: 32, xor const: 0
	HBFBNKAODPJ OKFMCAJPHJD = 12; // offset: 24, xor const: 0
	int32 DKKHKOFLGAG = 14; // offset: 56, xor const: 4216
	int32 PKDDGCIDGGL = 4; // offset: 48, xor const: 9314
	int32 JOIFNGBPCBC = 11; // offset: 60, xor const: 12188
	HBFBNKAODPJ FNNGEDGDEPE = 2; // offset: 40, xor const: 0
	int32 FOJJGFBCAAL = 15; // offset: 52, xor const: 7215
	int32 BIKPIFGHPFH = 10; // offset: 68, xor const: 14765
}

enum HEKFEDDJNOH {
	HEKFEDDJNOH_BMCLGINCOMF = 0;
	HEKFEDDJNOH_IJEOIEFFJHN = 1;
	HEKFEDDJNOH_BJCPCCMOOAM = 2;
	HEKFEDDJNOH_HOPLOFOJHLG = 3;
}

// CmdId: 5851
message KLMBMKKKICF {
	uint32 LGLGBJONIFO = 6; // offset: 24, xor const: 2817
}

enum BJGFGIFKEFJ {
	BJGFGIFKEFJ_HOLLOW_SEARCH_NPC_TYPE_NONE = 0;
	BJGFGIFKEFJ_HOLLOW_SEARCH_NPC_TYPE_BY_POS = 1;
	BJGFGIFKEFJ_HOLLOW_SEARCH_NPC_TYPE_BY_BOUND = 2;
	BJGFGIFKEFJ_HOLLOW_SEARCH_NPC_TYPE_BY_INDEX = 4;
}

// CmdId: 8200
message NABJNFFDLMA {
	GBHPFFBKLOB CPEPJEPHPBD = 15; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 11; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 48, xor const: 11927
	uint32 KMKPPDICOKA = 12; // offset: 56, xor const: 12995
	uint64 HEJBMNAOJFL = 1; // offset: 40, xor const: 6011
}

message HNMHCPGCJCO {
	uint32 LHPFJFPGEEA = 1; // offset: 32, xor const: 0
	repeated HLBFEFKEJBE CPAGFLFJEBC = 2; // offset: 16, xor const: 0
}

message ICMOCKLIJJG {
	uint32 DJGCOILKHGD = 12; // offset: 32, xor const: 5819
	uint32 LFFENOEDMJF = 11; // offset: 28, xor const: 12487
	uint32 FACAPFNJKLE = 8; // offset: 36, xor const: 5820
	uint32 IFNNCGDEFJD = 3; // offset: 24, xor const: 10232
}

message KHJOLJLHGNP {
	uint32 MLOCGOPJHKA = 1; // offset: 32, xor const: 0
	uint32 LEEEDDIMDGO = 2; // offset: 28, xor const: 0
	int32 PGBADFMPAPK = 3; // offset: 24, xor const: 0
}

// CmdId: 4319
message HEEIGNCMAOB {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 13764
}

message CCPFAOECHGC {
	PBJEJLLOJKF FGKKPEAAFBJ = 4; // offset: 32, xor const: 0
	uint32 GBIIGMLDAIO = 11; // offset: 40, xor const: 14885
	ONJAJLOMMHH OEDDDJBMBLG = 8; // offset: 24, xor const: 0
}

message OEAFJABLOFJ {
	string NHEMPPCFLEN = 1; // offset: 16, xor const: 0
	int32 HLDGILCCDOJ = 2; // offset: 32, xor const: 0
}

message AIKNBDIAAGP {
	bool MCMCCLDBNPF = 6; // offset: 66, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 2; // offset: 24, xor const: 0
	bool OLFJCMKOMMG = 10; // offset: 64, xor const: 0
	bool PCFNGNIJAFI = 7; // offset: 67, xor const: 0
	bool NBJJNMIDPOJ = 3; // offset: 68, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 1; // offset: 16, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 5; // offset: 40, xor const: 0
	FGKJFCJILIL LAAGECBPFAN = 8; // offset: 56, xor const: 0
	bool JBEGIIJGJOO = 9; // offset: 65, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 4; // offset: 32, xor const: 0
}

enum APNHBBBDBGK {
	APNHBBBDBGK_MMIIDNLMIHC = 0;
	APNHBBBDBGK_DNBDGOJCCJG = 1;
	APNHBBBDBGK_KMCLNJHAHME = 2;
	APNHBBBDBGK_HJGCINMGGBC = 3;
}

message DEEONEFIKEG {
	uint32 OPFEAMDPIAG = 12; // offset: 24, xor const: 15513
	uint32 PGBADFMPAPK = 2; // offset: 28, xor const: 11016
}

message DCPOPHMIBLI {
	PANBIJIGJDM GLNOALFHMGL = 4; // offset: 24, xor const: 0
	int32 LDIOMPOJJDJ = 7; // offset: 52, xor const: 892
	string FAMKMKJGLPE = 15; // offset: 40, xor const: 0
	ALCLMBFGJKO PPKOKAKLAIN = 11; // offset: 48, xor const: 0
	int32 PBBDNBIGFMI = 5; // offset: 56, xor const: 3486
	string PBOAMDEBIGO = 13; // offset: 32, xor const: 0
}

enum ABIBHNNFFHE {
	ABIBHNNFFHE_IIGMGPGBPJK = 0;
	ABIBHNNFFHE_GOGBMCBOIJA = 1;
	ABIBHNNFFHE_FPHIFOMJEDL = 2;
	ABIBHNNFFHE_FFBJBBHOFPP = 3;
	ABIBHNNFFHE_DFFKCHBNOPF = 4;
}

message EPIPDNFHHPJ {
	repeated LKBOGOCMNPP EHHADGAPJDD = 3; // offset: 16, xor const: 0
}

// CmdId: 8209
message JPMMFOOLDDF {
	uint32 KMKPPDICOKA = 12; // offset: 56, xor const: 3382
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 48, xor const: 15834
	uint64 HEJBMNAOJFL = 7; // offset: 40, xor const: 12249
	JFJEPICOJNP CPEPJEPHPBD = 10; // offset: 16, xor const: 0
}

message NCFFNPNLIAI {
	int32 GPFAJKJIBDK = 7; // offset: 24, xor const: 0
	CJINCICAPIL AGGDHGHDMBN = 2; // offset: 32, xor const: 0
	int32 EFJPPJJFNJM = 5; // offset: 48, xor const: 0
	BELCLGGMMKP CKBOJACIJDI = 3; // offset: 40, xor const: 0
	AEJLOBOKMEO KBBEJLMCCDB = 1; // offset: 28, xor const: 0
	int32 DKEOCDLLIIM = 6; // offset: 36, xor const: 0
	int32 AEIHIBLACCM = 4; // offset: 44, xor const: 0
}

message NGFHGJIGECK {
}

// CmdId: 2355
message CGJLGEDGANC {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 7571
}

message MLNFNHMKJCK {
	uint32 HJHFOICGOAC = 13; // offset: 32, xor const: 6328
	repeated DNPNHNDJHMC MNIHGAGLCMP = 1; // offset: 16, xor const: 0
}

message ACNJDMDHMHC {
	JJIOMDMMIGG LMJBDCCFLJD = 12; // offset: 40, xor const: 0
	uint32 ICJGBJKLEBL = 4; // offset: 44, xor const: 5045
	repeated EIGOEBIOMMG CEJNLEBGJCJ = 14; // offset: 32, xor const: 0
	uint32 KFDGHNOGJEH = 6; // offset: 48, xor const: 3872
	repeated EIGOEBIOMMG HMCFAPGPENG = 7; // offset: 16, xor const: 0
}

enum POBNCBHAOLK {
	POBNCBHAOLK_VHS_FLOW_BUFF_NONE = 0;
	POBNCBHAOLK_VHS_FLOW_BUFF_PERCENT = 1;
	POBNCBHAOLK_VHS_FLOW_BUFF_VALUE = 2;
}

message JBFIHECEAGJ {
	MBANOMJNICC EMPJOIKHHIA = 6; // offset: 16, xor const: 0
}

message LHDEJGGKMKM {
	string MENKJMFJMHG = 1; // offset: 48, xor const: 0
	IOLABBCFAOE DLGEAPINEFI = 2; // offset: 24, xor const: 0
	map<uint32, HGIPJOCNKDF> EIKJPHDHDDH = 6; // offset: 16, xor const: 0
	uint32 NIDDHEDFCMC = 4; // offset: 60, xor const: 0
	uint32 JFMBGDLONCL = 3; // offset: 56, xor const: 0
	map<uint32, ICBJJGNOKFA> DOEFFJMJNGE = 5; // offset: 40, xor const: 0
}

message HGIANAEFFJE {
}

// CmdId: 2382
message HPKEPKCMDID {
	uint32 CIBNBECPDGE = 2; // offset: 44, xor const: 1820
	uint32 EKLGNOIEMLA = 8; // offset: 48, xor const: 806
	uint32 GFCLKDAOMBM = 9; // offset: 52, xor const: 9423
	repeated uint32 GLFAIDIPKHL = 10; // offset: 16, xor const: 0
	bool HCMIEEGPBJM = 12; // offset: 40, xor const: 0
	repeated uint32 PPBCKBHDIIH = 5; // offset: 32, xor const: 0
}

message OAAKJIJHDJH {
	repeated int32 NILOIKEMDHE = 1; // offset: 24, xor const: 0
}

// CmdId: 2454
message CCBHLIHHNOP {
	uint32 MHINMINPONI = 7; // offset: 32, xor const: 15377
	uint32 OPFEAMDPIAG = 10; // offset: 36, xor const: 3980
	repeated uint32 GPFNPNDPMPC = 9; // offset: 16, xor const: 0
}

// CmdId: 8071
message FBBPIDEEGPG {
	EGGDHNKKGEO GLPMAIHEMJF = 12; // offset: 24, xor const: 0
	PNHMKMECKBM LKKJHFPKECH = 1; // offset: 40, xor const: 0
	ILIDACGAJHN IDANNPKMANM = 7; // offset: 16, xor const: 0
}

// CmdId: 2580
message DCNAMFBNCOK {
	DGLPKMCOICC MCNOKGBOAIN = 2; // offset: 16, xor const: 0
}

message HFFBPENOCGG {
	uint32 KNHGDDNKJFB = 3; // offset: 24, xor const: 0
	uint32 FNNGEDGDEPE = 2; // offset: 28, xor const: 0
	uint32 JBDCBJIEKFM = 1; // offset: 32, xor const: 0
}

// CmdId: 3934
message PNODIBGDLCE {
	map<uint32, uint32> JHHMENFIIGP = 15; // offset: 24, xor const: 0
	uint32 FIFMIGPLLFB = 6; // offset: 56, xor const: 7912
	uint32 FMLNGEJIBOI = 8; // offset: 36, xor const: 11067
	int32 ELGAKFOPEEL = 4; // offset: 40, xor const: 9660
	uint32 NBNJEFMBCEE = 5; // offset: 52, xor const: 7972
	bool ALHPHKFKOEA = 3; // offset: 48, xor const: 0
	uint32 FDALAIGHPIF = 2; // offset: 44, xor const: 15849
	uint32 FKFAAGECFIC = 14; // offset: 32, xor const: 12151
}

// CmdId: 2171
message OOGGNDNBNJI {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 3525
}

message IMAIILKOADG {
}

// CmdId: 3084
message CLLNJPPLEPH {
	uint32 IKDJDPPLNOM = 10; // offset: 24, xor const: 1878
	uint32 AMIJIAHGPMC = 1; // offset: 32, xor const: 4852
	uint32 CPEGDKBNGDH = 5; // offset: 28, xor const: 4488
}

message PIPPJNLOPOG {
	uint64 LPMOPJDCPAB = 10; // offset: 40, xor const: 11581
	uint32 HJHFOICGOAC = 9; // offset: 24, xor const: 3043
	uint64 LODKOMCPPMP = 13; // offset: 32, xor const: 1243
}

message FLHAGKAIMNM {
	repeated uint32 EKIPDOMAMMO = 13; // offset: 24, xor const: 0
	uint32 DCCAHPOHKJH = 1; // offset: 36, xor const: 2323
	uint32 IGLGJKLPINF = 12; // offset: 40, xor const: 5863
	uint32 CJJOBKDNEIM = 8; // offset: 44, xor const: 4838
	uint32 NOBBCLBHHAH = 15; // offset: 32, xor const: 13818
}

message NFDDDKEHFEF {
	uint32 ENCANOPLLDM = 1; // offset: 24, xor const: 0
}

message FJMEKDNMBKM {
	map<int32, string> HNLPNNBBDED = 11; // offset: 32, xor const: 0
	FKNGHODDFNO NFPAJCJMJLF = 10; // offset: 64, xor const: 0
	uint32 PCJIIBJKJDJ = 6; // offset: 48, xor const: 0
	bool GFACJDIKLDO = 13; // offset: 55, xor const: 0
	bool MKKJCFLOAJC = 7; // offset: 52, xor const: 0
	uint32 ILOPALDIPKO = 5; // offset: 60, xor const: 0
	bool NBJJNMIDPOJ = 3; // offset: 53, xor const: 0
	repeated int32 IGJGGEHAACC = 4; // offset: 24, xor const: 0
	bool LPMJANJPANB = 12; // offset: 56, xor const: 0
	DACKFJCNIEH BEPALPNKGAH = 9; // offset: 16, xor const: 0
	bool BGKLODNGJBP = 8; // offset: 54, xor const: 0
}

// CmdId: 1254
message NDAFAMNICGE {
	repeated HCFDANHKNHP IKLOJMMDGIC = 10; // offset: 16, xor const: 0
}

// CmdId: 6948
message IHEOJIKIHFM {
	int32 IFIKBBLDGLH = 5; // offset: 32, xor const: 5430
	repeated IMJOMAPGGCB JPDJGBEJJKC = 3; // offset: 24, xor const: 0
	uint32 BDHBFHKBPNK = 15; // offset: 36, xor const: 2515
}

// CmdId: 1051
message OPCLHLIKGKP {
}

enum HollowGridLink {
	HOLLOW_GRID_LINK_HOLLOW_GRID_LINK_NONE = 0;
	HOLLOW_GRID_LINK_UP = 1;
	HOLLOW_GRID_LINK_DOWN = 2;
	HOLLOW_GRID_LINK_RIGHT = 4;
	HOLLOW_GRID_LINK_LEFT = 8;
	HOLLOW_GRID_LINK_HOLLOW_GRID_LINK_ALL = 15;
}

enum MPHHLIEJPHL {
	MPHHLIEJPHL_OKPAGNGGENJ = 0;
	MPHHLIEJPHL_DECKCAPINKI = 1;
	MPHHLIEJPHL_HOKJGLBLLDB = 2;
	MPHHLIEJPHL_AFAJAFHIEJH = 3;
	MPHHLIEJPHL_AFOBAGLGKNF = 4;
	MPHHLIEJPHL_HLGMMFIPLOE = 5;
	MPHHLIEJPHL_IDNMFFNKJPF = 6;
	MPHHLIEJPHL_OJFHCMIAGME = 7;
}

enum APABMNLCAMO {
	APABMNLCAMO_HOLLOW_SEARCH_GRID_TYPE_NONE = 0;
	APABMNLCAMO_HOLLOW_SEARCH_GRID_TYPE_BY_POS = 1;
	APABMNLCAMO_HOLLOW_SEARCH_GRID_TYPE_BY_BOUND = 2;
	APABMNLCAMO_HOLLOW_SEARCH_GRID_TYPE_BY_SEED = 3;
	APABMNLCAMO_HOLLOW_SEARCH_GRID_TYPE_BY_INDEX = 4;
}

// CmdId: 9413
message DGMPGPAFJLO {
}

// CmdId: 3217
message FGECJNPPJHN {
	uint32 CONOAJMMHMB = 14; // offset: 32, xor const: 5280
	repeated uint32 LCDGLAEPBPF = 9; // offset: 16, xor const: 0
}

message EIKNJEDBNGH {
	bool PHCNLKJLMLH = 1; // offset: 24, xor const: 0
}

// CmdId: 4162
message KINAMENLFJN {
}

// CmdId: 5400
message AKNMNAFFHJP {
	int32 IHIGNMLCHDK = 12; // offset: 28, xor const: 8716
	uint32 HOEDIFAPIHM = 2; // offset: 24, xor const: 8921
	uint32 IMGPDGEBOFC = 4; // offset: 32, xor const: 10946
}

message NNICJLNKJGP {
	repeated EDGCAIEHLHH GPFNPNDPMPC = 1; // offset: 24, xor const: 0
}

message GFLFGLAGKNL {
	repeated OEAEIIHKNAF OFCMPMFHJAG = 1; // offset: 24, xor const: 0
}

// CmdId: 4524
message KJDLBJCOHKM {
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 6133
	EEKDJAEOJKM CPEPJEPHPBD = 1; // offset: 16, xor const: 0
}

message BFINALDNIEK {
	uint32 ONEODGNJJAM = 13; // offset: 60, xor const: 12096
	bool NAODGHJGPGE = 9; // offset: 56, xor const: 0
	CEHOOCNNKPF IDCMJDLNPEB = 2; // offset: 16, xor const: 0
	NLIKKNNCBCK MALDIJFANDM = 11; // offset: 24, xor const: 0
	uint32 NBGGBOKFJOB = 1; // offset: 52, xor const: 2275
	FLFABDJNIIE ACPKNAPJCHK = 12; // offset: 32, xor const: 0
	PBADIIBPLCN PPCNCKBKEJB = 4; // offset: 48, xor const: 0
}

// CmdId: 7021
message DAFPJIBNCBK {
	uint32 HFAMJACJFPG = 13; // offset: 24, xor const: 12985
}

message BCACJGPIECK {
	uint32 CPPIIEANBFE = 4; // offset: 32, xor const: 0
	string HILFDGCAAGK = 2; // offset: 24, xor const: 0
	uint32 MAHEIHMMJEA = 3; // offset: 36, xor const: 0
	uint32 AFJOGKIENOC = 5; // offset: 40, xor const: 0
	bool MKKJCFLOAJC = 6; // offset: 44, xor const: 0
}

message LAEFEPFDDEM {
	uint32 HFFIAKHFINI = 5; // offset: 24, xor const: 994
	int32 NCDIEPNGHHO = 9; // offset: 32, xor const: 2681
	int32 CHAHHCONABJ = 6; // offset: 28, xor const: 11694
}

message DFBIINMNFLJ {
}

message LKONOMJJNHB {
	repeated uint32 CHBENPMKNKD = 10; // offset: 24, xor const: 0
	uint32 IKDJDPPLNOM = 14; // offset: 32, xor const: 12471
}

message KEJFHALLCNK {
	int32 HEEKOOMEBOG = 3; // offset: 28, xor const: 0
	uint32 PIIGBGELLJM = 4; // offset: 24, xor const: 0
	int32 DDOPDLBKINC = 2; // offset: 36, xor const: 0
	int32 MFCCKJAKMKN = 1; // offset: 32, xor const: 0
}

message LGKALNKDEGA {
	repeated NOADHMBHHNN OKMCJGCLNNH = 9; // offset: 16, xor const: 0
	repeated uint32 AFLDGOJHCBI = 1; // offset: 24, xor const: 0
}

message AGDMNOGHNEE {
	uint64 PCOPLEOMMNO = 15; // offset: 40, xor const: 11673
	bool HFMAMGLJHFL = 12; // offset: 37, xor const: 0
	bool OADANBEIDKG = 5; // offset: 38, xor const: 0
	int32 GFJPNNKKJOG = 3; // offset: 32, xor const: 1229
	uint64 EBIMLCGLGCL = 11; // offset: 24, xor const: 14257
	bool HPAAJAFBNMP = 6; // offset: 36, xor const: 0
	int32 BMMNOAJKOKD = 14; // offset: 48, xor const: 6496
	int32 DOAEKCNBNGL = 4; // offset: 52, xor const: 3933
}

message LOHDLNICMLF {
	uint32 CPPIIEANBFE = 4; // offset: 40, xor const: 0
	uint32 MAHEIHMMJEA = 3; // offset: 36, xor const: 0
	uint32 AFJOGKIENOC = 5; // offset: 44, xor const: 0
	bool MKKJCFLOAJC = 6; // offset: 32, xor const: 0
	string HILFDGCAAGK = 2; // offset: 24, xor const: 0
}

// CmdId: 2506
message LDIHAKEHMHP {
	KMPEILEEOMO DBGEIGPNJNE = 1; // offset: 24, xor const: 0
}

// CmdId: 2739
message HCKJOFDOIDC {
	uint32 AEIOGIJPKDA = 14; // offset: 24, xor const: 1980
}

message GCDPKACBLAM {
	uint32 IIIGDHJPFMI = 1; // offset: 24, xor const: 0
}

// CmdId: 8839
message JJIACLJOGNF {
	repeated OFJCLCLACLB DMLLFPADHCL = 10; // offset: 24, xor const: 0
}

// CmdId: 4368
message EGPOAKJCHFJ {
}

message GKEJIEAANMK {
	uint32 FABGBAHDDJA = 3; // offset: 36, xor const: 12842
	ONHNIHHFMIN OJLOLPPLLEO = 8; // offset: 32, xor const: 0
	bytes NIPJILAKCBN = 15; // offset: 16, xor const: 0
}

// CmdId: 133
message FLCABFEEJMH {
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 4520
	IMJIJLIDHEC CIAHEFIJODM = 2; // offset: 16, xor const: 0
	uint32 EFNFANEIJMH = 4; // offset: 36, xor const: 4534
}

message LHAKKMCJFOB {
	int32 HLEAEPDDBLE = 5; // offset: 24, xor const: 1069
}

// CmdId: 2240
message BKCIPDFBEBL {
	uint32 PEDKNCIMHLA = 11; // offset: 24, xor const: 3114
}

// CmdId: 9541
message LFGHANMHDFE {
	uint32 KMKPPDICOKA = 6; // offset: 40, xor const: 13522
	uint64 AEDAEPKDOAL = 4; // offset: 48, xor const: 10063
	MBLFBFGOAGC CPEPJEPHPBD = 9; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 13158
}

message PBNPFEMMCKI {
	bool ECOKDEDFAIK = 1; // offset: 24, xor const: 0
	bool KLOGAIOIGEO = 2; // offset: 25, xor const: 0
}

message JOJGPLIBGPI {
	bool JNMHAHDAABD = 13; // offset: 24, xor const: 0
}

message KFLLHOBFLCI {
	int32 KLNNHOPCNIP = 1; // offset: 24, xor const: 0
}

message AIGKDPHKCNN {
	bool GCJAFOAPBBB = 1; // offset: 24, xor const: 0
}

// CmdId: 7006
message DGEAIEAIGIP {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 5264
}

enum CAFMBFOMNEB {
	CAFMBFOMNEB_CAANIDDCHLH = 0;
}

enum KMIPCLLILAN {
	KMIPCLLILAN_GCBMJNLAFHG = 0;
	KMIPCLLILAN_DPGLFDLONOG = 1;
	KMIPCLLILAN_GHHJLMCHFKP = 2;
	KMIPCLLILAN_EAAOMHLHOAI = 3;
	KMIPCLLILAN_NKFBDEBNBKK = 4;
	KMIPCLLILAN_LHKDENDCNOC = 5;
	KMIPCLLILAN_NIFPDIAPGCN = 6;
	KMIPCLLILAN_IMPIJCHMJPI = 7;
	KMIPCLLILAN_CDEJNBOLMBF = 8;
	KMIPCLLILAN_INMBKGLCDKF = 9;
	KMIPCLLILAN_ONJJMABCMGI = 10;
}

message DPDPBODPLND {
	bool NMGACMDHLPO = 2; // offset: 28, xor const: 0
	bool OHMMENODOCN = 3; // offset: 29, xor const: 0
	int32 ACOICHAOLPF = 1; // offset: 24, xor const: 0
}

message PKEABDCCALH {
	bool HLIENGLKJJE = 2; // offset: 24, xor const: 0
	POFDPJPFPJJ LDEFHKKEOCA = 1; // offset: 28, xor const: 0
	bool OHCNECIBIHI = 3; // offset: 25, xor const: 0
}

message KNGKMFGGEHK {
	EEIIAICEBEN NNMGPAKBPFG = 13; // offset: 24, xor const: 0
}

// CmdId: 5517
message KBDJFPNCNDH {
	uint32 AMIJIAHGPMC = 9; // offset: 24, xor const: 12194
	uint32 NGPIADDBNAN = 8; // offset: 32, xor const: 16264
	uint32 GNOPMPEJPHF = 2; // offset: 28, xor const: 8491
}

message FHCGLPLECEC {
	HKFNGOHGADC INGCPNBIKPH = 1; // offset: 32, xor const: 0
	string JGEJBCECOOM = 2; // offset: 24, xor const: 0
}

message GAPMOHMJMJJ {
	repeated uint32 CFHHNNKJFJG = 11; // offset: 24, xor const: 0
}

enum HDDCBHEEAPH {
	HDDCBHEEAPH_MKLHBEHNOGG = 0;
}

message EAGEICEOEMF {
	repeated OCFFGKBJPOO GJHPDKHHONE = 2; // offset: 24, xor const: 0
	uint32 BEKFLJGFLJD = 1; // offset: 32, xor const: 0
}

message JNIKJGJIMDH {
	uint32 PCGFJEIOHCF = 1; // offset: 60, xor const: 0
	MHGAGFIDKJJ FNJFLEJMAPN = 3; // offset: 24, xor const: 0
	PNHMKMECKBM LKKJHFPKECH = 5; // offset: 56, xor const: 0
	GFGCIAFDADI EJAHEPICCPL = 2; // offset: 40, xor const: 0
	PCFEPJDNMBM FJJLFABNKGG = 6; // offset: 32, xor const: 0
	LEOFBPBGKEL JMJMPJOGLEK = 4; // offset: 48, xor const: 0
}

enum LKKJJBELDHH {
	LKKJJBELDHH_GHPFMLPKNLP = 0;
	LKKJJBELDHH_ANJAMCIPHLK = 1;
	LKKJJBELDHH_DMHECOJKBMH = 2;
	LKKJJBELDHH_BOCGDNHEBDM = 3;
	LKKJJBELDHH_NNFMKIKENAD = 4;
}

// CmdId: 1403
message MICKNBPCHIJ {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 13043
}

// CmdId: 4539
message FAMPHAPAKNG {
}

// CmdId: 1836
message FLPOEOJBECG {
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 878
	uint32 IMGPDGEBOFC = 5; // offset: 28, xor const: 23
	uint32 HOEDIFAPIHM = 15; // offset: 24, xor const: 9508
}

// CmdId: 6908
message KFKPMMHMDOM {
	DHMKIHPCENA LDJADGOOKIJ = 12; // offset: 24, xor const: 0
}

message MAMBDKJGCJA {
	string FGNOHFOGKEG = 1; // offset: 32, xor const: 0
	string PCFJFMKDBFC = 2; // offset: 24, xor const: 0
}

message DPLMDEGHPPH {
	string FHIIIPELENE = 1; // offset: 24, xor const: 0
	uint32 ICKEMDCGCJD = 2; // offset: 40, xor const: 0
	repeated FOOKFLBPOEE DKNJIHKFFHN = 3; // offset: 16, xor const: 0
}

message AGLPEAKJJBI {
}

// CmdId: 9480
message APBDLNIFKMG {
	repeated uint32 KPOFFBOODOC = 11; // offset: 16, xor const: 0
	repeated HGEEALEMNCN AFCENAAEMKP = 6; // offset: 32, xor const: 0
	uint32 EKLGNOIEMLA = 14; // offset: 40, xor const: 2474
	int32 IHIGNMLCHDK = 8; // offset: 44, xor const: 13152
}

// CmdId: 4364
message MIDPEIGILCH {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 7274
}

message KBBAMIBAJNK {
	string CCHMOEOOHDP = 1; // offset: 16, xor const: 0
}

// CmdId: 6089
message DOBFFNAMFIA {
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 11943
	repeated uint32 EBMKIPGJOOL = 8; // offset: 16, xor const: 0
}

message BCCDKFPEIFO {
	FGKJFCJILIL GPMMDGNHBLJ = 14; // offset: 32, xor const: 0
	FGKJFCJILIL NBNAHKFOJNA = 6; // offset: 24, xor const: 0
	OILNIEEMEDL MEFEEKFCNLP = 11; // offset: 152, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 15; // offset: 48, xor const: 0
	repeated GKKPJPAKLHP OJJPBNOODKI = 16; // offset: 88, xor const: 0
	bool PLPGGKDANFH = 17; // offset: 156, xor const: 0
	FGKJFCJILIL MOPPGEFNOGO = 7; // offset: 64, xor const: 0
	string CFDADOHPPNI = 2; // offset: 56, xor const: 0
	FGKJFCJILIL JFNDGCBCDJF = 5; // offset: 128, xor const: 0
	repeated uint32 KAPHIGAFCGA = 20; // offset: 112, xor const: 0
	FGKJFCJILIL DPPMGLAEDKD = 8; // offset: 40, xor const: 0
	OOLEHBAIOKG CPDBDPHJLOL = 10; // offset: 148, xor const: 0
	string DMICGIPOOGF = 1; // offset: 104, xor const: 0
	FGKJFCJILIL LDBINENNNAF = 18; // offset: 136, xor const: 0
	FGKJFCJILIL HOAJKFKJDFD = 19; // offset: 80, xor const: 0
	int32 LCFCEPOOKOB = 13; // offset: 144, xor const: 0
	FGKJFCJILIL AOMGCDOFEGA = 3; // offset: 96, xor const: 0
	FGKJFCJILIL EICHPLAMIJE = 4; // offset: 120, xor const: 0
	FGKJFCJILIL OLANPFHKOCI = 9; // offset: 72, xor const: 0
}

message OEKPFFABMBB {
	int32 HEEMKOKDKMK = 14; // offset: 124, xor const: 0
	int32 JBEALCMJCAP = 20; // offset: 128, xor const: 0
	string DIFJBNMFOEG = 4; // offset: 48, xor const: 0
	int32 EKIJAJGFHJB = 21; // offset: 100, xor const: 0
	string FBCHBGNDCLN = 11; // offset: 32, xor const: 0
	int32 NAAEGEJLODE = 13; // offset: 116, xor const: 0
	string PCDNPLCGMPC = 9; // offset: 56, xor const: 0
	int32 KKLDLLCJDHP = 19; // offset: 96, xor const: 0
	int32 FBGKMNIKIFA = 16; // offset: 132, xor const: 0
	string PJJALJNBJDP = 5; // offset: 72, xor const: 0
	string JMLMCNCKGCP = 7; // offset: 16, xor const: 0
	string JABMFIBFLGE = 6; // offset: 88, xor const: 0
	int32 OBPOPEPIIIJ = 15; // offset: 112, xor const: 0
	int32 HKDNAHOJIFM = 22; // offset: 120, xor const: 0
	int32 DLOHOOKNBOI = 17; // offset: 104, xor const: 0
	string KFEDJBJBEGG = 10; // offset: 24, xor const: 0
	int32 ALKDNDPMOLP = 18; // offset: 136, xor const: 0
	string DGIGJBFPHNK = 12; // offset: 64, xor const: 0
	string BBLJFOJPBMC = 8; // offset: 40, xor const: 0
	int32 EGJBKMHBENM = 3; // offset: 108, xor const: 0
}

message IMCEDKICHHJ {
	bool HMPHHFJAIHF = 2; // offset: 25, xor const: 0
	bool HMNJMGODALO = 1; // offset: 24, xor const: 0
}

// CmdId: 6113
message FJIHGNKOCLJ {
	int32 HCIKOCHONNP = 15; // offset: 24, xor const: 12379
}

message LLHAECOPPBB {
	int32 KAMPKFGJDCG = 6; // offset: 24, xor const: 0
	int32 KOMIMFNADCM = 5; // offset: 36, xor const: 0
	int32 CPEGDKBNGDH = 2; // offset: 32, xor const: 0
	int32 DPNDOMONFGK = 3; // offset: 40, xor const: 0
	int32 CLBMOEGEEGI = 4; // offset: 44, xor const: 0
	int32 GFCLKDAOMBM = 1; // offset: 28, xor const: 0
}

// CmdId: 9478
message COPADHFGNLI {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 7382
}

// CmdId: 701
message PJDMDICHFEO {
	string EKLEOELOPPP = 1; // offset: 24, xor const: 0
	DPBDGOFLFHE ADENCEDGNDP = 5; // offset: 32, xor const: 0
}

enum LNGMLCDKAPB {
	LNGMLCDKAPB_LIMLHECBNGB = 0;
}

message AIOPLCHFIOJ {
	AKDCCHBADDM HLEAEPDDBLE = 14; // offset: 24, xor const: 0
	uint32 IDGPDILJMGD = 7; // offset: 28, xor const: 375
	uint32 FMEHIAOPKEF = 12; // offset: 32, xor const: 3749
}

// CmdId: 4861
message AEOGIJHDHGH {
	uint32 OPFEAMDPIAG = 8; // offset: 32, xor const: 2131
	repeated uint32 LCDGLAEPBPF = 1; // offset: 16, xor const: 0
}

message EPPFMIPANGH {
	repeated int32 CFHHNNKJFJG = 7; // offset: 56, xor const: 0
	repeated int32 DCHDPJALODJ = 6; // offset: 40, xor const: 0
	repeated int32 PIDCICHMOKE = 8; // offset: 48, xor const: 0
	repeated PMFLGCCMCPP EJLHFGBOEOC = 4; // offset: 24, xor const: 0
	repeated int32 NCDGMKIBCFB = 13; // offset: 16, xor const: 0
}

message PGOMLIKPJMP {
	PMDHEHKKGOC JOGGOAJIAJJ = 12; // offset: 32, xor const: 0
	EHCBGINKMCH GCMCJBMEJLP = 2; // offset: 24, xor const: 0
}

// CmdId: 7712
message NDNCOMHHGOM {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 1986
}

message AGMKICJMGND {
	int32 APOLHOEEIFD = 6; // offset: 48, xor const: 0
	int32 LMBLELDDGMM = 5; // offset: 32, xor const: 0
	string MPHLIEKKFIK = 1; // offset: 24, xor const: 0
	bool JAFLIMIGALB = 4; // offset: 40, xor const: 0
	uint32 MHANCJFBGBC = 7; // offset: 52, xor const: 0
	uint64 MOIMDGDEMDJ = 8; // offset: 56, xor const: 0
	int32 APJCCMIMPHJ = 2; // offset: 44, xor const: 0
	int32 NECJEDNGAJL = 3; // offset: 36, xor const: 0
}

message GPNNDGDBMJM {
	repeated OCKNNCOIPHJ KHDDNGMOPCI = 8; // offset: 24, xor const: 0
}

// CmdId: 6547
message DCOENLPOJJO {
	uint32 EKLGNOIEMLA = 11; // offset: 24, xor const: 2509
	uint32 HFAMJACJFPG = 6; // offset: 28, xor const: 123
}

message MBDNLGKKJPB {
}

message CMHOKODPDAE {
}

message AGEPCHBGANA {
	uint32 OPFEAMDPIAG = 10; // offset: 32, xor const: 2566
	map<string, int32> EJKEBPHDJKL = 11; // offset: 16, xor const: 0
	uint32 MHINMINPONI = 2; // offset: 36, xor const: 13971
	FEGPMJJHBDK EKHBCLMOGGA = 13; // offset: 40, xor const: 0
}

message AFJEBKGOBJB {
	repeated APMHKGIFEON MAGLGKJLLJF = 2; // offset: 24, xor const: 0
}

// CmdId: 887
message GJGFPPBCLOD {
	uint32 EKLGNOIEMLA = 1; // offset: 32, xor const: 3093
	repeated uint32 KJPCMKLMBCN = 6; // offset: 24, xor const: 0
}

message HOKGEIJJPIG {
	repeated NEDCGJKAFDD HEGDPBJFDIF = 1; // offset: 24, xor const: 0
	repeated uint32 JNBGDLAPNOC = 7; // offset: 16, xor const: 0
	uint32 PKLDEGFMGLB = 12; // offset: 56, xor const: 16092
	repeated LAEMBIKJBPG GGMHCEMGEEM = 2; // offset: 32, xor const: 0
	repeated BIBEJCCLOBH IDDHDNPMGKL = 14; // offset: 48, xor const: 0
}

// CmdId: 6803
message NBBMGIMMLHL {
	DBMMHGDLKLL CPEPJEPHPBD = 7; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 3416
}

// CmdId: 8665
message FODAPPKJNLM {
	uint32 PLFCIIAEIFC = 15; // offset: 24, xor const: 2740
	uint32 NMJOCCKAKHA = 12; // offset: 28, xor const: 9155
	uint32 KFNPCEPNIDB = 8; // offset: 32, xor const: 4063
}

// CmdId: 2518
message NONBPIDNHNG {
	BGGINBHKGAD AONABNEFNBM = 15; // offset: 28, xor const: 0
	int32 BBLCHBANJID = 6; // offset: 24, xor const: 9431
}

message MJLFHKENCML {
	string DICHOLEBGIH = 1; // offset: 24, xor const: 0
	int32 MBFAFFLKBME = 2; // offset: 32, xor const: 0
	bool FJLKHHDAKFA = 3; // offset: 36, xor const: 0
}

// CmdId: 9108
message DDGKHLLLKLM {
	repeated uint32 DGOHKPOHMAN = 14; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 1336
}

message LIPILJCHNGP {
	int32 ANFOMDNEAFI = 5; // offset: 68, xor const: 1732
	uint32 EALAAMDNMPA = 6; // offset: 40, xor const: 844
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 16, xor const: 0
	float AAEKAKLCBNP = 15; // offset: 48, xor const: 0
	uint32 HKGMKFNPGEK = 13; // offset: 64, xor const: 11364
	float MPNELAKBEIA = 11; // offset: 60, xor const: 0
	float GCOLEONOCOD = 7; // offset: 52, xor const: 0
	repeated uint32 HIOFHONLMNG = 4; // offset: 24, xor const: 0
	float KECDDLLFBNN = 9; // offset: 56, xor const: 0
	float MCGEJEKOFEL = 1; // offset: 44, xor const: 0
	float PHNOMIABIMG = 14; // offset: 72, xor const: 0
	int32 BMDFGCEJFLJ = 8; // offset: 76, xor const: 4702
}

message EMBAAPNCFGN {
	int32 EKLGNOIEMLA = 1; // offset: 32, xor const: 0
	bool FOPPABKBCIH = 6; // offset: 36, xor const: 0
	bool GMCAABHABEO = 3; // offset: 38, xor const: 0
	int32 GJPPELNNBEN = 5; // offset: 28, xor const: 0
	int32 HLEAEPDDBLE = 2; // offset: 24, xor const: 0
	bool MKKJCFLOAJC = 4; // offset: 37, xor const: 0
}

// CmdId: 4007
message OBBNDPNDFMH {
	int32 LODMMOBNBKG = 6; // offset: 24, xor const: 12974
}

// CmdId: 3680
message FNIGLIEIHJM {
	bool KKLHNHBKFDM = 4; // offset: 24, xor const: 0
}

enum JAMBJMLILPN {
	JAMBJMLILPN_BLJJKMFDMPM = 0;
	JAMBJMLILPN_MICFABGKNAJ = 1;
	JAMBJMLILPN_BPDKHEOGENE = 2;
	JAMBJMLILPN_GNDHOFCCIAF = 3;
	JAMBJMLILPN_EPDDFILGOKN = 4;
	JAMBJMLILPN_HODGHHJMDIJ = 5;
	JAMBJMLILPN_LHLKBJGHOPB = 6;
}

// CmdId: 6615
message HDGHOBLPNLB {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 246
	bool PJOPGAAHLJE = 1; // offset: 28, xor const: 0
}

message PODHHMBPAIP {
	bool EFHKPGKDCOP = 8; // offset: 65, xor const: 0
	string PECAFAPOHND = 1; // offset: 16, xor const: 0
	bool FGBPLOKICAF = 4; // offset: 64, xor const: 0
	FHANJGEFKLI HLEAEPDDBLE = 5; // offset: 68, xor const: 0
	FGKJFCJILIL NGFLBMOBPMJ = 7; // offset: 40, xor const: 0
	FGKJFCJILIL CKILDKNGINN = 6; // offset: 32, xor const: 0
	FGKJFCJILIL HCGNFMFOLFO = 2; // offset: 24, xor const: 0
	FGKJFCJILIL MEJNAAHILIM = 3; // offset: 48, xor const: 0
}

// CmdId: 9407
message GDINHGHHOMP {
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 15094
	CIHJFKPBHHI CPEPJEPHPBD = 14; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 13167
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 11862
}

// CmdId: 2007
message DBKCKOBMLIJ {
	uint32 OMGOMPKNPGM = 7; // offset: 28, xor const: 8511
	uint32 AMIJIAHGPMC = 6; // offset: 24, xor const: 12292
}

message EHDDFDONEIH {
	string IBONJBPBOOJ = 1; // offset: 16, xor const: 0
}

// CmdId: 184
message PIAKHMFAHOM {
	uint32 GMDKDIPOOGA = 11; // offset: 24, xor const: 5891
}

message BAJKLEIGNIG {
	NFNNEDOGLOF HLEAEPDDBLE = 2; // offset: 32, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 24, xor const: 0
}

// CmdId: 8426
message IOOPKAILDJO {
}

// CmdId: 6496
message AMFFICANJGL {
	repeated CDCKBKINECM AJNEJPBBEJG = 13; // offset: 32, xor const: 0
	KGNKNJLDLFN KBFBDIJGDGG = 12; // offset: 48, xor const: 0
	repeated uint32 GAMFPDBOKLM = 6; // offset: 40, xor const: 0
	repeated FGHICGPHKJA EIINGMCNCEJ = 4; // offset: 16, xor const: 0
	bool JIPJPDHPKAP = 9; // offset: 56, xor const: 0
	uint32 BFABKNIJNGM = 3; // offset: 52, xor const: 9129
}

message KGLBIKKNJMC {
	string IMPOAHEBNNB = 4; // offset: 16, xor const: 0
	int32 OPFEAMDPIAG = 1; // offset: 40, xor const: 0
	bool JCHALGLHHKB = 2; // offset: 36, xor const: 0
	int32 KACALAHFGAG = 3; // offset: 32, xor const: 0
}

// CmdId: 3130
message EHBLCCFMBDM {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 15832
}

message DDNOIEPKEIB {
	FGKJFCJILIL DDMIIIEJHPE = 2; // offset: 24, xor const: 0
	ACOGLKILALC HLEAEPDDBLE = 1; // offset: 40, xor const: 0
	FGKJFCJILIL CKBOJACIJDI = 3; // offset: 16, xor const: 0
}

// CmdId: 5205
message FLLPNMFBNEN {
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 24, xor const: 0
	PJMAPNKKIDE CPEPJEPHPBD = 7; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 5; // offset: 56, xor const: 14220
	uint32 KMKPPDICOKA = 1; // offset: 48, xor const: 8235
	uint64 HEJBMNAOJFL = 10; // offset: 40, xor const: 529
}

message PLAMGJGGKBD {
	FGKJFCJILIL CONOAJMMHMB = 1; // offset: 32, xor const: 0
	EIPGCACPDNM ICHKBLANGDL = 4; // offset: 40, xor const: 0
	FGKJFCJILIL LHIBKOLGPPI = 2; // offset: 24, xor const: 0
	bool FLMEBFEHOAO = 3; // offset: 44, xor const: 0
}

message BEFEOIJLGLO {
}

enum EJJMIMPHAEH {
	EJJMIMPHAEH_AKPFAABOENA = 0;
}

message MKDKKLNNJAK {
	repeated string GPINOBIMPHC = 5; // offset: 16, xor const: 0
}

enum HollowSystemUIState {
	HOLLOW_SYSTEM_UI_STATE_HOLLOW_SYSTEM_UI_STATE_NORMAL = 0;
	HOLLOW_SYSTEM_UI_STATE_HOLLOW_SYSTEM_UI_STATE_CLOSE = 1;
	HOLLOW_SYSTEM_UI_STATE_HOLLOW_SYSTEM_UI_STATE_BRIGHTEN = 2;
}

message AADCOINIDOL {
}

message MBFHHOEDBMP {
	bool CEBMNHEEKNE = 2; // offset: 32, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 16, xor const: 0
}

// CmdId: 9277
message PIOHDNDBBCN {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 8003
}

message IINAKJBLHPJ {
	repeated BJLAJDPPILM GJHPDKHHONE = 2; // offset: 24, xor const: 0
	uint32 BEKFLJGFLJD = 1; // offset: 32, xor const: 0
}

message OLPBIDDABFD {
	bool MDOIJJOIEIC = 6; // offset: 58, xor const: 0
	string BEMKPNCMFFE = 2; // offset: 32, xor const: 0
	string IPGMMIMICMA = 4; // offset: 16, xor const: 0
	string HAOGOPGJIJN = 5; // offset: 40, xor const: 0
	string EKNFNFCPCMH = 7; // offset: 48, xor const: 0
	bool MNBMPDPEHEA = 3; // offset: 56, xor const: 0
	bool FKCDINFGBME = 1; // offset: 57, xor const: 0
}

message HCFOBACEHKH {
	uint32 FDIJEMGKCBK = 9; // offset: 40, xor const: 15779
	repeated MMDBEFMKNEB PKKFNEHLMHF = 5; // offset: 24, xor const: 0
	repeated uint32 OGLPCLPPDCH = 10; // offset: 32, xor const: 0
}

message OFJCLCLACLB {
	uint32 BJBHBCHIENH = 7; // offset: 64, xor const: 9487
	map<uint32, uint32> LJDGMPEHIJO = 15; // offset: 40, xor const: 0
	repeated KDEEDMLHBLP ONLJMNIDOLA = 12; // offset: 48, xor const: 0
	bool NEFOCGANEEO = 4; // offset: 76, xor const: 0
	uint32 KOMIMFNADCM = 3; // offset: 68, xor const: 10650
	uint32 EKLGNOIEMLA = 2; // offset: 72, xor const: 3582
	repeated uint32 JCMILONLMLN = 6; // offset: 24, xor const: 0
	repeated uint32 ALIDKKCIBIO = 10; // offset: 56, xor const: 0
	map<uint32, uint32> DOOEHHOLADE = 5; // offset: 32, xor const: 0
}

// CmdId: 4566
message BPEBBPIBPEE {
	uint64 HEJBMNAOJFL = 10; // offset: 56, xor const: 12655
	uint32 KMKPPDICOKA = 5; // offset: 40, xor const: 9319
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 879
	BJCNIJCEPLE CPEPJEPHPBD = 14; // offset: 16, xor const: 0
}

// CmdId: 5596
message JNLABNNCBKG {
	uint32 GNOPMPEJPHF = 4; // offset: 28, xor const: 2132
	bool DNPHNLKKBLF = 12; // offset: 24, xor const: 0
}

// CmdId: 3353
message NLIBAKJBBOA {
	HLCBBNHEFBC EPNHGODIOPH = 14; // offset: 56, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 96, xor const: 13178
	uint32 EDNEBLCEHEH = 10; // offset: 84, xor const: 13976
	uint64 FLKHDMFPKHP = 8; // offset: 72, xor const: 965
	uint32 PEDKNCIMHLA = 11; // offset: 68, xor const: 6088
	bool DABOOFJLECC = 3; // offset: 64, xor const: 0
	string KGKCHAKNMPH = 7; // offset: 16, xor const: 0
	string MNKJOOFCEAN = 1993; // offset: 48, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 88, xor const: 12741
	int32 PGBEANGMHMB = 5; // offset: 92, xor const: 15453
	EFAGLHOJNAF PNJCMDAELEA = 6; // offset: 32, xor const: 0
	uint32 KNHBKBLCHIO = 2; // offset: 80, xor const: 15286
	repeated EFAGLHOJNAF OCKFKKPPDDH = 1; // offset: 24, xor const: 0
	int32 HKIEDEPCMIH = 1003; // offset: 60, xor const: 13555
}

enum ONHNIHHFMIN {
	ONHNIHHFMIN_ACTION_TYPE_NONE = 0;
	ONHNIHHFMIN_WAIT_SECONDS = 1;
	ONHNIHHFMIN_LOG_TEXT = 2;
	ONHNIHHFMIN_WAIT = 3;
	ONHNIHHFMIN_LOG = 4;
	ONHNIHHFMIN_OPEN_UI = 5;
	ONHNIHHFMIN_SWITCH_SECTION = 6;
	ONHNIHHFMIN_ANIM_CTRLER_PARAM = 7;
	ONHNIHHFMIN_SHOW_TIP = 8;
	ONHNIHHFMIN_SHOW_POP_WINDOW = 9;
	ONHNIHHFMIN_WALK_FAR_AWAY = 10;
	ONHNIHHFMIN_OPEN_DIALOG_HOLLOW = 12;
	ONHNIHHFMIN_CLOSE_DIALOG_HOLLOW = 13;
	ONHNIHHFMIN_PLAY_ANIM_HOLLOW = 14;
	ONHNIHHFMIN_CAMERA_STRETCH = 15;
	ONHNIHHFMIN_CAMERA_MOVE = 16;
	ONHNIHHFMIN_CAMERA_MOVE_V_2 = 17;
	ONHNIHHFMIN_SHOW_TIP_HOLLOW = 18;
	ONHNIHHFMIN_SHOW_POP_WINDOW_HOLLOW = 19;
	ONHNIHHFMIN_PLAY_POST_EFFECT = 20;
	ONHNIHHFMIN_ENTER_HOLLOW_QUEST = 21;
	ONHNIHHFMIN_ENTER_ARCHIVE_FILE_QUEST = 22;
	ONHNIHHFMIN_PRESET = 23;
	ONHNIHHFMIN_BLACK_MASK = 24;
	ONHNIHHFMIN_PLAY_SOUND = 25;
	ONHNIHHFMIN_CLOSE_TIP = 26;
	ONHNIHHFMIN_RECONECT_CHESSBOARD = 27;
	ONHNIHHFMIN_HOLLOW_SET_SWITCH_EFFECT = 28;
	ONHNIHHFMIN_OUT_DOOR = 29;
	ONHNIHHFMIN_FREEZE_CHESSBOARD_CAMERA = 30;
	ONHNIHHFMIN_SHOW_VHS_STORE_LEVEL_TIPS = 31;
	ONHNIHHFMIN_INTERACT_NPC_WITH_ANIM = 32;
	ONHNIHHFMIN_CHANGE_HOLLOW_BG = 33;
	ONHNIHHFMIN_TRASH_GACHA_GET_DATA = 34;
	ONHNIHHFMIN_TRASH_GACHA = 35;
	ONHNIHHFMIN_SHOW_QUEST_TIP = 36;
	ONHNIHHFMIN_TELEPORT_UI = 37;
	ONHNIHHFMIN_CAMERA_ACTIVE = 38;
	ONHNIHHFMIN_CAMERA_RESET = 39;
	ONHNIHHFMIN_CREATE_FC = 40;
	ONHNIHHFMIN_BEHAVIOUR_FC = 41;
	ONHNIHHFMIN_SEND_EVENT_FC = 42;
	ONHNIHHFMIN_READ_FC_BLACK_BOARD_DATA = 43;
	ONHNIHHFMIN_WRITE_FC_BLACK_BOARD_DATA = 44;
	ONHNIHHFMIN_CHANGE_SOUND_STATE = 45;
	ONHNIHHFMIN_AFK_HOLLOW = 46;
	ONHNIHHFMIN_SWITCH_BIG_TV = 49;
	ONHNIHHFMIN_TRIGGER_INTERACT = 52;
	ONHNIHHFMIN_STOP_ANIM = 53;
	ONHNIHHFMIN_GET_TRUST = 54;
	ONHNIHHFMIN_PLAY_DIALOG_ANIM = 56;
	ONHNIHHFMIN_UNFREEZE_CHESSBOARD_CAMERA = 57;
	ONHNIHHFMIN_WAIT_TIPS_END = 58;
	ONHNIHHFMIN_BEGIN_TUTORIAL_GUIDE = 59;
	ONHNIHHFMIN_FOCUS_CAMERA = 60;
	ONHNIHHFMIN_UNLOCK_CLUE = 61;
	ONHNIHHFMIN_AVATAR_TIPS_SWITCH = 62;
	ONHNIHHFMIN_FINISH_RESCUE = 63;
	ONHNIHHFMIN_PLAY_TV_EFFECT = 64;
	ONHNIHHFMIN_SET_INTERACT_POINT = 65;
	ONHNIHHFMIN_HIDE_MAIN_CITY_UI = 66;
	ONHNIHHFMIN_CHAT_CAMERA = 67;
	ONHNIHHFMIN_CREATE_CLIENT_ENTITY = 68;
	ONHNIHHFMIN_SET_NPC_VISIBLE_CLIENT = 69;
	ONHNIHHFMIN_GACHA_ITEM_PERFORM = 70;
	ONHNIHHFMIN_SET_MESSAGE_CLIENT = 71;
	ONHNIHHFMIN_MOD_MAIN_CITY_TIME_CLIENT = 72;
	ONHNIHHFMIN_MODIFY_LIGHT_LEVEL_PERFORM = 73;
	ONHNIHHFMIN_SET_POSITION = 74;
	ONHNIHHFMIN_SET_CHESSBOARD_PERFORM_MODE = 75;
	ONHNIHHFMIN_TRANSITION = 76;
	ONHNIHHFMIN_WAIT_UNTIL_UI_CLOSE = 77;
	ONHNIHHFMIN_WAIT_TRANSITION_END = 78;
	ONHNIHHFMIN_CLOSE_UI = 79;
	ONHNIHHFMIN_QUIT_PHOTO = 80;
	ONHNIHHFMIN_SHOW_TELEPORT_UI = 81;
	ONHNIHHFMIN_MODIFY_CAMERA_TARGET_SECTION = 82;
	ONHNIHHFMIN_CAMERA_BACK_TO_PLAYER = 83;
	ONHNIHHFMIN_RESET_SCENE_OBJ = 84;
	ONHNIHHFMIN_MANUAL_ACCELERATE = 85;
	ONHNIHHFMIN_BREAK_NAVIGATE = 86;
	ONHNIHHFMIN_SHOW_EXIT_BUTTON_NEW = 88;
	ONHNIHHFMIN_SHOW_BOTTOM_TIP_HOLLOW = 89;
	ONHNIHHFMIN_SHOW_CHAPTER_TIP = 90;
	ONHNIHHFMIN_ENTER_DUNGEON_QUEST = 91;
	ONHNIHHFMIN_DOWNLOAD_FULL_RESOURCE = 92;
	ONHNIHHFMIN_AREA_TIPS = 93;
	ONHNIHHFMIN_CLIENT_PERFORM = 94;
	ONHNIHHFMIN_SHOW_ITEM = 95;
	ONHNIHHFMIN_SWITCH_OVA = 96;
	ONHNIHHFMIN_SET_LIFT_STATUS = 97;
	ONHNIHHFMIN_AREA_CAMERA_MODIFY = 98;
	ONHNIHHFMIN_TRIGGER_PERFORM_BEHAVIOR = 99;
	ONHNIHHFMIN_SWITCH_ATMOSPHERE = 100;
	ONHNIHHFMIN_MODIFY_LIGHT_DIFFUSION_POINTS = 101;
	ONHNIHHFMIN_MOD_CAT_NAME = 102;
	ONHNIHHFMIN_OPEN_UI_GAME = 103;
	ONHNIHHFMIN_OPEN_DIALOG_HOLLOW_V_2 = 104;
	ONHNIHHFMIN_PLAY_DIALOG_ANIM_V_2 = 105;
	ONHNIHHFMIN_CLOSE_DIALOG_HOLLOW_V_2 = 106;
	ONHNIHHFMIN_BREAK_DIALOG_ANIM_V_2 = 107;
	ONHNIHHFMIN_WAIT_ANIM_END = 108;
	ONHNIHHFMIN_PLAY_ANIM_SEQUENCE = 109;
	ONHNIHHFMIN_END_OVERLORDFEAST_GAME = 110;
	ONHNIHHFMIN_PLAY_AIM_SEQUENCE = 111;
	ONHNIHHFMIN_CLIENT_SWITCH_DELAY = 112;
	ONHNIHHFMIN_BEGIN_PHOTO = 113;
	ONHNIHHFMIN_CHESSBOARD_GAME_HENSHIN = 114;
	ONHNIHHFMIN_SWITCH_GUISE_AVATAR = 115;
	ONHNIHHFMIN_IF = 1001;
	ONHNIHHFMIN_START_LOOP = 1002;
	ONHNIHHFMIN_END_LOOP = 1003;
	ONHNIHHFMIN_CALL_FUNCTION = 1004;
	ONHNIHHFMIN_RETURN = 1005;
	ONHNIHHFMIN_RESET_EVENT = 1006;
	ONHNIHHFMIN_ADD_ITEM = 1007;
	ONHNIHHFMIN_SET_VARIABLE = 1008;
	ONHNIHHFMIN_SET_CONDITION_PROGRESS = 1009;
	ONHNIHHFMIN_RANDOM_VARIABLE_VALUE = 1010;
	ONHNIHHFMIN_LIST_SPECIAL_OPT = 1011;
	ONHNIHHFMIN_FINISH_QUEST = 1012;
	ONHNIHHFMIN_RANDOM_WITH_WEIGHT = 1013;
	ONHNIHHFMIN_PERFORM = 1014;
	ONHNIHHFMIN_REWARD = 1015;
	ONHNIHHFMIN_SET_LIST = 1016;
	ONHNIHHFMIN_GET_LIST = 1017;
	ONHNIHHFMIN_START_ACTION = 1018;
	ONHNIHHFMIN_SET_STRING = 1019;
	ONHNIHHFMIN_SEND_CUSTOM_EVENT_TRACKING = 1020;
	ONHNIHHFMIN_EMPTY_ACTION = 1021;
	ONHNIHHFMIN_SET_VECTOR_2 = 1022;
	ONHNIHHFMIN_SWITCH = 1023;
	ONHNIHHFMIN_SWITCH_COMPARE_INT = 1024;
	ONHNIHHFMIN_DRAW = 1025;
	ONHNIHHFMIN_SET_VEC_2_LIST = 1026;
	ONHNIHHFMIN_GET_VEC_2_LIST = 1027;
	ONHNIHHFMIN_CALL_FUNCTION_V_2 = 1028;
	ONHNIHHFMIN_ENTER_HOLLOW_SHOP = 2001;
	ONHNIHHFMIN_MAKE_CHOICE = 2002;
	ONHNIHHFMIN_MODIFY_SCENE_PROPERTY = 2003;
	ONHNIHHFMIN_FINISH_EVENT = 2004;
	ONHNIHHFMIN_TRIGGER_BATTLE = 2005;
	ONHNIHHFMIN_AVERAGE_AVATAR_HP = 2006;
	ONHNIHHFMIN_REMOVE_CARD = 2007;
	ONHNIHHFMIN_DROP_POOL = 2009;
	ONHNIHHFMIN_TRANSFER = 2011;
	ONHNIHHFMIN_FINISH_HOLLOW = 2012;
	ONHNIHHFMIN_RANDOM_ITEM_CARD = 2014;
	ONHNIHHFMIN_EVENT_MODIFICATION = 2015;
	ONHNIHHFMIN_CHANGE_AVATAR_STATE = 2016;
	ONHNIHHFMIN_DROP_PACK = 2017;
	ONHNIHHFMIN_SET_MAP_STATE = 2018;
	ONHNIHHFMIN_DROP_CURSE = 2019;
	ONHNIHHFMIN_LOG_HOLLOW = 2020;
	ONHNIHHFMIN_DROP_CARD = 2021;
	ONHNIHHFMIN_CHANGE_HOLLOW_EVENT_WEIGHT = 2022;
	ONHNIHHFMIN_REMOVE_CURSE = 2023;
	ONHNIHHFMIN_HIDE_NODE = 2024;
	ONHNIHHFMIN_SET_CHALLENGE = 2025;
	ONHNIHHFMIN_DROP_CHALLENGE_ID = 2026;
	ONHNIHHFMIN_GET_AVATAR_INFO = 2027;
	ONHNIHHFMIN_SET_HOLLOW_ITEM = 2028;
	ONHNIHHFMIN_CHANGE_CHARACTER = 2029;
	ONHNIHHFMIN_NEW_HOLLOW = 2030;
	ONHNIHHFMIN_SLOT_MACHINE = 2033;
	ONHNIHHFMIN_SET_HOLLOW_BLACK_OUT = 2034;
	ONHNIHHFMIN_FINISH_BLACK_OUT = 2035;
	ONHNIHHFMIN_SET_HOLLOW_SYSTEM_STATE = 2036;
	ONHNIHHFMIN_ADD_CHARACTER = 2037;
	ONHNIHHFMIN_LOCK_CURSE = 2038;
	ONHNIHHFMIN_HOLLOW_DISTANCE = 2039;
	ONHNIHHFMIN_PUSH_BACK = 2040;
	ONHNIHHFMIN_APPLY_ABILITY = 2041;
	ONHNIHHFMIN_REMOVE_ABILITY = 2042;
	ONHNIHHFMIN_RANDOM_BATTLE_ID = 2044;
	ONHNIHHFMIN_GET_INDEX_BY_FILTER = 2046;
	ONHNIHHFMIN_SET_BATTLE_TYPE = 2048;
	ONHNIHHFMIN_GET_POSITION = 2049;
	ONHNIHHFMIN_START_MINI_GAME = 2050;
	ONHNIHHFMIN_SET_HOLLOW_ITEM_SLOT = 2051;
	ONHNIHHFMIN_GET_HOLLOW_ITEM = 2052;
	ONHNIHHFMIN_SEARCH_GRID = 2053;
	ONHNIHHFMIN_SET_NPC_STATE = 2054;
	ONHNIHHFMIN_GET_NPC_INSTANCE_ID = 2055;
	ONHNIHHFMIN_DESTORY_NPC = 2056;
	ONHNIHHFMIN_ADD_CHARACTER_ABYSS = 2057;
	ONHNIHHFMIN_CHANGE_CHARACTER_ABYSS = 2058;
	ONHNIHHFMIN_GET_CHARACTER_POOL_ABYSS = 2059;
	ONHNIHHFMIN_ABYSS_DROP_CHARACTER_POOL = 2060;
	ONHNIHHFMIN_GET_LEADER_OF_HOLLOW_NPC = 2061;
	ONHNIHHFMIN_SET_LEADER_OF_HOLLOW_NPC = 2062;
	ONHNIHHFMIN_UPDATE_SAVE_NPC_NUM = 2063;
	ONHNIHHFMIN_PUSH_WITH_DIRECTION = 2064;
	ONHNIHHFMIN_HOLLOW_NPC_FIND_PATH = 2065;
	ONHNIHHFMIN_HOLLOW_NPC_MOVE = 2066;
	ONHNIHHFMIN_NEW_CHESSBOARD = 2067;
	ONHNIHHFMIN_GO_TO_NEXT_LAYER = 2068;
	ONHNIHHFMIN_GO_TO_CHESSBOARD = 2069;
	ONHNIHHFMIN_GET_PRE_CHESSBOARD = 2070;
	ONHNIHHFMIN_TRIGGER_HOLLOW_NPC_BEHAVIOR = 2071;
	ONHNIHHFMIN_SHOW_LAYER_RESULT = 2072;
	ONHNIHHFMIN_HENSHIN = 2073;
	ONHNIHHFMIN_CREATE_HOLLOW_NPC = 2074;
	ONHNIHHFMIN_DROP_CHESSBOARD_ID = 2075;
	ONHNIHHFMIN_MAKE_DIALOG_CHOICE = 2076;
	ONHNIHHFMIN_GET_EVENT_ID = 2077;
	ONHNIHHFMIN_COUNT_DROP_POOL = 2078;
	ONHNIHHFMIN_MAKE_ITEM_CHOICE = 2079;
	ONHNIHHFMIN_HP_ACT_HOLLOW = 2080;
	ONHNIHHFMIN_BAN_HOLLOW_EVENT = 2081;
	ONHNIHHFMIN_COORDINATE_TRANSFORM = 2082;
	ONHNIHHFMIN_REGISTER_VARIABLE_CONDITION = 2083;
	ONHNIHHFMIN_ON_OFF_CATEGORY = 2084;
	ONHNIHHFMIN_RESET_BIG_TV_SNAPSHOT = 2087;
	ONHNIHHFMIN_BIG_TV_SUPPORT_SNAPSHOT = 2088;
	ONHNIHHFMIN_SET_EVENT_ICON = 2089;
	ONHNIHHFMIN_GET_ANIM_SHEET_ID = 2090;
	ONHNIHHFMIN_HOLLOW_NPC_HENSHIN = 2091;
	ONHNIHHFMIN_HOLLOW_NPC_TRANSFER = 2092;
	ONHNIHHFMIN_BIND_BIG_TV = 2093;
	ONHNIHHFMIN_MOVE_NPC_TO_SECTION = 2098;
	ONHNIHHFMIN_GET_NPC_ID = 2099;
	ONHNIHHFMIN_SEARCH_HOLLOW_NPC = 2100;
	ONHNIHHFMIN_BOOM = 2101;
	ONHNIHHFMIN_TRIGGER_HOLLOW_EVENT = 2102;
	ONHNIHHFMIN_BREAK_DIALOG_ANIM = 2103;
	ONHNIHHFMIN_MOVE_BIG_TV = 2104;
	ONHNIHHFMIN_SET_NEXT_LAYER_CHESSBOARD_ID = 2105;
	ONHNIHHFMIN_GET_BOSS_BATTLE_EVENT = 2106;
	ONHNIHHFMIN_CREATE_HOLLOW_SNAKE = 2107;
	ONHNIHHFMIN_SET_GRID_STAMINA_STATE = 2108;
	ONHNIHHFMIN_DISPLAY_BIG_TV_CHESSBOARD = 2109;
	ONHNIHHFMIN_SPLIT_HOLLOW_SNAKE = 2110;
	ONHNIHHFMIN_GET_HOLLOW_SNAKE_INFO = 2111;
	ONHNIHHFMIN_MODIFY_HOLLOW_SNAKE = 2112;
	ONHNIHHFMIN_CHANGE_HOLLOW_NPC_APPERANCE = 2113;
	ONHNIHHFMIN_OPEN_BIG_TV_SOKOBAN_GAME = 2114;
	ONHNIHHFMIN_SET_INTERCONNECTED_STORY_EVENT = 2115;
	ONHNIHHFMIN_HOLLOW_NPC_IMITATE = 2116;
	ONHNIHHFMIN_TRIGGER_HOLLOW_NPC_EARLY_ACT = 2117;
	ONHNIHHFMIN_GET_AVATAR_BY_TAG = 2118;
	ONHNIHHFMIN_SET_BATTLE_TYPE_ABYSS = 2119;
	ONHNIHHFMIN_REMOVE_EVENT_ID_FROM_RANDOM_POOL = 2120;
	ONHNIHHFMIN_RECYCLE_HOLLOW_ITEM = 2121;
	ONHNIHHFMIN_COPY_EVENT = 2122;
	ONHNIHHFMIN_BAN_CHARACTER = 2123;
	ONHNIHHFMIN_REMOVE_CHARACTER = 2124;
	ONHNIHHFMIN_SET_NPC_ATTR = 2125;
	ONHNIHHFMIN_GET_NPC_ATTR = 2126;
	ONHNIHHFMIN_HIT_NPC = 2127;
	ONHNIHHFMIN_GET_PLAYER_HOLLOW_MOVE_PATH = 2128;
	ONHNIHHFMIN_GET_BIG_TV_INDEX = 2129;
	ONHNIHHFMIN_CLEAR_NPC = 2130;
	ONHNIHHFMIN_SAVE_MINI_SNAPSHOT = 2131;
	ONHNIHHFMIN_GET_POSSESS_HOLLOW_ITEM = 2132;
	ONHNIHHFMIN_RESET_HOLLOW_LINE_QUEST = 2133;
	ONHNIHHFMIN_MODIFY_LIGHT_LEVEL = 2134;
	ONHNIHHFMIN_GET_LIGHT_LEVEL = 2135;
	ONHNIHHFMIN_ADD_HOLLOW_LIGHT = 2136;
	ONHNIHHFMIN_REMOVE_HOLLOW_LIGHT = 2137;
	ONHNIHHFMIN_MODIFY_CHESSBOARD_PLUGIN = 2138;
	ONHNIHHFMIN_GET_LIGHT_UID = 2139;
	ONHNIHHFMIN_NEW_BOOM = 2140;
	ONHNIHHFMIN_SET_ENTITY_PARAM = 2141;
	ONHNIHHFMIN_GET_ENTITY_PARAM = 2142;
	ONHNIHHFMIN_REPAIR_ZONE = 2143;
	ONHNIHHFMIN_PUSH_REPAIR_ZONE = 2144;
	ONHNIHHFMIN_SET_INNER_WORLD_MAP_STATE = 2145;
	ONHNIHHFMIN_LIST_CONVERT = 2146;
	ONHNIHHFMIN_ABYSS_GET_BATTLE_EVENT = 2147;
	ONHNIHHFMIN_TRIGGER_ENTITY_BASIC_BEHAVIOR = 2148;
	ONHNIHHFMIN_TRIGGER_ENTITY_MOVE = 2149;
	ONHNIHHFMIN_TRIGGER_ENTITY_TRANSFER = 2150;
	ONHNIHHFMIN_TRIGGER_ENTITY_INTERACT = 2151;
	ONHNIHHFMIN_UPGRADE_CARD = 2152;
	ONHNIHHFMIN_NEW_TIME_REWIND = 2153;
	ONHNIHHFMIN_ENTER_TIME_REWIND = 2154;
	ONHNIHHFMIN_INIT_TIME_SEGMENT = 2155;
	ONHNIHHFMIN_MODIFY_TIME_SEGMENT = 2156;
	ONHNIHHFMIN_MODIFY_TIME_REWIND = 2157;
	ONHNIHHFMIN_GET_TIME_REWIND_INFO = 2158;
	ONHNIHHFMIN_FINISH_KEY_SEGMENT = 2159;
	ONHNIHHFMIN_ACTIVATE_GRID_IN_SEGMENT = 2160;
	ONHNIHHFMIN_COUNT_CARD_POOL = 2161;
	ONHNIHHFMIN_MAKE_BANGBOO_CHOICE = 2162;
	ONHNIHHFMIN_CHANGE_BANGBOO_CHOICE = 2163;
	ONHNIHHFMIN_TRIGGER_ENTITY_SCRIPT = 2164;
	ONHNIHHFMIN_ADD_STRESS_PUNISH_CURSE = 2165;
	ONHNIHHFMIN_POPUP_TIP = 2166;
	ONHNIHHFMIN_HIDE_HOLLOW_ENTITY = 2167;
	ONHNIHHFMIN_GET_ENTITY_PRIORITY_LIST = 2168;
	ONHNIHHFMIN_CHESS_UI_CONTROLLER = 2169;
	ONHNIHHFMIN_GET_ENTITY_PRIORITY = 2170;
	ONHNIHHFMIN_CREATE_ENTITY = 2171;
	ONHNIHHFMIN_DESTROY_ENTITY_BY_UID = 2172;
	ONHNIHHFMIN_INTERACT_WITH_ENTITY = 2173;
	ONHNIHHFMIN_SEARCH_POSITION = 2174;
	ONHNIHHFMIN_FILTER_HOLLOW_ENTITY = 2175;
	ONHNIHHFMIN_MODIFY_STACKING_ORDER = 2176;
	ONHNIHHFMIN_INIT_CONWAY_LIFE_GAME = 2177;
	ONHNIHHFMIN_ITERATE_CONWAY_LIFE_GAME = 2178;
	ONHNIHHFMIN_CHANGE_CONWAY_LIFE_GAME_GRID_STATE = 2179;
	ONHNIHHFMIN_BIG_TV_CHESS_UI_CONTROLLER = 2180;
	ONHNIHHFMIN_SET_ENTITY_STATE = 2181;
	ONHNIHHFMIN_REMOVE_ENTITY_STATE = 2182;
	ONHNIHHFMIN_GET_EVENT_TEXTURE = 2183;
	ONHNIHHFMIN_MODIFY_COMPONENT = 2184;
	ONHNIHHFMIN_CHANGE_HOLLOW_SOUND_STATE = 2185;
	ONHNIHHFMIN_SET_ENTITY_SCRIPT_VARIABLE = 2186;
	ONHNIHHFMIN_CREATE_SIGNAL = 2187;
	ONHNIHHFMIN_SUBSCRIBE_SIGNAL = 2188;
	ONHNIHHFMIN_UNSUBSCRIBE_SIGNAL = 2189;
	ONHNIHHFMIN_SEND_SIGNAL = 2190;
	ONHNIHHFMIN_DESTROY_SIGNAL = 2191;
	ONHNIHHFMIN_SET_MULTI_HOLLOW_OUT_SECTION = 2192;
	ONHNIHHFMIN_GET_ENTITY_SCRIPT_VARIABLE = 2193;
	ONHNIHHFMIN_REMOVE_CHESSBOARD = 2194;
	ONHNIHHFMIN_BEGIN_TUTORIAL_GUIDE_INTERACT = 2195;
	ONHNIHHFMIN_TIME_REWIND_INTERACT = 2196;
	ONHNIHHFMIN_LIMBO_AVATAR_CARD = 2197;
	ONHNIHHFMIN_LIMBO_CAMP_EVENT = 2198;
	ONHNIHHFMIN_MODIFY_AIM_RECT_COMPONENT = 2199;
	ONHNIHHFMIN_REMOVE_FROM_POOL = 2200;
	ONHNIHHFMIN_ACTIVATE_SEGMENT_INTERACT = 2201;
	ONHNIHHFMIN_RECORD_USE_INITIATIVE_ITEM = 2202;
	ONHNIHHFMIN_MODIFY_MULTI_HOLLOW_OUT_FLOOR = 2203;
	ONHNIHHFMIN_SET_MULTI_HOLLOW_OUT_VIEW = 2204;
	ONHNIHHFMIN_MARK_GRID_AS_ELEVATOR = 2205;
	ONHNIHHFMIN_MOVE_ELEVATOR_TO_SECTION = 2206;
	ONHNIHHFMIN_NEXT_DROP_CLUE_EVENT = 2207;
	ONHNIHHFMIN_MOVE_HOLLOW_EVENT = 2208;
	ONHNIHHFMIN_GET_FOCUS_CAMERA_PARAM = 2209;
	ONHNIHHFMIN_REPLACE_CARD = 2210;
	ONHNIHHFMIN_LOAD_EVENT_PARAM = 2211;
	ONHNIHHFMIN_SET_LAYER_TYPE = 2212;
	ONHNIHHFMIN_CREATE_HOLLOW_SPAWNER = 2213;
	ONHNIHHFMIN_SET_HOLLOW_SPAWNER = 2214;
	ONHNIHHFMIN_GET_HOLLOW_SPAWNER = 2215;
	ONHNIHHFMIN_RUN_HOLLOW_SPAWNER = 2216;
	ONHNIHHFMIN_PLAY_HOLLOW_QTE_GAME = 2217;
	ONHNIHHFMIN_SET_HOLLOW_PLAY_UI = 2218;
	ONHNIHHFMIN_SET_HOLLOW_ACTIVITY_PARAM = 2219;
	ONHNIHHFMIN_GET_HOLLOW_ACTIVITY_PARAM = 2220;
	ONHNIHHFMIN_REWARD_WITH_PERFORM = 2221;
	ONHNIHHFMIN_INIT_HACKER_GAME = 2222;
	ONHNIHHFMIN_MODIFY_HACKER_GAME_PARAM = 2223;
	ONHNIHHFMIN_MODIFY_POP_INTERACT_COMPONENT = 2224;
	ONHNIHHFMIN_SET_LEVEL_GLOBAL_VARIABLE = 2225;
	ONHNIHHFMIN_EVENT_MODIFICATION_BY_FALLING = 2226;
	ONHNIHHFMIN_TRY_MOVE_ELEVATOR = 2227;
	ONHNIHHFMIN_GET_EVENT_POOL_EVENT = 2228;
	ONHNIHHFMIN_CHESS_UI_3_D_CONTROLLER = 2229;
	ONHNIHHFMIN_HOLLOW_GAME_FINISH_TO_LEVEL = 2230;
	ONHNIHHFMIN_CHESSBOARD_SOKOBAN_UI_INFO = 2231;
	ONHNIHHFMIN_CREATE_NPC = 3001;
	ONHNIHHFMIN_SET_QUEST_PHASE = 3002;
	ONHNIHHFMIN_CHANGE_INTERACT = 3003;
	ONHNIHHFMIN_INTERACT_FINISH = 3004;
	ONHNIHHFMIN_REMOVE_MAIN_CITY_QUEST_NPC = 3005;
	ONHNIHHFMIN_REMOVE_MAIN_CITY_QUEST_INTERACT = 3006;
	ONHNIHHFMIN_CHANGE_BACK_SCENE_INFO = 3007;
	ONHNIHHFMIN_RESET_MAIN_CITY_QUEST_GROUP = 3008;
	ONHNIHHFMIN_UNLOCK_HOLLOW_QUEST = 3010;
	ONHNIHHFMIN_SET_NPC_VISIBLE = 3011;
	ONHNIHHFMIN_REMOVE_INTERACT = 3012;
	ONHNIHHFMIN_REMOVE_NPC = 3013;
	ONHNIHHFMIN_SET_VHS_STORE_LEVEL = 3014;
	ONHNIHHFMIN_SET_VHS_STORE_TREND_STATE = 3015;
	ONHNIHHFMIN_SWITCH_MAIN_CITY_TIME = 3016;
	ONHNIHHFMIN_THE_WORLD = 3017;
	ONHNIHHFMIN_FORCE_REFRESH = 3018;
	ONHNIHHFMIN_FORBID_AFK = 3019;
	ONHNIHHFMIN_SWITCH_MAIN_CHARACTER = 3020;
	ONHNIHHFMIN_SET_LAND_EVENT_FINISH = 3021;
	ONHNIHHFMIN_SET_BGM = 3022;
	ONHNIHHFMIN_SET_MAIN_CITY_OBJECT_STATE = 3023;
	ONHNIHHFMIN_EVENT_CHOICE = 3024;
	ONHNIHHFMIN_CREATE_MOVE_NPC = 3025;
	ONHNIHHFMIN_CHANGE_GUIDE_POINT = 3026;
	ONHNIHHFMIN_ADD_DAILY_QUEST = 3027;
	ONHNIHHFMIN_ADD_MICRO_TASK = 3028;
	ONHNIHHFMIN_SET_FIRST_MEET = 3029;
	ONHNIHHFMIN_CREATE_CAMERA_ZONE = 3030;
	ONHNIHHFMIN_SET_MAIN_CITY_TIME = 3031;
	ONHNIHHFMIN_NEXT_MAIN_CITY_TIME_PERIOD = 3032;
	ONHNIHHFMIN_PLAYER_SWITCH_MAIN_CHARACTER = 3033;
	ONHNIHHFMIN_END_TRANSITION = 3034;
	ONHNIHHFMIN_ADD_VHS_FLOW_BUFF = 3035;
	ONHNIHHFMIN_ACTIVATE_PHOTO_ID = 3036;
	ONHNIHHFMIN_ACCELERATE_MAIN_CITY_TIME = 3037;
	ONHNIHHFMIN_SET_TRASH_NEW_FLAG = 3038;
	ONHNIHHFMIN_USE_LAST_TIME = 3039;
	ONHNIHHFMIN_OCCUPY_OVERNIGHT = 3040;
	ONHNIHHFMIN_SHOW_PHOTO_QUEST_FINISH_TIP = 3041;
	ONHNIHHFMIN_ADD_SOUND_AMB = 3042;
	ONHNIHHFMIN_SUBMIT_ITEM = 3043;
	ONHNIHHFMIN_MOD_TRUST = 3044;
	ONHNIHHFMIN_SET_PARTNER_EVENT_STATE = 3045;
	ONHNIHHFMIN_SEND_MESSAGE = 3046;
	ONHNIHHFMIN_SWITCH_TRACK_QUEST = 3047;
	ONHNIHHFMIN_MOD_NPC = 3048;
	ONHNIHHFMIN_ACCEPT_OVERNIGHT = 3049;
	ONHNIHHFMIN_ACTIVE_TRIGGER = 3050;
	ONHNIHHFMIN_MOD_OBJ_STATE = 3051;
	ONHNIHHFMIN_MOD_SCENE_OBJ = 3052;
	ONHNIHHFMIN_FANS_SETTLE = 3053;
	ONHNIHHFMIN_OPEN_HALL_GAME = 3054;
	ONHNIHHFMIN_ADD_PARTNER_EVENT = 3055;
	ONHNIHHFMIN_EXEC_OVERNIGHT_EVENT = 3056;
	ONHNIHHFMIN_SOFA_REST_NEXT_TIME_PERIOD = 3057;
	ONHNIHHFMIN_BEGIN_UI_GAME = 3058;
	ONHNIHHFMIN_PREPARE_DATA = 3059;
	ONHNIHHFMIN_CLEAR_RP_RECOMMEND_RESULT = 3060;
	ONHNIHHFMIN_DO_MAIN_CITY_GAME = 3061;
	ONHNIHHFMIN_SHOW_IN_TODO = 3062;
	ONHNIHHFMIN_CHANGE_NPC_NAME = 3063;
	ONHNIHHFMIN_CREATE_OVA = 3064;
	ONHNIHHFMIN_SET_OVA_STATE = 3065;
	ONHNIHHFMIN_SWITCH_MAIN_CHARACTER_GUISE = 3066;
	ONHNIHHFMIN_COMPLETE_HALL_GAME = 3068;
	ONHNIHHFMIN_HIDE_MAIN_CONTROL_AVATAR = 3069;
	ONHNIHHFMIN_EAT_RAMEN = 3070;
	ONHNIHHFMIN_ONGOING_TIPS = 3071;
	ONHNIHHFMIN_SET_SOUND = 3072;
	ONHNIHHFMIN_MAP_CHOOSE_BY_EVENT = 4001;
	ONHNIHHFMIN_MAP_CHOOSE_BY_LAYER = 4002;
	ONHNIHHFMIN_MAP_CHOOSE_BY_NUM = 4003;
	ONHNIHHFMIN_MAP_CHOOSE_BY_RANGE = 4004;
	ONHNIHHFMIN_MAP_CLEAR_POOL = 4005;
	ONHNIHHFMIN_MAP_SET_EVENT = 4007;
	ONHNIHHFMIN_MAP_SET_LAYER = 4008;
	ONHNIHHFMIN_MAP_SET_TAG = 4009;
}

// CmdId: 3950
message NEEKGLGDGBG {
	LCFIKODLLON MJEFCJIPMEN = 9; // offset: 24, xor const: 0
}

enum COHEJJCNCID {
	COHEJJCNCID_OJJJHPCKAHL = 0;
	COHEJJCNCID_GOLIEGOEBCC = 1;
	COHEJJCNCID_GCPNLDOAIKH = 2;
	COHEJJCNCID_BOHJKAGMHPB = 3;
}

enum AEGFGJILMEJ {
	AEGFGJILMEJ_PLAY_MODE_NONE = 0;
	AEGFGJILMEJ_PLAY_MODE_DEFAULT = 1;
	AEGFGJILMEJ_PLAY_MODE_BIG_WORLD = 2;
	AEGFGJILMEJ_PLAY_MODE_ABYSS = 3;
}

enum LKHOJEJJMNO {
	LKHOJEJJMNO_KHJCBADMAMK = 0;
	LKHOJEJJMNO_JFHJEHPAELE = 1;
	LKHOJEJJMNO_OABEMKEOPIK = 2;
	LKHOJEJJMNO_MHMEGKNDJFJ = 3;
	LKHOJEJJMNO_KAHFECEHCJN = 4;
}

// CmdId: 4908
message IKJIFFFCFEF {
	uint32 IODKCMMJGAF = 7; // offset: 24, xor const: 4807
}

// CmdId: 4869
message ONCGJFIMAJN {
	uint32 DCENCIPOBMC = 13; // offset: 24, xor const: 6698
}

message BJHNNDMLDPK {
	uint32 AMIJIAHGPMC = 7; // offset: 24, xor const: 2156
}

message FJNHNACODIJ {
	bool MFIEHMGDJHG = 7; // offset: 36, xor const: 0
	AimRectColor COFDNNBBPJB = 3; // offset: 32, xor const: 0
	HIJPOABGBKK KBFBDIJGDGG = 1; // offset: 40, xor const: 0
	bool NCOJIMHFBGD = 5; // offset: 37, xor const: 0
	LDHKJGEMKIO OCAOFHJGJPC = 2; // offset: 24, xor const: 0
	bool CDDKAHDKEJI = 4; // offset: 38, xor const: 0
	BDEANJLNPKC DDMIPKHLKDL = 6; // offset: 44, xor const: 0
}

// CmdId: 2670
message BPNLECKPOHL {
	uint32 AMIJIAHGPMC = 4; // offset: 24, xor const: 3122
}

// CmdId: 2515
message NLGDEJNKIDH {
	uint32 GFCLKDAOMBM = 2; // offset: 68, xor const: 9255
	repeated uint32 JGJMLLPBLFK = 13; // offset: 32, xor const: 0
	uint32 IPJGGIAHGGE = 14; // offset: 48, xor const: 13121
	repeated uint32 MLIHFBDNNNK = 10; // offset: 40, xor const: 0
	uint32 HKMIKAEFOBA = 4; // offset: 56, xor const: 7726
	uint32 CKCLOFPICJP = 7; // offset: 52, xor const: 1394
	bool HNKBIDAPGOK = 15; // offset: 60, xor const: 0
	uint32 CNNGIJJBJLG = 12; // offset: 64, xor const: 5603
	repeated uint32 DJBCAJIOJKG = 11; // offset: 24, xor const: 0
}

message LOIAPKHMHBD {
	DHJOJLIONBI MNMLFHFJCIB = 10; // offset: 16, xor const: 0
}

// CmdId: 6334
message IAKOOKEHOFD {
	uint32 LHDHLCKNFIG = 3; // offset: 24, xor const: 14667
	bool PBFOCMGKEEK = 7; // offset: 29, xor const: 0
	bool AKBMHCDKMFD = 2; // offset: 28, xor const: 0
}

message LGGABHFHOPA {
	repeated uint32 FIMHMAGABNJ = 1302; // offset: 24, xor const: 0
	int64 OHCIOPAIBKK = 10; // offset: 160, xor const: 7378
	uint32 NHNFGOHDJME = 12; // offset: 136, xor const: 10583
	repeated uint32 NCDJIINHAMB = 13; // offset: 64, xor const: 0
	uint32 JDKMEOBDANL = 1282; // offset: 132, xor const: 2576
	repeated uint32 PBHMMOGEEMH = 957; // offset: 96, xor const: 0
	repeated uint32 OPLABDELLOB = 9; // offset: 72, xor const: 0
	uint32 EAMIMKLDOFA = 1615; // offset: 112, xor const: 12086
	uint32 BCEGMGALHBH = 7; // offset: 124, xor const: 6883
	uint32 EKLGNOIEMLA = 8; // offset: 152, xor const: 9768
	uint32 MCNHGNMALIF = 1856; // offset: 172, xor const: 8454
	repeated PGGDECKAOEE KJDGMFECAPI = 2; // offset: 48, xor const: 0
	repeated uint32 IEBFEBKFMEC = 5; // offset: 40, xor const: 0
	uint32 EGMFMGNDIIP = 1445; // offset: 176, xor const: 936
	uint32 NODBAHCCOBD = 451; // offset: 168, xor const: 13085
	repeated uint32 GDDLDODPNJN = 811; // offset: 16, xor const: 0
	uint32 HFGKIABILNK = 549; // offset: 120, xor const: 2585
	uint32 LKBNAHDCMKM = 26; // offset: 104, xor const: 2535
	uint32 BEOHFPKHODI = 1; // offset: 188, xor const: 6190
	uint32 JHNLKKAKMHH = 1131; // offset: 108, xor const: 10198
	repeated ELJPPHECKKB NPLOFPNEFCG = 834; // offset: 56, xor const: 0
	int64 FHAICMLDNOK = 15; // offset: 144, xor const: 4357
	uint32 PFMOFAHLFPC = 3; // offset: 140, xor const: 14671
	uint32 JDNOGBNBJOB = 14; // offset: 128, xor const: 11604
	uint32 PLLOFOOKDKP = 6; // offset: 184, xor const: 12939
	repeated uint32 ENABAEPIFNH = 1473; // offset: 80, xor const: 0
	map<uint32, uint32> KJOMHPHCCLO = 278; // offset: 32, xor const: 0
	uint32 PBAIIGOBJBG = 11; // offset: 116, xor const: 12866
	uint32 HEEKOOMEBOG = 4; // offset: 180, xor const: 16072
}

// CmdId: 3124
message OPPPLADGMOH {
	repeated LIGFAPBODMD LJJJHNLGGCC = 14; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 5258
}

message JGLJNLDEAML {
}

message IOELDMPKEDD {
	FGKJFCJILIL CBDJHCJDDGL = 9; // offset: 16, xor const: 0
	repeated FGKJFCJILIL JJMOHLONGMD = 6; // offset: 32, xor const: 0
	repeated FGKJFCJILIL JIFKKPKGAMA = 3; // offset: 24, xor const: 0
	bool GLNFOAAKAOH = 10; // offset: 80, xor const: 0
	repeated FGKJFCJILIL CMIANHKFKJM = 4; // offset: 72, xor const: 0
	FGKJFCJILIL EJGAJHHMIHO = 7; // offset: 48, xor const: 0
	FGKJFCJILIL MKFKPOJOOIJ = 8; // offset: 40, xor const: 0
	repeated FGKJFCJILIL GHFLIKFGEFJ = 1; // offset: 56, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 5; // offset: 88, xor const: 0
	HollowEntityType HCOBCBNNPLD = 2; // offset: 84, xor const: 0
}

// CmdId: 2514
message PGIHGOIGOGL {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 9487
}

message JCFICOAPGIB {
	repeated int32 DCHDPJALODJ = 2; // offset: 32, xor const: 0
	repeated int32 PIDCICHMOKE = 4; // offset: 24, xor const: 0
}

message NDCLGKADGCM {
	int32 AHPBLAIMMID = 1; // offset: 44, xor const: 0
	repeated CAJLCDGPHJL JJBHCHJNABJ = 4; // offset: 24, xor const: 0
	int32 IIHJMFPKJEM = 2; // offset: 40, xor const: 0
	repeated LLHAECOPPBB GOMODAAPDKD = 3; // offset: 16, xor const: 0
}

message MCFLCGPBDFN {
	string MJLNODOAGGC = 1; // offset: 16, xor const: 0
}

// CmdId: 9155
message IAOLGHGBAHF {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 2948
}

message LDPHANHKEKG {
	repeated PAOHFOMBPGD ONKMOOCDGLN = 2; // offset: 16, xor const: 0
}

enum OBHCKGIPEJO {
	OBHCKGIPEJO_JKMJENDMGBI = 0;
	OBHCKGIPEJO_IPEIEIBJLMK = 1;
	OBHCKGIPEJO_MCCFCFGPMCD = 2;
	OBHCKGIPEJO_IPCFJLJBDDA = 3;
}

message HEDCJNMEHND {
	uint32 FFEEIAIAIMO = 4; // offset: 60, xor const: 3247
	uint32 NBNJEFMBCEE = 8; // offset: 40, xor const: 12794
	map<string, uint32> NHFALDIBJAA = 13; // offset: 16, xor const: 0
	uint32 CPKCJKDACLF = 11; // offset: 36, xor const: 6020
	uint32 GIDMNCOGONE = 2; // offset: 52, xor const: 1064
	uint32 NODBAHCCOBD = 5; // offset: 56, xor const: 8633
	uint32 CAIGOJFINCA = 14; // offset: 68, xor const: 5440
	uint32 ILPLEKHLCAO = 7; // offset: 48, xor const: 7505
	uint32 JEJIGDMHOCL = 3; // offset: 32, xor const: 12227
	uint32 ELGAKFOPEEL = 12; // offset: 64, xor const: 15300
	uint32 IODCLDBDCPD = 15; // offset: 44, xor const: 118
}

message NKGKAAONIJC {
	map<uint32, int32> DHKKDKKACJK = 3; // offset: 16, xor const: 0
}

message LCFIKODLLON {
	int64 LPEHMPBMODD = 2; // offset: 40, xor const: 0
	string NMMADBDFJCK = 3; // offset: 16, xor const: 0
	FHJHFMCLGJM GGPPMELMEEM = 1; // offset: 32, xor const: 0
}

enum BMNJAMOPNOC {
	BMNJAMOPNOC_HCPFAEFJGNO = 0;
	BMNJAMOPNOC_DMPELOIKFPM = 1;
	BMNJAMOPNOC_KELDJJGCLED = 2;
	BMNJAMOPNOC_APFKDKIBLCC = 3;
}

// CmdId: 8293
message GENIMEBGEHL {
	uint32 JMEGIEIPPMH = 15; // offset: 24, xor const: 269
}

message NICCPHLIFKE {
	uint32 PBOAMDEBIGO = 10; // offset: 28, xor const: 14560
	uint32 OPFEAMDPIAG = 3; // offset: 32, xor const: 9806
	uint32 IMKAOHPLMMG = 15; // offset: 40, xor const: 7
	uint32 KEICLBBOONP = 11; // offset: 24, xor const: 14975
	uint32 IAKHOAIMGOB = 14; // offset: 36, xor const: 12518
}

enum HollowShopCurrencyType {
	HOLLOW_SHOP_CURRENCY_TYPE_HOLLOW_SHOP_CURRENCY_TYPE_NONE = 0;
	HOLLOW_SHOP_CURRENCY_TYPE_HOLLOW_SHOP_CURRENCY_TYPE_COIN = 1;
	HOLLOW_SHOP_CURRENCY_TYPE_HOLLOW_SHOP_CURRENCY_TYPE_CURSE_CURRENCY = 2;
	HOLLOW_SHOP_CURRENCY_TYPE_HOLLOW_SHOP_CURRENCY_TYPE_STAMINA = 3;
}

// CmdId: 737
message FIMGLCPEGEN {
	map<uint32, uint32> AJCMKNJHEJI = 3; // offset: 16, xor const: 0
}

message JPEOCDAENLN {
	uint32 GJHBJPJJPNJ = 11; // offset: 32, xor const: 15113
	repeated uint32 PPBCKBHDIIH = 1; // offset: 16, xor const: 0
}

message JMLFBJCKDPF {
	JFDMCBJEIJM CKBOJACIJDI = 1; // offset: 16, xor const: 0
}

// CmdId: 2595
message GHGDGMKJIMO {
	JLLPDMNBNHN JALEOIKEOKA = 10; // offset: 24, xor const: 0
	uint32 BCCEOLDLIFA = 15; // offset: 40, xor const: 1841
	FKPEGLLDDFF JMINHOJJOCM = 13; // offset: 16, xor const: 0
}

enum CHILNODCIDA {
	CHILNODCIDA_LHCEIIGINIF = 0;
}

message JMGMJOLMNBE {
}

message JMENIELIIGF {
	uint32 NMHNBHDEKBP = 6; // offset: 32, xor const: 8953
	EBDAIGALHDI DBOACCIJPDL = 8; // offset: 24, xor const: 0
}

// CmdId: 7468
message CGKIOPIPIPJ {
}

// CmdId: 8614
message GEHFBOOBHBE {
}

message JPCCIBEMIEO {
	FGKJFCJILIL DBOACCIJPDL = 1; // offset: 24, xor const: 0
	FGKJFCJILIL ENCANOPLLDM = 2; // offset: 32, xor const: 0
}

enum NodeState {
	NODE_STATE_NODE_STATE_ALL = 0;
	NODE_STATE_LOCKED = 1;
	NODE_STATE_UNLOCKED = 2;
	NODE_STATE_FINISHED = 3;
	NODE_STATE_SHOW_EVENT = 4;
	NODE_STATE_DOOR = 5;
	NODE_STATE_BRIGHTEN = 6;
	NODE_STATE_GUIDE = 7;
	NODE_STATE_TARGET = 8;
	NODE_STATE_BRIGHTEN_ONLY_VISIBLE = 9;
	NODE_STATE_UNSTABLE = 10;
	NODE_STATE_EMPTY = 11;
	NODE_STATE_LOCKED_WITH_STAMINA = 14;
	NODE_STATE_UN_EMPTY = 15;
}

// CmdId: 850
message OHMJNNAALMK {
	repeated JGKLEOEDGCM PGOFJFPNNLJ = 11; // offset: 32, xor const: 0
	int32 DCJCCCBIFFB = 7; // offset: 40, xor const: 15839
	repeated MILIOGPHGCP DFFENJEDGEM = 1; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 13; // offset: 44, xor const: 6106
}

message MJFHOBPMDMO {
	uint32 LHPFJFPGEEA = 1; // offset: 32, xor const: 0
	repeated NAAIAGPJDGC CPAGFLFJEBC = 2; // offset: 16, xor const: 0
}

enum GBFCMCBACOC {
	GBFCMCBACOC_IKHNBKHKLHC = 0;
	GBFCMCBACOC_CIJGLNEGMGK = 1;
	GBFCMCBACOC_KLGICLMIACD = 2;
	GBFCMCBACOC_JKILOMGHIMN = 3;
	GBFCMCBACOC_NOCNJBECEIO = 4;
	GBFCMCBACOC_EDCNFMFHEGO = 5;
	GBFCMCBACOC_FEAAEAFEONC = 6;
}

enum CFODGNKBIMM {
	CFODGNKBIMM_KAGMBPBEAJH = 0;
	CFODGNKBIMM_OBGNLILPPCP = 1;
	CFODGNKBIMM_AEPKNCIHEAC = 2;
	CFODGNKBIMM_KBJMILFOJGC = 3;
	CFODGNKBIMM_MHKAJFACMGM = 4;
}

message ECOAGFFAHNM {
	uint32 DLILNCMKDHA = 2; // offset: 52, xor const: 0
	uint32 NLMHFPBBNNI = 3; // offset: 48, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 1; // offset: 40, xor const: 0
	FGKJFCJILIL NCAGHHFDAOG = 5; // offset: 32, xor const: 0
	uint32 PBBDNBIGFMI = 4; // offset: 56, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 6; // offset: 16, xor const: 0
}

message JOMLHBLGCOJ {
	uint32 CMOPMIPNBLB = 1; // offset: 24, xor const: 0
}

// CmdId: 1755
message PIPLCEIOINN {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 13706
}

enum KBHCBDJDDHO {
	KBHCBDJDDHO_GFEALKFDIEJ = 0;
	KBHCBDJDDHO_IIDLIGBNDHE = 1;
	KBHCBDJDDHO_ODCKLNCMEMN = 2;
	KBHCBDJDDHO_FPNEPIAMABP = 3;
	KBHCBDJDDHO_AHBDKLCGNID = 4;
	KBHCBDJDDHO_CNGCJFGINOI = 5;
	KBHCBDJDDHO_LJIFDMPFIMP = 6;
	KBHCBDJDDHO_JIECCALCNBP = 7;
	KBHCBDJDDHO_LOGKDLDHBML = 8;
	KBHCBDJDDHO_JBFCIKFAFHE = 9;
	KBHCBDJDDHO_JOGJBMHJMKM = 11;
	KBHCBDJDDHO_BELOMCDJMBP = 12;
	KBHCBDJDDHO_ICNMPMJMLBI = 19;
	KBHCBDJDDHO_NGHKCGGKBLJ = 20;
	KBHCBDJDDHO_EHELIDLMDEO = 21;
	KBHCBDJDDHO_BMKHFALFPIC = 22;
}

// CmdId: 1702
message GADGGOGMHML {
	JJIOMDMMIGG EMBAAGJGMMP = 14; // offset: 24, xor const: 0
}

message INJHNBDLBKB {
	bool KANNJFMLNCI = 1; // offset: 24, xor const: 0
	int32 DJCDIOGKILB = 2; // offset: 28, xor const: 0
}

// CmdId: 5721
message HCOPOPIGCKD {
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 8782
	HGIPNPJMOEO LBAFNNOJNJF = 4; // offset: 24, xor const: 0
}

// CmdId: 1970
message BHJHBHKAOBM {
	int64 JNLAKNOIKEG = 4; // offset: 32, xor const: 322
	MKPHEJCDJAH KGGMPBNGBDJ = 13; // offset: 16, xor const: 0
	int32 HCIKOCHONNP = 11; // offset: 40, xor const: 1154
}

message DIBEPAPEKNF {
	uint32 PGBADFMPAPK = 4; // offset: 24, xor const: 14476
	uint32 OPFEAMDPIAG = 6; // offset: 28, xor const: 13780
	bool LNBFPNOOJCE = 15; // offset: 32, xor const: 0
}

// CmdId: 775
message LAMCBDKNLMM {
	uint64 HEJBMNAOJFL = 9; // offset: 56, xor const: 1815
	uint64 AEDAEPKDOAL = 8; // offset: 40, xor const: 3829
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 16, xor const: 0
	PIJJIOODIIB CPEPJEPHPBD = 3; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 1; // offset: 48, xor const: 4569
}

enum KGFCLEGGKOJ {
	KGFCLEGGKOJ_HIGMKLNBGEH = 0;
}

enum KOMGNEKACKA {
	KOMGNEKACKA_ACTION_RUN_TYPE_NONE = 0;
	KOMGNEKACKA_CLIENT = 1;
	KOMGNEKACKA_SERVER = 2;
}

// CmdId: 5788
message KCMMFDELAJF {
	uint64 AEDAEPKDOAL = 6; // offset: 48, xor const: 12210
	uint64 HEJBMNAOJFL = 9; // offset: 56, xor const: 4628
	KOAGMNHAMNE CPEPJEPHPBD = 2; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 40, xor const: 14778
}

// CmdId: 6260
message CJCOAAHBLIC {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 6319
}

message ECPFBNCJDNI {
}

message DMHCLHBJGKI {
	FGKJFCJILIL NBNDPINNFHL = 1; // offset: 16, xor const: 0
}

message CBHKALIEDPD {
	repeated uint32 ENICFJBFDHI = 12; // offset: 32, xor const: 0
	repeated IBEMPFGCLKL OPJBPHHHHKL = 1; // offset: 16, xor const: 0
}

message IMJJFJGIIHK {
	string IOFKNPIMHJA = 2; // offset: 16, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 40, xor const: 0
	repeated BGBCMCFAKPL ONDKOLPNHLO = 3; // offset: 32, xor const: 0
}

message APJEOMBEKBP {
	repeated POGCILDLNBH OOHNLIHGLGO = 8; // offset: 16, xor const: 0
}

message DDMNFLLDKMC {
	repeated int32 JOEEHFOLBDF = 12; // offset: 48, xor const: 0
	repeated int32 BNLCJAAMMNN = 11; // offset: 64, xor const: 0
	repeated int32 BENHIPAKDJJ = 15; // offset: 32, xor const: 0
	repeated int32 HGDBHCEEGIJ = 2; // offset: 16, xor const: 0
	repeated int32 MIFDAFFAJOG = 6; // offset: 40, xor const: 0
	repeated int32 CFHHNPKMMAB = 7; // offset: 56, xor const: 0
}

message NBPMPCJLMIK {
}

// CmdId: 2643
message OIHDIAGHPOM {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 4537
}

message BLLGILFEJIB {
	FGKJFCJILIL IPNANHEPICK = 1; // offset: 16, xor const: 0
	FGKJFCJILIL ENCANOPLLDM = 2; // offset: 32, xor const: 0
	CLPGLOLILFF KBFBDIJGDGG = 3; // offset: 40, xor const: 0
	bool EMBAAGJGMMP = 4; // offset: 44, xor const: 0
}

// CmdId: 5680
message OLOGKKBMIOA {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 10470
}

enum HMINEHKNIBH {
	HMINEHKNIBH_HOLLOW_ITEM_OPTION_TYPE_NONE = 0;
	HMINEHKNIBH_HOLLOW_ITEM_OPTION_TYPE_DROP = 1;
	HMINEHKNIBH_HOLLOW_ITEM_OPTION_TYPE_REPLACE = 2;
	HMINEHKNIBH_HOLLOW_ITEM_OPTION_TYPE_ADD = 3;
}

enum EKFEGJAFPNC {
	EKFEGJAFPNC_PIMBPPKFECE = 0;
}

message JEELBGCGAAL {
	repeated uint32 IJNONMKIDCH = 2; // offset: 64, xor const: 0
	string DBPIEEMPAKL = 6; // offset: 88, xor const: 0
	repeated uint32 MFAEBMLCKJJ = 1; // offset: 56, xor const: 0
	repeated ODIEFPCJHFL DNEFAOCJBBK = 14; // offset: 24, xor const: 0
	PGABEEMKBDE AMMEEAKKGAI = 9; // offset: 16, xor const: 0
	repeated MLOKDABDEAO IANCBMFGNGA = 13; // offset: 48, xor const: 0
	uint32 ABPMDIAIEKG = 15; // offset: 96, xor const: 11812
	map<int32, KOLNEAPMJCH> NJCLPDFKOHN = 3; // offset: 40, xor const: 0
	repeated uint32 DELJCDCPBNI = 12; // offset: 80, xor const: 0
	repeated uint32 GBFAEJLMJJE = 7; // offset: 72, xor const: 0
}

enum ALCLMBFGJKO {
	ALCLMBFGJKO_FCLDEJNMBPN = 0;
	ALCLMBFGJKO_AJPPCBKDPNN = 1;
	ALCLMBFGJKO_DOFGFLAGKDE = 2;
	ALCLMBFGJKO_KKBCJHPFEEC = 4;
	ALCLMBFGJKO_AADICDECBEP = 8;
}

message OGFMILIPINN {
	uint32 AMHBBOAFGFC = 6; // offset: 24, xor const: 1339
	int32 PGOFLCLCMLN = 2; // offset: 28, xor const: 10958
}

message FIBADHHODFI {
	repeated KCDCHOIKCDL EOECDMOEOJO = 2; // offset: 16, xor const: 0
	repeated uint32 FMAOCGLEGLL = 8; // offset: 24, xor const: 0
}

// CmdId: 9240
message IOMMENBICEH {
	uint32 CONOAJMMHMB = 3; // offset: 24, xor const: 14780
}

enum PGFBHAHHBLN {
	PGFBHAHHBLN_ICHNGAJPLAE = 0;
	PGFBHAHHBLN_IBLMJJHHIKF = 1;
	PGFBHAHHBLN_NMGKEIGICLC = 2;
}

message CHKFCEANKLA {
	HollowEntityType DNAENEJOADB = 2; // offset: 32, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 16, xor const: 0
}

// CmdId: 6868
message ANBMCACJFII {
	repeated uint32 IKFOMEKMDBK = 7; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 13382
}

// CmdId: 5214
message EIEPMKFLDAG {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 651
}

// CmdId: 932
message ELJIPFJALNH {
	JHHACNCALFO OOBACNAGCCI = 8; // offset: 16, xor const: 0
}

message FBBEJGJOPBL {
	uint32 CBELLMGEFDA = 3; // offset: 56, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 2; // offset: 16, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 4; // offset: 40, xor const: 0
	repeated uint32 KAPHIGAFCGA = 5; // offset: 24, xor const: 0
	string DMICGIPOOGF = 1; // offset: 32, xor const: 0
}

message GCDPKKFBEGH {
	uint32 NEFAAKJKNDC = 6; // offset: 28, xor const: 9970
	uint32 FKFAAGECFIC = 15; // offset: 32, xor const: 623
	uint32 FNLKEIICDAN = 4; // offset: 24, xor const: 14973
}

enum JDKIKMGJHFI {
	JDKIKMGJHFI_KDJLPOBICPD = 0;
	JDKIKMGJHFI_JFHAFIEEMOL = 1;
	JDKIKMGJHFI_ICDNMKGKDDH = 2;
}

// CmdId: 5821
message KPDPKHBCEOD {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 3873
}

message KJCNENGDECE {
	ICIHPNPIBHC PPGDOGELPIL = 1; // offset: 24, xor const: 0
}

enum MPIGBMODOBC {
	MPIGBMODOBC_EEBICCHNFME = 0;
	MPIGBMODOBC_JFGOEDHHDOL = 1;
}

// CmdId: 11
message FJAAJFPCBOO {
	uint64 AEDAEPKDOAL = 9; // offset: 48, xor const: 5358
	uint64 HEJBMNAOJFL = 7; // offset: 40, xor const: 12113
	IMCBPOHMJDC CPEPJEPHPBD = 10; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 3; // offset: 56, xor const: 14782
}

// CmdId: 1748
message BBNKJFGAFDB {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 11908
}

message IOLABBCFAOE {
	map<string, GGDAJJJNMJO> MNPIFHHHGLO = 2; // offset: 24, xor const: 0
	map<string, string> OIOPHCFEJDA = 3; // offset: 16, xor const: 0
	map<string, int64> JDMBLPOHJOJ = 1; // offset: 32, xor const: 0
}

message AMHHLJOLPLA {
	bool IEJMHDDPBBK = 2; // offset: 32, xor const: 0
	repeated uint32 MFCDIEAHPJM = 1; // offset: 24, xor const: 0
}

message OOEBNKPBJDI {
	bool CPGCCJJCEMN = 3; // offset: 56, xor const: 0
	string CKEALLHKCNH = 4; // offset: 24, xor const: 0
	string CCHMOEOOHDP = 2; // offset: 48, xor const: 0
	repeated uint32 POLHPMCNNFE = 1; // offset: 16, xor const: 0
	string HOAJKFKJDFD = 5; // offset: 32, xor const: 0
}

enum AJIBNNMOJIC {
	AJIBNNMOJIC_MFIIFCNJPAG = 0;
}

message LLNLCACOLGL {
	int32 ENCANOPLLDM = 1; // offset: 28, xor const: 9059
	int32 JHHCBEIKBBP = 13; // offset: 32, xor const: 11635
	int32 JIMFONCGKLB = 8; // offset: 24, xor const: 11425
}

message JEFLFHLBAOG {
	uint32 PBOAMDEBIGO = 1; // offset: 28, xor const: 4851
	uint32 NMHNBHDEKBP = 6; // offset: 24, xor const: 13864
}

// CmdId: 1950
message GHEFKGKOHHE {
	uint32 LDLFOCONADN = 10; // offset: 28, xor const: 15978
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 13585
}

// CmdId: 3665
message LCPCPHFFNFB {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 3975
}

message AOELKDKDCGO {
	NGBFGENGCDI MDFKPGBALJI = 1; // offset: 24, xor const: 0
}

// CmdId: 5251
message HELKCPCFBGI {
	repeated uint32 GFBFEKAJDIG = 10; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 7; // offset: 32, xor const: 379
}

// CmdId: 8268
message MJODPLJGPLN {
	uint32 AMHBBOAFGFC = 9; // offset: 24, xor const: 15104
}

// CmdId: 8370
message JDDOHEDHFOJ {
	int32 PPCNCKBKEJB = 2; // offset: 24, xor const: 7484
	int32 GJPPELNNBEN = 14; // offset: 28, xor const: 14785
}

// CmdId: 3117
message OKMDDCJFAHH {
	repeated uint32 DKFJOJIIGNP = 7; // offset: 24, xor const: 0
}

message MNKEPKOAGFE {
	bool HNDCBPADDHG = 5; // offset: 36, xor const: 0
	bool MKKJCFLOAJC = 4; // offset: 39, xor const: 0
	NKPCOAOHKHA IOPNIIBPJFN = 7; // offset: 32, xor const: 0
	bool MAFPPFLMKON = 2; // offset: 37, xor const: 0
	EGAGOLDHFKH LLNPIFPKJGM = 6; // offset: 28, xor const: 0
	bool MALAOMAKEPB = 1; // offset: 38, xor const: 0
	int32 AFJOGKIENOC = 3; // offset: 24, xor const: 0
}

message EKAAJPIPBNJ {
	JAAOCOMFKHP BPIOGPIFLDE = 5; // offset: 16, xor const: 0
	bool PBGGFEDDEKJ = 13; // offset: 45, xor const: 0
	JAAOCOMFKHP ACEMBJPDCDK = 1; // offset: 24, xor const: 0
	int32 EKHAAJKCMHH = 6; // offset: 40, xor const: 3163
	bool FOCNDHCIABO = 7; // offset: 44, xor const: 0
}

// CmdId: 5606
message GHHEGFCIPAI {
	HBFBNKAODPJ NCAGHHFDAOG = 4; // offset: 16, xor const: 0
	repeated MDJLEEGHMEA JPHHMDAKJBA = 6; // offset: 24, xor const: 0
	int32 IOEHJLJEIAJ = 13; // offset: 48, xor const: 8957
	uint32 PKCEPPKBDLH = 2; // offset: 40, xor const: 3728
	uint32 NNBBBAMEBGC = 11; // offset: 44, xor const: 9575
}

message DGLPKMCOICC {
	uint32 AAHEOBDBNGM = 6; // offset: 28, xor const: 8374
	uint32 HONFNLBAIAN = 8; // offset: 24, xor const: 8727
}

message FFKGGJEDKGJ {
	repeated HMDHELCLLHD AFBNCBHOKLI = 3; // offset: 16, xor const: 0
	bool KNGEKGAAANM = 2; // offset: 32, xor const: 0
	TimePeriodType AEIOGIJPKDA = 4; // offset: 44, xor const: 0
	HGLKBCECBOE ACHGMDKGPHD = 5; // offset: 36, xor const: 0
	uint32 MOMGDEFPOGM = 1; // offset: 40, xor const: 0
}

// CmdId: 8594
message LMPMEKGJEJC {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 2210
}

enum IHGGGIBNKGN {
	IHGGGIBNKGN_HEFHFOAMHKF = 0;
	IHGGGIBNKGN_GCGHNJGLJHE = 1;
	IHGGGIBNKGN_OOKCNKENPGJ = 2;
}

message GKDEKBPAIAG {
	uint32 CONOAJMMHMB = 1; // offset: 32, xor const: 0
	map<uint32, JAMIPMDCAJB> ODKAPICAPKH = 3; // offset: 24, xor const: 0
	uint32 BJNBDFHFMIN = 2; // offset: 36, xor const: 0
}

message FOOKFLBPOEE {
	string DMICGIPOOGF = 1; // offset: 24, xor const: 0
	uint32 IIIGDHJPFMI = 3; // offset: 36, xor const: 0
	uint32 NMHNBHDEKBP = 2; // offset: 32, xor const: 0
}

enum CLIDAGBGAIL {
	CLIDAGBGAIL_AREA_CAMERA_TRIGGER_TYPE_NONE = 0;
	CLIDAGBGAIL_AREA_CAMERA_TRIGGER_TYPE_ENTER = 1;
	CLIDAGBGAIL_AREA_CAMERA_TRIGGER_TYPE_UPDATE = 2;
	CLIDAGBGAIL_AREA_CAMERA_TRIGGER_TYPE_EXIT = 3;
}

// CmdId: 5134
message BGNMEKIDAFE {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 2437
}

message KKANJEOKDID {
	string KAKCMFFCFNK = 2; // offset: 32, xor const: 0
	repeated string CIEJHHGBPBD = 1; // offset: 16, xor const: 0
	bool MIFLAFKFJMB = 4; // offset: 48, xor const: 0
	repeated CIOGBPLAOFL EJBLDEKHMJC = 3; // offset: 40, xor const: 0
}

// CmdId: 9535
message AMGPIPLHOBO {
	repeated uint32 LCDGLAEPBPF = 6; // offset: 16, xor const: 0
}

message FFBCEBKCEIF {
	FGKJFCJILIL NIMMBLPCMCH = 1; // offset: 16, xor const: 0
}

message GCNGAPCFJPB {
	FGKJFCJILIL IHIEIMELEEH = 2; // offset: 16, xor const: 0
	string MDFKPGBALJI = 3; // offset: 32, xor const: 0
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 40, xor const: 0
}

// CmdId: 1039
message MHMLDDJMJNF {
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 2221
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 15888
	uint32 KMKPPDICOKA = 4; // offset: 48, xor const: 2124
	AKNNPLJBODI CPEPJEPHPBD = 15; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 11; // offset: 32, xor const: 0
}

// CmdId: 8081
message GHGLFMCBGJK {
	uint32 EKLGNOIEMLA = 9; // offset: 24, xor const: 9583
}

message PNKFDPDABDK {
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 24, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 32, xor const: 0
}

message CHBCCCKDOOD {
	int32 MFLPDFBAHFJ = 5; // offset: 48, xor const: 10906
	repeated GEBNOAMDNOC JAGGDGDFEKE = 13; // offset: 24, xor const: 0
	map<string, GEBNOAMDNOC> GHLBFABMLNB = 14; // offset: 40, xor const: 0
	repeated double KHBEPPKPNMK = 10; // offset: 16, xor const: 0
}

message CMOONCPMIOG {
	repeated uint32 CMCCIKPIHAM = 1; // offset: 16, xor const: 0
}

message FKDDPIBBKCD {
	repeated AEIFPEEIAHG ILBLNHDBDPH = 13; // offset: 32, xor const: 0
	INLFFDKGPNK AODMMCCECAP = 5; // offset: 40, xor const: 0
	repeated AEIFPEEIAHG CFKJLPMCIKM = 8; // offset: 16, xor const: 0
}

message OIPOJHHPCJO {
	LIGKLGDKJGO PBOAMDEBIGO = 2; // offset: 28, xor const: 0
	GEAGHMNKJJJ OAEJPMIBGDP = 1; // offset: 24, xor const: 0
}

// CmdId: 6398
message IOKGJPGPCGD {
}

// CmdId: 3851
message OMIDNAKFHLP {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 9558
}

message DLCEMKGCCCA {
	uint32 GCBIFKHALPH = 4; // offset: 56, xor const: 0
	uint32 NDIPLLIFDND = 6; // offset: 48, xor const: 0
	uint32 OBPMOEHGAIM = 2; // offset: 52, xor const: 0
	string LPKFCGNAMPJ = 5; // offset: 24, xor const: 0
	LMBOFGDDJKB FJJLFABNKGG = 3; // offset: 16, xor const: 0
	uint64 DIMEDPILOOA = 1; // offset: 40, xor const: 0
}

message CEIIOGOGKMM {
	bool IGADOMHOINM = 1; // offset: 25, xor const: 0
	bool BBCJIIHCKFB = 2; // offset: 24, xor const: 0
}

enum KDGCPFALAPD {
	KDGCPFALAPD_WAY_OF_REMOVE_CURSE_NONE = 0;
	KDGCPFALAPD_WAY_OF_REMOVE_CURSE_INITIATIVE = 1;
	KDGCPFALAPD_WAY_OF_REMOVE_CURSE_PASSIVE = 2;
}

message DIHLDBOLAMF {
	repeated PJLNMHOFNLE LLFMLMHIDDA = 13; // offset: 16, xor const: 0
}

message GNMJMCHDMHE {
}

message CALIGKKHHBP {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 14961
}

message CICONMCEFCH {
	int32 ENCANOPLLDM = 1; // offset: 24, xor const: 0
}

message GOEPMDGKCPN {
	repeated MEKEJJHCINP HADAONMMOJE = 11; // offset: 16, xor const: 0
}

// CmdId: 6869
message OCGCMEJOBEH {
	uint32 KAHPCHCIBGL = 10; // offset: 24, xor const: 4898
}

message JFCMFIOKHEI {
	uint32 APBDIOHLMGB = 2; // offset: 24, xor const: 0
	uint32 MOMGDEFPOGM = 1; // offset: 28, xor const: 0
}

// CmdId: 933
message CCMDAGAPMIM {
}

message DOILHMOEIMM {
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 40, xor const: 0
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 24, xor const: 0
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 16, xor const: 0
}

message FDIEAAFLLJJ {
	int32 JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

message IDMGLCONMOA {
	repeated FGKJFCJILIL APCHGMHGCIC = 6; // offset: 72, xor const: 0
	bool CLNMNDDEDGO = 11; // offset: 80, xor const: 0
	FGKJFCJILIL NGFAPGKBADP = 5; // offset: 40, xor const: 0
	bool EEBCIFACHMB = 10; // offset: 81, xor const: 0
	bool IBMNKGAAFJM = 7; // offset: 83, xor const: 0
	LCIBIIFACHH LMEAFPLLGNJ = 4; // offset: 48, xor const: 0
	string LJBELNJNDBA = 8; // offset: 16, xor const: 0
	IHHJNHHDNHN NLCFCPAJJCN = 9; // offset: 84, xor const: 0
	FGKJFCJILIL ONBCDKMPFPK = 2; // offset: 32, xor const: 0
	bool ECMIAFGIOCM = 12; // offset: 82, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 1; // offset: 24, xor const: 0
	FGKJFCJILIL BPELJHPDEBO = 3; // offset: 64, xor const: 0
}

message LAMNABABFLH {
	int32 HJPEDEIFLLG = 9; // offset: 56, xor const: 7659
	repeated uint32 ACOMLNADDCN = 5; // offset: 40, xor const: 0
	repeated BNLFKBLGDIE CPHCOMCGMMJ = 1; // offset: 32, xor const: 0
	repeated uint32 CJGJINEEOJP = 3; // offset: 24, xor const: 0
	repeated uint32 NBHKBMNGHMK = 14; // offset: 16, xor const: 0
}

message DAFHCNAEJAH {
	repeated LCKBMPCNKCH KKFOLPOAAAH = 14; // offset: 24, xor const: 0
}

enum KHNCNFKCKLJ {
	KHNCNFKCKLJ_BKNDKJLFCNE = 0;
	KHNCNFKCKLJ_HBBIJOBECGK = 1;
}

// CmdId: 8625
message NKPLLDDDJEK {
	repeated uint32 LCDGLAEPBPF = 6; // offset: 24, xor const: 0
}

message AGGJGOPEJKF {
	bool PDCGEGPEODA = 1; // offset: 24, xor const: 0
	bool JOKAMCJILGO = 2; // offset: 25, xor const: 0
}

message KABDNAMHDHG {
	uint32 NMHNBHDEKBP = 1; // offset: 24, xor const: 0
	int32 MBKJBDEPPAC = 2; // offset: 28, xor const: 0
}

message FLIFJBEKJOH {
	bool EGCOLMCDDAP = 3; // offset: 24, xor const: 0
	bool IDPLNAIAOMK = 1; // offset: 25, xor const: 0
	bool FHPFNJFEDAA = 2; // offset: 26, xor const: 0
}

message BILJPKBGACD {
	repeated HGIPJOCNKDF NKBIMCNHCOI = 1; // offset: 24, xor const: 0
	DAGDMBCAIFC BKPJCKGFLIP = 2; // offset: 32, xor const: 0
}

// CmdId: 4746
message JCPAPGANBJL {
	EJGJDBBBEJP HEIEDHNNLLO = 6; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 15227
}

message CNBLOKMPKJM {
}

// CmdId: 2555
message AOPMPFAAKHC {
}

message HOCCKBGNGOM {
	FGKJFCJILIL IPGMMIMICMA = 4; // offset: 16, xor const: 0
	bool MNBMPDPEHEA = 3; // offset: 49, xor const: 0
	bool FKCDINFGBME = 1; // offset: 48, xor const: 0
	FGKJFCJILIL HAOGOPGJIJN = 5; // offset: 32, xor const: 0
	bool MDOIJJOIEIC = 6; // offset: 50, xor const: 0
	FGKJFCJILIL BEMKPNCMFFE = 2; // offset: 24, xor const: 0
}

message HGEEALEMNCN {
	string LKFGNECKMGM = 4; // offset: 16, xor const: 0
	int32 NMHNBHDEKBP = 1; // offset: 48, xor const: 0
	int32 OJNNMPEPDNC = 2; // offset: 44, xor const: 0
	string MHKJAGJFCDP = 6; // offset: 24, xor const: 0
	int32 IFCKDEMAANC = 5; // offset: 52, xor const: 0
	int32 EFPFKDLDFBJ = 3; // offset: 40, xor const: 0
}

message DNHKBGMEMNF {
	uint32 NCAGHHFDAOG = 12; // offset: 32, xor const: 2817
	repeated FDLPNOOAAMH OBLMDJGFHMD = 5; // offset: 24, xor const: 0
}

// CmdId: 7063
message FEJFIMHJADN {
	int32 IHIGNMLCHDK = 6; // offset: 56, xor const: 2237
	repeated MODPPBCAPGE GOPPGNFIJAA = 5; // offset: 32, xor const: 0
	repeated uint32 PFHDBBGPMLL = 11; // offset: 48, xor const: 0
	repeated uint32 HHCMHKJODIG = 3; // offset: 16, xor const: 0
	repeated uint32 LPMLPLJFOGC = 13; // offset: 24, xor const: 0
	uint32 BEGOEADMEGG = 7; // offset: 60, xor const: 5580
}

message ENIAFFJKLPO {
	FGKJFCJILIL DNJBOJMPCNI = 3; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 40, xor const: 0
	FGKJFCJILIL OEIOFIPFKAL = 1; // offset: 24, xor const: 0
}

// CmdId: 7667
message FKNNIDKAGNP {
	uint32 JJHIDNMILIL = 4; // offset: 24, xor const: 752
}

enum OILNIEEMEDL {
	OILNIEEMEDL_OPTION_ICON_STATE_NONE = 0;
	OILNIEEMEDL_OPTION_ICON_STATE_ADD = 1;
	OILNIEEMEDL_OPTION_ICON_STATE_REPLACE = 2;
	OILNIEEMEDL_OPTION_ICON_STATE_REDUCE = 3;
}

// CmdId: 8590
message EJEAPICABDN {
	int32 DFIAAAJPLNC = 5; // offset: 32, xor const: 1436
	int32 APBDIOHLMGB = 4; // offset: 24, xor const: 180
	EDBFCIANEAO HLEAEPDDBLE = 2; // offset: 28, xor const: 0
}

enum OFGNLKPKAEA {
	OFGNLKPKAEA_GBEJKDJOANC = 0;
	OFGNLKPKAEA_GOEKGKLEALG = 1;
	OFGNLKPKAEA_IIKDFGDABJK = 2;
	OFGNLKPKAEA_GPLOMONHOKK = 3;
	OFGNLKPKAEA_FPOFPMFIFKH = 4;
	OFGNLKPKAEA_BKHPMFHAGAP = 5;
	OFGNLKPKAEA_NMOPGHBMDGM = 6;
}

message CJMGKMHACJK {
	map<int32, int32> PCKFDFILMJC = 1; // offset: 56, xor const: 0
	int32 DJIGBMMONLD = 4; // offset: 68, xor const: 1010
	HEMMBKMDIIG AABHBFGDDNF = 7; // offset: 48, xor const: 0
	ELGOIFPDEHD IFNPFNIKGMK = 8; // offset: 24, xor const: 0
	GPPFPCPKNIJ DPJHHINDBGN = 13; // offset: 32, xor const: 0
	MJMCFHLHFIB ENFNKAPOLPA = 3; // offset: 16, xor const: 0
	int32 CDDGNIMIJEC = 2; // offset: 72, xor const: 12451
	int32 ALFCMFPFBGI = 15; // offset: 64, xor const: 12974
	int32 MOHKGDIJKGA = 11; // offset: 76, xor const: 5734
}

message NONAKJELIFL {
	IHHJNHHDNHN OBLOPOKDMEC = 5; // offset: 48, xor const: 0
	FGKJFCJILIL ELKMLHLIGDO = 4; // offset: 32, xor const: 0
	IFHJKCKKFPH HLICEJNBFLH = 3; // offset: 40, xor const: 0
	IFHJKCKKFPH KPINHKGDKJK = 6; // offset: 44, xor const: 0
	IHHJNHHDNHN PHLCPHNPADL = 2; // offset: 52, xor const: 0
	FGKJFCJILIL JKGGMEOBNJI = 1; // offset: 16, xor const: 0
}

message KILGDDFDFNI {
	repeated uint32 PHGJIPKOBLO = 1; // offset: 16, xor const: 0
	uint32 AMIJIAHGPMC = 7; // offset: 40, xor const: 11266
	repeated uint32 IODLOBJPFOG = 10; // offset: 32, xor const: 0
}

// CmdId: 7205
message ODAOOGHJCEL {
	uint32 AMIJIAHGPMC = 3; // offset: 24, xor const: 6550
}

enum PLOALBFIKEC {
	PLOALBFIKEC_CAJPEKNDGAJ = 0;
}

// CmdId: 7251
message NAMJIHHCLAK {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 10194
}

message KEAHIBEAOGF {
	string DBOACCIJPDL = 1; // offset: 32, xor const: 0
	FGKJFCJILIL MHINMINPONI = 2; // offset: 16, xor const: 0
}

// CmdId: 360
message GBBDKICDFKE {
}

message NJHCCJPHMCC {
	NFLFJMDAMGB LOGMDKMGDDE = 18; // offset: 16, xor const: 0
	int32 BACAOCLJEBP = 29; // offset: 200, xor const: 0
	map<uint32, int32> FPGBIALCKGK = 21; // offset: 136, xor const: 0
	int32 MJPFDCDPEOB = 27; // offset: 212, xor const: 0
	map<uint32, int32> LCGHCELADPK = 22; // offset: 24, xor const: 0
	KOCCKNLOALJ JGDMHDPGMBI = 33; // offset: 88, xor const: 0
	uint32 NPEJBOLJENA = 26; // offset: 180, xor const: 0
	NDCLGKADGCM NICJLBBLADN = 28; // offset: 64, xor const: 0
	int32 LOABNMJMDNI = 2; // offset: 184, xor const: 0
	map<uint32, OCPBIOLIEBG> MLFDLEHOLBG = 4; // offset: 80, xor const: 0
	uint32 EIGDAGJOEPE = 11; // offset: 208, xor const: 0
	MHCDDANEDDA MDBDJGLDFON = 7; // offset: 128, xor const: 0
	uint32 EKHPEHDFIFG = 16; // offset: 192, xor const: 0
	MKPHEJCDJAH KGGMPBNGBDJ = 6; // offset: 144, xor const: 0
	int64 AILIAMKBICA = 20; // offset: 168, xor const: 0
	HLOOHFAAEKK HKGAEAJOOJC = 30; // offset: 152, xor const: 0
	uint32 IJLIEAEDJHF = 19; // offset: 176, xor const: 0
	map<uint32, int32> FPHMHAIIKNM = 25; // offset: 48, xor const: 0
	uint32 CKAJHOBIDGB = 15; // offset: 196, xor const: 0
	int32 KHIOOCMLMCF = 31; // offset: 216, xor const: 0
	repeated uint32 DFBHAOEKHIC = 12; // offset: 96, xor const: 0
	LHNMOGDJGHN KMHABFCDLEK = 23; // offset: 56, xor const: 0
	bool JMPKGGIBDAP = 17; // offset: 204, xor const: 0
	int32 NFLLOFKKGKJ = 10; // offset: 224, xor const: 0
	GLLKDCAPGMO KAIBCNFEKDO = 32; // offset: 120, xor const: 0
	int32 NODBAHCCOBD = 1; // offset: 220, xor const: 0
	KFAGAKGLEPG JHIBLGBGLAH = 24; // offset: 32, xor const: 0
	repeated uint32 PKCEDBPJKGL = 5; // offset: 40, xor const: 0
	JOLEPILKLJC HHOCDKMGOPM = 14; // offset: 112, xor const: 0
	int32 FHOBDPHNKFO = 3; // offset: 188, xor const: 0
	map<uint32, int32> BALBOMJCBII = 8; // offset: 72, xor const: 0
	repeated KKFHONHEMMB NHOPHEONPDL = 9; // offset: 104, xor const: 0
}

message BCBMPHPGJHJ {
	uint32 PFCIOMCFGKL = 12; // offset: 36, xor const: 9701
	uint32 CBDBIPMJEPJ = 14; // offset: 32, xor const: 10714
	FMLADAJDHHM IPAOONNHFOF = 1; // offset: 16, xor const: 0
	uint32 BEKFLJGFLJD = 8; // offset: 40, xor const: 5944
	uint32 HJHFOICGOAC = 15; // offset: 44, xor const: 1582
}

message NMBLKMPCBFP {
	repeated EMENOCOFGHN GGMHCEMGEEM = 7; // offset: 16, xor const: 0
}

enum IKMGFHOANFG {
	IKMGFHOANFG_LGEHGDJFLPB = 0;
	IKMGFHOANFG_LBAKNKACNNG = 1;
	IKMGFHOANFG_FDHPHNCBPHG = 2;
}

// CmdId: 6917
message KIEPGGBCPKP {
	EBDAIGALHDI DBOACCIJPDL = 6; // offset: 24, xor const: 0
}

message JFJEPICOJNP {
	int32 LGLGBJONIFO = 15; // offset: 28, xor const: 4632
	int32 CLIOOGMIIIP = 9; // offset: 40, xor const: 14522
	int32 GNBFPEIBLDK = 10; // offset: 32, xor const: 1100
	int32 LCPDGEFCADA = 2; // offset: 24, xor const: 11546
	int32 HKCHPDBIJHC = 7; // offset: 36, xor const: 15603
}

// CmdId: 8160
message EDBLIMGAHFD {
	repeated uint32 GGMHCEMGEEM = 7; // offset: 24, xor const: 0
}

// CmdId: 4560
message PPCDONECGCA {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 450
}

message JPNEHDALEIE {
}

// CmdId: 4807
message IOBOKDMMBKG {
	repeated uint32 ONKIDHEMGMO = 2; // offset: 16, xor const: 0
}

message NEIFHLADLGD {
	uint32 OPFEAMDPIAG = 10; // offset: 28, xor const: 2642
	int32 PGBADFMPAPK = 11; // offset: 24, xor const: 12586
}

message KHGIKMAIIJE {
	bool EFDAKOAGKOF = 2; // offset: 32, xor const: 0
	repeated FGKJFCJILIL OCHDELBIJMM = 1; // offset: 16, xor const: 0
}

message DFBAKACOPKI {
}

message HGIPNPJMOEO {
	repeated PMFLGCCMCPP DHKIILIGGGF = 2; // offset: 24, xor const: 0
	uint32 IHIEIMELEEH = 1; // offset: 40, xor const: 0
	map<uint32, EHMMJEDIAJJ> OFHDJOEKOGP = 11; // offset: 32, xor const: 0
}

message ODHBBJFLOLN {
	OGDDEEAOAMK ALJDMENJNMI = 2; // offset: 32, xor const: 0
	FGKJFCJILIL EFNFANEIJMH = 1; // offset: 16, xor const: 0
}

message GEBPDHHLPHN {
	int32 DEFFOFMKOFG = 1; // offset: 24, xor const: 0
}

message DKKODOFGKIJ {
	int32 JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

enum BELCLGGMMKP {
	BELCLGGMMKP_EGHM_POSITION_TYPE_NONE = 0;
	BELCLGGMMKP_EGHM_POSITION_TYPE_ZERO = 1;
	BELCLGGMMKP_EGHM_POSITION_TYPE_START = 2;
}

message FLOBEMMNNOB {
	uint32 MOIMDGDEMDJ = 10; // offset: 36, xor const: 4307
	map<uint32, uint32> GLPLNJBEIPF = 9; // offset: 16, xor const: 0
	uint32 OOPFKJLAKKJ = 13; // offset: 32, xor const: 3066
}

enum FIKONOJPLDL {
	FIKONOJPLDL_FOBIKOAPGCF = 0;
}

message JBIKAEIDIOL {
	INLFFDKGPNK AODMMCCECAP = 11; // offset: 24, xor const: 0
}

message DLFNNKICJDN {
	repeated HGIPJOCNKDF APKKBCHHMGA = 2; // offset: 32, xor const: 0
	uint32 KGJDNNEDLMM = 1; // offset: 40, xor const: 0
	repeated uint32 FLDPMBKFEKL = 3; // offset: 16, xor const: 0
}

enum JAOCIAFLBCN {
	JAOCIAFLBCN_DKAAAOKLGHC = 0;
	JAOCIAFLBCN_BEINFPOHIFJ = 1;
	JAOCIAFLBCN_LNJAENDCBBE = 2;
}

message POHAKPJMDIO {
	repeated int32 BLHMJBFEELA = 1; // offset: 16, xor const: 0
}

enum LDEPBDNNCEE {
	LDEPBDNNCEE_IPEFJIIHKKA = 0;
	LDEPBDNNCEE_HHBOCEFLLEO = 1;
	LDEPBDNNCEE_GNCPJPIPNKK = 2;
	LDEPBDNNCEE_MCACHCDKOHB = 3;
}

message IMJOMAPGGCB {
	uint32 OJNNMPEPDNC = 2; // offset: 32, xor const: 0
	uint32 NMHNBHDEKBP = 1; // offset: 24, xor const: 0
	uint32 AIKLNDGPHKB = 3; // offset: 28, xor const: 0
}

enum LAPMFHICFEN {
	LAPMFHICFEN_KMLKALNOEGO = 0;
}

message KLLIJCPPOCP {
	FGKJFCJILIL NBGGBOKFJOB = 1; // offset: 24, xor const: 0
}

message BGGBJJMGCGL {
	DJMKAAOBHJP PBOAMDEBIGO = 2; // offset: 28, xor const: 0
	KAOOHLACGEB HLEAEPDDBLE = 1; // offset: 24, xor const: 0
}

// CmdId: 5662
message CGJEJMKNEAC {
	uint64 AEDAEPKDOAL = 9; // offset: 40, xor const: 10691
	repeated DNKAFLFNDHF POPGNHJNLCC = 11; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 13; // offset: 48, xor const: 2608
	uint32 KMKPPDICOKA = 1; // offset: 56, xor const: 10150
	NNGOPDLMEIP CPEPJEPHPBD = 3; // offset: 32, xor const: 0
}

message HOBCCEIFPFN {
	uint32 CPEGDKBNGDH = 2; // offset: 40, xor const: 0
	uint32 PGNHCFJNBAC = 3; // offset: 44, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 4; // offset: 16, xor const: 0
	string JJOBDEFMGEA = 1; // offset: 32, xor const: 0
}

// CmdId: 9546
message FEGNCABIAFK {
	CHLPFGMHCEP CPEPJEPHPBD = 10; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 48, xor const: 10010
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 5374
	uint64 HEJBMNAOJFL = 4; // offset: 56, xor const: 2528
}

// CmdId: 4536
message EKDMLICGDNI {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 13885
}

message DIGMHGPNABF {
}

// CmdId: 1794
message OJEIENEEDHF {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 11514
}

message KOEIJFJMGCG {
	int32 IGNPNBKMNJD = 7; // offset: 24, xor const: 9161
}

message BPIGPNCKBGJ {
}

// CmdId: 8722
message KGDOECLKCCI {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 10309
}

message BDCDLHKHDAN {
	uint32 IKNMGIGKDOO = 5; // offset: 40, xor const: 10711
	int64 HENJALEAAPE = 3; // offset: 48, xor const: 14030
	repeated LCIJDIMHPEM JNMBHKCPNFI = 11; // offset: 16, xor const: 0
	repeated MJDIKOFGAHP FFJDLKDGNFK = 6; // offset: 32, xor const: 0
}

enum IIFOMFJLEPA {
	IIFOMFJLEPA_EPLEHPFBPEI = 0;
	IIFOMFJLEPA_KGFPMKJBDNE = 1;
	IIFOMFJLEPA_EJENDHHLAFG = 2;
	IIFOMFJLEPA_IPFBIMJAKMG = 3;
	IIFOMFJLEPA_EOFJHOCGNHN = 4;
}

message HAEGEFDGPMJ {
	repeated uint32 POECNBHNIPE = 9; // offset: 16, xor const: 0
}

// CmdId: 3045
message AEMJOALJOHA {
	bool AOCCOPFHFMB = 1490; // offset: 24, xor const: 0
}

enum CFDCBLGPPKD {
	CFDCBLGPPKD_ADOIAINELDC = 0;
	CFDCBLGPPKD_OONJNJHPAGI = 1;
	CFDCBLGPPKD_EADHDDOMDJI = 2;
	CFDCBLGPPKD_FDJMOHADFMD = 3;
}

// CmdId: 2133
message CJGAFJPLLBF {
	string OOODKIGJBCN = 3; // offset: 16, xor const: 0
	string OHLAEPNDAMF = 6; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 13; // offset: 40, xor const: 11910
}

// CmdId: 4705
message KIDGPDIINJH {
	uint64 HEJBMNAOJFL = 14; // offset: 48, xor const: 16066
	uint64 AEDAEPKDOAL = 12; // offset: 56, xor const: 14290
	uint32 KMKPPDICOKA = 1; // offset: 40, xor const: 1319
	OADFGALEEIK CPEPJEPHPBD = 11; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 24, xor const: 0
}

message FGJBJCONGJC {
}

message BMGNLGIKIKK {
	repeated uint32 GPFNPNDPMPC = 1; // offset: 24, xor const: 0
}

// CmdId: 8058
message LJIBCLDGMAJ {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 6768
}

message HBDEONNNHCD {
	string DMPPPABGCCA = 4; // offset: 48, xor const: 0
	string GBJIEBEKHNA = 7; // offset: 56, xor const: 0
	DHMNNAPFLCB EBPKOEFDAEB = 6; // offset: 72, xor const: 0
	map<string, FGKJFCJILIL> EJKEBPHDJKL = 2; // offset: 32, xor const: 0
	map<string, FGKJFCJILIL> KMGEOGPLNNJ = 5; // offset: 64, xor const: 0
	map<string, string> MJLEJNJHLON = 3; // offset: 24, xor const: 0
	FGKJFCJILIL NFIEMFONLIK = 1; // offset: 40, xor const: 0
}

message PHNCAGGGKMA {
	int32 GFCLKDAOMBM = 1; // offset: 44, xor const: 0
	repeated int32 EHHJCBAGLIO = 2; // offset: 24, xor const: 0
	HBFBNKAODPJ EDKNMHGIHPH = 3; // offset: 32, xor const: 0
	bool IHGIIEMBGPF = 4; // offset: 40, xor const: 0
	uint32 DGACNGKELCG = 5; // offset: 48, xor const: 0
}

enum LIHJKCGFLHL {
	LIHJKCGFLHL_MPH_COMPONENT_TYPE_NONE = 0;
	LIHJKCGFLHL_MPH_ID_COMPONENT = 1;
	LIHJKCGFLHL_MPH_POS_COMPONENT = 2;
	LIHJKCGFLHL_MPH_PLAYER_COMPONENT = 3;
	LIHJKCGFLHL_MPH_MAP_COMPONENT = 4;
	LIHJKCGFLHL_MPH_GRID_COMPONENT = 5;
	LIHJKCGFLHL_MPH_GRID_STATE_COMPONENT = 6;
	LIHJKCGFLHL_MPH_SECTION_COMPONENT = 7;
}

enum BDEANJLNPKC {
	BDEANJLNPKC_PERFORM_BUBBLE = 0;
	BDEANJLNPKC_PERFORM_DELAY = 1;
	BDEANJLNPKC_PERFORM_IMMEDIATELY = 2;
	BDEANJLNPKC_PERFORM_EXPLOSION = 3;
}

enum MMELMFDMANL {
	MMELMFDMANL_GLMGOGFGBKF = 0;
	MMELMFDMANL_MELNPCCEFGL = 1;
	MMELMFDMANL_CBEMLDLFCNN = 2;
	MMELMFDMANL_LLDJDKAAOCM = 3;
}

message BHKBHHJHMJD {
	uint32 AFJOGKIENOC = 1; // offset: 24, xor const: 0
}

message ALCLGJKOAHL {
	int32 CENMKDLDNAN = 1; // offset: 28, xor const: 0
	int32 CPEGDKBNGDH = 2; // offset: 24, xor const: 0
}

enum CFHLPCCFCLG {
	CFHLPCCFCLG_KJIPGFJCKHJ = 0;
	CFHLPCCFCLG_LEGGPFEKDNF = 1;
}

enum HHDBEICLNMH {
	HHDBEICLNMH_KANADIKOMPI = 0;
	HHDBEICLNMH_KIOCDGPNGAM = 1;
	HHDBEICLNMH_BJGDBPHPPCC = 2;
	HHDBEICLNMH_LFNFBOEGPGH = 3;
	HHDBEICLNMH_GFKBMCNMPLG = 4;
	HHDBEICLNMH_JODGGJGHCPH = 5;
}

message CLDKNEJCPLN {
	LIHJKCGFLHL HLEAEPDDBLE = 15; // offset: 32, xor const: 0
	bytes KJJCGLPLBGP = 12; // offset: 16, xor const: 0
}

// CmdId: 251
message CEPDOEEMDGN {
}

message PGFOOGCJPAB {
	bool MKKJCFLOAJC = 2; // offset: 25, xor const: 0
	bool PBOAMDEBIGO = 1; // offset: 24, xor const: 0
}

message PJLKPLFNNBA {
	int32 KPFLPPEMCAG = 9; // offset: 40, xor const: 11774
	int32 GLKFPEDIDMP = 6; // offset: 36, xor const: 1325
	int32 NLPGDDNIIIP = 13; // offset: 32, xor const: 9166
	bool IDFDFOFAANL = 8; // offset: 28, xor const: 0
	int32 IEIJELDDDGH = 3; // offset: 24, xor const: 12193
	bool BFINMELJKOL = 12; // offset: 29, xor const: 0
}

message EGCPKNIHNPI {
}

enum OECLCKBMIBA {
	OECLCKBMIBA_LKAGPENPNOF = 0;
}

enum DJMKAAOBHJP {
	DJMKAAOBHJP_ACTIVITY_BUBBLE_STATE_NONE = 0;
	DJMKAAOBHJP_ACTIVITY_BUBBLE_STATE_PROCESS = 1;
	DJMKAAOBHJP_ACTIVITY_BUBBLE_STATE_REWARD = 2;
	DJMKAAOBHJP_ACTIVITY_BUBBLE_STATE_NEW = 3;
}

// CmdId: 427
message ILBOIAGHAJA {
	uint32 FGALEHFDFPD = 10; // offset: 24, xor const: 4069
}

// CmdId: 6664
message AKLCPEPFFJB {
	repeated NBACDAGGAHE HDCCLOGMEBJ = 1; // offset: 16, xor const: 0
}

// CmdId: 7465
message OCODGOBCHOP {
	map<uint32, int32> ACDAGLAGHDP = 4; // offset: 32, xor const: 0
	repeated uint32 AJDLHDMMEKC = 14; // offset: 24, xor const: 0
}

message DILJGBJDHNG {
	repeated int32 GCAFAFENPEF = 9; // offset: 24, xor const: 0
	int32 CDDGNIMIJEC = 4; // offset: 40, xor const: 15893
	int32 DJIGBMMONLD = 2; // offset: 32, xor const: 3834
	int32 MOHKGDIJKGA = 13; // offset: 36, xor const: 14129
}

message OPIJPNKBCPH {
	bytes DHLEGHCPJDI = 1; // offset: 24, xor const: 0
}

enum OPBKAFBJMBC {
	OPBKAFBJMBC_LGKCPLDOGDI = 0;
}

// CmdId: 8314
message JMALJFEMOIO {
	uint64 HEJBMNAOJFL = 7; // offset: 40, xor const: 6875
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 10; // offset: 48, xor const: 13438
	OMCHMNCFMDC CPEPJEPHPBD = 4; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 8664
}

enum COFJGCHEKCF {
	COFJGCHEKCF_HOLLOW_EVENT_MODIFICATION_TYPE_NONE = 0;
	COFJGCHEKCF_RANDOM = 1;
	COFJGCHEKCF_FOREACH = 2;
}

message EAIEOGODGOP {
	uint32 BAJNLOLEDMC = 3; // offset: 40, xor const: 0
	bool INMCIEMCEMN = 4; // offset: 36, xor const: 0
	CENOIIMIIAO LCMJCMHKMFG = 2; // offset: 24, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 32, xor const: 0
}

// CmdId: 3209
message KHHEBCDIDAA {
	uint32 IKDJDPPLNOM = 6; // offset: 32, xor const: 2520
	uint32 DOAEKCNBNGL = 10; // offset: 28, xor const: 16284
	uint32 AKCPCCHNABI = 13; // offset: 24, xor const: 497
}

// CmdId: 7931
message HEPBOOLKLBE {
	LAMNABABFLH BHEMOHBKDDC = 7; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 9182
}

message ABGMPNJCBLK {
}

// CmdId: 858
message LCFINIPPKGA {
	MGHMCFELPDO CPEPJEPHPBD = 11; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 48, xor const: 4333
	uint64 HEJBMNAOJFL = 15; // offset: 40, xor const: 7277
	uint64 AEDAEPKDOAL = 6; // offset: 56, xor const: 9019
}

message HMHEKEINONM {
	HollowEntityType OAEJPMIBGDP = 1; // offset: 24, xor const: 0
}

message IEOGPBMDEJN {
	HollowGridLink ACPGPLMFNOL = 1; // offset: 40, xor const: 0
	HollowEntityType DNAENEJOADB = 3; // offset: 44, xor const: 0
	OMBENEAHIEL ICGKJCMGHGI = 2; // offset: 48, xor const: 0
	FGKJFCJILIL APCMKHDIJFI = 5; // offset: 24, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 4; // offset: 16, xor const: 0
}

message NHONHCAONJN {
	uint32 FJINPLKKPOJ = 9; // offset: 36, xor const: 1585
	uint32 PEDKNCIMHLA = 2; // offset: 40, xor const: 7597
	uint64 IDNEKNOGKIH = 10; // offset: 48, xor const: 9547
	uint32 GPHGFBDHPNF = 12; // offset: 32, xor const: 5593
	map<uint32, uint32> MOMABGNEJJA = 6; // offset: 24, xor const: 0
}

// CmdId: 111
message FCDGBFMPPMP {
	uint32 DEJBCBCOAAP = 3; // offset: 44, xor const: 9230
	uint32 NODBAHCCOBD = 11; // offset: 36, xor const: 14741
	uint32 PMAMMEHHMNH = 9; // offset: 28, xor const: 10517
	uint32 OHCIOPAIBKK = 2; // offset: 32, xor const: 6493
	uint32 OHKHAJLDOMB = 8; // offset: 24, xor const: 6869
	uint32 NKHHFHMGLHC = 1; // offset: 40, xor const: 7002
}

message BHDNNAMAHEG {
	PHFJPCHBLPC NINCGEHHAHN = 1; // offset: 32, xor const: 0
	FGKJFCJILIL AMIJIAHGPMC = 2; // offset: 16, xor const: 0
}

// CmdId: 3298
message HIMEGNPLPNE {
	repeated IMLEDAGJCLD JJMGOPOILJC = 11; // offset: 24, xor const: 0
}

message KNKAAMAPEIH {
	bool CKOCFDEOHNM = 3; // offset: 32, xor const: 0
	uint32 CKMBKHAOANG = 2; // offset: 28, xor const: 0
	uint32 FNNGEDGDEPE = 1; // offset: 24, xor const: 0
}

message EJCCNALEACD {
	int32 PAGOBFILGPB = 1; // offset: 24, xor const: 0
}

message BLDKHDEBNHJ {
}

enum BLKCBLNIOHC {
	BLKCBLNIOHC_ODIMLAPMHLN = 0;
	BLKCBLNIOHC_BOPFMJICCKP = 1;
	BLKCBLNIOHC_IAOLJLNEOGA = 2;
	BLKCBLNIOHC_KIPGGFFCDHP = 3;
	BLKCBLNIOHC_FFPEPNIFDGL = 4;
}

enum OHCMLLGGIJE {
	OHCMLLGGIJE_GLABNLBKIKK = 0;
}

message NLKJBJNAGLM {
	uint32 NNEKEEFEKAG = 5; // offset: 24, xor const: 332
	uint32 DCIGFJKJBKL = 2; // offset: 32, xor const: 5727
	uint32 EJJCNHFHPJL = 10; // offset: 28, xor const: 6086
}

// CmdId: 8182
message EEABJCJLDPD {
	map<uint32, GAPMOHMJMJJ> CLMOOAMKJFO = 11; // offset: 24, xor const: 0
}

// CmdId: 9173
message OKHCDHGEKIB {
	uint64 AEDAEPKDOAL = 11; // offset: 56, xor const: 8106
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 15; // offset: 48, xor const: 737
	BMKBNHLNFHB CPEPJEPHPBD = 9; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 40, xor const: 680
}

// CmdId: 2415
message KNNBKLONBKJ {
	bool EIKKJEGBOHJ = 14; // offset: 24, xor const: 0
}

message LCPFLIBBPFE {
	uint32 OPCGOCHOELJ = 15; // offset: 48, xor const: 8430
	uint32 CIBEFFFGPHN = 12; // offset: 68, xor const: 11956
	uint32 GMEOGDJFFAC = 11; // offset: 52, xor const: 8236
	uint32 MLPAAEABGDP = 6; // offset: 28, xor const: 13142
	uint32 PFIPLJPPGAJ = 9; // offset: 60, xor const: 13452
	uint32 JGHHIIPLBKD = 5; // offset: 40, xor const: 4089
	uint32 KFCNNMEMAFF = 4; // offset: 56, xor const: 12555
	int64 OKAGLPFJDHD = 10; // offset: 80, xor const: 13378
	uint32 JPHPIKDKJNF = 2; // offset: 72, xor const: 10739
	uint32 AMGDJGLKGGM = 1; // offset: 44, xor const: 6310
	uint32 KMAHKOJCKLP = 8; // offset: 24, xor const: 12377
	int64 JGGPIIBACLI = 7; // offset: 32, xor const: 926
	uint32 MCLPEEJGDID = 3; // offset: 64, xor const: 12409
}

message DNKAFLFNDHF {
	string MPHLIEKKFIK = 10; // offset: 24, xor const: 0
	uint64 EKFMGFLOJMN = 13; // offset: 32, xor const: 7445
}

// CmdId: 1194
message FLANFKEPHLP {
	uint32 GFOBLCFLFBH = 1; // offset: 28, xor const: 10324
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 4948
}

message PNPNIEBMGKO {
	repeated FGKJFCJILIL FBBNIMHEMLJ = 2; // offset: 16, xor const: 0
	FGKJFCJILIL EFNFANEIJMH = 1; // offset: 24, xor const: 0
}

// CmdId: 3364
message PFDGPMJDFDB {
	uint32 ACHJDNJBFPL = 1; // offset: 40, xor const: 14244
	HollowEntityType DNAENEJOADB = 7; // offset: 44, xor const: 0
	bool OLFJCMKOMMG = 10; // offset: 57, xor const: 0
	IMJIJLIDHEC FCFCDCLHHNN = 6; // offset: 32, xor const: 0
	IMJIJLIDHEC CAEPOMEOOLO = 15; // offset: 16, xor const: 0
	bool JBEGIIJGJOO = 12; // offset: 56, xor const: 0
	int32 ICGKJCMGHGI = 5; // offset: 52, xor const: 7417
	FNDECKNKCIJ MDFKPGBALJI = 9; // offset: 48, xor const: 0
}

enum JNHIKOEOOBD {
	JNHIKOEOOBD_EOJACMCHINL = 0;
	JNHIKOEOOBD_HAMICMJLMAE = 1;
	JNHIKOEOOBD_HINDDELEKFI = 2;
	JNHIKOEOOBD_HOBGEGNAGEL = 3;
}

enum ANPILAJNBCN {
	ANPILAJNBCN_MIFEOJDHEPK = 0;
	ANPILAJNBCN_BPLCEBMPCBL = 1;
	ANPILAJNBCN_AHEMKNLCBHN = 2;
	ANPILAJNBCN_LALEKFHHFEC = 3;
	ANPILAJNBCN_LBOACAGOCIJ = 4;
}

message NAMIFAJABBK {
	string DBPIEEMPAKL = 3; // offset: 72, xor const: 0
	repeated uint32 IJNONMKIDCH = 7; // offset: 48, xor const: 0
	repeated MLOKDABDEAO IANCBMFGNGA = 14; // offset: 32, xor const: 0
	repeated uint32 MFAEBMLCKJJ = 11; // offset: 64, xor const: 0
	repeated KOLNEAPMJCH LNFCMBDKGND = 10; // offset: 16, xor const: 0
	repeated uint32 DELJCDCPBNI = 1; // offset: 56, xor const: 0
	PGABEEMKBDE AMMEEAKKGAI = 12; // offset: 88, xor const: 0
	repeated uint32 GBFAEJLMJJE = 4; // offset: 24, xor const: 0
	uint32 ABPMDIAIEKG = 8; // offset: 96, xor const: 5196
	repeated ODIEFPCJHFL DNEFAOCJBBK = 6; // offset: 80, xor const: 0
}

// CmdId: 2654
message FOCGHDENFEI {
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 10845
	HGIPNPJMOEO LBAFNNOJNJF = 15; // offset: 24, xor const: 0
}

message AENFCJHIEEM {
	map<int32, BENGMDLOHCE> KCKOBBKPJPA = 9; // offset: 16, xor const: 0
}

message PJMPBPBAPFL {
	repeated string HMKNHJLMIIP = 2; // offset: 16, xor const: 0
	int32 MFIOHKNGJLA = 1; // offset: 32, xor const: 0
}

message EDDGGCCEODI {
}

message MCICCJPNHGK {
	bool FECOHDHKCFL = 6; // offset: 40, xor const: 0
	float EGEMIGOJOAJ = 3; // offset: 36, xor const: 0
	bool PPLFBJKOJDI = 9; // offset: 41, xor const: 0
	float GFDECBFPJDE = 13; // offset: 24, xor const: 0
	float JDIHILNKGFP = 1; // offset: 28, xor const: 0
	float HFMNBNGIBGB = 5; // offset: 32, xor const: 0
}

message DOEGDEJLIOG {
}

message GDDBECPNBEJ {
	FGKJFCJILIL JOJBOMLDHAO = 2; // offset: 40, xor const: 0
	string EJKMNMCIENB = 5; // offset: 32, xor const: 0
	FGKJFCJILIL LDLJPDBHPLJ = 1; // offset: 16, xor const: 0
	HGLOMBGGODB OEGNJPJCIOI = 4; // offset: 48, xor const: 0
	FNNFKBFGGGO GBNDBDNICAF = 3; // offset: 52, xor const: 0
}

message HCFDANHKNHP {
	int64 EFOCIEHGBNA = 15; // offset: 64, xor const: 215
	string FJILENJNDFK = 10; // offset: 40, xor const: 0
	uint32 CCCDNNIMMKN = 14; // offset: 72, xor const: 8287
	uint32 BBHODOGDLIB = 5; // offset: 76, xor const: 883
	uint32 OPFEAMDPIAG = 1; // offset: 48, xor const: 7426
	string PBMJHAOJJDJ = 12; // offset: 24, xor const: 0
	bool ILIKFMFLFDH = 3; // offset: 52, xor const: 0
	int64 MOHHBACKBOK = 11; // offset: 56, xor const: 15278
	string OCMOEFMOPKM = 8; // offset: 32, xor const: 0
}

enum KNNPHFLIEHI {
	KNNPHFLIEHI_NNAJJDKFNLC = 0;
}

// CmdId: 504
message NKHOBLHNLME {
	uint32 BCMPKLAOIHK = 4; // offset: 28, xor const: 14595
	bool EPCCLBNKNAL = 6; // offset: 24, xor const: 0
}

message KHNBOKNDCKH {
	string AHBHFCFFCHI = 5; // offset: 16, xor const: 0
	bool AMOOPINOCOG = 10; // offset: 32, xor const: 0
	bool HFCHCFFPKBN = 11; // offset: 33, xor const: 0
	bool MCNCILCODJH = 1; // offset: 34, xor const: 0
}

// CmdId: 9758
message ABNFGEKCNGI {
	uint32 PGNHCFJNBAC = 1; // offset: 24, xor const: 12019
}

enum KBAGEONKEGP {
	KBAGEONKEGP_LDPFDFLHCEO = 0;
	KBAGEONKEGP_HKHNLJDNAIC = 1;
	KBAGEONKEGP_DOBEFINEFIE = 2;
}

message HDJAOMBLFMN {
	uint32 CMPLBHPIBLF = 1; // offset: 28, xor const: 12250
	uint32 PJPDMJHIIBK = 5; // offset: 32, xor const: 1236
	bool IPHHBLODMBN = 2; // offset: 24, xor const: 0
	bool COOEPOJHAOA = 12; // offset: 25, xor const: 0
}

message OHHOEFCHKKJ {
}

message MMFBLNAGMIG {
}

// CmdId: 5802
message HONMAIIFELB {
	uint64 HEJBMNAOJFL = 9; // offset: 48, xor const: 16277
	JBLBLOLKFHK CPEPJEPHPBD = 14; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 40, xor const: 3107
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 14473
}

// CmdId: 5519
message CIOFIEEEMMN {
	map<uint32, int32> JHLIHCONEII = 12; // offset: 24, xor const: 0
}

message NFMOLIGFBAA {
	string HILFDGCAAGK = 2; // offset: 16, xor const: 0
	uint32 LPEKBBJAKBP = 1; // offset: 32, xor const: 0
	uint32 CPPIIEANBFE = 4; // offset: 48, xor const: 0
	uint32 MAHEIHMMJEA = 3; // offset: 36, xor const: 0
	bool MKKJCFLOAJC = 6; // offset: 40, xor const: 0
	uint32 AFJOGKIENOC = 5; // offset: 44, xor const: 0
}

message KCJDODPENBD {
	repeated FGKJFCJILIL MJHFLFPIFPF = 1; // offset: 16, xor const: 0
}

message DFPDCKBLFOM {
	string JEKOIFDKCBL = 3; // offset: 32, xor const: 0
	FGKJFCJILIL IIIGDHJPFMI = 1; // offset: 40, xor const: 0
	bool IJFLCCEOANI = 4; // offset: 48, xor const: 0
	MLIBEAMJADL PGBNNJAEIDF = 2; // offset: 24, xor const: 0
}

// CmdId: 3701
message NEOMKHPDFFI {
}

message KOCCKNLOALJ {
	repeated IFEDCHJDJNN DJICPEHJDFG = 1; // offset: 24, xor const: 0
}

message LLCMJKOPEOO {
	int32 NEHLMICHGEF = 1; // offset: 24, xor const: 0
}

message HGDEOONKAOF {
	CLIDAGBGAIL FDDFLDCJGCF = 1; // offset: 56, xor const: 0
	bool DHDCBAHLKNB = 2; // offset: 65, xor const: 0
	FGKJFCJILIL GLBNCAKAGAL = 6; // offset: 32, xor const: 0
	bool BNJNDMFOGLF = 8; // offset: 64, xor const: 0
	GLAEGNJEBPA AABMKJBBCFP = 7; // offset: 60, xor const: 0
	repeated FGKJFCJILIL KJIDCPPPLLE = 3; // offset: 48, xor const: 0
	FGKJFCJILIL JBAEAFDOBLM = 4; // offset: 40, xor const: 0
	FGKJFCJILIL LJCHOAPPCPB = 5; // offset: 16, xor const: 0
}

message NMECGHKLBBO {
	bool PGPCKJCNHOI = 2; // offset: 32, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 1; // offset: 16, xor const: 0
}

message IBACEKLOOCP {
}

message NGNBCANNGDG {
	repeated PIPPJNLOPOG HDAFHGFGNNM = 5; // offset: 24, xor const: 0
	uint64 PFFMFFNBCIE = 14; // offset: 32, xor const: 2331
}

// CmdId: 8534
message CODMLNIOPMD {
	repeated IMJOMAPGGCB MCCBDDFLHGB = 11; // offset: 16, xor const: 0
	map<uint32, ABMABLFFPEN> PHADHHLFFIK = 15; // offset: 32, xor const: 0
}

enum HEKEENOEOKE {
	HEKEENOEOKE_DKNKDCAPIDF = 0;
}

message NJFAAOLONGN {
	FGKJFCJILIL DBOACCIJPDL = 2; // offset: 16, xor const: 0
	ChessUIControlType HLEAEPDDBLE = 1; // offset: 48, xor const: 0
	FGKJFCJILIL GMFDCLHIIDJ = 3; // offset: 40, xor const: 0
	FGKJFCJILIL DMACLMDICOC = 4; // offset: 24, xor const: 0
}

enum PAGPEOHGLLG {
	PAGPEOHGLLG_JFLAHEFBGBK = 0;
	PAGPEOHGLLG_LJICNEMBHII = 1;
	PAGPEOHGLLG_OEHECIGDMPA = 2;
	PAGPEOHGLLG_COFMIGDNHJM = 3;
}

message HOLGGNHLGJN {
}

// CmdId: 110
message NHKJFHDNAPP {
	uint32 GFCLKDAOMBM = 3; // offset: 36, xor const: 12778
	uint32 HJGCHCAKKNJ = 15; // offset: 32, xor const: 5727
	map<uint32, uint32> NKGPHLLFNOB = 4; // offset: 16, xor const: 0
}

// CmdId: 5498
message HDALFAHCGMG {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 8430
}

message IPFAJMHIJLM {
	TimePeriodType AEIOGIJPKDA = 2; // offset: 28, xor const: 0
	uint32 DAHGNKKJFAH = 1; // offset: 24, xor const: 0
}

message BLIFLCKGBNP {
	uint32 PEDKNCIMHLA = 2; // offset: 32, xor const: 5028
	PMAONELDKME GHGMDKKEHHF = 12; // offset: 16, xor const: 0
	bool OEDAJBHDHCG = 13; // offset: 36, xor const: 0
}

// CmdId: 7834
message BGNPCLNPDMP {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 12779
}

enum JMDOBAEPMFP {
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_NONE = 0;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_INIT = 1;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_MOFIFY_WEIGHT = 2;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_DELETE_POINT = 3;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_ADD_POINT = 4;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_CANCEL_FOCUS = 5;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_MODIFY_KEY = 6;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_CANCEL_AFTER_FOCUS = 7;
	JMDOBAEPMFP_FOCUS_CAMERA_TYPE_SOFT_FOCUS = 8;
}

// CmdId: 7570
message PFBLFDEJKFP {
	CEGBIPKKLAE CPEPJEPHPBD = 8; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 12; // offset: 40, xor const: 7714
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 14809
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 14433
}

message JADEILGOIKG {
	HollowGridLink NFFJFJBHDAF = 4; // offset: 48, xor const: 0
	FGKJFCJILIL MHINMINPONI = 2; // offset: 32, xor const: 0
	FGKJFCJILIL DEFFOFMKOFG = 1; // offset: 40, xor const: 0
	string HFLKGFNBMLE = 3; // offset: 24, xor const: 0
}

message BEJNABLIMEJ {
	bool NBJAGLPLBLD = 11; // offset: 41, xor const: 0
	FHJHFMCLGJM POBIMDMJJHH = 15; // offset: 24, xor const: 0
	repeated FEJNHNCFGCO PDNCKGLOMEL = 14; // offset: 16, xor const: 0
	bool BPKOOBCPACG = 10; // offset: 40, xor const: 0
}

// CmdId: 60
message CONMOPFPDBE {
	repeated MOGPNPJOOCA AOOACBOAHON = 14; // offset: 32, xor const: 0
	repeated uint32 DOHKAKKIFCB = 9; // offset: 16, xor const: 0
	uint32 IJCFAJDEFPG = 15; // offset: 40, xor const: 16322
	uint32 BCCEOLDLIFA = 3; // offset: 44, xor const: 11771
}

message HBNPHCKHHDB {
	uint32 IKGENKKIOBI = 15; // offset: 24, xor const: 13349
	uint32 IMIBEBEKOEO = 1; // offset: 28, xor const: 11649
}

// CmdId: 2569
message FHLDHGMPFBP {
	int32 IHIGNMLCHDK = 2; // offset: 28, xor const: 7400
	uint32 GFOBLCFLFBH = 5; // offset: 24, xor const: 8756
}

message HCHOJNNJILB {
	int32 BKKABBFNGOC = 1; // offset: 24, xor const: 0
}

message KMPEILEEOMO {
	int64 EFOCIEHGBNA = 8; // offset: 40, xor const: 3346
	uint32 BBLCHBANJID = 4; // offset: 36, xor const: 8767
	uint32 GIAMDJOGLFF = 5; // offset: 32, xor const: 7037
	IFNHDCPJADG OPMDALECOEN = 11; // offset: 48, xor const: 0
	int64 MOHHBACKBOK = 10; // offset: 56, xor const: 9280
	string OOODKIGJBCN = 6; // offset: 16, xor const: 0
}

enum EJDHEDDPDNJ {
	EJDHEDDPDNJ_JJCJBNDMICC = 0;
	EJDHEDDPDNJ_ACGINNMGLKI = 1;
	EJDHEDDPDNJ_LPGNHBLINHA = 2;
	EJDHEDDPDNJ_PKNHMGDJDOF = 3;
	EJDHEDDPDNJ_LAICJKJFKHJ = 4;
	EJDHEDDPDNJ_FGHKEFHIDFA = 5;
	EJDHEDDPDNJ_NIFLJOCCLFA = 6;
}

// CmdId: 7362
message GIMLPFJMHIN {
	uint32 HLEAEPDDBLE = 4; // offset: 32, xor const: 8547
	EEPDCIENCAL BDBDIBCGCBL = 6; // offset: 24, xor const: 0
}

// CmdId: 9318
message IJKLCNPCPPD {
}

message PCFEPJDNMBM {
	uint32 HNGHONNOOML = 3; // offset: 48, xor const: 0
	uint32 FDHLALNLAIL = 4; // offset: 40, xor const: 0
	ICCLFNGMAIB BBLCHBANJID = 1; // offset: 32, xor const: 0
	EHIFNFPAHIB GAMKFKMFIDP = 5; // offset: 24, xor const: 0
	uint32 DOLEIJIAIDH = 2; // offset: 44, xor const: 0
}

message NHMAGGGHAPL {
	FGKJFCJILIL AEIHIBLACCM = 3; // offset: 24, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 4; // offset: 16, xor const: 0
	LEHENCIPJIE CKBOJACIJDI = 2; // offset: 52, xor const: 0
	FGKJFCJILIL MHINMINPONI = 5; // offset: 40, xor const: 0
	LHIFDJDCBMK KDAKBFJNEJN = 1; // offset: 48, xor const: 0
}

// CmdId: 5670
message ICIAJACJDGC {
	uint32 NJFOLJNDPGG = 12; // offset: 24, xor const: 4488
}

// CmdId: 32
message DJNAMHFIPLL {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 9636
}

// CmdId: 4104
message PCFMBOBDCAF {
	KCODHMHPHHO CPEPJEPHPBD = 10; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 7; // offset: 56, xor const: 6910
	uint64 AEDAEPKDOAL = 12; // offset: 48, xor const: 13012
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 8; // offset: 40, xor const: 11713
}

// CmdId: 2197
message EINPAAFGHCN {
	uint32 HAJDKPEANBC = 3; // offset: 24, xor const: 11389
}

// CmdId: 9274
message DACNEKHBNLI {
	int32 IHIGNMLCHDK = 12; // offset: 52, xor const: 14531
	repeated uint32 CGEHLKPKPDM = 3; // offset: 32, xor const: 0
	repeated CKKOHOICDMI GCPEDDINJEN = 10; // offset: 16, xor const: 0
	uint32 PANDNEBFPCI = 1; // offset: 48, xor const: 3005
	uint32 LKBMCANLJHK = 15; // offset: 56, xor const: 15897
	repeated uint32 MOEOIPDNBJC = 2; // offset: 40, xor const: 0
}

message NDBHAKHEHEC {
	uint32 LNNOCFFMCAP = 3; // offset: 24, xor const: 4458
	uint32 CLLMBNFMMPD = 8; // offset: 28, xor const: 2137
}

message CLEILMAOKAK {
	uint32 JIMAPLBMFFP = 6; // offset: 28, xor const: 201
	uint32 HMJHFMHOOFF = 3; // offset: 24, xor const: 12503
	uint32 KGBEPDABMJE = 1; // offset: 32, xor const: 6252
}

message AAKKMPHCOEM {
	repeated int32 PGOOGAIEEJD = 13; // offset: 72, xor const: 0
	repeated uint32 BBKKNEMBKAH = 2; // offset: 64, xor const: 0
	repeated uint32 NCEKHFCHJJO = 6; // offset: 48, xor const: 0
	repeated int32 OJEAMMKKFEE = 7; // offset: 16, xor const: 0
	repeated uint32 IMLCNIDNLLI = 11; // offset: 88, xor const: 0
	repeated int32 OFCLMIKHJBG = 9; // offset: 80, xor const: 0
	map<int32, EIFOGHMICIK> JHAPHKKNMGP = 4; // offset: 32, xor const: 0
	repeated uint32 CAIBACAKKPD = 8; // offset: 96, xor const: 0
	repeated uint32 MNAPHEAJNLI = 1; // offset: 40, xor const: 0
	repeated int32 OONJMLKPCOE = 15; // offset: 56, xor const: 0
}

message MIPKEFLJBBP {
	uint32 PJPDMJHIIBK = 5; // offset: 24, xor const: 1711
}

// CmdId: 842
message NKHBOFNINEO {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 12999
}

message IMDCGMAFILL {
	DirectType IBIELJOKGJF = 4; // offset: 60, xor const: 0
	bool DPPLNJJLGBB = 5; // offset: 56, xor const: 0
	FGKJFCJILIL OMAHIIBEIHA = 2; // offset: 40, xor const: 0
	FGKJFCJILIL GLBNCAKAGAL = 7; // offset: 48, xor const: 0
	FGKJFCJILIL LJCHOAPPCPB = 6; // offset: 32, xor const: 0
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 24, xor const: 0
	OGDDEEAOAMK ALJDMENJNMI = 3; // offset: 64, xor const: 0
}

enum MDGAKMNGGGC {
	MDGAKMNGGGC_CKAFMEHAFKE = 0;
	MDGAKMNGGGC_ECGPBGDADJA = 1;
	MDGAKMNGGGC_HIJPIJEPBOK = 2;
	MDGAKMNGGGC_JLOELBKDOFK = 3;
	MDGAKMNGGGC_NKGJBFFJLEJ = 4;
	MDGAKMNGGGC_KLOGMAJGMJO = 5;
	MDGAKMNGGGC_GNMAPNJJAAA = 6;
	MDGAKMNGGGC_NHPEGGLBCPO = 7;
	MDGAKMNGGGC_KDNHHAPMKAJ = 8;
}

message DKHMBOJPJJL {
	repeated MOOANELMKLJ NLOCFBHBIPA = 2; // offset: 32, xor const: 0
	bool KGKEABFPKBL = 4; // offset: 68, xor const: 0
	int32 CKILDKNGINN = 7; // offset: 56, xor const: 0
	int32 NGFLBMOBPMJ = 8; // offset: 52, xor const: 0
	string IMMPAOGLOLG = 6; // offset: 16, xor const: 0
	bool IONAIHFONID = 17; // offset: 66, xor const: 0
	float OFNJMHMENDK = 10; // offset: 48, xor const: 0
	bool IJOGBNLFPDK = 13; // offset: 70, xor const: 0
	bool BLDDNHPNIIJ = 12; // offset: 65, xor const: 0
	bool NBMIGHKEDOE = 18; // offset: 64, xor const: 0
	map<uint32, uint32> OMHHIEDNDOO = 3; // offset: 24, xor const: 0
	bool BNHLDEHJCDM = 15; // offset: 69, xor const: 0
	bool EFHKPGKDCOP = 14; // offset: 67, xor const: 0
	uint32 KPADJMIJNMK = 16; // offset: 76, xor const: 0
	uint32 EHCELHPLKIA = 5; // offset: 72, xor const: 0
	float AEMGKDCDLGG = 11; // offset: 60, xor const: 0
	bool FKMGHFBAFID = 9; // offset: 71, xor const: 0
}

message NBOPHBLLMIM {
	bool HLIENGLKJJE = 2; // offset: 28, xor const: 0
	POFDPJPFPJJ LDEFHKKEOCA = 1; // offset: 24, xor const: 0
	bool OHCNECIBIHI = 3; // offset: 29, xor const: 0
}

message BJCNIJCEPLE {
	FDKGDLGABPG CPEPJEPHPBD = 8; // offset: 16, xor const: 0
}

message PGGDECKAOEE {
	uint64 OLEIMMNNCLI = 5; // offset: 32, xor const: 4152
	uint32 AMIJIAHGPMC = 2; // offset: 28, xor const: 14119
	uint32 NHNFGOHDJME = 14; // offset: 24, xor const: 15090
}

// CmdId: 8022
message CDGCFMFBOMF {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 12501
	uint32 DCENCIPOBMC = 4; // offset: 28, xor const: 6466
}

// CmdId: 9484
message NCLBCCOMGAE {
	JIMJJLJGLDL CIEPBBKFDOK = 9; // offset: 16, xor const: 0
}

message KKHPKIGGGAL {
	repeated double OMCDGHEPANO = 1; // offset: 16, xor const: 0
	repeated double IFNNCGDEFJD = 2; // offset: 32, xor const: 0
}

// CmdId: 9814
message FJGJNEHILOL {
	int32 FGLIPKMBNAC = 9; // offset: 44, xor const: 7859
	int32 JFPHADFAKJB = 8; // offset: 36, xor const: 255
	int32 GJPPELNNBEN = 12; // offset: 40, xor const: 6620
	int64 JKFJAOBEAGI = 3; // offset: 24, xor const: 11037
	int32 PPCNCKBKEJB = 10; // offset: 32, xor const: 12296
}

// CmdId: 1396
message HKNAAPFFNDP {
	uint32 DCENCIPOBMC = 13; // offset: 48, xor const: 462
	string HILFDGCAAGK = 3; // offset: 16, xor const: 0
	uint32 EFNFANEIJMH = 8; // offset: 36, xor const: 7049
	bool PBFOCMGKEEK = 2; // offset: 53, xor const: 0
	bool AKBMHCDKMFD = 14; // offset: 52, xor const: 0
	DHHDGKMFLNB OAEJPMIBGDP = 11; // offset: 40, xor const: 0
	uint32 LHDHLCKNFIG = 7; // offset: 44, xor const: 13170
	uint32 AFJOGKIENOC = 12; // offset: 32, xor const: 16368
}

message AOHEGKLFIJH {
	repeated BJBMKGLBKFG OOHNLIHGLGO = 8; // offset: 24, xor const: 0
	uint32 HJHFOICGOAC = 5; // offset: 32, xor const: 16171
}

message ICGHDANDANK {
	FGKJFCJILIL HLIMIPGBPNA = 1; // offset: 24, xor const: 0
}

// CmdId: 1688
message GHMFHCIOECB {
	repeated EBDAIGALHDI DNGMACCBENG = 1; // offset: 40, xor const: 0
	DICLPNEFFLO PGHPDBDMOCH = 4; // offset: 32, xor const: 0
	bool JMNIJLIMLMC = 11; // offset: 48, xor const: 0
	bool LFMPIDDFBNA = 10; // offset: 49, xor const: 0
	repeated JMENIELIIGF JMNIFIONKBG = 9; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 52, xor const: 5250
}

message JEFEABEIEBD {
	repeated BDCDLHKHDAN GJNHMCJBFPF = 10; // offset: 24, xor const: 0
	bool GDHFEEEMJNK = 15; // offset: 104, xor const: 0
	uint32 APFBOKPDBHN = 7; // offset: 84, xor const: 11004
	repeated uint32 MNNCJCGLKDB = 5; // offset: 64, xor const: 0
	repeated uint32 MGEMHBMIAPM = 3; // offset: 56, xor const: 0
	uint32 FEHGPBMAKEE = 9; // offset: 80, xor const: 3903
	int32 KDMGBGDNKFM = 11; // offset: 108, xor const: 472
	repeated uint32 KIFNAEBKNEA = 4; // offset: 32, xor const: 0
	repeated uint32 LOGJIKNKNLC = 2; // offset: 16, xor const: 0
	uint32 ABNALIPAMAB = 6; // offset: 100, xor const: 4793
	repeated LCIJDIMHPEM JNMBHKCPNFI = 13; // offset: 48, xor const: 0
	repeated MJDIKOFGAHP FFJDLKDGNFK = 1; // offset: 40, xor const: 0
	uint32 IKNMGIGKDOO = 14; // offset: 96, xor const: 828
	int64 HENJALEAAPE = 8; // offset: 88, xor const: 11541
}

message CNBLBMLDFBG {
	bool DCCDKIBIBEF = 4; // offset: 24, xor const: 0
	bool JGPIOKMAAEP = 3; // offset: 25, xor const: 0
	int32 ANBMHPHJOIO = 1; // offset: 28, xor const: 0
}

message DGGNCGKPBND {
	uint32 NJFOLJNDPGG = 1; // offset: 24, xor const: 0
}

// CmdId: 3076
message PIEBGNNNABJ {
	uint64 AEDAEPKDOAL = 13; // offset: 56, xor const: 132
	uint32 KMKPPDICOKA = 2; // offset: 40, xor const: 10719
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 32, xor const: 0
	DILJGBJDHNG CPEPJEPHPBD = 1; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 4; // offset: 48, xor const: 14113
}

// CmdId: 876
message AEGEFCEBADI {
	LDJMHOFHJHK CPEPJEPHPBD = 8; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 946
	uint32 KMKPPDICOKA = 3; // offset: 56, xor const: 5240
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 6135
}

message PJGAABFPONO {
	int32 KDNGMPMPACC = 10; // offset: 28, xor const: 11572
	bool ANOLFGHJPEG = 1; // offset: 32, xor const: 0
	int32 PGPNKDPHGCB = 11; // offset: 24, xor const: 3156
}

message GOMKCDJDEMI {
	IHHJNHHDNHN FMMPECKMOAC = 4; // offset: 40, xor const: 0
	string DNJOMNAJCHB = 1; // offset: 24, xor const: 0
	IHHJNHHDNHN PCKANOMGKGM = 2; // offset: 44, xor const: 0
	string NDANOHCICBM = 3; // offset: 16, xor const: 0
}

enum ADMEBAFJOLI {
	ADMEBAFJOLI_JJLKLGNFBDF = 0;
	ADMEBAFJOLI_MNIPMDJBMKF = 1;
	ADMEBAFJOLI_JNOLEIIAOKD = 2;
	ADMEBAFJOLI_JOALOLODPAO = 4;
	ADMEBAFJOLI_IACJOOFJBCJ = 5;
	ADMEBAFJOLI_PLMLIAMPCKI = 6;
}

message HGCPJFDNOFP {
	AMNEMEAEHHP ECAPMCDCLJF = 1; // offset: 32, xor const: 0
	POBNCBHAOLK KFOLOCMEFKB = 3; // offset: 24, xor const: 0
	int32 EGCDHCEHELC = 4; // offset: 28, xor const: 0
	int32 MILFCLKPNGI = 2; // offset: 36, xor const: 0
}

// CmdId: 6520
message NILNAALKKMO {
	uint32 JNIAMIKKAAF = 15; // offset: 24, xor const: 10179
}

message APCGFJOIFLH {
	repeated uint32 GPFNPNDPMPC = 3; // offset: 16, xor const: 0
}

message IKFDMBEJANI {
	repeated uint32 OKLMOLOLNFH = 8; // offset: 56, xor const: 0
	repeated uint32 JAJLBEJJPBK = 4; // offset: 64, xor const: 0
	repeated BGAABBCIEND IKIEKOFDNHA = 13; // offset: 112, xor const: 0
	repeated PMFLGCCMCPP KIJKNELJFOD = 15; // offset: 72, xor const: 0
	repeated uint32 PMJKEHFGLNM = 14; // offset: 16, xor const: 0
	uint32 IAKKIBBHOCB = 12; // offset: 120, xor const: 13650
	repeated uint32 JJGNCHDBIOC = 9; // offset: 48, xor const: 0
	repeated uint32 BKADEPLEMHK = 1; // offset: 96, xor const: 0
	repeated uint32 BGMCABPDBLF = 10; // offset: 104, xor const: 0
	repeated uint32 NILJBPGBHNP = 2; // offset: 80, xor const: 0
	repeated uint32 BLBGDHFJKPJ = 11; // offset: 88, xor const: 0
	repeated EIDGMALNGEI CHBFAMKMMIE = 3; // offset: 40, xor const: 0
	repeated uint32 HDJGMLAJGEK = 6; // offset: 32, xor const: 0
}

// CmdId: 8026
message DNGALKNGKKL {
	map<uint32, int32> JHLIHCONEII = 13; // offset: 24, xor const: 0
}

// CmdId: 9995
message KDGLHMHOLNF {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 9333
}

// CmdId: 8784
message MDNEDKAFHJC {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 10879
}

message EDLHDEBJPOF {
}

// CmdId: 7562
message AHBFHCENOLK {
	uint32 AMIJIAHGPMC = 12; // offset: 24, xor const: 4218
}

message CMMDHGCJKDA {
	EDGCAIEHLHH LJCHOAPPCPB = 4; // offset: 16, xor const: 0
	int32 ECCPBAANOOJ = 6; // offset: 60, xor const: 0
	PGDMANGLMND LNKCAABKGIK = 2; // offset: 52, xor const: 0
	EDGCAIEHLHH CKBOJACIJDI = 3; // offset: 32, xor const: 0
	int32 PFPNIHLKLEO = 7; // offset: 48, xor const: 0
	uint32 ILNKJIMOLEF = 1; // offset: 56, xor const: 0
	EDGCAIEHLHH GLBNCAKAGAL = 5; // offset: 24, xor const: 0
}

message LMOFHADCHCH {
	bool HNDCBPADDHG = 3; // offset: 40, xor const: 0
	bool OGLPEFJHBPE = 5; // offset: 41, xor const: 0
	uint32 AFJOGKIENOC = 4; // offset: 32, xor const: 0
	repeated FFKGGJEDKGJ OPJBPHHHHKL = 1; // offset: 16, xor const: 0
	bool MAFPPFLMKON = 2; // offset: 42, xor const: 0
	NKPCOAOHKHA IOPNIIBPJFN = 6; // offset: 36, xor const: 0
}

enum EGGJDFFDBCE {
	EGGJDFFDBCE_EIPLALIFFGJ = 0;
	EGGJDFFDBCE_EMAIKMOLPLG = 1;
	EGGJDFFDBCE_EIJKEBFKBGK = 2;
	EGGJDFFDBCE_HDFLIIDNHEI = 3;
	EGGJDFFDBCE_KAFLBMDIPEA = 4;
}

enum KGPNIKBPHAG {
	KGPNIKBPHAG_FOMBNCCFCIE = 0;
}

// CmdId: 6058
message IILMEOMBADL {
	uint32 AMIJIAHGPMC = 8; // offset: 24, xor const: 828
	bool JMLECJIFDHP = 3; // offset: 28, xor const: 0
}

message IAKPGKFEGDI {
	bool JLAJCEHKMMN = 15; // offset: 33, xor const: 0
	bool PJOPGAAHLJE = 4; // offset: 32, xor const: 0
	uint32 LOABNMJMDNI = 3; // offset: 28, xor const: 15822
	uint32 JJCDJOEIKHA = 9; // offset: 24, xor const: 2783
}

message LLGGFAPNGKJ {
}

message NBJEFGMHKOH {
}

message GMIHONLPHLL {
	GPNNDGDBMJM CFNOINEIHPG = 13; // offset: 16, xor const: 0
	map<uint32, ECAOKOKBCNL> GIIGGDPADCF = 6; // offset: 40, xor const: 0
	map<uint32, IELGJNBGCGP> MGFCMIMHOIF = 10; // offset: 24, xor const: 0
}

message FLCFBIAPGFC {
	EDGCAIEHLHH ACEMBJPDCDK = 1; // offset: 16, xor const: 0
	uint32 NGBOBBPIKJP = 2; // offset: 32, xor const: 0
}

// CmdId: 8350
message BIJGDFPCMPD {
	int64 MJBLNIKMNOD = 1; // offset: 32, xor const: 4489
	string DBOACCIJPDL = 15; // offset: 24, xor const: 0
}

message EFGCJLNBNHP {
	uint32 NCAGHHFDAOG = 10; // offset: 40, xor const: 14245
	DOFFKBCMEEI PGDHJJPOJNB = 14; // offset: 24, xor const: 0
	LCLOMKOEOPO BDJAGBEODOL = 12; // offset: 32, xor const: 0
}

enum JPPHPHLOEFJ {
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_NONE = 0;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_LEN = 1;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_ITEM = 2;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_POP = 3;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_COUNT = 4;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_MAX = 5;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_MIN = 6;
	JPPHPHLOEFJ_TYPE_OF_GET_LIST_CLIP = 7;
}

// CmdId: 1297
message MBEPEILCKKH {
	MDLAIOAJEBJ CHLDGHLJAPK = 13; // offset: 16, xor const: 0
	uint64 DIMEDPILOOA = 11; // offset: 32, xor const: 14979
	int32 IHIGNMLCHDK = 14; // offset: 40, xor const: 13388
}

message DKKIIICKACM {
	uint32 BOFLBMIHJAM = 1; // offset: 24, xor const: 0
	BPEOMPGJFCP PBOAMDEBIGO = 2; // offset: 28, xor const: 0
}

message BELHDAJJLLC {
	repeated LGFJHCGPEAK EHEKHHADGOB = 4; // offset: 16, xor const: 0
}

message JAMIPMDCAJB {
	map<uint32, uint32> HLGABAOBFBJ = 1; // offset: 16, xor const: 0
}

message HLBOHEJAKHG {
	repeated APMHKGIFEON MAGLGKJLLJF = 6; // offset: 16, xor const: 0
}

// CmdId: 81
message ALKBBPGGGDJ {
}

// CmdId: 8563
message IMHADNCFPKA {
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 5982
	repeated FHJHFMCLGJM GJBHHDDDHPB = 15; // offset: 24, xor const: 0
}

message CPLPEFHJGJI {
}

// CmdId: 2087
message LONMHLECIJF {
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 4; // offset: 40, xor const: 6142
	uint32 KMKPPDICOKA = 9; // offset: 48, xor const: 8284
	LJKIOCEAOOE CPEPJEPHPBD = 2; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 11; // offset: 56, xor const: 7132
}

// CmdId: 2321
message KOLNMEGGNEF {
	FCJLAIMECDE MDFKPGBALJI = 9; // offset: 24, xor const: 0
}

enum NMGJPFJGFDP {
	NMGJPFJGFDP_JMGAMBIONLD = 0;
	NMGJPFJGFDP_BAGILMNEOMD = 1;
	NMGJPFJGFDP_INCJPLDHLMJ = 2;
	NMGJPFJGFDP_ENPCBFDENAC = 3;
	NMGJPFJGFDP_FIJFEGBAHDC = 4;
}

message CBMHCEEKHKL {
	CEHOOCNNKPF IDCMJDLNPEB = 1; // offset: 16, xor const: 0
	uint32 ONEODGNJJAM = 3; // offset: 52, xor const: 14281
	uint32 NBGGBOKFJOB = 11; // offset: 56, xor const: 3411
	FAKNFKDEHJE JAIAJLJCKCJ = 5; // offset: 24, xor const: 0
	NLIKKNNCBCK MALDIJFANDM = 7; // offset: 40, xor const: 0
	uint32 BCFICNOMECC = 2; // offset: 48, xor const: 14463
}

message MHCDDANEDDA {
	repeated uint32 AFOIGCJBOBO = 2; // offset: 40, xor const: 0
	repeated uint32 GAPNLHBPMNE = 1; // offset: 32, xor const: 0
	repeated uint32 GHNNLAJCPOL = 3; // offset: 24, xor const: 0
}

message IKOFDDOECPJ {
	bool MANMEGGPIDK = 4; // offset: 33, xor const: 0
	bool PBIOOKKGJDH = 3; // offset: 32, xor const: 0
	FGKJFCJILIL JEKCINEAIJN = 2; // offset: 16, xor const: 0
	BOKEMLFMOFL MLOCGOPJHKA = 1; // offset: 36, xor const: 0
}

enum EDBFCIANEAO {
	EDBFCIANEAO_AFHLGIMKGHM = 0;
	EDBFCIANEAO_CNLOLMPPFJF = 1;
	EDBFCIANEAO_LGPIMBHNAIP = 2;
}

// CmdId: 1423
message MEHPPKBAIAP {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 3817
}

// CmdId: 1417
message ABBEIEFKCGP {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 1478
}

message EJFPJPHOHPE {
	uint32 MNHMFPCHHDF = 2; // offset: 52, xor const: 12815
	bool GIBMBJFPPBE = 6; // offset: 48, xor const: 0
	int64 MOHHBACKBOK = 4; // offset: 32, xor const: 12784
	repeated NLKJBJNAGLM CGPNMNGLCJD = 3; // offset: 24, xor const: 0
	bool GBKNCJDLDJB = 14; // offset: 49, xor const: 0
	int64 KCDAILEMPKE = 9; // offset: 40, xor const: 388
}

// CmdId: 3469
message DELLHALGPBM {
	uint64 HEJBMNAOJFL = 12; // offset: 56, xor const: 9600
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 8; // offset: 48, xor const: 4733
	PALAMMGGKHP CPEPJEPHPBD = 10; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 9; // offset: 40, xor const: 8129
}

enum FEGPMJJHBDK {
	FEGPMJJHBDK_DCGMBNLJKLN = 0;
	FEGPMJJHBDK_FFLILKOJJHF = 1;
	FEGPMJJHBDK_CDPKLPOIILD = 2;
	FEGPMJJHBDK_MHJKMAMNBHI = 3;
}

// CmdId: 1922
message MFMABNCHJHM {
}

message OEAEIIHKNAF {
	int32 CPEGDKBNGDH = 2; // offset: 24, xor const: 0
	int32 FAPGCILCDNK = 1; // offset: 28, xor const: 0
}

message KKEHJLGILDH {
	map<uint32, ABMABLFFPEN> JEJDHIHDDOC = 6; // offset: 16, xor const: 0
}

message OHKINHEJAPE {
	repeated uint32 CBIMBDIAPON = 9; // offset: 24, xor const: 0
}

// CmdId: 5683
message AJABJKDKLDI {
	repeated int32 MIIAPLGMBDF = 8; // offset: 16, xor const: 0
}

// CmdId: 4158
message AJJPDKBEGPI {
}

message NINCKOKAFPJ {
	bool GBKNCJDLDJB = 15; // offset: 24, xor const: 0
	uint32 OPFEAMDPIAG = 4; // offset: 28, xor const: 4898
}

message MLOKDABDEAO {
	string DBPIEEMPAKL = 13; // offset: 24, xor const: 0
	uint32 CNNFHILKJPI = 14; // offset: 32, xor const: 3981
}

message FELDCIOGDIG {
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 40, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 24, xor const: 0
	FGKJFCJILIL DBOACCIJPDL = 1; // offset: 16, xor const: 0
}

// CmdId: 7740
message HIHLIJBNLBB {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 15828
}

message MBANOMJNICC {
	int32 AFDLNELAEAM = 5; // offset: 64, xor const: 5141
	HBFBNKAODPJ AFEGAIOBGPD = 10; // offset: 24, xor const: 0
	HBFBNKAODPJ GOBNBFMNADI = 1; // offset: 48, xor const: 0
	bool IODKJGPNHLL = 6; // offset: 68, xor const: 0
	bool CDFGBCCPOEI = 14; // offset: 69, xor const: 0
	int32 ADJDFONABJA = 7; // offset: 56, xor const: 4079
	PBKHAAGHNKH FBHPIELOILC = 13; // offset: 32, xor const: 0
	HBFBNKAODPJ EDKNMHGIHPH = 15; // offset: 16, xor const: 0
	int32 FMNFFJAEACH = 3; // offset: 60, xor const: 5081
}

message BCCJDNNCIOO {
	uint32 CINAJFDNJBD = 1; // offset: 24, xor const: 0
}

message IIODJLBIDIG {
	FGKJFCJILIL MDAHPHPHPHI = 4; // offset: 40, xor const: 0
	FGKJFCJILIL AGLLNBCMBMC = 2; // offset: 32, xor const: 0
	HELLMDLOOIP KDAKBFJNEJN = 1; // offset: 48, xor const: 0
	repeated LHDMGLDEGOE KALJGIMICFM = 3; // offset: 24, xor const: 0
}

message MNKJFNHFHKC {
	uint32 PCJIIBJKJDJ = 6; // offset: 60, xor const: 0
	map<int32, string> HNLPNNBBDED = 11; // offset: 24, xor const: 0
	bool BGKLODNGJBP = 8; // offset: 51, xor const: 0
	FKNGHODDFNO NFPAJCJMJLF = 10; // offset: 56, xor const: 0
	bool GFACJDIKLDO = 13; // offset: 48, xor const: 0
	repeated int32 IGJGGEHAACC = 4; // offset: 16, xor const: 0
	bool NBJJNMIDPOJ = 3; // offset: 49, xor const: 0
	DACKFJCNIEH BEPALPNKGAH = 9; // offset: 40, xor const: 0
	uint32 ILOPALDIPKO = 5; // offset: 52, xor const: 0
	bool MKKJCFLOAJC = 7; // offset: 50, xor const: 0
}

// CmdId: 568
message HHKGOIECCFL {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 7803
}

message HGIPJOCNKDF {
	OKONCHKIDGG JGIHAKGPJMJ = 1000; // offset: 36, xor const: 0
	uint32 OPFEAMDPIAG = 1; // offset: 32, xor const: 0
	google.protobuf.Any IKNKKNPBMOP = 1001; // offset: 24, xor const: 0
}

message LCKINEOILAH {
	uint64 NCAGHHFDAOG = 11; // offset: 32, xor const: 1293
	LEPHGNHNNEF CPEPJEPHPBD = 5; // offset: 24, xor const: 0
}

message IPPJEHGGGOA {
}

// CmdId: 5148
message FOMCCOIGILP {
	uint64 AEDAEPKDOAL = 4; // offset: 40, xor const: 15433
	GPAECAKHODD CPEPJEPHPBD = 13; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 14; // offset: 48, xor const: 8674
	uint64 HEJBMNAOJFL = 10; // offset: 56, xor const: 9371
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
}

enum OHICCIBCHMH {
	OHICCIBCHMH_KLHKCIBHKAF = 0;
	OHICCIBCHMH_BPNEMMCDEJK = 1;
}

// CmdId: 593
message NJEIEKOFNGM {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 5066
	uint32 GFOBLCFLFBH = 7; // offset: 28, xor const: 5429
}

message PNJKJLFEOPN {
	repeated FGKJFCJILIL ALLKNECDFEG = 1; // offset: 16, xor const: 0
}

message EFNLFINDNHM {
	BFNGIGDKKJN BICJHAOHDJD = 8; // offset: 24, xor const: 0
}

// CmdId: 3012
message FMDKMOBEOND {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 2222
}

// CmdId: 4021
message GDAAFNDBKMK {
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 6436
	repeated NOADHMBHHNN OKMCJGCLNNH = 9; // offset: 16, xor const: 0
}

message LNEBJIHEJHG {
	OEDPLCLFPLI PHNBMLLAADP = 5; // offset: 24, xor const: 0
}

// CmdId: 6268
message GMAGHMJOGJK {
	uint32 NJFOLJNDPGG = 5; // offset: 24, xor const: 9791
}

// CmdId: 2036
message KAKNDCIBLOA {
}

message CFCDAFAFILE {
	uint32 MHDFOCGAOPO = 1; // offset: 24, xor const: 0
}

message LNJGJMINLNP {
	int32 NIPFFIMIMCM = 3; // offset: 48, xor const: 14463
	int32 GPJMFJPEPKD = 1; // offset: 56, xor const: 13387
	bool MIGIFNKNJGM = 2; // offset: 72, xor const: 0
	uint32 CNCBKJIMDKK = 12; // offset: 52, xor const: 7998
	NELNFEENILC FJODEBCOKKJ = 5; // offset: 24, xor const: 0
	int32 ODIEODCGOGA = 7; // offset: 68, xor const: 778
	repeated uint32 GHDFNHICMJJ = 14; // offset: 16, xor const: 0
	NELNFEENILC PKEGMHFMOII = 4; // offset: 40, xor const: 0
	int32 LKHEIPHOLFD = 15; // offset: 64, xor const: 15611
	uint32 EKLGNOIEMLA = 8; // offset: 60, xor const: 9960
}

message FAJMGACKNNH {
	NNOGPBFKGNI ANHNPPOBCKI = 15; // offset: 24, xor const: 0
	OHBHILDLOGG PABAOCDLLOM = 5; // offset: 16, xor const: 0
}

// CmdId: 4543
message FCDIEDOABJN {
	uint32 EKLGNOIEMLA = 7; // offset: 24, xor const: 12160
}

// CmdId: 7906
message IMNPILCPIEN {
	uint32 EKLGNOIEMLA = 2; // offset: 32, xor const: 3869
	int32 IHIGNMLCHDK = 3; // offset: 28, xor const: 3262
	uint32 BALIJBBCCDN = 15; // offset: 24, xor const: 5920
}

message BBMHBHHDOCD {
	uint64 AEDAEPKDOAL = 5; // offset: 40, xor const: 2213
	uint32 NIJLEDIPBGF = 3; // offset: 48, xor const: 4828
	uint64 HKCHPDBIJHC = 6; // offset: 24, xor const: 3876
	uint64 KHJBNCBPCDN = 14; // offset: 56, xor const: 15572
	uint64 HEJBMNAOJFL = 15; // offset: 32, xor const: 6305
}

// CmdId: 8961
message DPKAGHPDMCI {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 14417
}

// CmdId: 1319
message DFPOIFNLBJL {
	uint32 OPFEAMDPIAG = 9; // offset: 24, xor const: 2890
}

message ICCLFNGMAIB {
	enum DBGIDPNDAOM {
		DBGIDPNDAOM_NONE = 0;
		DBGIDPNDAOM_MINI_GAME_PARAM = 1;
		DBGIDPNDAOM_ACT_GAME_PARAM = 2;
		DBGIDPNDAOM_HOLLOW_PARAM = 3;
		DBGIDPNDAOM_PARTY_GAME_PARAM = 4;
	}

	oneof ICKAAGFNAIK {
		BFCCBKMCAFC mini_game_param = 1;
		NJFBPGEHEDN hollow_param = 3;
		CGLAPOKLOBO party_game_param = 4;
		MGBCFHGOKGI act_game_param = 2;
	}
}

message LFKBMDBHEJP {
	repeated DGLIBCFPFKH BMCMLHFJJPD = 9; // offset: 16, xor const: 0
}

// CmdId: 3240
message KBJBHMIAHBO {
	int32 BKNAHIDANAP = 3; // offset: 24, xor const: 8707
	bool CHBJJBBPFLL = 12; // offset: 37, xor const: 0
	bool IMJOFHCJDAN = 6; // offset: 28, xor const: 0
	int32 FFNLEOGIJPP = 9; // offset: 32, xor const: 880
	bool GAMPAKGNGGG = 5; // offset: 29, xor const: 0
	bool HFEJMMPMAMI = 10; // offset: 36, xor const: 0
	bool PHOKKCNFGIJ = 14; // offset: 39, xor const: 0
	bool DBDEIFEAJIO = 7; // offset: 38, xor const: 0
}

// CmdId: 5968
message OFBGLBEBFFA {
	int32 BBLCHBANJID = 5; // offset: 28, xor const: 1554
	int32 BLINOJOLPBI = 12; // offset: 24, xor const: 8098
}

enum PBADIIBPLCN {
	PBADIIBPLCN_DEFAULT = 0;
	PBADIIBPLCN_HOLLOW_NPC = 1;
	PBADIIBPLCN_HOLLOW_EVENT = 2;
}

message LFLFOHAGHCB {
	string PECAFAPOHND = 1; // offset: 24, xor const: 0
	FGKJFCJILIL ACGLAKNPAFN = 5; // offset: 32, xor const: 0
	FGKJFCJILIL HMFDILBMLDP = 9; // offset: 16, xor const: 0
	LEHENCIPJIE MNEBNHOGLKF = 4; // offset: 100, xor const: 0
	bool IONAIHFONID = 16; // offset: 104, xor const: 0
	FGKJFCJILIL JNPEOOCMNKC = 10; // offset: 40, xor const: 0
	FGKJFCJILIL NBNJEFMBCEE = 14; // offset: 88, xor const: 0
	bool NBMIGHKEDOE = 17; // offset: 107, xor const: 0
	bool ANFIPPGADMD = 13; // offset: 105, xor const: 0
	EGMFOFFEAKK HLEAEPDDBLE = 2; // offset: 96, xor const: 0
	LDHKJGEMKIO FNGJCMEDECN = 15; // offset: 80, xor const: 0
	bool FKMGHFBAFID = 12; // offset: 106, xor const: 0
	FGKJFCJILIL NGFLBMOBPMJ = 8; // offset: 56, xor const: 0
	FGKJFCJILIL CKILDKNGINN = 7; // offset: 72, xor const: 0
	FGKJFCJILIL JEBFNAIPOHF = 6; // offset: 64, xor const: 0
}

message HAGKCKDFHJK {
	uint32 DKHMMGMLLFA = 5; // offset: 32, xor const: 0
	uint32 HJHFOICGOAC = 1; // offset: 40, xor const: 0
	uint32 KNMOKGOFMEI = 3; // offset: 48, xor const: 0
	uint32 KBKLJLLBLCD = 4; // offset: 52, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 7; // offset: 24, xor const: 0
	uint32 CBDBIPMJEPJ = 2; // offset: 36, xor const: 0
	GBFCMCBACOC PBOAMDEBIGO = 6; // offset: 44, xor const: 0
}

message HNMHLFMJFHI {
	int32 AMCIIDDGMOP = 13; // offset: 24, xor const: 88
}

// CmdId: 455
message NCHNDHPNEAN {
	int32 IHIGNMLCHDK = 10; // offset: 28, xor const: 8054
	uint32 BDDHNLLFHDJ = 2; // offset: 24, xor const: 10770
}

// CmdId: 5826
message PDJHIADOFFH {
	uint64 DIMEDPILOOA = 15; // offset: 24, xor const: 13116
}

message PJCLPHAGPNI {
	IFGDJNNPCAN FGALEHFDFPD = 12; // offset: 32, xor const: 0
	HBFBNKAODPJ NCAGHHFDAOG = 15; // offset: 24, xor const: 0
	IFGDJNNPCAN CPOGPPICDJO = 9; // offset: 16, xor const: 0
}

message HJGMHPAHOMI {
	float EFCFBIFDBJF = 9; // offset: 28, xor const: 0
	uint32 NCAGHHFDAOG = 6; // offset: 32, xor const: 9471
	float EFLPLGPDEGF = 4; // offset: 24, xor const: 0
}

message HJFBNNJPAKI {
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 32, xor const: 0
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 24, xor const: 0
}

// CmdId: 1027
message IMDOKAACBIN {
	map<string, int64> ONKEOHNGJBA = 9; // offset: 24, xor const: 0
}

// CmdId: 6819
message OFAGBFMGDAJ {
	repeated FHJHFMCLGJM EMKPBGIPONA = 6; // offset: 32, xor const: 0
	repeated uint32 DOLDIHJOEOK = 4; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 40, xor const: 1947
}

enum NBJEJIPDHKD {
	NBJEJIPDHKD_OKAHDDCLIHG = 0;
	NBJEJIPDHKD_GOFPNNFKFJB = 1;
	NBJEJIPDHKD_LEGBFOFOBMG = 2;
	NBJEJIPDHKD_ODLGNMMACKD = 3;
	NBJEJIPDHKD_JKPPFCHJPOP = 4;
	NBJEJIPDHKD_ICLIOGJHABH = 5;
}

// CmdId: 5250
message NJEKPGGLNIC {
	repeated uint32 GFBFEKAJDIG = 14; // offset: 24, xor const: 0
}

enum MAFPLNFCLEJ {
	MAFPLNFCLEJ_BHEIALOGFCM = 0;
	MAFPLNFCLEJ_PNCCPGLPAAO = 1;
	MAFPLNFCLEJ_FJFAPBLOOFF = 2;
}

message GPDNABFNFOC {
	int32 ENEGAHHFOPK = 10; // offset: 24, xor const: 12805
}

// CmdId: 927
message CEKIAONDKDD {
	uint32 HGKIIBNGIAJ = 10; // offset: 32, xor const: 11789
	repeated CNHKJDKBJGN IPCGEBPFPHG = 9; // offset: 16, xor const: 0
	uint32 PEDKNCIMHLA = 11; // offset: 36, xor const: 2201
}

message BCGNFNMECOI {
	bool BOHDDJJOINB = 6; // offset: 24, xor const: 0
}

message ECKLMIMFPCL {
	int32 ANKJPHPFMCP = 2; // offset: 28, xor const: 11820
	int32 MHINMINPONI = 14; // offset: 24, xor const: 3987
}

message PCHCHAKNJNI {
	repeated uint32 AMLDNFKPDGJ = 4; // offset: 16, xor const: 0
	repeated PIMODHDBCIO OCDMIHFCPAN = 5; // offset: 24, xor const: 0
}

message JCILPDPHEPG {
}

message CIGPOGEKOGC {
	MILONCGNDLG FMKEDPLBDOJ = 3; // offset: 40, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 2; // offset: 32, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 16, xor const: 0
}

enum LNANIMHFLAN {
	LNANIMHFLAN_DEEFJDMJOPL = 0;
	LNANIMHFLAN_JDCNFDAKNBI = 1;
}

// CmdId: 8944
message PHIKGDPKHBM {
	bool EMKAHDDHLFJ = 1; // offset: 24, xor const: 0
}

message KKFHONHEMMB {
	map<uint32, int32> MCOLPPOGNHK = 1; // offset: 16, xor const: 0
	uint32 AMIJIAHGPMC = 2; // offset: 32, xor const: 0
}

message EAJKICFNGDK {
	repeated uint32 MKKJCEDCDBM = 2; // offset: 16, xor const: 0
	uint32 EKLGNOIEMLA = 1; // offset: 32, xor const: 0
	bool MALAOMAKEPB = 3; // offset: 36, xor const: 0
}

enum GNINAHLLEAN {
	GNINAHLLEAN_FLJEEGHBGHO = 0;
	GNINAHLLEAN_MHOGFKPGCBJ = 1;
	GNINAHLLEAN_PMMFAAOHBCG = 2;
	GNINAHLLEAN_CKIJAOILNEK = 3;
}

// CmdId: 5169
message BDFIAJICJAB {
	int32 IHIGNMLCHDK = 10; // offset: 36, xor const: 16039
	map<uint32, uint32> APKAEIEAILJ = 13; // offset: 16, xor const: 0
	uint32 PAPKLIJOFNP = 1; // offset: 32, xor const: 7513
}

// CmdId: 6123
message NAEKDAMHJKH {
	repeated uint32 KPOFFBOODOC = 9; // offset: 16, xor const: 0
}

message NPPPKGMGHLH {
}

enum FJABHNPMECL {
	FJABHNPMECL_HOLLOW_ELEVATOR_DIRECTION_NONE = 0;
	FJABHNPMECL_HOLLOW_ELEVATOR_DIRECTION_UP = 1;
	FJABHNPMECL_HOLLOW_ELEVATOR_DIRECTION_DOWN = 2;
}

message GPNNLEFHNFI {
	int32 BPAOLCBMICK = 13; // offset: 24, xor const: 13827
	int32 JIGPDLMMEBE = 1; // offset: 28, xor const: 12799
}

message KLKLNMDNLKC {
	int32 LEFCCFCBIAG = 1; // offset: 24, xor const: 0
	int32 GCALGKGBHDO = 2; // offset: 32, xor const: 0
	int32 KOMIMFNADCM = 3; // offset: 28, xor const: 0
}

message KHLNKHJMGPE {
	repeated FGKJFCJILIL GPFNPNDPMPC = 2; // offset: 16, xor const: 0
	DELGLGEKIAN NNBLFBCAHCL = 1; // offset: 32, xor const: 0
}

enum OOLEHBAIOKG {
	OOLEHBAIOKG_OPTION_ICON_MODE_SINGLE = 0;
	OOLEHBAIOKG_OPTION_ICON_MODE_ADD = 1;
	OOLEHBAIOKG_OPTION_ICON_MODE_REPLACE = 2;
	OOLEHBAIOKG_OPTION_ICON_MODE_REDUCE = 3;
	OOLEHBAIOKG_OPTION_ICON_MODE_SUIT = 4;
	OOLEHBAIOKG_OPTION_ICON_MODE_SWITCH = 5;
	OOLEHBAIOKG_OPTION_ICON_MODE_UPGRADE = 6;
}

message PGOPAPAFJNG {
	bool PPKOKAKLAIN = 14; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 8; // offset: 28, xor const: 6782
}

message GJGFDMJBCPO {
	uint32 PBOAMDEBIGO = 3; // offset: 32, xor const: 11066
	uint32 OPFEAMDPIAG = 10; // offset: 40, xor const: 12889
	uint32 NNANBCMLFBL = 9; // offset: 36, xor const: 11763
	map<uint32, uint32> GLPLNJBEIPF = 5; // offset: 24, xor const: 0
}

message NMIKLCJLPIB {
	INLFFDKGPNK AODMMCCECAP = 9; // offset: 24, xor const: 0
}

enum LBICOCBNCEE {
	LBICOCBNCEE_NONE = 0;
	LBICOCBNCEE_HEAD = 1;
	LBICOCBNCEE_TAIL = 2;
}

message LKCBCJHNGBM {
	EDGCAIEHLHH KLMMEHMCHFH = 1; // offset: 32, xor const: 0
	bytes DHLEGHCPJDI = 3; // offset: 40, xor const: 0
	bool KJOAKBGECHJ = 4; // offset: 48, xor const: 0
	EDGCAIEHLHH FGALEHFDFPD = 2; // offset: 24, xor const: 0
}

message MODPPBCAPGE {
	PLMOLMHGOBD OIDDOJOCCJH = 2; // offset: 16, xor const: 0
	string MPHLIEKKFIK = 1; // offset: 32, xor const: 0
}

message NMILFBIFKDA {
}

message NLDFCLAJONH {
}

// CmdId: 2933
message HPCDFKCPPGE {
	JAMIPMDCAJB GHJCLLGNOBO = 13; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 9717
}

message FBENHONLMBH {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 4596
	repeated APMHKGIFEON MAGLGKJLLJF = 1; // offset: 16, xor const: 0
}

// CmdId: 6778
message JGPLFNAKPPE {
	repeated int32 OKMCJGCLNNH = 3; // offset: 24, xor const: 0
	int32 BOKNCLLHIEA = 9; // offset: 32, xor const: 6606
}

message ONGOGNMMJKM {
	HBFBNKAODPJ FNNGEDGDEPE = 1; // offset: 24, xor const: 0
}

// CmdId: 5748
message LLKJPOBCHII {
	uint32 LHDGHDNENDL = 11; // offset: 40, xor const: 8059
	uint32 CDJLGDBPMHC = 14; // offset: 36, xor const: 4239
	PCMEFCINGOP KBFBDIJGDGG = 1; // offset: 32, xor const: 0
	repeated JFOHELMBLGN HCGMLFMFNAK = 4; // offset: 24, xor const: 0
}

message HAGBCCAPOPJ {
	IMFBENMKKGD OAEJPMIBGDP = 1; // offset: 44, xor const: 0
	FGKJFCJILIL EHGLMGAGAIN = 3; // offset: 16, xor const: 0
	bool EEJKMIHEPJL = 4; // offset: 40, xor const: 0
	FGKJFCJILIL ADBPGCNNJBK = 2; // offset: 32, xor const: 0
}

message EEOKFADLFHG {
	repeated FGKJFCJILIL NPEFFKFJFCP = 4; // offset: 24, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 3; // offset: 16, xor const: 0
	FGKJFCJILIL PGBADFMPAPK = 2; // offset: 48, xor const: 0
	FGKJFCJILIL HLEAEPDDBLE = 1; // offset: 32, xor const: 0
}

// CmdId: 744
message INIBLMHCIFN {
	uint32 FEILCHDJBAI = 4; // offset: 112, xor const: 11374
	uint32 CIBNBECPDGE = 14; // offset: 104, xor const: 7834
	repeated uint32 FHACLDNHIMM = 1514; // offset: 24, xor const: 0
	bool LNICCMGJPJH = 2; // offset: 120, xor const: 0
	repeated uint32 CMLEENDHBML = 9; // offset: 40, xor const: 0
	repeated uint32 PPBCKBHDIIH = 13; // offset: 72, xor const: 0
	string NNBFIIAMGBB = 10; // offset: 16, xor const: 0
	repeated uint32 BFHJIKJLKAC = 12; // offset: 96, xor const: 0
	string IAFHEFEMMLC = 6; // offset: 64, xor const: 0
	repeated uint32 GLFAIDIPKHL = 5; // offset: 80, xor const: 0
	uint32 GFCLKDAOMBM = 3; // offset: 116, xor const: 3395
	repeated uint32 IGBBCGMHMNB = 615; // offset: 32, xor const: 0
	bool AJJGLAGINNM = 15; // offset: 123, xor const: 0
	bool HCMIEEGPBJM = 1; // offset: 122, xor const: 0
	bool IDNODLKKEHJ = 7; // offset: 121, xor const: 0
	repeated uint32 NIPJDMKKDDE = 8; // offset: 88, xor const: 0
	uint32 EKLGNOIEMLA = 11; // offset: 108, xor const: 10496
	repeated uint32 BFINIOPONGC = 1923; // offset: 56, xor const: 0
}

message DENMEOPFNHB {
	uint32 PCMDHBKPOIN = 3; // offset: 28, xor const: 0
	uint32 OPGNNKDMNOP = 4; // offset: 24, xor const: 0
	uint32 PDPGNGOEKHO = 2; // offset: 36, xor const: 0
	uint32 AMIJIAHGPMC = 1; // offset: 32, xor const: 0
}

enum CBJBGBDBAHI {
	CBJBGBDBAHI_JANLOMDCNCK = 0;
	CBJBGBDBAHI_NDLDNFPFHOD = 1;
	CBJBGBDBAHI_MCIEBOFKPKF = 2;
	CBJBGBDBAHI_CNLLMJCIGCA = 3;
	CBJBGBDBAHI_MAHPBAIEGGE = 4;
}

message FLLHMIKCNHF {
}

message JECNIHBLDCI {
	float NGFLBMOBPMJ = 8; // offset: 44, xor const: 0
	bool FGBPLOKICAF = 5; // offset: 32, xor const: 0
	float CKILDKNGINN = 7; // offset: 48, xor const: 0
	int32 HCGNFMFOLFO = 2; // offset: 36, xor const: 0
	int32 MEJNAAHILIM = 3; // offset: 40, xor const: 0
	bool EFHKPGKDCOP = 9; // offset: 34, xor const: 0
	string PECAFAPOHND = 4; // offset: 24, xor const: 0
	int32 HLEAEPDDBLE = 6; // offset: 52, xor const: 0
	bool JEMEBBNHCLJ = 1; // offset: 33, xor const: 0
}

message GLPOENMFANA {
	bool LAAKLPMPHPH = 2; // offset: 40, xor const: 0
	FGKJFCJILIL EFNFANEIJMH = 3; // offset: 32, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 24, xor const: 0
}

// CmdId: 9011
message ANICBHLDEOL {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 3683
}

message AOAEAGPJBPF {
}

enum INFCFHOCBGC {
	INFCFHOCBGC_SCENE_PROPERTY_TYPE_NONE = 0;
	INFCFHOCBGC_STAMINA = 1001;
	INFCFHOCBGC_STAMINA_MAX = 1002;
	INFCFHOCBGC_STAMINA_RATIO = 1003;
	INFCFHOCBGC_STAMINA_DELTA = 1004;
	INFCFHOCBGC_GOLD_RATIO = 1005;
	INFCFHOCBGC_GOLD_DELTA = 1006;
	INFCFHOCBGC_SHOP_PRICE = 1018;
	INFCFHOCBGC_STAMINA_INCREASE = 1019;
	INFCFHOCBGC_PLAYER_VIEW = 1025;
	INFCFHOCBGC_ACTOR_MAX_CUR_HP = 1035;
	INFCFHOCBGC_SHOP_PRICE_DELTA = 1036;
	INFCFHOCBGC_WEATHER = 1043;
	INFCFHOCBGC_TIME_PERIOD = 1044;
	INFCFHOCBGC_ABYSS_POINT_RATIO = 1045;
	INFCFHOCBGC_ABYSS_POINT_DELTA = 1046;
	INFCFHOCBGC_HOLLOW_HP_RECOVER_RATIO = 1047;
	INFCFHOCBGC_HOLLOW_HP_DECREASE_RATIO = 1048;
	INFCFHOCBGC_CARD_B_PROBABILITY_DELTA = 1049;
	INFCFHOCBGC_CARD_A_PROBABILITY_DELTA = 1050;
	INFCFHOCBGC_CARD_S_PROBABILITY_DELTA = 1051;
	INFCFHOCBGC_CURSE_B_PROBABILITY_DELTA = 1052;
	INFCFHOCBGC_CURSE_A_PROBABILITY_DELTA = 1053;
	INFCFHOCBGC_CURSE_S_PROBABILITY_DELTA = 1054;
	INFCFHOCBGC_HOLLOW_ITEM_B_PROBABILITY_DELTA = 1055;
	INFCFHOCBGC_HOLLOW_ITEM_A_PROBABILITY_DELTA = 1056;
	INFCFHOCBGC_HOLLOW_ITEM_S_PROBABILITY_DELTA = 1057;
	INFCFHOCBGC_ENABLE_CARD_FUSION = 1058;
	INFCFHOCBGC_ENABLE_CARD_UPGRADE = 1059;
	INFCFHOCBGC_ENABLE_CARD_REFRESH = 1060;
	INFCFHOCBGC_RECOVERABLE_TIP_ID = 1063;
	INFCFHOCBGC_RECOVERABLE_BOTTOM_TIP_ID = 1064;
	INFCFHOCBGC_HOLLOW_DRILL_ENERGY = 1065;
	INFCFHOCBGC_HOLLOW_DRILL_LEVEL = 1066;
	INFCFHOCBGC_FORBID_VOICE = 1081;
	INFCFHOCBGC_HOLLOW_DRILL_SPEED_LEVEL = 1082;
	INFCFHOCBGC_EXP = 1083;
	INFCFHOCBGC_EXP_MAX = 1084;
	INFCFHOCBGC_EXP_RATIO = 1085;
	INFCFHOCBGC_EXP_DELTA = 1086;
	INFCFHOCBGC_POWER = 1087;
	INFCFHOCBGC_POWER_LEVEL_UP = 1088;
	INFCFHOCBGC_ARPEGGIO_LAYER = 1089;
}

message ILFEFKBHBHH {
}

// CmdId: 7074
message AOKNHFMECFH {
	uint32 OEAKLPENHNC = 2; // offset: 28, xor const: 1803
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 7631
}

// CmdId: 6445
message MMHDCNJJHNI {
	bool HKIJIAACHJF = 15; // offset: 48, xor const: 0
	int64 BNJGAOOMEIL = 13; // offset: 40, xor const: 13676
	EHIFNFPAHIB GAMKFKMFIDP = 7; // offset: 16, xor const: 0
	LHFKJLHJDKB PIDECECLPCJ = 1; // offset: 32, xor const: 0
}

enum AOCPINNOFHP {
	AOCPINNOFHP_BMKGFOCOHKO = 0;
	AOCPINNOFHP_MPGCGJNKAKF = 1;
	AOCPINNOFHP_FMKFLJNCDDP = 2;
	AOCPINNOFHP_DIKLJPOHFDK = 4;
	AOCPINNOFHP_HJEACAMDBCN = 8;
	AOCPINNOFHP_KBGCMOHNMND = 16;
	AOCPINNOFHP_FCPJKIOJPPM = 32;
	AOCPINNOFHP_NNDAPHAJBMF = 64;
	AOCPINNOFHP_HMLGFLGCOKK = 128;
	AOCPINNOFHP_JCKINFABAHE = 256;
	AOCPINNOFHP_DDLILMLNKME = 512;
	AOCPINNOFHP_KCPKNAPDMDD = 1024;
	AOCPINNOFHP_PLKIIAGMKLB = 2048;
	AOCPINNOFHP_IKOLHNNDNMJ = 4096;
	AOCPINNOFHP_PIDKMMBKMMN = 8192;
	AOCPINNOFHP_BGEJNMEFONH = 16384;
	AOCPINNOFHP_ACHKIODKHMJ = 32768;
	AOCPINNOFHP_DIHBBEOKHPL = 65536;
	AOCPINNOFHP_MIFJPCNJPPK = 131072;
	AOCPINNOFHP_PJPBBGHIFDL = 262144;
	AOCPINNOFHP_IJMIFHFHOAG = 524288;
	AOCPINNOFHP_MFIECBGCPII = 1048576;
	AOCPINNOFHP_IMEJFCIHBMH = 2097152;
	AOCPINNOFHP_OBFOAHDOMED = 4194304;
	AOCPINNOFHP_IGNIBHAMEFE = 8388608;
	AOCPINNOFHP_DGCFEPEKCKH = 16777216;
	AOCPINNOFHP_DGGGDKKFLEN = 33554432;
}

message CGLGNADMHCG {
	int32 PBOAMDEBIGO = 4; // offset: 32, xor const: 15228
	KKHPKIGGGAL CKBOJACIJDI = 10; // offset: 24, xor const: 0
	uint32 OPFEAMDPIAG = 3; // offset: 36, xor const: 6938
}

message JEGEKMGGINN {
	bool ECMIAFGIOCM = 12; // offset: 90, xor const: 0
	IMFBENMKKGD OAEJPMIBGDP = 1; // offset: 80, xor const: 0
	FGKJFCJILIL EHGLMGAGAIN = 3; // offset: 64, xor const: 0
	OENIFBFNDJL KBFBDIJGDGG = 4; // offset: 84, xor const: 0
	LCIBIIFACHH LMEAFPLLGNJ = 8; // offset: 56, xor const: 0
	FGKJFCJILIL ONBCDKMPFPK = 6; // offset: 48, xor const: 0
	bool CLNMNDDEDGO = 11; // offset: 88, xor const: 0
	FGKJFCJILIL ADBPGCNNJBK = 2; // offset: 40, xor const: 0
	FGKJFCJILIL NGFAPGKBADP = 9; // offset: 24, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 5; // offset: 16, xor const: 0
	FGKJFCJILIL BPELJHPDEBO = 7; // offset: 32, xor const: 0
	bool EEBCIFACHMB = 10; // offset: 89, xor const: 0
}

// CmdId: 6302
message HPCIKKDGKJM {
}

message FBNLILECLBG {
	FGKJFCJILIL PJFLHPDGIGO = 1; // offset: 32, xor const: 0
	LDHKJGEMKIO DMKFLJPDMPJ = 2; // offset: 24, xor const: 0
	repeated BGBCMCFAKPL DFPICFGOLJJ = 3; // offset: 16, xor const: 0
}

// CmdId: 1133
message LFCHEBDACKP {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 14270
}

message ICCOBCFONPB {
	FGKJFCJILIL JFECDPKDEIA = 2; // offset: 32, xor const: 0
	FGKJFCJILIL JOELANGNPAH = 1; // offset: 16, xor const: 0
}

// CmdId: 9396
message IDKNDBACGOG {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 8993
}

message FDBGMLJNBPB {
	bool GOBMIHELNGI = 3; // offset: 34, xor const: 0
	bool ECOKDEDFAIK = 2; // offset: 32, xor const: 0
	bool HKOCFKBBMJF = 1; // offset: 33, xor const: 0
	MBPPMJHOGIB CAPANHOAAEI = 4; // offset: 24, xor const: 0
}

// CmdId: 1149
message LAGOKOEGKGE {
	int32 NODBAHCCOBD = 10; // offset: 40, xor const: 2636
	int32 BOKNCLLHIEA = 4; // offset: 44, xor const: 15023
	int64 IMBKLJJDBJA = 5; // offset: 32, xor const: 4240
	int64 OHCIOPAIBKK = 14; // offset: 24, xor const: 10475
}

enum EEIIAICEBEN {
	EEIIAICEBEN_CONWAY_LIFE_GAME_LIFE_STATE_NONE = 0;
	EEIIAICEBEN_CONWAY_LIFE_GAME_LIFE_STATE_LIVE = 1;
	EEIIAICEBEN_CONWAY_LIFE_GAME_LIFE_STATE_DIE = 2;
}

// CmdId: 5991
message PLJBELGAFNP {
	uint32 LJEBCGGBBNA = 1; // offset: 24, xor const: 14631
	uint32 GBOKKCPEEIP = 15; // offset: 28, xor const: 4024
}

enum BEBEKGHLFJF {
	BEBEKGHLFJF_FKPOEHFDDLC = 0;
	BEBEKGHLFJF_JPJDAIHMGFM = 1;
	BEBEKGHLFJF_BAOFLMPBLIC = 2;
}

// CmdId: 9097
message GAKIIKNBBMG {
	int32 APBDIOHLMGB = 4; // offset: 24, xor const: 9264
}

message OFMDLBFMGAC {
	bool BKDHFLEJNAC = 1; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 16, xor const: 0
}

message CIHJFKPBHHI {
	int32 IHIGNMLCHDK = 3; // offset: 28, xor const: 15961
	bool PPKOKAKLAIN = 1; // offset: 24, xor const: 0
}

message PKJGOADFHEO {
	map<string, GEBNOAMDNOC> GHLBFABMLNB = 4; // offset: 16, xor const: 0
	repeated double KHBEPPKPNMK = 8; // offset: 48, xor const: 0
	repeated GEBNOAMDNOC JAGGDGDFEKE = 14; // offset: 24, xor const: 0
	int32 MFLPDFBAHFJ = 1; // offset: 56, xor const: 6803
	CHBCCCKDOOD HFOADCFKJAG = 11; // offset: 40, xor const: 0
}

// CmdId: 2546
message EJFPLNNIAMI {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 3857
}

message IDNPKGJPNGM {
	string FBOMDIEFDDI = 2; // offset: 16, xor const: 0
	DPIPKKJJIAB AILDOAENPFI = 3; // offset: 32, xor const: 0
	uint32 HIHJPDKOFID = 1; // offset: 40, xor const: 0
}

// CmdId: 6723
message IBOLOLFPLAJ {
	uint32 BCCEOLDLIFA = 6; // offset: 24, xor const: 10628
}

enum ADIHDDCLCHK {
	ADIHDDCLCHK_TYPE_OF_ENTITY_PARAM_NONE = 0;
	ADIHDDCLCHK_TYPE_OF_ENTITY_PARAM_INT = 1;
	ADIHDDCLCHK_TYPE_OF_ENTITY_PARAM_VEC_2 = 2;
}

enum PAPEPFMIPFB {
	PAPEPFMIPFB_OPTIONS_SHOW_MODE_NORMAL = 0;
	PAPEPFMIPFB_OPTIONS_SHOW_MODE_EVENT = 1;
	PAPEPFMIPFB_OPTIONS_SHOW_MODE_ITEM = 2;
	PAPEPFMIPFB_OPTIONS_SHOW_MODE_CARD = 3;
	PAPEPFMIPFB_OPTIONS_SHOW_MODE_CHALLENGE = 4;
}

// CmdId: 358
message NBLMINFBKAK {
}

// CmdId: 1231
message AIOOHONPIGD {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 2546
}

// CmdId: 8706
message PCHIKONFJDG {
	GHKKMHDNEJA PJGEACIPEME = 10; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 2843
}

message OAMMGCMOBII {
	TimePeriodType AEIOGIJPKDA = 2; // offset: 28, xor const: 0
	int32 DAHGNKKJFAH = 1; // offset: 24, xor const: 0
}

message KCHNHGFOPAC {
	uint32 NMHNBHDEKBP = 2; // offset: 24, xor const: 0
	bool EPJLOKGODOD = 3; // offset: 28, xor const: 0
	uint32 CINAJFDNJBD = 1; // offset: 32, xor const: 0
}

// CmdId: 3838
message ODNGADNGEBG {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 14301
	DDNKJIFHNIA PBOAMDEBIGO = 9; // offset: 28, xor const: 0
}

// CmdId: 9248
message PFODGCHMGML {
	int32 IHIGNMLCHDK = 14; // offset: 28, xor const: 590
	bool EMKAHDDHLFJ = 2; // offset: 24, xor const: 0
}

// CmdId: 5478
message AFFAAPMCLEE {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 4808
}

message GBHPFFBKLOB {
	uint32 DKEPGACINMM = 14; // offset: 24, xor const: 6538
}

enum DFPOABNAHIK {
	DFPOABNAHIK_ABAHGNOECFD = 0;
	DFPOABNAHIK_CLGNJNCIEIK = 1;
	DFPOABNAHIK_OPKBCNAPAKF = 2;
	DFPOABNAHIK_POKCDGAFNNC = 3;
	DFPOABNAHIK_JIEFAMCNNBK = 4;
	DFPOABNAHIK_KNJNIPKENHF = 5;
	DFPOABNAHIK_EPGGPOCJMBF = 6;
	DFPOABNAHIK_ILHFDKJABKP = 7;
}

message LLEJAHGKPDB {
	uint32 PJJCHPBGPJL = 9; // offset: 48, xor const: 9529
	repeated AKPCHBBOLLG EMGNGHBHBCH = 14; // offset: 32, xor const: 0
	uint32 LKPJOCEHABB = 10; // offset: 40, xor const: 13224
	repeated NICCPHLIFKE LKPMFGMDPBK = 15; // offset: 16, xor const: 0
	uint32 BKPGEBGDGHM = 5; // offset: 44, xor const: 12422
}

message NIMDPKCAJMI {
	string FDGCJGJJAOK = 4; // offset: 24, xor const: 0
	uint32 IKILDCOMOOC = 11; // offset: 40, xor const: 1778
	uint32 BBAJOBJLKKI = 10; // offset: 44, xor const: 2850
	int32 OAOKDKFKEBL = 6; // offset: 32, xor const: 13967
	int32 ECAPMCDCLJF = 1; // offset: 36, xor const: 13989
}

// CmdId: 7383
message DKNINDCKIEG {
	uint32 EKLGNOIEMLA = 8; // offset: 24, xor const: 14420
}

enum BPEOMPGJFCP {
	BPEOMPGJFCP_PARTNER_EVENT_STATE_NONE = 0;
	BPEOMPGJFCP_PARTNER_EVENT_STATE_START = 1;
}

enum OAILAINMFCD {
	OAILAINMFCD_MFIAKNNMCCD = 0;
	OAILAINMFCD_HAMGNAEOPJA = 1;
	OAILAINMFCD_OEIFDCNNCEK = 2;
	OAILAINMFCD_CFGKMMHNHHL = 3;
	OAILAINMFCD_OJMNOMLAANG = 4;
}

// CmdId: 5494
message HEEMCADBHGI {
	int32 IHIGNMLCHDK = 12; // offset: 48, xor const: 7899
	EGEHBOIDLAD NOKODEJPLNI = 8; // offset: 32, xor const: 0
	repeated OFJCLCLACLB DMLLFPADHCL = 7; // offset: 24, xor const: 0
	repeated EJDOIBHAKGO KEELCJDEPKI = 15; // offset: 40, xor const: 0
}

message IEIGCNMEEEJ {
	repeated uint32 KPOFFBOODOC = 6; // offset: 24, xor const: 0
}

message MMDBEFMKNEB {
	bool MALAOMAKEPB = 13; // offset: 32, xor const: 0
	uint32 CAHMFCCMNDG = 1; // offset: 24, xor const: 7918
	uint32 EKLGNOIEMLA = 3; // offset: 36, xor const: 8230
	uint32 KBLOOPLJDII = 15; // offset: 28, xor const: 8892
}

// CmdId: 1090
message CLBKFPNPMGC {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 10192
}

message CKDKDNODPKP {
	bool NCIFMOAJFJK = 1; // offset: 24, xor const: 0
}

// CmdId: 3096
message LGFBMNGCNME {
}

message EMENOCOFGHN {
	uint32 BCMPKLAOIHK = 7; // offset: 32, xor const: 12409
	bool BKFADLJNBPJ = 1; // offset: 41, xor const: 0
	uint32 KBKLJLLBLCD = 5; // offset: 36, xor const: 13630
	uint32 IHIEIMELEEH = 12; // offset: 28, xor const: 4502
	uint32 OEJFFNELOOF = 8; // offset: 24, xor const: 9436
	bool EPCCLBNKNAL = 3; // offset: 40, xor const: 0
}

message POILHNMJHFB {
	EDGCAIEHLHH MHINMINPONI = 2; // offset: 32, xor const: 0
	string DBOACCIJPDL = 1; // offset: 16, xor const: 0
}

message FAMFEJIBJAE {
	repeated OACFCBIAJJJ CCMNBFIEMFL = 5; // offset: 32, xor const: 0
	HollowShopType DPKKBOHMNEO = 1; // offset: 48, xor const: 0
	repeated uint32 KAPHIGAFCGA = 8; // offset: 16, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 6; // offset: 24, xor const: 0
	GKDKGDCLEAJ AFIAFGMJCHP = 4; // offset: 52, xor const: 0
	bool LGNPDPHNBMD = 7; // offset: 60, xor const: 0
	HollowShopCurrencyType ADFBHNOBNAC = 2; // offset: 56, xor const: 0
}

// CmdId: 2287
message CHMANMPPNAL {
	MMJBMOIIKMB CPEPJEPHPBD = 6; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 1184
	uint32 KMKPPDICOKA = 9; // offset: 56, xor const: 4202
	uint64 HEJBMNAOJFL = 11; // offset: 48, xor const: 12272
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 16, xor const: 0
}

enum JMDLPBFPCHO {
	JMDLPBFPCHO_COPY_TYPE_ALL = 0;
	JMDLPBFPCHO_COPY_TYPE_EVENT_ID = 1;
	JMDLPBFPCHO_COPY_TYPE_NODE_STATE = 2;
	JMDLPBFPCHO_COPY_TYPE_VISIBLE_STATE = 3;
	JMDLPBFPCHO_COPY_TYPE_SUB_STATE = 4;
	JMDLPBFPCHO_COPY_TYPE_EVENT_DETAIL = 5;
}

message PANBIJIGJDM {
	int32 EFCFBIFDBJF = 13; // offset: 24, xor const: 13533
}

message EMBAOJKCMEJ {
	uint32 IJCFAJDEFPG = 2; // offset: 40, xor const: 3309
	repeated uint32 DOHKAKKIFCB = 1; // offset: 32, xor const: 0
	repeated MOGPNPJOOCA AOOACBOAHON = 7; // offset: 24, xor const: 0
}

enum HICNHCBPOKP {
	HICNHCBPOKP_POST_STATE_NOT_UNLOCK = 0;
	HICNHCBPOKP_POST_STATE_UNLOCK = 1;
	HICNHCBPOKP_POST_STATE_READ = 2;
	HICNHCBPOKP_POST_STATE_REPLY = 3;
	HICNHCBPOKP_POST_STATE_INFO_UNLOCK = 4;
	HICNHCBPOKP_POST_STATE_INFO_READ = 5;
}

message JKKJBNHPMKB {
}

message MOEDDDLBLNK {
	JHEMIBPHNFO KMOBAHJLFMD = 3; // offset: 52, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 1; // offset: 48, xor const: 0
	string DBOACCIJPDL = 2; // offset: 40, xor const: 0
	map<string, FGKJFCJILIL> APINIAJAPMK = 5; // offset: 16, xor const: 0
	repeated FGKJFCJILIL OIDDOJOCCJH = 4; // offset: 32, xor const: 0
}

// CmdId: 9467
message NOIDIIFPINE {
	repeated KKFHONHEMMB NHOPHEONPDL = 14; // offset: 16, xor const: 0
}

// CmdId: 2124
message FNKOJKKEPMD {
	uint32 KMKPPDICOKA = 14; // offset: 40, xor const: 12727
	uint64 AEDAEPKDOAL = 8; // offset: 48, xor const: 5274
	CMEGBBONKIC CPEPJEPHPBD = 5; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 3; // offset: 56, xor const: 10345
}

message EKIHFCHPCID {
	int32 PHPCFGONIED = 9; // offset: 36, xor const: 0
	int32 JCDAINKPLAP = 10; // offset: 32, xor const: 0
	repeated NLGFNAMPMLM OKANHJAKEPB = 8; // offset: 16, xor const: 0
}

// CmdId: 735
message FIEEAOAOHOJ {
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 24, xor const: 0
	PKJGOADFHEO CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 368
	uint32 KMKPPDICOKA = 14; // offset: 56, xor const: 15307
	uint64 HEJBMNAOJFL = 1; // offset: 40, xor const: 5216
}

// CmdId: 4959
message KOPLHCMENAD {
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 7883
	repeated NPDCMAPCCGD DLDEGJKOOAP = 7; // offset: 16, xor const: 0
}

// CmdId: 9643
message KILCBBEBODM {
	uint64 HEJBMNAOJFL = 11; // offset: 56, xor const: 3017
	uint64 AEDAEPKDOAL = 7; // offset: 40, xor const: 1420
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 32, xor const: 0
	PEDDLFPAAED CPEPJEPHPBD = 6; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 9; // offset: 48, xor const: 13151
}

// CmdId: 1436
message DCGNAIPJIIC {
	uint32 GFCLKDAOMBM = 7; // offset: 24, xor const: 7959
	uint32 OMJEPGEGPDM = 10; // offset: 32, xor const: 9184
	uint32 LGNMJDDJCDC = 6; // offset: 28, xor const: 7161
}

message FHHOCAKEJEP {
	uint32 DOHCPECNABL = 11; // offset: 40, xor const: 1869
	repeated ABNKJGHHNLC BBCMGLFKBLF = 8; // offset: 24, xor const: 0
	bool COALJDMLICD = 9; // offset: 32, xor const: 0
	uint32 NIJLEDIPBGF = 4; // offset: 36, xor const: 13937
}

message IPMGHECDMPM {
}

enum DHJPJJHKADF {
	DHJPJJHKADF_NPC_ATTR_NONE = 0;
	DHJPJJHKADF_NPC_ATTR_ALL = 1;
	DHJPJJHKADF_NPC_ATTR_HP = 2;
}

// CmdId: 4919
message DCIMPNNBBHJ {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 2079
}

// CmdId: 480
message ANBFELNAGGK {
	MKPHEJCDJAH KGGMPBNGBDJ = 1; // offset: 24, xor const: 0
	int64 JNLAKNOIKEG = 9; // offset: 32, xor const: 3447
	int32 HCIKOCHONNP = 15; // offset: 40, xor const: 4358
}

enum KEGKOACIBCP {
	KEGKOACIBCP_LFGBELJMAKG = 0;
	KEGKOACIBCP_DHBJBGGMPCE = 1;
}

// CmdId: 3636
message JOAOOJOKEEA {
	uint32 AMIJIAHGPMC = 6; // offset: 24, xor const: 7584
	bool NCPKBCEMCEH = 2; // offset: 28, xor const: 0
}

message HDENOEIKKEP {
	map<int32, int32> BEDMCFFCCLK = 2; // offset: 24, xor const: 0
}

message KIICEKGINPC {
	repeated GCDPKKFBEGH EDHKMAJKCNP = 4; // offset: 24, xor const: 0
	int32 KBKLJLLBLCD = 15; // offset: 36, xor const: 2533
	uint32 APEIIJNDJFO = 3; // offset: 32, xor const: 14881
}

message HOHHIFMBBEA {
	bool IKDCPEPLLBE = 1; // offset: 24, xor const: 0
}

enum IJHOIJPOIFG {
	IJHOIJPOIFG_GDLMKOHPOOC = 0;
	IJHOIJPOIFG_CIGAONCHAAM = 1;
	IJHOIJPOIFG_KOHDCGLKCLJ = 2;
	IJHOIJPOIFG_IEHNKFAJCHJ = 3;
	IJHOIJPOIFG_LENLJLHDGNF = 4;
	IJHOIJPOIFG_DICEECODOBI = 5;
	IJHOIJPOIFG_NOFDDPMELHD = 6;
	IJHOIJPOIFG_KGMNEEODNFP = 7;
	IJHOIJPOIFG_PJKOIENBNEO = 8;
	IJHOIJPOIFG_IHBHOHJPHHL = 9;
	IJHOIJPOIFG_DIDAPBCDIMP = 10;
}

// CmdId: 5062
message DPKHBJGGEDK {
	NJHCCJPHMCC NODBAHCCOBD = 1; // offset: 16, xor const: 0
}

message COOBHGELNHM {
	bool ANFIPPGADMD = 2; // offset: 40, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 3; // offset: 24, xor const: 0
	repeated JHLBEDAPNFF KKPLDOGJBOF = 1; // offset: 32, xor const: 0
	bool LKEENIDDLCK = 4; // offset: 41, xor const: 0
}

enum ILOGLAFOMKE {
	ILOGLAFOMKE_MIFJCBDEELN = 0;
	ILOGLAFOMKE_MCKAGDIJPGK = 1;
	ILOGLAFOMKE_LEKJPLKAGGH = 2;
	ILOGLAFOMKE_KKHMEFCPFML = 3;
	ILOGLAFOMKE_GOONMKMJGBN = 4;
	ILOGLAFOMKE_PNNKHJMGLKP = 5;
	ILOGLAFOMKE_PMFNEMMPCNM = 6;
	ILOGLAFOMKE_FIMOCLCOIKJ = 7;
	ILOGLAFOMKE_EFBAMPBNNID = 8;
	ILOGLAFOMKE_PMCFFLOPFKG = 9;
	ILOGLAFOMKE_GBNIPCCENNN = 10;
	ILOGLAFOMKE_GMOJLKGIGDL = 11;
	ILOGLAFOMKE_HFINCCHADBH = 12;
	ILOGLAFOMKE_EGNNAAJIGJF = 13;
	ILOGLAFOMKE_JNCKDFANMFL = 14;
	ILOGLAFOMKE_JDDFGFBMJOH = 15;
	ILOGLAFOMKE_PENCAEDEDCK = 16;
	ILOGLAFOMKE_IHLCJNLFFIG = 17;
	ILOGLAFOMKE_KGMAKIBMAAP = 18;
	ILOGLAFOMKE_MBOEJJKMIKP = 19;
}

// CmdId: 9106
message PJHDGGHKIFJ {
	ONHNIHHFMIN OJLOLPPLLEO = 4; // offset: 40, xor const: 0
	DHHDGKMFLNB OAEJPMIBGDP = 8; // offset: 64, xor const: 0
	LDIEOMFCFOD MLOMJHEPMEJ = 11; // offset: 32, xor const: 0
	uint32 AGDDDGNMKPE = 9; // offset: 60, xor const: 15425
	uint32 FABGBAHDDJA = 7; // offset: 44, xor const: 13348
	bytes MOINDNGKHCK = 10; // offset: 16, xor const: 0
	uint32 CDAGGFJILEJ = 6; // offset: 52, xor const: 3183
	uint32 EFNFANEIJMH = 5; // offset: 48, xor const: 3059
	uint32 EOHENAABBLD = 1; // offset: 56, xor const: 10274
	uint32 DCENCIPOBMC = 2; // offset: 68, xor const: 13404
}

enum LIGKLGDKJGO {
	LIGKLGDKJGO_ALIVE = 0;
	LIGKLGDKJGO_DEATH = 1;
	LIGKLGDKJGO_HP = 2;
	LIGKLGDKJGO_EXIST = 3;
	LIGKLGDKJGO_TALENT = 4;
	LIGKLGDKJGO_TRUST_LEVEL = 5;
	LIGKLGDKJGO_BAN = 6;
}

enum LCLKCAIOLEP {
	LCLKCAIOLEP_EGGJDANDAMH = 0;
	LCLKCAIOLEP_HHKPOIDFLMI = 1;
	LCLKCAIOLEP_BJINJPGKCNB = 2;
	LCLKCAIOLEP_LPNPEHDJBAA = 3;
	LCLKCAIOLEP_BGKJJBNJBCD = 4;
	LCLKCAIOLEP_DMDJOLEHDGD = 5;
	LCLKCAIOLEP_LNNLPJJJNCP = 6;
	LCLKCAIOLEP_JBEHFLMBLJB = 7;
	LCLKCAIOLEP_MEDMGHKKBDN = 8;
	LCLKCAIOLEP_OPFGKMMHCCP = 9;
	LCLKCAIOLEP_GNHOKNPCEFC = 10;
	LCLKCAIOLEP_FOKANAMEJJI = 11;
	LCLKCAIOLEP_DJNMBGKALKH = 12;
	LCLKCAIOLEP_CBPHGEGGKLO = 13;
	LCLKCAIOLEP_ONJJOAKMKGK = 14;
	LCLKCAIOLEP_NJKBECJHOLO = 15;
	LCLKCAIOLEP_EOCCHEFOFFI = 16;
	LCLKCAIOLEP_IHCMPGDNBHG = 17;
	LCLKCAIOLEP_PGMPCOEHIMB = 18;
	LCLKCAIOLEP_BAOPOKODKNA = 19;
	LCLKCAIOLEP_DHANAOJAMKC = 20;
	LCLKCAIOLEP_ILNOMEFHLPJ = 21;
	LCLKCAIOLEP_BPHIFMEBEIL = 22;
	LCLKCAIOLEP_NFGIPAJAJOP = 23;
	LCLKCAIOLEP_HDLPFBNOEJN = 24;
	LCLKCAIOLEP_ICHCMJEGOAD = 25;
	LCLKCAIOLEP_ADJCKPNKKHL = 26;
	LCLKCAIOLEP_HAHMJAJPPKC = 27;
	LCLKCAIOLEP_LCJKOHPPIOK = 28;
	LCLKCAIOLEP_ENLALEMCGNA = 29;
	LCLKCAIOLEP_LMALOIGEFMF = 30;
	LCLKCAIOLEP_FHGHMAHCDDF = 31;
	LCLKCAIOLEP_KNLDLLIDLBM = 32;
	LCLKCAIOLEP_IMGNIMEAHKI = 33;
	LCLKCAIOLEP_ICGPALEGJOI = 34;
	LCLKCAIOLEP_ONHABLLEMBA = 35;
	LCLKCAIOLEP_INNJCBECPMG = 36;
	LCLKCAIOLEP_OPAJNIIKGBL = 37;
	LCLKCAIOLEP_KHPOIHEEHLF = 38;
}

message NJAAJFJOFEI {
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 16, xor const: 0
	FGKJFCJILIL AMHBBOAFGFC = 2; // offset: 32, xor const: 0
}

message PFFBFNFKAIC {
	int32 FOCLDPCOCBC = 2; // offset: 24, xor const: 2834
	uint32 BLGJHKJELAP = 3; // offset: 32, xor const: 7940
	bool IAEPPMFJCMI = 7; // offset: 28, xor const: 0
}

message GGBHMGPILOH {
}

// CmdId: 7852
message AIMPMKBBNJD {
}

// CmdId: 8222
message EAAOAPDHKGJ {
	OFKJAHMNPPO MHLAEAFAEIF = 14; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 9963
}

enum NECEOOAFKDG {
	NECEOOAFKDG_MGENNBPPGFD = 0;
	NECEOOAFKDG_OLKACEEHCFE = 1;
	NECEOOAFKDG_HJEPCDFCMMA = 2;
	NECEOOAFKDG_NNIHDBPCPOO = 3;
}

message IMIPKKOGHAH {
	repeated uint32 PBJNMKDJBKB = 6; // offset: 16, xor const: 0
	map<uint32, CMOONCPMIOG> EABAEADLFCI = 15; // offset: 24, xor const: 0
}

message EGLDICPAGJI {
	repeated int32 LHPANCGDDPJ = 14; // offset: 16, xor const: 0
}

message MCDNJPCODBB {
	string CEEAJBNFKDB = 1; // offset: 32, xor const: 0
	LDHKJGEMKIO DAPDNGKCJOO = 3; // offset: 40, xor const: 0
	FGKJFCJILIL PFOJCOLEPJK = 2; // offset: 24, xor const: 0
}

message COELIGNJONC {
	repeated OOBGAGGILBA DBEKDFGACEK = 1; // offset: 24, xor const: 0
}

message MOAIDHOILHP {
	repeated int32 FCDOBDJBNOG = 6; // offset: 136, xor const: 0
	FGKJFCJILIL HJLLKNGJKLP = 21; // offset: 88, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 2; // offset: 80, xor const: 0
	repeated int32 AKACMHFLOOH = 10; // offset: 72, xor const: 0
	repeated int32 ABLFIDJMILN = 16; // offset: 16, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 1; // offset: 144, xor const: 0
	repeated FGKJFCJILIL CEPFADNEGHL = 19; // offset: 56, xor const: 0
	BDEANJLNPKC DDMIPKHLKDL = 18; // offset: 152, xor const: 0
	FGKJFCJILIL BIELNPIAMPA = 20; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 5; // offset: 64, xor const: 0
	LEHENCIPJIE CKBOJACIJDI = 3; // offset: 156, xor const: 0
	FGKJFCJILIL JBKEBHIPLPP = 8; // offset: 96, xor const: 0
	repeated int32 EMBJPOPPNEI = 12; // offset: 104, xor const: 0
	repeated int32 GLPCCHEKBBA = 9; // offset: 48, xor const: 0
	bool NDOJICKCIEE = 13; // offset: 160, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 14; // offset: 112, xor const: 0
	repeated int32 AJPMDJFHHCG = 11; // offset: 128, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 4; // offset: 24, xor const: 0
	HGLOMBGGODB OEGNJPJCIOI = 7; // offset: 164, xor const: 0
	repeated int32 JLMJHMIOCFL = 17; // offset: 120, xor const: 0
}

message HOBPOLNDKHJ {
	uint32 HIMNJDFAOCH = 8; // offset: 32, xor const: 10836
	uint32 MNFOIBEBDBI = 6; // offset: 24, xor const: 1362
	uint32 CPEGDKBNGDH = 1; // offset: 28, xor const: 321
}

// CmdId: 1056
message LGGCPFBLEGE {
	uint64 HEJBMNAOJFL = 10; // offset: 48, xor const: 6837
	BJHNNDMLDPK CPEPJEPHPBD = 3; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 6; // offset: 40, xor const: 14891
	uint32 KMKPPDICOKA = 5; // offset: 56, xor const: 420
}

// CmdId: 5225
message NBDBADOGLBJ {
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 3239
	EJDOIBHAKGO KEJGBOOCMOP = 10; // offset: 16, xor const: 0
}

message HIMNKGHPKIJ {
	uint32 ACGOBGOFCJJ = 4; // offset: 28, xor const: 7197
	uint32 EFPCHEPEJLE = 11; // offset: 24, xor const: 6002
	uint32 HHALEGBBNFO = 1; // offset: 32, xor const: 14223
}

enum EADECNMIJPD {
	EADECNMIJPD_FGKFLBFKKJE = 0;
	EADECNMIJPD_ENFNJAGIENC = 1;
}

message PAADDBAEKBI {
	uint32 NCAGHHFDAOG = 8; // offset: 32, xor const: 8702
	repeated GAHCIEKLJOH MKLMOBKBGDC = 11; // offset: 16, xor const: 0
}

enum PMNGLKBJINF {
	PMNGLKBJINF_GLAPJCNCPJP = 0;
	PMNGLKBJINF_CKLHJGHBGKL = 1;
	PMNGLKBJINF_IDOLBINPNDN = 2;
}

message CMLNPBMPNIH {
	JLBGLKNLFMD EGCCBCMDFLB = 4; // offset: 24, xor const: 0
}

message ENJDOFFAHFG {
	double ENCANOPLLDM = 1; // offset: 24, xor const: 0
}

enum ELKJCDBICLK {
	ELKJCDBICLK_CKNFAKHKPBF = 0;
	ELKJCDBICLK_JFBCJLHMNEP = 1;
}

message IHNPCNCGBDK {
	DJIHLKNEKCK HLEAEPDDBLE = 1; // offset: 28, xor const: 0
	int32 MJBLNIKMNOD = 2; // offset: 24, xor const: 0
}

// CmdId: 328
message KLOABHBKEEE {
	uint64 AEDAEPKDOAL = 14; // offset: 48, xor const: 9604
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 1416
	uint32 KMKPPDICOKA = 7; // offset: 56, xor const: 10520
	OJGMHJMDDND CPEPJEPHPBD = 12; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 24, xor const: 0
}

// CmdId: 1988
message NEIOFOHCGHD {
	uint32 NJFOLJNDPGG = 4; // offset: 24, xor const: 10795
}

// CmdId: 161
message DLAILHCPLBL {
	PHMDAGALLCB BKIHIFEJFDD = 6; // offset: 32, xor const: 0
	repeated uint32 FJOHNCEIKCB = 10; // offset: 24, xor const: 0
	uint32 ELLAHKKNHAM = 5; // offset: 36, xor const: 14672
}

message IKHIDJGCLBA {
	string ELGLOCCHHDB = 7; // offset: 48, xor const: 0
	IHHJNHHDNHN JDLIABJGLHB = 6; // offset: 56, xor const: 0
	repeated FGKJFCJILIL JIFKKPKGAMA = 2; // offset: 24, xor const: 0
	HollowEntityType HCOBCBNNPLD = 1; // offset: 64, xor const: 0
	FGKJFCJILIL FDJPHMHHDIN = 5; // offset: 32, xor const: 0
	repeated FGKJFCJILIL CMIANHKFKJM = 3; // offset: 40, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 4; // offset: 60, xor const: 0
}

message CHBBBHDPNLM {
	bool FGBPLOKICAF = 3; // offset: 33, xor const: 0
	bool POAIKAELCEI = 6; // offset: 34, xor const: 0
	repeated EDGCAIEHLHH GPFNPNDPMPC = 2; // offset: 24, xor const: 0
	bool AKIHFBEENOK = 4; // offset: 35, xor const: 0
	bool OKNLMMNCPOC = 5; // offset: 32, xor const: 0
	bool LKEENIDDLCK = 7; // offset: 36, xor const: 0
	uint32 DDMIIIEJHPE = 1; // offset: 40, xor const: 0
}

// CmdId: 6203
message BKJOOPIKGDP {
	string NMMADBDFJCK = 5; // offset: 16, xor const: 0
	uint32 DCENCIPOBMC = 10; // offset: 32, xor const: 3476
}

// CmdId: 8072
message KKPFJKDJKCD {
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 12079
	OPBCJEGEOFD CPEPJEPHPBD = 15; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 5; // offset: 56, xor const: 130
	uint64 HEJBMNAOJFL = 13; // offset: 40, xor const: 4687
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 24, xor const: 0
}

message MMBALFNMLDP {
	FGKJFCJILIL EEIMOCGPDOE = 1; // offset: 24, xor const: 0
}

// CmdId: 5476
message FHKDAFBJDBE {
}

message FAOMHLGIBOJ {
	float LKJKHAFGFGE = 8; // offset: 76, xor const: 0
	string BNIHBLFNJHG = 6; // offset: 40, xor const: 0
	string KAGNLCFDCPA = 7; // offset: 32, xor const: 0
	float NEEMNPDMAFE = 10; // offset: 64, xor const: 0
	float KNENBDCPEMO = 9; // offset: 48, xor const: 0
	int32 GGOHJFLMMJP = 14; // offset: 52, xor const: 0
	int32 HHJMHKJIMDL = 4; // offset: 84, xor const: 0
	string DNPHHNAOBHD = 12; // offset: 24, xor const: 0
	int32 IODIFNBEANL = 2; // offset: 68, xor const: 0
	int32 AEEMPHMFNBJ = 3; // offset: 80, xor const: 0
	int32 MOMGDEFPOGM = 1; // offset: 60, xor const: 0
	int32 NIGHDCFALDK = 5; // offset: 72, xor const: 0
	float LEMKKAKDMIO = 11; // offset: 56, xor const: 0
}

// CmdId: 9470
message ELKAFIIDPII {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 6800
}

message INLFFDKGPNK {
	uint32 HLEAEPDDBLE = 7; // offset: 40, xor const: 7417
	repeated uint32 JJPEOFJCLFB = 6; // offset: 32, xor const: 0
	repeated PAADDBAEKBI EPDLJMJMHDK = 12; // offset: 24, xor const: 0
}

message IEGCHPCHKJF {
}

message ADMEBPODMDL {
	repeated uint32 APNDAHMMMML = 1; // offset: 16, xor const: 0
}

// CmdId: 4805
message DNMMMJEFLMD {
	DNLCMMNCBMI CMHFMBAONFA = 8; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 5; // offset: 40, xor const: 8386
	DNLCMMNCBMI PBLNHEAGFPP = 15; // offset: 32, xor const: 0
}

// CmdId: 6055
message LLLDFKECLDH {
	repeated uint32 AIPPKKNLIGF = 10; // offset: 24, xor const: 0
}

// CmdId: 5116
message APEFPGBALDE {
}

enum BNJNKKEFEKE {
	BNJNKKEFEKE_PLKBHBLDHFC = 0;
	BNJNKKEFEKE_JCANELJBALG = 1;
}

message CPACPPHBNMN {
	uint32 MDKOACALCPO = 1; // offset: 24, xor const: 0
}

enum ACIDCACGJGO {
	ACIDCACGJGO_HEEEKEOAAAE = 0;
}

message JLFGJBICBOO {
	int32 BHCBBCEFIMD = 2; // offset: 24, xor const: 0
	TimePeriodType AEIOGIJPKDA = 1; // offset: 28, xor const: 0
}

message BFAKBINPGDD {
	FGKJFCJILIL CKBOJACIJDI = 1; // offset: 32, xor const: 0
	bool LKEENIDDLCK = 3; // offset: 40, xor const: 0
	FGKJFCJILIL HLEICCGMEJH = 2; // offset: 16, xor const: 0
}

message IDHJCGNHNGI {
	repeated uint64 NMOAEDLDMCH = 4; // offset: 16, xor const: 0
}

// CmdId: 9216
message PPCMMEDDFAK {
	uint32 AMIJIAHGPMC = 7; // offset: 24, xor const: 12617
}

// CmdId: 287
message BCIBFEAHDAD {
	FFOKOFJOGHI BICJHAOHDJD = 7; // offset: 16, xor const: 0
	uint32 KGIOLPOGHMP = 8; // offset: 32, xor const: 613
}

// CmdId: 5626
message ONBKNBOEFMM {
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 9; // offset: 40, xor const: 10954
	CALIGKKHHBP CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 4150
	uint64 HEJBMNAOJFL = 13; // offset: 48, xor const: 15719
}

// CmdId: 2486
message DPBDFEIEDKG {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 13931
}

message KBNBFIKGBLO {
	uint32 NJFOLJNDPGG = 1; // offset: 28, xor const: 0
	uint32 NEFAAKJKNDC = 2; // offset: 24, xor const: 0
}

message DAGDMBCAIFC {
	repeated uint32 KAPHIGAFCGA = 6; // offset: 32, xor const: 0
	map<string, LHDEJGGKMKM> EBIICDHFOHK = 4; // offset: 40, xor const: 0
	map<uint32, HGIPJOCNKDF> EIKJPHDHDDH = 5; // offset: 24, xor const: 0
	IOLABBCFAOE DLGEAPINEFI = 3; // offset: 16, xor const: 0
	uint32 OPFEAMDPIAG = 2; // offset: 64, xor const: 0
	string MENKJMFJMHG = 1; // offset: 56, xor const: 0
}

message NLDMPILKBPH {
	int32 MCJMOLFCCFD = 2; // offset: 28, xor const: 0
	bool MKKJCFLOAJC = 3; // offset: 32, xor const: 0
	int32 ANBMHPHJOIO = 1; // offset: 24, xor const: 0
}

enum LEFFGKFGGHI {
	LEFFGKFGGHI_OMDFFLIEGHB = 0;
}

message MKPHEJCDJAH {
	int32 NODBAHCCOBD = 4; // offset: 176, xor const: 0
	int32 LOABNMJMDNI = 11; // offset: 164, xor const: 0
	map<uint32, uint32> ICFBGJHNPEH = 18; // offset: 88, xor const: 0
	int32 GGLHBLMDPLE = 5; // offset: 184, xor const: 0
	int32 KBKLJLLBLCD = 6; // offset: 188, xor const: 0
	uint32 ADKMBDHJJOH = 15; // offset: 160, xor const: 0
	OEKPFFABMBB AJNAAAHKKKA = 17; // offset: 144, xor const: 0
	repeated IKHIGIACDMJ GCPEDDINJEN = 14; // offset: 96, xor const: 0
	EKIHFCHPCID ABDDINBKCFA = 22; // offset: 24, xor const: 0
	repeated IKHIGIACDMJ MFKBNIPKOLI = 27; // offset: 40, xor const: 0
	JKCPEGIPFDM GCLJKKGCCAB = 13; // offset: 64, xor const: 0
	repeated FEKFKDMMDBC KOHAHKODADO = 28; // offset: 128, xor const: 0
	repeated LDOMGHJBIOF IMPCNOCMGJB = 20; // offset: 80, xor const: 0
	repeated int32 JKAABCLLIDB = 12; // offset: 104, xor const: 0
	int64 OHCIOPAIBKK = 3; // offset: 192, xor const: 0
	int64 JNLAKNOIKEG = 1; // offset: 168, xor const: 0
	repeated LDOMGHJBIOF OKMCJGCLNNH = 7; // offset: 152, xor const: 0
	repeated LDOMGHJBIOF FJNJBNNMGAD = 26; // offset: 32, xor const: 0
	int64 EBIMLCGLGCL = 21; // offset: 200, xor const: 0
	repeated FDACAJLKAKK LOGMDJMIIHB = 23; // offset: 112, xor const: 0
	int32 HCIKOCHONNP = 2; // offset: 180, xor const: 0
	repeated LDOMGHJBIOF PPCNNNIBGBI = 25; // offset: 72, xor const: 0
	repeated CIBPOBIONPG FJMMIAGHFCM = 8; // offset: 16, xor const: 0
	repeated NCCAPKPHAGB ICLJMLHHMBE = 10; // offset: 136, xor const: 0
	repeated KGLBIKKNJMC CLGJLPDMLBG = 19; // offset: 48, xor const: 0
	repeated AMPOMEEKHAO DDPPJGBPEFH = 9; // offset: 120, xor const: 0
}

enum KNGCFKJKOCJ {
	KNGCFKJKOCJ_GOLJILJGAJJ = 0;
	KNGCFKJKOCJ_OLMBMAKDHAH = 1;
}

message JKGDDNEABBE {
	repeated FAMFEJIBJAE EJBLDEKHMJC = 3; // offset: 24, xor const: 0
	FGKJFCJILIL FHIIIPELENE = 2; // offset: 40, xor const: 0
	repeated FGKJFCJILIL CIEJHHGBPBD = 1; // offset: 32, xor const: 0
}

// CmdId: 2453
message PLGHPAANGIN {
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 3167
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 40, xor const: 7375
	uint64 HEJBMNAOJFL = 5; // offset: 56, xor const: 5916
	GHAJHNBAMMN CPEPJEPHPBD = 9; // offset: 24, xor const: 0
}

// CmdId: 2949
message EANPAKJCFKM {
	uint32 CCBJBOLJJDN = 6; // offset: 40, xor const: 12674
	bool NPGMHLOHJDG = 9; // offset: 44, xor const: 0
	repeated NJCMGBIHAOD KFHPNLIBBCL = 15; // offset: 24, xor const: 0
	repeated NJCMGBIHAOD NFCMEMJCNNJ = 10; // offset: 16, xor const: 0
}

// CmdId: 5465
message LAJJGBKHGOM {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 11988
}

// CmdId: 878
message DBCJAFNBAEC {
}

message FAIEBEIELFD {
	repeated int32 JICLPHPLODM = 2; // offset: 16, xor const: 0
}

enum CJINCICAPIL {
	CJINCICAPIL_EGHM_CHOOSE_GRID_TYPE_NONE = 0;
	CJINCICAPIL_EGHM_CHOOSE_GRID_TYPE_CONTINUE = 1;
	CJINCICAPIL_EGHM_CHOOSE_GRID_TYPE_DISCRETE = 2;
}

message FDCEGNKGKCP {
}

message MGANANKOEEO {
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 28, xor const: 0
	uint32 EKLGNOIEMLA = 1; // offset: 32, xor const: 0
	uint32 FJINPLKKPOJ = 3; // offset: 24, xor const: 0
}

message FFANHFOACDE {
	repeated uint32 FCIOADOMOGM = 9; // offset: 16, xor const: 0
	uint32 AMPDGCMEMIA = 5; // offset: 32, xor const: 14274
}

message EDGCAIEHLHH {
	int32 AEIHIBLACCM = 1; // offset: 24, xor const: 0
	int32 EFJPPJJFNJM = 2; // offset: 28, xor const: 0
}

message INPFPOIEAEH {
	bool FCNNBDFAHMI = 3; // offset: 32, xor const: 0
	bool LLLEDJLENDP = 1; // offset: 33, xor const: 0
	repeated uint32 HONIAFPIOBC = 2; // offset: 16, xor const: 0
}

// CmdId: 5458
message AJDAIDFHEIN {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 15150
}

// CmdId: 7778
message ALOPNLLNGNF {
	uint64 DIMEDPILOOA = 15; // offset: 24, xor const: 7103
}

// CmdId: 3734
message DMODOANLBNE {
	int32 ALMNNGFCOOP = 5; // offset: 36, xor const: 4241
	string BFCHHPKMIOM = 13; // offset: 24, xor const: 0
	int32 ANKMLINBCPL = 7; // offset: 32, xor const: 7267
}

enum DPENGFDCOBP {
	DPENGFDCOBP_OPELGOAJMAM = 0;
	DPENGFDCOBP_IHOODMFJCLG = 1;
	DPENGFDCOBP_HFGCPAJKGLH = 2;
	DPENGFDCOBP_DMLFAJEHMEF = 3;
	DPENGFDCOBP_JNEKFGOBHBF = 4;
	DPENGFDCOBP_PIBOOGPBFAG = 5;
	DPENGFDCOBP_HBOCNGGKLBM = 6;
}

// CmdId: 2402
message KIOCELLBLMB {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 13700
}

message BJBMKGLBKFG {
	uint32 HJPLMHJIJPM = 1; // offset: 24, xor const: 0
	bool AJFIALNFMBP = 2; // offset: 28, xor const: 0
}

// CmdId: 4813
message AKDHEMCGKLD {
}

message MNDILHKBHAF {
	repeated string DEBMKPIJBNB = 1; // offset: 24, xor const: 0
	bool IELHFNJBHLG = 2; // offset: 32, xor const: 0
	LMCILCCLNEJ DJJHAJNAEIK = 3; // offset: 40, xor const: 0
	uint32 IIIGDHJPFMI = 4; // offset: 36, xor const: 0
}

message DJKEKABJKOL {
	uint32 LBGDLDMAMAO = 6; // offset: 28, xor const: 8139
	uint32 JOOOICHOOPK = 12; // offset: 32, xor const: 15105
	uint32 DEFFOFMKOFG = 5; // offset: 36, xor const: 12504
	uint32 LANJNPHPJEH = 8; // offset: 24, xor const: 4372
}

// CmdId: 5510
message CBIOEPNPENC {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 12775
	uint32 GFOBLCFLFBH = 13; // offset: 28, xor const: 9996
}

// CmdId: 389
message IKOABPPNOBM {
	repeated uint32 NOAPNHGNDNC = 1; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 32, xor const: 3976
}

// CmdId: 2499
message EABGHHNFFFE {
}

message IABJANECNCC {
	MICBCAEPMOM APFACFHPCOD = 1; // offset: 16, xor const: 0
}

// CmdId: 4136
message PEFCCENBICL {
	uint64 AEDAEPKDOAL = 9; // offset: 56, xor const: 11488
	GLHHLEBGAIO CPEPJEPHPBD = 3; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 14; // offset: 40, xor const: 1188
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 48, xor const: 1224
}

message GJFGFMAFBEJ {
	INLFFDKGPNK AODMMCCECAP = 12; // offset: 16, xor const: 0
}

// CmdId: 1456
message JHDCGOLCCAP {
	uint32 DCENCIPOBMC = 14; // offset: 60, xor const: 8708
	uint32 CDAGGFJILEJ = 6; // offset: 40, xor const: 3174
	map<string, int32> HGJDNEFOIMG = 4; // offset: 24, xor const: 0
	LDIEOMFCFOD MLOMJHEPMEJ = 5; // offset: 32, xor const: 0
	uint32 EOHENAABBLD = 8; // offset: 56, xor const: 14860
	DHHDGKMFLNB OAEJPMIBGDP = 15; // offset: 48, xor const: 0
	uint32 AGDDDGNMKPE = 13; // offset: 44, xor const: 5096
	uint32 EFNFANEIJMH = 11; // offset: 52, xor const: 11214
}

message LHGEAKDPGPF {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 5957
	int32 GNBFPEIBLDK = 1; // offset: 40, xor const: 14341
	int32 LCPDGEFCADA = 14; // offset: 36, xor const: 6101
	int32 HKCHPDBIJHC = 10; // offset: 28, xor const: 365
	int32 CLIOOGMIIIP = 2; // offset: 32, xor const: 7907
	int32 LGLGBJONIFO = 13; // offset: 44, xor const: 5395
}

message JKKIDGOBEPF {
	string OOODKIGJBCN = 5; // offset: 24, xor const: 0
	string MPHLIEKKFIK = 11; // offset: 32, xor const: 0
	string PGPOIMHKFPL = 15; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 4; // offset: 64, xor const: 8269
	int64 PILDEGKJDPF = 8; // offset: 72, xor const: 14996
	string AKDIEHCJGOB = 12; // offset: 48, xor const: 0
	int64 EMGCHGOPJOG = 3; // offset: 56, xor const: 996
}

// CmdId: 3939
message KPILAGJFFOE {
	repeated uint32 MBGDPKLPLEJ = 10; // offset: 16, xor const: 0
}

// CmdId: 5174
message GPKNNDPHHNA {
	uint32 PGBADFMPAPK = 13; // offset: 24, xor const: 7632
	uint32 NCHLKIMPJKJ = 6; // offset: 28, xor const: 2974
}

enum LLADOPDHAAI {
	LLADOPDHAAI_BIAGIHIIDAM = 0;
	LLADOPDHAAI_LAFIPNPIMMN = 1;
	LLADOPDHAAI_NJPJKGKMLML = 2;
	LLADOPDHAAI_DMKLJMIMAGJ = 3;
}

message PALAMMGGKHP {
}

// CmdId: 2308
message AIDKNEFOOAE {
	uint32 EKLGNOIEMLA = 5; // offset: 24, xor const: 1800
	int32 IHIGNMLCHDK = 8; // offset: 28, xor const: 14825
}

message MJMCFHLHFIB {
	int32 OAJEAAHLNCM = 11; // offset: 32, xor const: 12890
	map<int32, int32> AHBEBDNEMDL = 14; // offset: 24, xor const: 0
}

// CmdId: 5363
message AFIEPKJJDON {
	bool LCJDNDALKFL = 12; // offset: 32, xor const: 0
	uint32 BCCEOLDLIFA = 13; // offset: 36, xor const: 4829
	FBJAGHNPCHC CAFNCHAIPJF = 14; // offset: 16, xor const: 0
}

// CmdId: 6225
message AGBKHIGIECH {
	DLCEMKGCCCA EILDHJJLINK = 5; // offset: 24, xor const: 0
	string CJLAPNLJDGK = 3; // offset: 32, xor const: 0
}

message ANILFBALPKA {
	OJDNKGDPOED HBADKBNPKBP = 5; // offset: 32, xor const: 0
	LIPILJCHNGP FAKKGPCCDND = 8; // offset: 24, xor const: 0
	uint64 NCAGHHFDAOG = 2; // offset: 40, xor const: 6678
}

message OMHPKOJBPMM {
	uint32 MIOCMPMGGGI = 7; // offset: 24, xor const: 13677
}

enum NPIMGCPIEEI {
	NPIMGCPIEEI_GEMBDNDJBAF = 0;
	NPIMGCPIEEI_OFHMOGEEOEG = 1;
	NPIMGCPIEEI_NANMJJCBOIJ = 2;
	NPIMGCPIEEI_PLOADAPOPHD = 3;
}

// CmdId: 8251
message NKFAFMBFBLL {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 9426
}

message ALNPMNFDNEF {
	repeated uint32 NKBIKFAODNP = 6; // offset: 16, xor const: 0
}

enum AOOFLMBFHHP {
	AOOFLMBFHHP_OPTIONS_MODE_NORMAL = 0;
	AOOFLMBFHHP_OPTIONS_MODE_SELECT_BY_GROUP = 1;
	AOOFLMBFHHP_OPTIONS_MODE_RANDOM_BY_NUM = 2;
	AOOFLMBFHHP_OPTIONS_MODE_RANDOM_BY_DEPTH = 3;
}

enum HGLKBCECBOE {
	HGLKBCECBOE_AT_NONE = 0;
	HGLKBCECBOE_AT_MAIN = 1;
	HGLKBCECBOE_AT_NO_MAIN = 2;
	HGLKBCECBOE_AT_CREATE_MALE = 3;
	HGLKBCECBOE_AT_CREATE_FEMALE = 4;
	HGLKBCECBOE_AT_MALE = 2011;
	HGLKBCECBOE_AT_FEMALE = 2021;
}

message KOLNEAPMJCH {
	uint32 IKDJDPPLNOM = 4; // offset: 72, xor const: 16019
	uint32 CPEGDKBNGDH = 6; // offset: 76, xor const: 6946
	map<uint32, GGHJHJAKBGD> BOFGLBIKCHM = 13; // offset: 64, xor const: 0
	repeated JPEOCDAENLN MLAFKOAPAOO = 34; // offset: 48, xor const: 0
	bool PHABANOBOMD = 12; // offset: 96, xor const: 0
	map<uint32, uint32> BLMOIKKMNKN = 7; // offset: 16, xor const: 0
	uint32 HIFPEBOLHCK = 10; // offset: 84, xor const: 6954
	repeated uint32 MODEHNCFGFK = 9; // offset: 24, xor const: 0
	repeated bool GBMJFALJLNE = 11; // offset: 32, xor const: 0
	repeated bool EDPDCKOFNEK = 3; // offset: 40, xor const: 0
	uint32 IEAIPGEAHHI = 5; // offset: 80, xor const: 11042
	bool CLILFPOEIOM = 2026; // offset: 98, xor const: 0
	uint32 BLCJKCMPNDD = 14; // offset: 100, xor const: 12983
	uint32 PPJFJCPIJAL = 1; // offset: 88, xor const: 10183
	uint32 HDHLPEKLFEF = 2; // offset: 92, xor const: 10397
	bool CNIDDOEKPJH = 15; // offset: 97, xor const: 0
	uint32 PLDOCCODBJI = 8; // offset: 104, xor const: 990
}

// CmdId: 4125
message AOKPLCMMLLC {
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 5145
	repeated IMJOMAPGGCB FAPGMLGODCM = 8; // offset: 16, xor const: 0
}

message BMLNKKPNOIO {
	string GJFLLIADLKC = 3; // offset: 16, xor const: 0
	LDHKKKBAAEL BKIHIFEJFDD = 1; // offset: 40, xor const: 0
	string KIFKDOJCGOK = 2; // offset: 24, xor const: 0
}

message CEGBIPKKLAE {
	int32 JAINEDAJDMP = 8; // offset: 24, xor const: 6384
}

// CmdId: 3570
message BICFAIJGEBH {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 9689
}

message JOLPCMMMKMN {
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 24, xor const: 0
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 16, xor const: 0
}

message FFKIJEGPICP {
	repeated int32 PGOOGAIEEJD = 12; // offset: 32, xor const: 0
	repeated int32 OJEAMMKKFEE = 15; // offset: 24, xor const: 0
}

// CmdId: 1221
message EENNLOHGAED {
	int32 IHIGNMLCHDK = 13; // offset: 36, xor const: 7590
	uint32 INKJBGCGJLP = 2; // offset: 32, xor const: 6016
	repeated GPNFHBKKGPD CDPENAEGHKE = 1; // offset: 24, xor const: 0
}

message NJCMGBIHAOD {
	LJOFAHECOGO BIBDLNMOGPD = 2; // offset: 16, xor const: 0
	HLBDIOJJFKG DDIKJMCMNLM = 3; // offset: 32, xor const: 0
	OJKILOGDPNP AEBOFBANLJF = 4; // offset: 40, xor const: 0
	uint32 AMIJIAHGPMC = 1; // offset: 48, xor const: 0
}

enum GEKAMGBINFG {
	GEKAMGBINFG_NNLIPPKJFPI = 0;
	GEKAMGBINFG_KLAGHJCALJG = 1;
	GEKAMGBINFG_FNKLGKGHNGK = 2;
	GEKAMGBINFG_MLMLGOJLCAJ = 3;
	GEKAMGBINFG_IDLPANCGPLD = 4;
	GEKAMGBINFG_HNNKCDPBDNI = 5;
	GEKAMGBINFG_EHKOJPLKFPA = 6;
	GEKAMGBINFG_FEGJJNNADOF = 7;
	GEKAMGBINFG_HPKKJMBGKHM = 8;
	GEKAMGBINFG_GKDOBOECJFE = 9;
	GEKAMGBINFG_KFKIPIGICDF = 10;
	GEKAMGBINFG_EMEDDKPPMFJ = 11;
	GEKAMGBINFG_GBOLDNFNMBO = 12;
	GEKAMGBINFG_HHEEDPJNBAB = 13;
}

message NGFJIPFNIBG {
	CDNMAMNKEIH LCOMJFDNPPP = 9; // offset: 104, xor const: 0
	int64 OBHGDLLHCCK = 14; // offset: 128, xor const: 1552
	repeated NEDCHKONEKO AKCMPEBKDDA = 7; // offset: 96, xor const: 0
	map<int32, HHPLBEOFHGA> GNMMLIIJDPF = 12; // offset: 64, xor const: 0
	repeated int32 CJJHCCLBKDE = 15; // offset: 56, xor const: 0
	int32 LFIPGDIJNPE = 1; // offset: 120, xor const: 1550
	float FDPOCANEMNE = 3; // offset: 124, xor const: 0
	repeated HHPLBEOFHGA JFCGGLHECGO = 13; // offset: 80, xor const: 0
	map<int32, CBONLDPEEGL> AANGKMIGIIM = 8; // offset: 72, xor const: 0
	map<int32, CBONLDPEEGL> OFAJEFHGPFB = 2; // offset: 24, xor const: 0
	string KFHNEIFHNHP = 6; // offset: 16, xor const: 0
	CBONLDPEEGL CJHMCNPLOHD = 4; // offset: 48, xor const: 0
	repeated int32 IOAIOCANNFA = 5; // offset: 88, xor const: 0
	double OHBPFOGMLFD = 10; // offset: 112, xor const: 0
	map<int32, string> ALCLIOPIKAG = 11; // offset: 32, xor const: 0
}

enum IFHJKCKKFPH {
	IFHJKCKKFPH_LIST_VARIABLE_TYPE_NONE = 0;
	IFHJKCKKFPH_LIST_VARIABLE_TYPE_INT = 1;
	IFHJKCKKFPH_LIST_VARIABLE_TYPE_STRING = 2;
	IFHJKCKKFPH_LIST_VARIABLE_TYPE_VECTOR_2 = 3;
}

message PMLJBJMOFDM {
	bool KLOGAIOIGEO = 1; // offset: 24, xor const: 0
}

// CmdId: 7697
message BKNANAKIIHL {
}

// CmdId: 7030
message MOCEAALAOJC {
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 40, xor const: 4809
	uint64 AEDAEPKDOAL = 5; // offset: 56, xor const: 3958
	LJBICODKBDD CPEPJEPHPBD = 12; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 7; // offset: 48, xor const: 3870
}

message MOHOFAAEGDG {
}

// CmdId: 9062
message FFCIPLPEFGE {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 2559
}

// CmdId: 8256
message GJNLAMGKJEL {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 2890
}

message KMGBINNDBNO {
	uint32 JFMHKCKJLEH = 10; // offset: 48, xor const: 305
	bool DHOJDELCANH = 6; // offset: 40, xor const: 0
	repeated PHCFCCHLIFJ PPKFBEICMLH = 2; // offset: 24, xor const: 0
	int64 IGIDEGGJKFC = 13; // offset: 32, xor const: 8863
	uint32 OPFEAMDPIAG = 8; // offset: 44, xor const: 10500
}

// CmdId: 1810
message CAHPLMJJJGE {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 9833
}

enum JBPJKFLCAEK {
	JBPJKFLCAEK_TYPE_OF_FUNCTION_RETURN_DEFAULT = 0;
	JBPJKFLCAEK_TYPE_OF_FUNCTION_RETURN_OUT = 1;
}

message FGHICGPHKJA {
	string MGEMBOOEJFP = 320; // offset: 64, xor const: 0
	IMJIJLIDHEC GCKJHHPPMIM = 1472; // offset: 128, xor const: 0
	IMJIJLIDHEC CGIFLCKABHJ = 1411; // offset: 112, xor const: 0
	string AKPIAFHFFDP = 1782; // offset: 80, xor const: 0
	string GDJMOOGBHNC = 1457; // offset: 72, xor const: 0
	uint32 EFNFANEIJMH = 15; // offset: 160, xor const: 1812
	EHEEHJMDHPD DNFJIMLCJEA = 13; // offset: 120, xor const: 0
	bool AOIBMEPBAFA = 36; // offset: 164, xor const: 0
	IMJIJLIDHEC KBGIMHAEBBC = 1875; // offset: 104, xor const: 0
	IMJIJLIDHEC LPFHMFMNLIH = 1737; // offset: 32, xor const: 0
	int32 BPELJHPDEBO = 9; // offset: 136, xor const: 2311
	int32 EGONKAMJLIL = 11; // offset: 140, xor const: 2280
	IMJIJLIDHEC CLJJEHDHLOI = 739; // offset: 48, xor const: 0
	int32 KJOOPDCDHNE = 12; // offset: 152, xor const: 5433
	uint32 IOEFEPHHDEI = 1016; // offset: 172, xor const: 11232
	FEBDNJDAJOB PAFIKANOLPH = 10; // offset: 88, xor const: 0
	int32 CPEHBCIBIKJ = 1; // offset: 156, xor const: 7693
	int32 GPNIPEOGOJI = 7; // offset: 144, xor const: 15309
	uint32 EFNMKEJOGKL = 4; // offset: 168, xor const: 7384
	repeated DHDBEIFENAJ MOPAPOHKBPO = 8; // offset: 96, xor const: 0
	BEHHIDBGIGD PCCAPDLHKNJ = 217; // offset: 176, xor const: 0
	repeated uint32 CLLJPAPBCJE = 780; // offset: 16, xor const: 0
	int32 ALJDMENJNMI = 14; // offset: 148, xor const: 744
	map<string, BADAJENOIOH> LOCKKKOCJLO = 675; // offset: 24, xor const: 0
	repeated IMJIJLIDHEC OEAPMPEDODF = 1805; // offset: 40, xor const: 0
}

message KNBCIDMLOLA {
	uint32 HKMOGOBJLPE = 10; // offset: 44, xor const: 6910
	uint32 HIMNJDFAOCH = 9; // offset: 52, xor const: 14175
	uint32 LOABNMJMDNI = 8; // offset: 36, xor const: 1953
	map<uint32, int32> MICILDBBIMJ = 13; // offset: 24, xor const: 0
	uint32 IHIEIMELEEH = 1; // offset: 48, xor const: 12876
	uint32 GFCLKDAOMBM = 7; // offset: 40, xor const: 11834
	uint32 CPEGDKBNGDH = 6; // offset: 32, xor const: 10786
}

// CmdId: 6993
message GGEIBPILIME {
	repeated uint32 FLICGOGIFND = 15; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 489
}

message ANPOGBEIPJK {
}

// CmdId: 996
message NJMJECJFDGD {
	int32 IHIGNMLCHDK = 14; // offset: 32, xor const: 3803
	bool MBDHGAKJFFI = 10; // offset: 41, xor const: 0
	repeated GGFHFPCMLNO LHKAJHPGFGC = 4; // offset: 24, xor const: 0
	uint32 PFJIFEMFFID = 13; // offset: 36, xor const: 11819
	bool HAHFAMFEEMO = 8; // offset: 40, xor const: 0
}

message OEPIHFOEEDJ {
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 8887
	uint64 NCAGHHFDAOG = 7; // offset: 24, xor const: 4341
}

// CmdId: 8298
message JFDJCGDKDAJ {
	uint64 HEJBMNAOJFL = 9; // offset: 40, xor const: 9164
	uint64 AEDAEPKDOAL = 12; // offset: 56, xor const: 5390
	uint32 KMKPPDICOKA = 7; // offset: 48, xor const: 216
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 16, xor const: 0
	DAMADMMANIA CPEPJEPHPBD = 6; // offset: 32, xor const: 0
}

// CmdId: 8225
message MHLGJDIKBAK {
	repeated LAPENMBKAJH EPDLJMJMHDK = 13; // offset: 16, xor const: 0
}

// CmdId: 4838
message LEMPPNLMJEJ {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 11412
}

message OCLGCDOAGMH {
	string BCCEOLDLIFA = 1; // offset: 32, xor const: 0
	string PBOAMDEBIGO = 2; // offset: 16, xor const: 0
}

enum LKABMEDACMD {
	LKABMEDACMD_INLKPFEJBCJ = 0;
}

message OGHHEDDOFHL {
	TimePeriodType AEIOGIJPKDA = 2; // offset: 24, xor const: 0
	uint32 BHCBBCEFIMD = 3; // offset: 28, xor const: 0
	bool MALAOMAKEPB = 1; // offset: 32, xor const: 0
}

// CmdId: 2135
message MNOPHAIMOGM {
	uint32 COONBILLNKD = 11; // offset: 44, xor const: 15394
	uint32 PLFCIIAEIFC = 2; // offset: 36, xor const: 16156
	uint32 EDPKPJBJLNM = 15; // offset: 32, xor const: 15014
	uint32 EGBJIDKGIDG = 3; // offset: 52, xor const: 515
	repeated ICMOCKLIJJG KMJMAMMAKDI = 7; // offset: 16, xor const: 0
	LBNFGKNOGDO HLEAEPDDBLE = 14; // offset: 40, xor const: 0
	uint32 OCFHAPMOJII = 8; // offset: 48, xor const: 1901
	uint32 PNMKPFHALKF = 1; // offset: 56, xor const: 5535
}

message NKNKJIOBOEA {
	uint32 CPEGDKBNGDH = 2; // offset: 24, xor const: 0
	bool COOEPOJHAOA = 3; // offset: 28, xor const: 0
	uint32 EKLGNOIEMLA = 1; // offset: 32, xor const: 0
}

// CmdId: 2130
message FBHDEHDKBMH {
	uint32 EKLGNOIEMLA = 4; // offset: 72, xor const: 6454
	uint32 MHDFOCGAOPO = 15; // offset: 56, xor const: 14291
	repeated uint32 PPBCKBHDIIH = 7; // offset: 24, xor const: 0
	uint32 CPEGDKBNGDH = 5; // offset: 64, xor const: 2891
	bool IPHHBLODMBN = 10; // offset: 69, xor const: 0
	repeated uint32 MGDMJAODKBI = 9; // offset: 40, xor const: 0
	CHAOGACNIMC BOAPJKMOOID = 3; // offset: 32, xor const: 0
	repeated uint32 GLFAIDIPKHL = 6; // offset: 16, xor const: 0
	bool COOEPOJHAOA = 2; // offset: 70, xor const: 0
	bool HCMIEEGPBJM = 13; // offset: 68, xor const: 0
	uint32 CMPLBHPIBLF = 8; // offset: 60, xor const: 13504
	bool PMLILLOKKGC = 12; // offset: 71, xor const: 0
}

// CmdId: 9518
message HMMMIIDDHJB {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 13824
}

message FMGEDCDACFK {
	HMBDJFECKCL HLEAEPDDBLE = 1; // offset: 32, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 2; // offset: 16, xor const: 0
}

// CmdId: 5566
message DBFHKGPCBDO {
	uint32 BHDLCHFDHNO = 1; // offset: 24, xor const: 9099
	uint32 BCCEOLDLIFA = 2; // offset: 28, xor const: 1966
}

message AEOJPJELAJG {
	bool BOEBHAICPPC = 2; // offset: 32, xor const: 0
	FGKJFCJILIL EAMDIAKEFMI = 1; // offset: 16, xor const: 0
}

message JHEMDHCLHMP {
	repeated LGFJHCGPEAK EHEKHHADGOB = 9; // offset: 24, xor const: 0
}

message MCJDECJILGN {
	bool MDMJNBOPKKJ = 1; // offset: 25, xor const: 0
	bool FGAIDEMCICN = 2; // offset: 24, xor const: 0
}

message LIKJCGEABNM {
	string NBNDPINNFHL = 1; // offset: 24, xor const: 0
	map<string, string> ALEBJDLHJNF = 2; // offset: 16, xor const: 0
}

enum FPOOBLHJJPD {
	FPOOBLHJJPD_KOEJLGPIIAO = 0;
	FPOOBLHJJPD_DALCPGFKGHM = 1;
	FPOOBLHJJPD_OIEPILBINJH = 2;
	FPOOBLHJJPD_CNLAGIMJJDI = 3;
	FPOOBLHJJPD_NHNDCBHFJPJ = 4;
	FPOOBLHJJPD_NCGBHLKGAKC = 5;
}

message NJJBIIOGFDP {
	repeated string IMNBOBEMALH = 1; // offset: 16, xor const: 0
}

// CmdId: 2708
message HECIOKMOLAJ {
	MANAECEBJJM LHCJIPAEGNJ = 14; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 8; // offset: 32, xor const: 6510
}

// CmdId: 1067
message NMNHBHJPHBJ {
	int32 IHIGNMLCHDK = 9; // offset: 28, xor const: 9232
	bool JLMOLDGHOFF = 5; // offset: 24, xor const: 0
}

message OHBHILDLOGG {
	repeated POFDPJPFPJJ HMNACAKKNGN = 14; // offset: 24, xor const: 0
	uint32 LHDGHDNENDL = 2; // offset: 52, xor const: 5547
	uint32 CDJLGDBPMHC = 11; // offset: 48, xor const: 10274
	repeated JFOHELMBLGN LLLDPBDGPOH = 15; // offset: 32, xor const: 0
	repeated POFDPJPFPJJ NODIHBAOOOK = 8; // offset: 16, xor const: 0
}

message FACNLPGBMPA {
	JIGPDFKHLPL IJHOPKLKPKJ = 2; // offset: 16, xor const: 0
	BGEBIEPLIIN COFLGGKCKGP = 10; // offset: 44, xor const: 0
	LKHOJEJJMNO MMBDBOGDFAG = 13; // offset: 52, xor const: 0
	bool OPIEGFBLGPA = 7; // offset: 40, xor const: 0
	LLADOPDHAAI HOOFGEAPHHP = 8; // offset: 48, xor const: 0
	JIGPDFKHLPL FJOECPEAHPN = 5; // offset: 24, xor const: 0
}

message OCPBIOLIEBG {
	int32 ALMNNGFCOOP = 1; // offset: 24, xor const: 0
}

message NCJNFODELJD {
	uint32 KCJLECGKGKL = 1; // offset: 24, xor const: 0
	bool PJOPGAAHLJE = 3; // offset: 28, xor const: 0
}

// CmdId: 8709
message FLMLFGCLNLI {
	OKAFGOPLIKO PBOAMDEBIGO = 8; // offset: 36, xor const: 0
	int32 NBNJEFMBCEE = 5; // offset: 32, xor const: 11310
	int32 PEDKNCIMHLA = 7; // offset: 40, xor const: 11363
	repeated int32 NCDNIHJGKBJ = 3; // offset: 16, xor const: 0
}

// CmdId: 3292
message DKOAANFFECJ {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 6125
}

message FNPEOJEEEND {
	repeated FFOKOFJOGHI AEGBNMEGIHP = 9; // offset: 32, xor const: 0
	repeated FFOKOFJOGHI LHPDMMNBOGN = 13; // offset: 16, xor const: 0
}

// CmdId: 3073
message ICHCENPJDNC {
	uint32 BBPJKDPGIPG = 6; // offset: 40, xor const: 2130
	uint32 GGNKBBEPPHA = 7; // offset: 32, xor const: 10201
	repeated uint32 IKIGNOMPNLF = 10; // offset: 24, xor const: 0
	uint32 PCPNKFCFPCC = 11; // offset: 36, xor const: 265
}

// CmdId: 4380
message PIHJFGELBBM {
	uint32 GFCLKDAOMBM = 13; // offset: 24, xor const: 4461
}

// CmdId: 1696
message PJGBLFILONC {
	uint32 JNLAKNOIKEG = 15; // offset: 32, xor const: 8726
	repeated KBGDAANPBON HOIKDLKCFNC = 11; // offset: 24, xor const: 0
}

message AOAFKAEOFEL {
}

message LFHMPJMAKKI {
	IHHJNHHDNHN JDDNAHKAFIK = 2; // offset: 40, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 16, xor const: 0
	FGKJFCJILIL IOOCGAJHOPN = 3; // offset: 32, xor const: 0
}

message GADAEJCBJOP {
	bool MALAOMAKEPB = 1; // offset: 24, xor const: 0
}

// CmdId: 1478
message MFPAGDIOGCI {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 2535
}

// CmdId: 7371
message PPLPMMIIKKO {
	NEJEKCEPBIC CPEPJEPHPBD = 3; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 56, xor const: 9844
	uint32 KMKPPDICOKA = 15; // offset: 40, xor const: 8957
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 5; // offset: 48, xor const: 7005
}

// CmdId: 5625
message KKICBPFCODK {
}

message FHDIFPNAPIA {
	uint32 KKINEPDCHPO = 3; // offset: 28, xor const: 13776
	uint32 IMKAOHPLMMG = 15; // offset: 24, xor const: 1361
	uint32 BNJJNGAEEJG = 11; // offset: 32, xor const: 420
}

// CmdId: 9476
message AGIKFJKHKHC {
	uint32 HLEAEPDDBLE = 10; // offset: 44, xor const: 6028
	LKOMPIGADIP LOODMHJMNNO = 13; // offset: 32, xor const: 0
	NKGKAAONIJC DHOFBGGHGOF = 12; // offset: 16, xor const: 0
	uint32 ALMNNGFCOOP = 14; // offset: 40, xor const: 8376
}

enum PHMDAGALLCB {
	PHMDAGALLCB_FPDOJIMPGLD = 0;
	PHMDAGALLCB_JKJCCPDBDAC = 1;
	PHMDAGALLCB_IDCICFFCOCA = 2;
	PHMDAGALLCB_KLHPLMEGIAK = 3;
}

message INCKKFJBPJN {
	repeated int32 JICLPHPLODM = 162; // offset: 112, xor const: 0
	PIKFEFBGDKK AMJENEABBOP = 1009; // offset: 48, xor const: 0
	ADMEBPODMDL PFCJCAIAIOK = 1760; // offset: 160, xor const: 0
	repeated uint32 FJOIBICBLDN = 1; // offset: 224, xor const: 0
	repeated uint32 EHGIDPMONJP = 3; // offset: 56, xor const: 0
	GAJAKNENDNI KCPGPPBCEHL = 5; // offset: 232, xor const: 0
	PODMJBHFABJ ABGPGIALOPI = 1862; // offset: 208, xor const: 0
	APJEOMBEKBP HKCOLPPCEFG = 4; // offset: 128, xor const: 0
	HAEGEFDGPMJ JOMKMPLPLAO = 1082; // offset: 80, xor const: 0
	CIPGDMHOHHH CIDILKFNAAF = 1091; // offset: 256, xor const: 0
	repeated int32 FNBMHHBKLIN = 6; // offset: 152, xor const: 0
	JLKOPDJIJBI JKHFEKEHOOA = 13; // offset: 248, xor const: 0
	IJAPHAPBFHD NPADHLHEFBM = 15; // offset: 144, xor const: 0
	repeated AIOPLCHFIOJ CNFJHHBOMGG = 14; // offset: 176, xor const: 0
	repeated int32 HCDHKBODKOF = 12; // offset: 24, xor const: 0
	repeated uint32 LEMAOGAPMBB = 11; // offset: 192, xor const: 0
	repeated uint32 LIBHANEHPPJ = 9; // offset: 40, xor const: 0
	HNHDIENLGOF CDDJDEPCLHM = 1927; // offset: 16, xor const: 0
	OHKINHEJAPE JAAMAKDIHCJ = 104; // offset: 120, xor const: 0
	LCPMAAKIJHD PGPOIMHKFPL = 1235; // offset: 64, xor const: 0
	FAIEBEIELFD LLCBNOHAOBI = 1822; // offset: 168, xor const: 0
	CDFEMOBKLKN KPGFOINFDJJ = 819; // offset: 96, xor const: 0
	AMLKEGHALFJ OBFGBFGAIKD = 290; // offset: 72, xor const: 0
	ACNJDMDHMHC POFEHAIAAII = 2; // offset: 184, xor const: 0
	repeated KENODIPMMKE BFPAJEDGDOB = 1231; // offset: 200, xor const: 0
	DJKELFFPCPP NKFPKHBNOHG = 297; // offset: 104, xor const: 0
	ACDNIGKOEEB JCEPHEHDMIH = 10; // offset: 136, xor const: 0
	repeated uint32 PEJLGAGAKHB = 8; // offset: 32, xor const: 0
	IMIBFFFDDMN MOHOKCDEBKO = 1342; // offset: 88, xor const: 0
	MAEEGPCMAKC OBPAIGHFGEE = 1900; // offset: 216, xor const: 0
}

// CmdId: 1038
message PDNKHNAGEBE {
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 8; // offset: 56, xor const: 13552
	uint32 KMKPPDICOKA = 6; // offset: 48, xor const: 16357
	uint64 AEDAEPKDOAL = 7; // offset: 40, xor const: 10409
	PHKIOOBCGGA CPEPJEPHPBD = 9; // offset: 32, xor const: 0
}

// CmdId: 3661
message JOBHGEILLCG {
	IEMJJOBENGN CPEPJEPHPBD = 9; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 6; // offset: 48, xor const: 7757
	uint64 HEJBMNAOJFL = 12; // offset: 56, xor const: 6617
	uint64 AEDAEPKDOAL = 7; // offset: 40, xor const: 7130
}

// CmdId: 2418
message BFIBBFCNLDH {
}

enum HMBDJFECKCL {
	HMBDJFECKCL_CARD = 0;
	HMBDJFECKCL_HOLLOW_ITEM = 6;
}

message FDJOCAFAJLC {
	uint32 DIJMMINCIME = 9; // offset: 92, xor const: 13903
	string BMAHBMDLAGK = 530; // offset: 16, xor const: 0
	string PGKIHEKMMJN = 12; // offset: 32, xor const: 0
	uint32 OJNNMPEPDNC = 11; // offset: 88, xor const: 9514
	uint32 MGFDCHKFMOI = 14; // offset: 112, xor const: 7838
	uint32 CBKMCIPEMIF = 10; // offset: 68, xor const: 4915
	uint32 HOFHOPHMMNO = 2; // offset: 96, xor const: 3917
	string KFDIAKAIJIJ = 13; // offset: 56, xor const: 0
	int64 GBMAHLHAMGH = 4; // offset: 72, xor const: 2003
	uint32 FJILOPJFFMF = 3; // offset: 80, xor const: 4811
	string DDFILMDCJMF = 15; // offset: 48, xor const: 0
	string NPIAKBEDBLE = 8; // offset: 24, xor const: 0
	uint32 NMHNBHDEKBP = 5; // offset: 84, xor const: 1985
	uint32 IFONIMNCEIF = 7; // offset: 116, xor const: 10243
	uint32 PCHPIAJCAGM = 1; // offset: 64, xor const: 5222
	int64 OIPBJGDLBGC = 6; // offset: 104, xor const: 7829
}

// CmdId: 834
message IAFJAEHHACO {
	repeated KMPEILEEOMO JAHONNCKDAB = 10; // offset: 24, xor const: 0
}

// CmdId: 5468
message JLIEAPEAGHC {
	repeated uint32 HAGAEGNMOOC = 4; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 7247
}

message IFEDCHJDJNN {
	string DBOACCIJPDL = 1; // offset: 16, xor const: 0
	uint32 KOMIMFNADCM = 2; // offset: 32, xor const: 0
}

// CmdId: 7204
message DCFPBKLEJDE {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 16261
}

message MEBCPCBJLLG {
	repeated NEICNIAKAOF KFKDEKKPBLO = 1; // offset: 24, xor const: 0
	uint32 HJHFOICGOAC = 7; // offset: 32, xor const: 11548
}

// CmdId: 8186
message JGLNOFNJLMG {
	uint32 EKLGNOIEMLA = 5; // offset: 44, xor const: 8200
	repeated uint32 PPBCKBHDIIH = 15; // offset: 32, xor const: 0
	repeated uint32 NCJJDMHHJIE = 12; // offset: 16, xor const: 0
	uint32 GFCLKDAOMBM = 4; // offset: 40, xor const: 14489
}

// CmdId: 9052
message DOBAMKMNJNM {
	DPMKEPOGOHP DIONHPBOEKB = 10; // offset: 24, xor const: 0
	uint32 LDKIMBPGJDN = 5; // offset: 28, xor const: 10142
}

message NAMMFCOECMF {
	bytes DHLEGHCPJDI = 3; // offset: 24, xor const: 0
	bytes GNAOAHCMOAH = 4; // offset: 16, xor const: 0
	HollowGridLink IGIAKNHPPOC = 1; // offset: 40, xor const: 0
}

// CmdId: 5286
message CLPOOOPCDDN {
	FEKEALPCBBE CPEPJEPHPBD = 11; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 13043
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 48, xor const: 15234
	uint64 AEDAEPKDOAL = 8; // offset: 40, xor const: 15884
}

message ADPGOAGNKAO {
	float IGCLJNFLHFD = 5; // offset: 24, xor const: 0
	float MOFAAFJJIKM = 9; // offset: 28, xor const: 0
}

// CmdId: 8244
message BJEEKMNNJPP {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 6303
}

// CmdId: 5738
message MFMEPGPAFIL {
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 2599
	APHBEHJMFND JAMBGLLHNMO = 8; // offset: 24, xor const: 0
}

message GJBFGPGHBBM {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 24, xor const: 0
	FGKJFCJILIL FPBOFDFLDGE = 3; // offset: 32, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 40, xor const: 0
}

message IDAOCJMFOGO {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 14857
}

message PHCFCCHLIFJ {
	int64 MOHHBACKBOK = 14; // offset: 40, xor const: 11143
	repeated uint32 KOOFIACCDFG = 10; // offset: 24, xor const: 0
	int64 EFOCIEHGBNA = 12; // offset: 32, xor const: 2290
}

message FEBDFIMIFMF {
	FGKJFCJILIL PAGOBFILGPB = 1; // offset: 16, xor const: 0
}

// CmdId: 6414
message KNABJGCKKEN {
	int32 DFIAAAJPLNC = 6; // offset: 24, xor const: 164
}

// CmdId: 3219
message ADLKJNODBCF {
	uint32 EKLGNOIEMLA = 15; // offset: 44, xor const: 10776
	bool HCMIEEGPBJM = 7; // offset: 48, xor const: 0
	uint32 GFCLKDAOMBM = 3; // offset: 40, xor const: 16260
	repeated uint32 PPBCKBHDIIH = 11; // offset: 32, xor const: 0
	repeated uint32 GLFAIDIPKHL = 13; // offset: 24, xor const: 0
	bool LNICCMGJPJH = 14; // offset: 49, xor const: 0
}

// CmdId: 7771
message HOKHLODJHPB {
	uint32 FILKKMHLNJI = 1; // offset: 24, xor const: 3612
	int32 IHIGNMLCHDK = 2; // offset: 28, xor const: 12544
	int64 FONEJOFJGGK = 3; // offset: 32, xor const: 7672
}

enum OBDDJEFFADM {
	OBDDJEFFADM_FHONNGCIGDH = 0;
	OBDDJEFFADM_DIFDAMKLEBF = 1;
	OBDDJEFFADM_FPMEPIBAMDO = 2;
	OBDDJEFFADM_EHKDIIEEJDK = 3;
}

// CmdId: 5452
message DCMMLKKBMEA {
	uint64 HEJBMNAOJFL = 2; // offset: 56, xor const: 5
	uint32 KMKPPDICOKA = 15; // offset: 48, xor const: 9358
	IFLLCPCNGAA CPEPJEPHPBD = 6; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 40, xor const: 1462
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 16, xor const: 0
}

enum MNFJGEDMNEM {
	MNFJGEDMNEM_OHKAAIIKJFH = 0;
}

enum FMIBKAPNBNI {
	FMIBKAPNBNI_HKDMCACFHDH = 0;
}

message EHCBGINKMCH {
	uint64 AEDAEPKDOAL = 4; // offset: 32, xor const: 4751
	bytes KABPABMBMFL = 10; // offset: 24, xor const: 0
	int32 OPFEAMDPIAG = 15; // offset: 44, xor const: 9835
	int32 HPINEDNJOAP = 6; // offset: 40, xor const: 14361
	int32 LAGAIELMAND = 7; // offset: 48, xor const: 6500
}

enum ADOEDCOCKJI {
	ADOEDCOCKJI_BMFJOHAEOKP = 0;
	ADOEDCOCKJI_DHHKFDELGIK = 1;
	ADOEDCOCKJI_HKBKBDGKDJG = 2;
	ADOEDCOCKJI_FNLLCAELHFN = 3;
	ADOEDCOCKJI_IFODKIANIKE = 5;
	ADOEDCOCKJI_MLABFANDIHH = 6;
	ADOEDCOCKJI_MEGAGFLFHFE = 7;
	ADOEDCOCKJI_APMFHLKMIFB = 8;
	ADOEDCOCKJI_IEJNAHMJHHO = 9;
	ADOEDCOCKJI_GBBHLDBBJEC = 10;
	ADOEDCOCKJI_LFLLKCIHAJP = 11;
	ADOEDCOCKJI_JKJGLEJKEAB = 12;
	ADOEDCOCKJI_KHIOJHMOKIK = 13;
	ADOEDCOCKJI_NJMOOEBGDBG = 14;
	ADOEDCOCKJI_IBDIMNOEFNO = 15;
	ADOEDCOCKJI_FNAJDKMLLNK = 16;
	ADOEDCOCKJI_LEINAOGHJGK = 17;
	ADOEDCOCKJI_HJMGKACBGCA = 18;
	ADOEDCOCKJI_CJNAPMAABPE = 19;
	ADOEDCOCKJI_CKOJNGAPOHN = 20;
	ADOEDCOCKJI_NAGCLNEAJMA = 21;
	ADOEDCOCKJI_MIMICNCOHJA = 22;
	ADOEDCOCKJI_FNMJHGCAIJB = 23;
	ADOEDCOCKJI_GFAIKLBJDKJ = 24;
	ADOEDCOCKJI_OFPNCGBBKJN = 25;
}

message COOJIMABDGH {
	int32 MFLPDFBAHFJ = 3; // offset: 48, xor const: 15426
	repeated GEBNOAMDNOC JAGGDGDFEKE = 4; // offset: 24, xor const: 0
	repeated double KHBEPPKPNMK = 7; // offset: 16, xor const: 0
	map<string, GEBNOAMDNOC> GHLBFABMLNB = 14; // offset: 40, xor const: 0
}

// CmdId: 7141
message LFLBNENEOGK {
	uint32 AMIJIAHGPMC = 13; // offset: 24, xor const: 7080
	int32 KDMDEBIBENP = 2; // offset: 28, xor const: 16156
}

enum LDHFHEDCECA {
	LDHFHEDCECA_JNDKJPCAPOA = 0;
}

message NICGOGNNNCH {
	bool PFLHHKPHDLP = 1; // offset: 24, xor const: 0
}

message LIGFAPBODMD {
	uint32 ABAGCNGEKGI = 5; // offset: 40, xor const: 8519
	uint32 PMAMMEHHMNH = 15; // offset: 36, xor const: 10363
	uint32 LOABNMJMDNI = 1; // offset: 24, xor const: 8679
	uint32 NGBOBBPIKJP = 11; // offset: 28, xor const: 8029
	bool FKPFLFMNALA = 2; // offset: 32, xor const: 0
	bool HGMGHDLJGPJ = 12; // offset: 33, xor const: 0
}

// CmdId: 4390
message KLMICEGMPHO {
	uint64 HEJBMNAOJFL = 6; // offset: 40, xor const: 8814
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 56, xor const: 5156
	MLPJFCOPIKA CPEPJEPHPBD = 3; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 48, xor const: 14039
}

enum PIFKMIKHKGK {
	PIFKMIKHKGK_IHIEMNDBLNP = 0;
	PIFKMIKHKGK_CHJDBKCHDMM = 1;
	PIFKMIKHKGK_NHNBNNCGCMH = 2;
	PIFKMIKHKGK_JCJNMLANKCE = 3;
	PIFKMIKHKGK_CIPLLGDHNJM = 4;
	PIFKMIKHKGK_MAFMPEGFEEO = 5;
	PIFKMIKHKGK_MOJBDKGLMDD = 6;
	PIFKMIKHKGK_PEHCFHCGGCM = 7;
	PIFKMIKHKGK_PBIIJPLHEMB = 8;
}

message PFBPNKHIFLP {
	EGNJLMEMKJI FGIPPAPALEM = 7; // offset: 72, xor const: 0
	repeated uint32 OEKNNEOLEEK = 914; // offset: 24, xor const: 0
	uint32 DMIMGNLILLP = 8; // offset: 112, xor const: 990
	ADKIPNDBLLE JGKBOIEHNBF = 14; // offset: 32, xor const: 0
	FFJOECCLAKI ENFJMNHPFAF = 2; // offset: 48, xor const: 0
	repeated uint32 EAHHLBKIAKH = 10; // offset: 80, xor const: 0
	FIGBNPPGJHN DPHHJACAGBF = 9; // offset: 16, xor const: 0
	DIIBMJNKONG LKEBAFIIFED = 11; // offset: 56, xor const: 0
	DEBMGMHLPON GDOFFGDIDKP = 3; // offset: 64, xor const: 0
	repeated DLJEPEGFAFB KIILPELHCJC = 13; // offset: 96, xor const: 0
	BFNGIGDKKJN PLJDMNOFPPG = 5; // offset: 88, xor const: 0
	JEFEABEIEBD NIHOKMADHDJ = 4; // offset: 104, xor const: 0
}

message BGFCBEBDAEI {
	bool PHIFJCCAPLI = 8; // offset: 60, xor const: 0
	int32 GJNBLPJODKI = 13; // offset: 68, xor const: 9653
	int32 CGFCPEFPBID = 4; // offset: 56, xor const: 7804
	bool GGLJBLPNEMA = 2; // offset: 78, xor const: 0
	int32 HPCPANIPHDC = 6; // offset: 44, xor const: 6388
	bool BCOAJFOAPIG = 1744; // offset: 63, xor const: 0
	bool NONHABKCFIL = 7; // offset: 62, xor const: 0
	int32 MCPIMIMMBGM = 11; // offset: 84, xor const: 3472
	int32 CJEFICMNECN = 15; // offset: 64, xor const: 16084
	int32 HECLKJOHKCL = 1; // offset: 52, xor const: 8301
	int32 OENADLPLAJC = 3; // offset: 48, xor const: 6077
	map<int32, bool> MDCKAHNIDLP = 5; // offset: 32, xor const: 0
	int32 FJCEKKAGJNN = 781; // offset: 40, xor const: 14466
	bool LPFFDIOBOJB = 14; // offset: 76, xor const: 0
	FGKDHMPBHCB ACEMBJPDCDK = 9; // offset: 24, xor const: 0
	bool ONKAFLDINPI = 1631; // offset: 77, xor const: 0
	int32 JKBIDFLDGNB = 10; // offset: 80, xor const: 10028
	int64 KBKLJLLBLCD = 12; // offset: 88, xor const: 16284
	bool MPCEIJJCEBL = 538; // offset: 79, xor const: 0
	int32 GIIDABOKJDH = 720; // offset: 72, xor const: 13787
	bool DBCNHJOBFAN = 1596; // offset: 61, xor const: 0
}

message IBAPPEBCPEN {
	bool EABOHHKFEEM = 1; // offset: 24, xor const: 0
}

enum LPBKFOMFEED {
	LPBKFOMFEED_NGALLGLKGAF = 0;
	LPBKFOMFEED_PENPBCPEGND = 1;
	LPBKFOMFEED_MKGCPBHDKFD = 2;
}

message OOMPCKNPEDI {
	INLFFDKGPNK AODMMCCECAP = 10; // offset: 16, xor const: 0
}

// CmdId: 5588
message JALNOLNLPCL {
	repeated int32 KCEMCNPNINM = 5; // offset: 16, xor const: 0
}

message KDNIBKFFEBE {
	INLFFDKGPNK AODMMCCECAP = 4; // offset: 16, xor const: 0
}

// CmdId: 1865
message GAEKLDOHDBD {
	uint32 EKLGNOIEMLA = 14; // offset: 24, xor const: 714
}

message IBIIHCFOEHD {
}

// CmdId: 7601
message GNDGDOHADAO {
	GHDHIAIKKPK CPEPJEPHPBD = 4; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 10439
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 691
	uint64 AEDAEPKDOAL = 3; // offset: 40, xor const: 3920
}

// CmdId: 4185
message HINCMKNMMIC {
	uint32 FILKKMHLNJI = 7; // offset: 24, xor const: 10546
}

message HCAFMACAHAO {
	JIMJJLJGLDL CIEPBBKFDOK = 11; // offset: 24, xor const: 0
}

message ABBFBFFAGID {
	bool MKKJCFLOAJC = 4; // offset: 32, xor const: 0
	bool FOPPABKBCIH = 6; // offset: 33, xor const: 0
	int32 HLEAEPDDBLE = 2; // offset: 24, xor const: 0
	bool GMCAABHABEO = 3; // offset: 34, xor const: 0
	int32 EKLGNOIEMLA = 1; // offset: 28, xor const: 0
	int32 GJPPELNNBEN = 5; // offset: 36, xor const: 0
}

enum BDEOGBDMADB {
	BDEOGBDMADB_GBGFFHJNAAH = 0;
}

message NBHOFFAMADO {
	uint32 OAFHBNOBPLP = 2; // offset: 36, xor const: 13020
	uint64 DEHDJDKCBKG = 5; // offset: 40, xor const: 10259
	uint64 MOHHBACKBOK = 4; // offset: 48, xor const: 1553
	uint32 ADFMCMNJDNE = 8; // offset: 28, xor const: 12912
	uint32 NBEHDAFLGLM = 6; // offset: 32, xor const: 11987
	uint32 BCMPKLAOIHK = 12; // offset: 24, xor const: 5130
}

// CmdId: 4871
message BLDLOJJPDLI {
	uint32 FLOMIIDEACM = 3; // offset: 28, xor const: 7804
	bool ACNJMDJBHDP = 8; // offset: 24, xor const: 0
}

// CmdId: 896
message PMBEMBDLJKL {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 11164
}

// CmdId: 6061
message DCJEDGHHBBJ {
	repeated uint32 ONKIDHEMGMO = 4; // offset: 24, xor const: 0
}

message FMHFMIJBIME {
	string BPKMEHGDOJP = 10; // offset: 16, xor const: 0
	uint32 FHFBFBKIDGI = 9; // offset: 36, xor const: 10301
	uint32 ECGHGCACHMI = 1; // offset: 32, xor const: 8893
}

// CmdId: 7226
message AILILPELIHL {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 9125
}

message AEGOEKHLIIK {
	GPKIOKHHKPL HLEAEPDDBLE = 2; // offset: 48, xor const: 0
	repeated OFIIFKENFKF PHBCCKLOMHA = 3; // offset: 40, xor const: 0
	bool AJKEGDHFHKP = 5; // offset: 52, xor const: 0
	FGKJFCJILIL PCMLMONIODN = 1; // offset: 32, xor const: 0
	bool GJCLJAFDEJA = 6; // offset: 53, xor const: 0
	repeated HEIFJNGLDEJ HCFOFMCBEBB = 4; // offset: 16, xor const: 0
}

message KDIIDGANHKH {
	uint32 LHPFJFPGEEA = 1; // offset: 32, xor const: 0
	repeated IINAKJBLHPJ CPAGFLFJEBC = 2; // offset: 16, xor const: 0
}

message JFFGMMLEAGJ {
	map<uint32, uint32> KFHKICFMHLO = 3; // offset: 32, xor const: 0
	bool FAAOIFDLAIB = 10; // offset: 44, xor const: 0
	uint32 DLMNNIBDEEL = 13; // offset: 40, xor const: 12954
	uint32 MJNJNDDOKMA = 5; // offset: 52, xor const: 8717
	uint32 JONOJFAPODE = 2; // offset: 48, xor const: 4242
	repeated LGCILCMIMLE DKNJIHKFFHN = 9; // offset: 24, xor const: 0
}

// CmdId: 1289
message GMILPFEFNHA {
	AKGMFOBAIJJ AMJENEABBOP = 14; // offset: 24, xor const: 0
}

message BEMAOABICGJ {
	repeated FGKJFCJILIL OCAAFEONLIJ = 4; // offset: 16, xor const: 0
	bool ALCLEMMNNHJ = 6; // offset: 53, xor const: 0
	bool FPDPGPHPBOJ = 5; // offset: 52, xor const: 0
	FGKJFCJILIL EHGLMGAGAIN = 2; // offset: 24, xor const: 0
	IMFBENMKKGD OAEJPMIBGDP = 1; // offset: 48, xor const: 0
	FGKJFCJILIL ADBPGCNNJBK = 3; // offset: 40, xor const: 0
}

message OIBGIKIODOC {
	FAIJGBIOJAJ CAPANHOAAEI = 3; // offset: 16, xor const: 0
	bool HKOCFKBBMJF = 1; // offset: 33, xor const: 0
	bool GOBMIHELNGI = 2; // offset: 32, xor const: 0
}

message JGAJNMDJDKM {
	int32 LFIPGDIJNPE = 12; // offset: 28, xor const: 4895
	float FDPOCANEMNE = 15; // offset: 24, xor const: 0
}

message ABMABLFFPEN {
	repeated IMJOMAPGGCB IJKOKKKEILN = 1; // offset: 16, xor const: 0
}

message PDPIELBKBEE {
	bool HKOCFKBBMJF = 1; // offset: 33, xor const: 0
	repeated HOCCKBGNGOM CAPANHOAAEI = 4; // offset: 16, xor const: 0
	bool ECOKDEDFAIK = 2; // offset: 32, xor const: 0
}

message IOBDBCCBBDJ {
	string OIDDOJOCCJH = 4; // offset: 16, xor const: 0
	string HGBGHHPHBMN = 5; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 14; // offset: 48, xor const: 7404
	string OOODKIGJBCN = 9; // offset: 40, xor const: 0
}

message NNPDPEOICCP {
	bool PJEILILDDDC = 4; // offset: 42, xor const: 0
	FGKJFCJILIL DGPMEEKBLKG = 1; // offset: 16, xor const: 0
	bool PBIOOKKGJDH = 3; // offset: 41, xor const: 0
	bool PGPCKJCNHOI = 6; // offset: 40, xor const: 0
	bool LKCDCAMKNKJ = 7; // offset: 44, xor const: 0
	bool JJCBBCNMFBH = 5; // offset: 43, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 32, xor const: 0
}

message MIDJLNDFCOA {
	bool BBLJNKMEAGL = 1; // offset: 24, xor const: 0
}

// CmdId: 7606
message CJHOFNGFBCO {
	repeated uint32 ONKIDHEMGMO = 6; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 14854
}

message CJAMGDDCGBI {
	FGKJFCJILIL NGBOBBPIKJP = 2; // offset: 32, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 16, xor const: 0
}

// CmdId: 6039
message NCHCALMNANC {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 645
}

message BPKOIFNJDPO {
}

message LHNMOGDJGHN {
	repeated PHFMGBJLKDD PKKFNEHLMHF = 1; // offset: 16, xor const: 0
}

message NABFKKGKNMK {
	repeated uint32 NCEKHFCHJJO = 4; // offset: 16, xor const: 0
}

enum GPKIOKHHKPL {
	GPKIOKHHKPL_MODIFY_MULTI_HOLLOW_OUT_TYPE_NONE = 0;
	GPKIOKHHKPL_MODIFY_MULTI_HOLLOW_OUT_TYPE_INSERT = 1;
	GPKIOKHHKPL_MODIFY_MULTI_HOLLOW_OUT_TYPE_REMOVE = 2;
}

enum BKJLODLHEDF {
	BKJLODLHEDF_NHKAEBDAKKC = 0;
	BKJLODLHEDF_MJMGFDPDPDM = 1;
	BKJLODLHEDF_CLPOAGFCALP = 2;
	BKJLODLHEDF_ENPFDBCDNBE = 3;
}

message AHCINDEBNMN {
	float MCGEJEKOFEL = 5; // offset: 40, xor const: 0
	int32 NDLIKFKBCNH = 3; // offset: 48, xor const: 0
	repeated PCPKPLCDIID ACEMBJPDCDK = 1; // offset: 16, xor const: 0
	int32 BFCHHPKMIOM = 7; // offset: 44, xor const: 0
	PCPKPLCDIID ACPGPLMFNOL = 4; // offset: 32, xor const: 0
	int32 ALMNNGFCOOP = 6; // offset: 56, xor const: 0
	bool PNGHGJBOKEA = 2; // offset: 52, xor const: 0
}

message COHKLIJFJLG {
	PPBPLIOAOOI BFGCKCNIHPJ = 1; // offset: 24, xor const: 0
}

// CmdId: 6975
message LIPPNFEDAAM {
	int32 LMBLELDDGMM = 6; // offset: 32, xor const: 3031
	int32 NECJEDNGAJL = 7; // offset: 44, xor const: 11092
	bool JAFLIMIGALB = 3; // offset: 36, xor const: 0
	HBFBNKAODPJ NCAGHHFDAOG = 11; // offset: 24, xor const: 0
	uint32 HONFNLBAIAN = 15; // offset: 40, xor const: 2292
	int32 APJCCMIMPHJ = 2; // offset: 48, xor const: 6030
}

enum MBCDFDHGMDP {
	MBCDFDHGMDP_LIDAFLPFIHO = 0;
	MBCDFDHGMDP_KKJGANPFLPD = 1;
	MBCDFDHGMDP_FIFNMJDIEBB = 2;
	MBCDFDHGMDP_KDONBJKJKEO = 3;
	MBCDFDHGMDP_OOAJGOBLDOB = 4;
	MBCDFDHGMDP_PPGNBPNPIEH = 5;
}

// CmdId: 8963
message LIBDKIPAAAP {
	int32 IHIGNMLCHDK = 12; // offset: 32, xor const: 4520
	GGLJEODJBAA CPEPJEPHPBD = 11; // offset: 24, xor const: 0
}

enum BGMHJLEEHKO {
	BGMHJLEEHKO_NCIDDMINEGF = 0;
	BGMHJLEEHKO_PICCAPABCCO = 1;
	BGMHJLEEHKO_EPKNAEMPECE = 2;
	BGMHJLEEHKO_HADJPMPGJEJ = 3;
	BGMHJLEEHKO_MKIKENKINKI = 4;
	BGMHJLEEHKO_DHCFDLHLLNO = 5;
	BGMHJLEEHKO_FHEGGBDHNLB = 6;
	BGMHJLEEHKO_LKEDJNOMJJN = 7;
	BGMHJLEEHKO_LNFNCAMJPJM = 8;
	BGMHJLEEHKO_JKDPCKPGNML = 9;
	BGMHJLEEHKO_NKJBNFPFBAH = 10;
	BGMHJLEEHKO_CMEFPEMODOB = 11;
	BGMHJLEEHKO_PEFPGBFJAKF = 20;
	BGMHJLEEHKO_IAANGCBEEPI = 21;
	BGMHJLEEHKO_PBHBLDMGJIN = 22;
	BGMHJLEEHKO_LCJIBAADJGA = 23;
	BGMHJLEEHKO_BDINIGHHHMK = 24;
	BGMHJLEEHKO_DKCAGFKECOM = 25;
	BGMHJLEEHKO_OFHIMKABAFA = 26;
	BGMHJLEEHKO_ILIGJMKAAPL = 64;
}

// CmdId: 3163
message BMKHCBNEHJP {
	map<uint32, bool> CLAHEFELPAL = 15; // offset: 16, xor const: 0
}

enum GKIIIMMNBPN {
	GKIIIMMNBPN_JFIPMOGDMBK = 0;
	GKIIIMMNBPN_IOAKNCHOFHL = 1;
	GKIIIMMNBPN_PPOLIANIPHA = 2;
}

message LDGKJKBJBDG {
	bool BKFADLJNBPJ = 1; // offset: 24, xor const: 0
}

message MAPKHJJKEOM {
	uint32 NLGHJLHIGCM = 1; // offset: 44, xor const: 0
	uint32 GFCLKDAOMBM = 2; // offset: 52, xor const: 0
	KEFLHGDONAF GCCPOBFDFLI = 5; // offset: 32, xor const: 0
	uint32 AEGIPOACBJB = 6; // offset: 48, xor const: 0
	bytes MIHALOJNCHO = 4; // offset: 24, xor const: 0
	bool FAFFFPICPDM = 3; // offset: 40, xor const: 0
}

enum AMNJMGHFPIK {
	AMNJMGHFPIK_PCFMJHIDKCC = 0;
	AMNJMGHFPIK_LGKOOKDEJBP = 1;
	AMNJMGHFPIK_KGBEMBACDFH = 2;
	AMNJMGHFPIK_MHBEGDCPDLF = 3;
	AMNJMGHFPIK_FBECLLHJCPG = 4;
	AMNJMGHFPIK_KHHLFJKHABF = 5;
	AMNJMGHFPIK_IKHDPBOCCOE = 6;
	AMNJMGHFPIK_KCIEIPLPMIL = 7;
	AMNJMGHFPIK_OPBCIDDDNJB = 8;
	AMNJMGHFPIK_KMOMJCIPBCB = 9;
}

// CmdId: 6255
message IKMFNGBMIML {
	uint64 AEDAEPKDOAL = 10; // offset: 48, xor const: 11460
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 9; // offset: 40, xor const: 13869
	uint64 HEJBMNAOJFL = 2; // offset: 56, xor const: 8229
	NCPCCINJIKC CPEPJEPHPBD = 11; // offset: 24, xor const: 0
}

enum EBJOBDDHPHM {
	EBJOBDDHPHM_HIKGCNPEJMI = 0;
}

message DBBGAPNMIPL {
}

// CmdId: 8
message BCPKIMKECJD {
	uint32 KMKPPDICOKA = 14; // offset: 56, xor const: 2406
	uint64 AEDAEPKDOAL = 2; // offset: 48, xor const: 3252
	uint64 HEJBMNAOJFL = 6; // offset: 40, xor const: 12809
	BHIHNCDEBAI CPEPJEPHPBD = 10; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 24, xor const: 0
}

// CmdId: 3989
message HCPCLGJKCHM {
	repeated AOKOFBENNAI DPBKAIEMMNG = 9; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 5; // offset: 32, xor const: 16356
}

// CmdId: 1942
message DKDECONGEKC {
	MIAALHEBCAM NOFGEHIDOIC = 7; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 1226
}

enum DMNFPJKEFMJ {
	DMNFPJKEFMJ_OMGDJLFAPFM = 0;
	DMNFPJKEFMJ_FOCFAIOHMDM = 1;
	DMNFPJKEFMJ_LGDIPNAKILA = 2;
	DMNFPJKEFMJ_OGHIKMDOAKJ = 3;
	DMNFPJKEFMJ_ICEKKMPBHBB = 4;
	DMNFPJKEFMJ_GBHFMAGKHKD = 5;
	DMNFPJKEFMJ_GDLKONAFFNG = 6;
	DMNFPJKEFMJ_DNDEMIHOAAP = 7;
	DMNFPJKEFMJ_LMFJDMDNBLH = 8;
	DMNFPJKEFMJ_GFFFNDONOFC = 9;
	DMNFPJKEFMJ_AOMKFGNJDDJ = 10;
	DMNFPJKEFMJ_OMDIOHOKKMG = 11;
	DMNFPJKEFMJ_BBIMDDKJHMO = 12;
	DMNFPJKEFMJ_ECIFHAKIPPC = 13;
}

// CmdId: 716
message MJNIHACHBDE {
}

message GLGGALGECIA {
	repeated uint32 AEGKOIJDMNL = 8; // offset: 64, xor const: 0
	repeated NEIFHLADLGD IFEGBMCBLLD = 6; // offset: 40, xor const: 0
	repeated IEGBEGDBNGE LFEIAELMBIG = 15; // offset: 104, xor const: 0
	repeated uint32 DIOJBGCFNPP = 14; // offset: 16, xor const: 0
	map<uint32, NKLIBHLKAHC> GKOOOOMIIDJ = 3; // offset: 96, xor const: 0
	repeated uint32 AAIFDMJMKBN = 10; // offset: 32, xor const: 0
	repeated uint32 PLPKAILJAMC = 9; // offset: 24, xor const: 0
	repeated AFNFKCMCOGG AADPNMEEKPC = 12; // offset: 56, xor const: 0
	map<uint32, HNEDNEHECJP> HOMFEHMKOOB = 4; // offset: 48, xor const: 0
	repeated uint32 NEAMMGFEOIC = 5; // offset: 112, xor const: 0
	repeated uint32 IKOPGNCHIEM = 7; // offset: 120, xor const: 0
	repeated uint32 CJGADLMBOPC = 11; // offset: 80, xor const: 0
	CODMLNIOPMD BGFKKFNCGGN = 2; // offset: 88, xor const: 0
}

message DDJGFCHDFJM {
	repeated OKLEIONNCCC LHGECGJPAOH = 4; // offset: 24, xor const: 0
}

// CmdId: 9365
message FFJCMBBBMML {
	int32 IHIGNMLCHDK = 3; // offset: 28, xor const: 10927
	uint32 EKLGNOIEMLA = 11; // offset: 24, xor const: 10526
}

message CJNGLBKBNEI {
	repeated HGIPJOCNKDF NKBIMCNHCOI = 3; // offset: 24, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 1; // offset: 40, xor const: 0
	repeated uint32 KAPHIGAFCGA = 4; // offset: 32, xor const: 0
	uint32 CBELLMGEFDA = 2; // offset: 48, xor const: 0
}

// CmdId: 4127
message AODBOKBBBDJ {
	uint32 EELDLMADHPK = 5; // offset: 40, xor const: 24
	repeated DMDJKAJNPJO DOHMHIDCOCE = 15; // offset: 32, xor const: 0
	repeated uint32 CDBCOOEFGOB = 6; // offset: 16, xor const: 0
}

message PAOHFOMBPGD {
	repeated BOCMBNOADMB PCNPDEALNKH = 9; // offset: 16, xor const: 0
	repeated uint32 MAAJLBKGCOH = 4; // offset: 24, xor const: 0
	uint32 AEDNAIBLBCE = 11; // offset: 72, xor const: 9392
	repeated PIOHNMEFJIA COJLHAFFAEG = 2; // offset: 56, xor const: 0
	repeated DENMEOPFNHB JNHJPIMAHLA = 14; // offset: 32, xor const: 0
	repeated uint32 KBDAHNLGCLP = 15; // offset: 40, xor const: 0
	uint32 PKALOKNLAKH = 8; // offset: 76, xor const: 7781
	uint32 LDMKBAMJLMK = 10; // offset: 80, xor const: 12765
	uint32 CKCLOFPICJP = 13; // offset: 84, xor const: 11972
	repeated uint32 MLIHFBDNNNK = 7; // offset: 48, xor const: 0
	FBACJIGMLCF ABKJLNIKCAP = 12; // offset: 92, xor const: 0
	uint32 APGJCNKODIJ = 3; // offset: 88, xor const: 5185
}

message FHHKCLIJKEK {
	string NBNDPINNFHL = 1; // offset: 24, xor const: 0
}

// CmdId: 1777
message LHGPGDOPHMA {
}

// CmdId: 476
message MPBNFCHKKDA {
	CMGGHJAGDGB CPEPJEPHPBD = 11; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 40, xor const: 12593
	uint64 AEDAEPKDOAL = 1; // offset: 56, xor const: 7998
	uint32 KMKPPDICOKA = 5; // offset: 48, xor const: 2000
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 16, xor const: 0
}

message OMCHMNCFMDC {
	MLNFNHMKJCK BIAKALPKDJK = 8; // offset: 16, xor const: 0
}

// CmdId: 8307
message BKOANNAPALD {
	string MOHHBACKBOK = 14; // offset: 24, xor const: 0
	repeated EAHOHBHJKID CKENENIBBIM = 1; // offset: 40, xor const: 0
	int32 NODBAHCCOBD = 4; // offset: 60, xor const: 13559
	int32 KADBIEIMCBD = 8; // offset: 52, xor const: 7273
	string DEHDJDKCBKG = 11; // offset: 16, xor const: 0
	int32 BCMPKLAOIHK = 10; // offset: 48, xor const: 10631
	int32 DMNBMHOOGDF = 15; // offset: 64, xor const: 397
	int32 NBNJEFMBCEE = 12; // offset: 56, xor const: 4181
}

message JHCLBOKGMIK {
	repeated FEJNHNCFGCO PDNCKGLOMEL = 2; // offset: 32, xor const: 0
	repeated uint32 MCCOJOKNPFM = 1; // offset: 24, xor const: 0
}

// CmdId: 402
message HAAALMAHPFM {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 2196
}

message LDPJOGHMBON {
	string LPEKBBJAKBP = 1; // offset: 16, xor const: 0
}

message LCKBMPCNKCH {
	uint32 CMOLKPGAPEO = 4; // offset: 44, xor const: 53
	KJCAAFPNOHO PDJPOIJFLAD = 6; // offset: 32, xor const: 0
	HAPLOHNMGHJ PFCIOMCFGKL = 13; // offset: 40, xor const: 0
	KJCAAFPNOHO GJJGLFNEACM = 9; // offset: 16, xor const: 0
}

message PMFLGCCMCPP {
	uint32 DCIGFJKJBKL = 4; // offset: 36, xor const: 0
	map<uint32, uint32> GLPLNJBEIPF = 3; // offset: 16, xor const: 0
	uint32 MNHMFPCHHDF = 1; // offset: 44, xor const: 0
	uint32 PFCIOMCFGKL = 2; // offset: 40, xor const: 0
	uint32 OAEJPMIBGDP = 5; // offset: 32, xor const: 0
}

enum MMIFKDGEGHH {
	MMIFKDGEGHH_FGBPBPCMEEE = 0;
	MMIFKDGEGHH_JHHKEGJPEFO = 1;
	MMIFKDGEGHH_IBNBOPFFBFB = 2;
	MMIFKDGEGHH_NCCLEBEHGDA = 3;
	MMIFKDGEGHH_OHOKOLOCAGA = 4;
	MMIFKDGEGHH_KGKFMAJCLNL = 5;
	MMIFKDGEGHH_CJFJADJJDMC = 6;
	MMIFKDGEGHH_CKPAJGOPKJE = 7;
	MMIFKDGEGHH_LPNNJLKBBFM = 8;
	MMIFKDGEGHH_CIPMFMCEHKP = 9;
	MMIFKDGEGHH_NIODLIEAHPI = 10;
}

// CmdId: 8810
message JEDCCFDIAGL {
}

message MCGJCMHBFNB {
	int32 AAEEHJCPFEB = 11; // offset: 28, xor const: 14274
	int32 HFMNBNGIBGB = 8; // offset: 24, xor const: 8444
}

message NJHJIDGJPHN {
	int32 JAINEDAJDMP = 6; // offset: 24, xor const: 2428
}

message AEHBFJLOFBF {
	uint32 FHFBFBKIDGI = 2; // offset: 36, xor const: 0
	string BPKMEHGDOJP = 3; // offset: 24, xor const: 0
	uint32 ECGHGCACHMI = 1; // offset: 32, xor const: 0
}

message GCBNCOAGBDO {
	OCLAJEEICBL HLEAEPDDBLE = 6; // offset: 36, xor const: 0
	map<uint32, int32> MICILDBBIMJ = 15; // offset: 16, xor const: 0
	uint32 GFCLKDAOMBM = 5; // offset: 32, xor const: 4322
}

enum BAEJHHDCJBA {
	BAEJHHDCJBA_KLEJAMGEBJM = 0;
	BAEJHHDCJBA_CCCBFLCIDIG = 1;
}

message LPIJLPFINDH {
}

// CmdId: 9896
message BGANAMMCOHL {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 5869
}

// CmdId: 6598
message BNLFKGMNDEC {
}

message JGNBCMJPHFH {
	float HEDOHAABKHD = 3; // offset: 24, xor const: 0
	float EFJPPJJFNJM = 2; // offset: 32, xor const: 0
	float AEIHIBLACCM = 1; // offset: 28, xor const: 0
}

message NNODHDIGMGM {
	int32 IFNNCGDEFJD = 4; // offset: 32, xor const: 0
	BMCHAGEMDJP BPIOGPIFLDE = 3; // offset: 24, xor const: 0
	uint32 IKJNHLPNMOE = 1; // offset: 40, xor const: 0
	uint32 HEEKOOMEBOG = 2; // offset: 36, xor const: 0
}

// CmdId: 8973
message JBDIMCDOAFM {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 2101
}

// CmdId: 3746
message CABHNLMDDNO {
	uint32 BCCEOLDLIFA = 5; // offset: 24, xor const: 1350
}

message LMLEEKDHOPP {
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 40, xor const: 0
	FGKJFCJILIL BMFDANPJJLN = 2; // offset: 32, xor const: 0
	FGKJFCJILIL PEDKNCIMHLA = 1; // offset: 16, xor const: 0
}

message NCCAPKPHAGB {
	int32 FCOPBDGGCDK = 5; // offset: 52, xor const: 0
	int32 BGGCOAJDMEL = 4; // offset: 44, xor const: 0
	int64 DBPGPLOJDIN = 2; // offset: 32, xor const: 0
	int32 KOMIMFNADCM = 3; // offset: 40, xor const: 0
	int64 PFNLFGCFBIM = 6; // offset: 24, xor const: 0
	int32 AMLNHIBIGHK = 1; // offset: 48, xor const: 0
}

message FAHEJJLFEMA {
	JCAIEKOGNGC KIAMDFIOGJD = 15; // offset: 24, xor const: 0
	int32 IGEKIBJNPNA = 6; // offset: 32, xor const: 1020
}

// CmdId: 3069
message AONMFIOJPKA {
	uint32 FCBDMMLCGMD = 6; // offset: 24, xor const: 10802
	bool INMCIEMCEMN = 14; // offset: 28, xor const: 0
}

// CmdId: 9293
message MGNPNNBPAMP {
	IDDMBGOFFGO CPEPJEPHPBD = 13; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 11495
	uint64 AEDAEPKDOAL = 1; // offset: 56, xor const: 3489
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 15; // offset: 48, xor const: 5144
}

// CmdId: 1502
message OJBKCKDFFKK {
	int32 IHIGNMLCHDK = 7; // offset: 32, xor const: 2102
	HBDCMALHDBF CHLDGHLJAPK = 1; // offset: 24, xor const: 0
}

// CmdId: 4377
message FNNBBDHCDHM {
	uint64 PCMACLCEGME = 9; // offset: 32, xor const: 11023
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 14772
	int32 DIHPHKCMFOB = 1; // offset: 28, xor const: 14359
}

message NPHJABOAEIH {
	bool IJINBEDCCKN = 2; // offset: 32, xor const: 0
	FGKJFCJILIL FNNGEDGDEPE = 1; // offset: 24, xor const: 0
}

// CmdId: 3503
message FKOKBGBDOIJ {
	uint64 HEJBMNAOJFL = 15; // offset: 56, xor const: 1097
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 12321
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
	KNCOBCHALPF CPEPJEPHPBD = 11; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 9; // offset: 40, xor const: 15533
}

// CmdId: 5239
message APDOBCKLPPG {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 1441
}

message OFHKMMHPNDJ {
	int64 DEHDJDKCBKG = 2; // offset: 40, xor const: 9731
	uint32 FILKKMHLNJI = 7; // offset: 24, xor const: 751
	int64 FONEJOFJGGK = 8; // offset: 32, xor const: 1953
	int64 MOHHBACKBOK = 4; // offset: 48, xor const: 13657
}

message JBLBLOLKFHK {
	LONLBNAMKCE FFCBENMGLCG = 9; // offset: 24, xor const: 0
}

// CmdId: 7934
message JHEKPAOECAC {
	repeated uint32 AIPPKKNLIGF = 5; // offset: 24, xor const: 0
	bool BKDHFLEJNAC = 10; // offset: 36, xor const: 0
	uint32 CEGDCAGOMND = 9; // offset: 32, xor const: 2279
}

message CIOGBPLAOFL {
	HollowShopType DPKKBOHMNEO = 3; // offset: 32, xor const: 0
	HollowShopCurrencyType ADFBHNOBNAC = 2; // offset: 36, xor const: 0
	repeated PKOAJIKCKFG CCMNBFIEMFL = 1; // offset: 16, xor const: 0
}

message KBGDAANPBON {
	string EKNFDKHABNN = 10; // offset: 24, xor const: 0
	int32 KOMIMFNADCM = 11; // offset: 40, xor const: 14532
	int32 PHLPFLOFMNI = 1; // offset: 36, xor const: 12649
	uint32 AMIJIAHGPMC = 14; // offset: 32, xor const: 602
}

enum KNANKNAHAEC {
	KNANKNAHAEC_CCFJNIGFADG = 0;
	KNANKNAHAEC_LFIMANNAFAC = 1;
	KNANKNAHAEC_DIAJHCLDBLJ = 2;
	KNANKNAHAEC_DHADMIDOGFP = 3;
	KNANKNAHAEC_MJPPJCPIKKP = 4;
	KNANKNAHAEC_KFFDNFPKGAC = 5;
	KNANKNAHAEC_MFINPPCEAAB = 6;
	KNANKNAHAEC_CMHPBHHBOAO = 7;
	KNANKNAHAEC_CIKKMEEGOKH = 8;
	KNANKNAHAEC_GMEJPCHCLBG = 9;
}

// CmdId: 2153
message FDMCCFJIAFG {
	uint32 NMHNBHDEKBP = 7; // offset: 24, xor const: 282
}

// CmdId: 6623
message ENDKBNLMJDN {
	bool NCPKBCEMCEH = 6; // offset: 32, xor const: 0
	EBDAIGALHDI DBOACCIJPDL = 14; // offset: 16, xor const: 0
}

// CmdId: 6352
message OCPMHFCCFIA {
}

// CmdId: 6312
message NIFKAKPHJAB {
	uint32 IIFNKOLDDLL = 10; // offset: 72, xor const: 10989
	uint32 IBMHPEINHJP = 3; // offset: 48, xor const: 330
	int32 KGKADIMLLPP = 6; // offset: 52, xor const: 11232
	uint32 NFFMNACHNMG = 12; // offset: 56, xor const: 1083
	IFGDJNNPCAN CKBOJACIJDI = 2; // offset: 24, xor const: 0
	int32 FGMOAKMKHCD = 8; // offset: 68, xor const: 15818
	uint32 NNBBBAMEBGC = 4; // offset: 84, xor const: 8169
	int32 JFNAILFDFPO = 15; // offset: 76, xor const: 14567
	HBFBNKAODPJ NCAGHHFDAOG = 5; // offset: 40, xor const: 0
	uint32 OPHJLDDALCI = 1; // offset: 80, xor const: 15157
	repeated MDJLEEGHMEA JPHHMDAKJBA = 14; // offset: 16, xor const: 0
	int32 HEEKOOMEBOG = 11; // offset: 64, xor const: 1504
	int32 LMICCDBPCLK = 13; // offset: 60, xor const: 8118
}

message NDIIELHGACK {
	float LNHKNCIEFIF = 4; // offset: 24, xor const: 0
	float FDPOCANEMNE = 3; // offset: 36, xor const: 0
	float LFIPGDIJNPE = 12; // offset: 32, xor const: 0
	float JAOHLNNEELP = 7; // offset: 28, xor const: 0
}

message LDIEOMFCFOD {
	map<uint32, bool> MIBICODBOAN = 4; // offset: 24, xor const: 0
}

message DEBMGMHLPON {
	repeated uint32 FHGKKAEOIDO = 11; // offset: 16, xor const: 0
	uint32 JJJJAPLJLHB = 3; // offset: 32, xor const: 2272
	bool GFNDDLECNPH = 9; // offset: 40, xor const: 0
	uint32 JHPDANKCDHB = 15; // offset: 36, xor const: 15258
}

message IKGIIIINHGI {
}

// CmdId: 3944
message OOGIJHANHLA {
	uint32 PINPDKKCOMK = 7; // offset: 24, xor const: 14579
	uint32 BCCEOLDLIFA = 14; // offset: 28, xor const: 932
}

message HADEPAEDGCA {
	FGKJFCJILIL FEPDOCPJGAM = 1; // offset: 24, xor const: 0
	string HKNKHKOEKMM = 2; // offset: 16, xor const: 0
}

enum NJFKCKGLJMP {
	NJFKCKGLJMP_KGDBBKOBDIH = 0;
	NJFKCKGLJMP_NEHDOKKBOJE = 1;
	NJFKCKGLJMP_NLEHIIKHELP = 2;
	NJFKCKGLJMP_MNDIDCNEGDJ = 3;
}

message COODNBOFDJM {
	FGKJFCJILIL BKBGBJHLNFA = 4; // offset: 64, xor const: 0
	FGKJFCJILIL CLAPEIBGOMD = 3; // offset: 80, xor const: 0
	FGKJFCJILIL ONIJOBCFHED = 6; // offset: 56, xor const: 0
	LDHKJGEMKIO FDIPMDDCMLK = 10; // offset: 16, xor const: 0
	APABMNLCAMO FIHDOKPOBDK = 1; // offset: 148, xor const: 0
	LDHKJGEMKIO BLCDLKJKIOD = 9; // offset: 88, xor const: 0
	LDHKJGEMKIO GPFNPNDPMPC = 8; // offset: 40, xor const: 0
	FGKJFCJILIL PGGGNINDNCP = 17; // offset: 72, xor const: 0
	LEHENCIPJIE MNEBNHOGLKF = 2; // offset: 152, xor const: 0
	LDHKJGEMKIO JDCKOCFLJDL = 14; // offset: 96, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 18; // offset: 144, xor const: 0
	LDHKJGEMKIO MOBECAMAHFA = 13; // offset: 48, xor const: 0
	LDHKJGEMKIO HDLJNFKCLHB = 12; // offset: 112, xor const: 0
	LDHKJGEMKIO FNJNCJBNGGL = 15; // offset: 24, xor const: 0
	LDHKJGEMKIO DFJDAPOLPPM = 16; // offset: 104, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 5; // offset: 32, xor const: 0
	LDHKJGEMKIO OOGJGELFKJK = 11; // offset: 128, xor const: 0
	FGKJFCJILIL MDEBHDLCALH = 7; // offset: 136, xor const: 0
}

// CmdId: 7779
message ADLBJJEEEEN {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 10298
}

message NKLIBHLKAHC {
	int64 NDPBONCOLMH = 5; // offset: 32, xor const: 1594
	uint32 CBKMCIPEMIF = 6; // offset: 24, xor const: 8058
}

message MKMCLPLHPCG {
	bool IJIDIPAAHIM = 19; // offset: 83, xor const: 0
	DACKFJCNIEH BEPALPNKGAH = 23; // offset: 24, xor const: 0
	bool DKEBHEKFKDM = 22; // offset: 103, xor const: 0
	repeated string PCBMPJHNGIP = 10; // offset: 32, xor const: 0
	bool BGKLODNGJBP = 21; // offset: 71, xor const: 0
	bool LOMPDIFAHLB = 15; // offset: 80, xor const: 0
	bool JPIDPCOKHEK = 11; // offset: 102, xor const: 0
	int32 GJPPELNNBEN = 1; // offset: 92, xor const: 0
	bool OMCBLLDCEOJ = 12; // offset: 81, xor const: 0
	int32 ELMIIBECGPH = 3; // offset: 104, xor const: 0
	int32 OHIKLBIBPKO = 13; // offset: 72, xor const: 0
	bool HEOBFKAAAMC = 5; // offset: 70, xor const: 0
	uint32 PCJIIBJKJDJ = 17; // offset: 64, xor const: 0
	map<int32, string> HNLPNNBBDED = 25; // offset: 40, xor const: 0
	repeated int32 IGJGGEHAACC = 9; // offset: 48, xor const: 0
	bool FDEPBEAMLHP = 4; // offset: 100, xor const: 0
	string HILFDGCAAGK = 14; // offset: 56, xor const: 0
	bool GFACJDIKLDO = 27; // offset: 101, xor const: 0
	int32 JIJDGJCLJDG = 2; // offset: 96, xor const: 0
	bool GEBAGMOAKFJ = 6; // offset: 82, xor const: 0
	FKNGHODDFNO NFPAJCJMJLF = 24; // offset: 76, xor const: 0
	bool MKKJCFLOAJC = 18; // offset: 69, xor const: 0
	bool HEJOFHGCDCN = 20; // offset: 84, xor const: 0
	GGDBNPKALBM PPCNCKBKEJB = 7; // offset: 108, xor const: 0
	uint32 ILOPALDIPKO = 16; // offset: 88, xor const: 0
	bool JJDCNHEENHF = 8; // offset: 68, xor const: 0
}

message IMJIJLIDHEC {
	int32 EFJPPJJFNJM = 2; // offset: 28, xor const: 0
	int32 AEIHIBLACCM = 1; // offset: 24, xor const: 0
}

message OCCOIDPFGCH {
	uint32 NNHPPJJAEHL = 8; // offset: 32, xor const: 11734
	uint64 NCAGHHFDAOG = 11; // offset: 24, xor const: 12724
	uint32 MIKLGCDHHBD = 9; // offset: 36, xor const: 6270
}

message GEHKNLCAAOE {
	repeated PFLDHLPDKLE EPDLJMJMHDK = 13; // offset: 16, xor const: 0
}

// CmdId: 5330
message PKKIKCLPAAC {
	AOKOFBENNAI GIMFOMEDGAO = 15; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 7; // offset: 32, xor const: 15045
}

message GFDMPHLIIDL {
	FGKJFCJILIL MHINMINPONI = 2; // offset: 16, xor const: 0
	int32 LLNJHPBMOCH = 1; // offset: 32, xor const: 0
}

message ENAJCNDAHFI {
	string ECBFKCKFLDI = 1; // offset: 16, xor const: 0
}

message LDCNMGKLIFF {
	repeated int32 KPOFFBOODOC = 1; // offset: 16, xor const: 0
}

// CmdId: 1494
message DINKIBGOIJE {
	uint32 MOIMDGDEMDJ = 12; // offset: 36, xor const: 1134
	repeated HFFJCDCDOBC CJNPOGHLHON = 5; // offset: 16, xor const: 0
	uint32 EFABKDHNLFF = 9; // offset: 32, xor const: 3156
}

// CmdId: 2160
message EGOJDCGCFFB {
	repeated uint32 KPOFFBOODOC = 4; // offset: 16, xor const: 0
	uint32 EKLGNOIEMLA = 9; // offset: 32, xor const: 10926
	bool POGPGPMCANM = 2; // offset: 36, xor const: 0
}

// CmdId: 8615
message IDCAGDHMCDE {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 6356
}

// CmdId: 557
message LIPAIIGABIB {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 1516
}

message AEGEFCHMMGE {
	GCDPKACBLAM ELHLEMFEMBF = 1; // offset: 24, xor const: 0
	BOFHCIJNNEE IOEHDCKFFEC = 2; // offset: 32, xor const: 0
}

// CmdId: 7028
message LKKBCHOEJAF {
	uint32 LDKIMBPGJDN = 6; // offset: 32, xor const: 11742
	string LDEEHHJDPHD = 5; // offset: 16, xor const: 0
}

// CmdId: 1338
message GINOJGIACGF {
}

// CmdId: 2391
message NPCEAIBLGNF {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 4326
}

message JCBCELCIMCG {
	uint32 IHIEIMELEEH = 2; // offset: 36, xor const: 0
	HOBCCEIFPFN MGNCOJOHIEC = 4; // offset: 24, xor const: 0
	uint32 KBKLJLLBLCD = 3; // offset: 40, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 32, xor const: 0
}

message PHFHLHDLFFH {
	repeated IFAOCHMMCOO JAIAJLJCKCJ = 1; // offset: 16, xor const: 0
}

message NGJCFHNEGBB {
	map<uint32, uint32> ENNIIAIBLDD = 10; // offset: 24, xor const: 0
}

// CmdId: 9755
message BKDIBDGJGPP {
	uint32 GFCLKDAOMBM = 7; // offset: 28, xor const: 12890
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 2008
}

// CmdId: 2907
message AEBEKEGEPBE {
	int32 IHIGNMLCHDK = 4; // offset: 28, xor const: 5837
	bool ALPLGBAEPOJ = 14; // offset: 24, xor const: 0
}

// CmdId: 1771
message DCKBCABBIII {
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 12461
	AOEEPAJKGMC BPDOIJNINAM = 5; // offset: 24, xor const: 0
}

// CmdId: 2049
message DBCJHDFMPFM {
	int32 OFCFGGLEBMI = 1; // offset: 24, xor const: 15080
}

// CmdId: 3930
message NCAADPAGOAL {
	repeated uint32 EKANKHEKLLK = 4; // offset: 24, xor const: 0
}

// CmdId: 2683
message OPLBJBEOHDE {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 10671
}

message IALNHBGIFBD {
	repeated CAELFNHONHD GJHPDKHHONE = 15; // offset: 24, xor const: 0
}

message GAJDGDKPMLA {
	repeated IHNPCNCGBDK ONDKOLPNHLO = 1; // offset: 24, xor const: 0
}

message FONHGHOOBJE {
	bool CBFMOAOAFKF = 1; // offset: 24, xor const: 0
}

enum CBHBOCMEHLL {
	CBHBOCMEHLL_FMIAOENIPNC = 0;
	CBHBOCMEHLL_JELAFEBNPNL = 1;
	CBHBOCMEHLL_FNIJCBMEOIL = 2;
}

// CmdId: 6761
message PGDGPPNIOBB {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 13308
}

message NHKCDKBOEPA {
	int32 CBELLMGEFDA = 1; // offset: 24, xor const: 0
}

message LPIFJEKNHIJ {
	uint32 FMNLIEDIAMK = 5; // offset: 88, xor const: 4426
	bool ILFJMNADLPP = 12; // offset: 71, xor const: 0
	bool OKIGCMGMJHO = 4; // offset: 69, xor const: 0
	int64 ODJBLJOHKIF = 13; // offset: 80, xor const: 1064
	EBLGOAAIAGP CNJBDEMIFHC = 11; // offset: 48, xor const: 0
	int64 MOHHBACKBOK = 7; // offset: 56, xor const: 9409
	string NCABHJLHKBD = 14; // offset: 24, xor const: 0
	string FIMLFNNFMEA = 1500; // offset: 32, xor const: 0
	uint32 PIIPDIMBFDJ = 3; // offset: 64, xor const: 3375
	bool DIAFDGAPMJA = 9; // offset: 70, xor const: 0
	uint32 LLNPIFPKJGM = 8; // offset: 72, xor const: 1266
	int64 DEHDJDKCBKG = 6; // offset: 96, xor const: 15881
	FDJOCAFAJLC IFCGAPPIHLB = 1; // offset: 16, xor const: 0
	uint32 EANJCJAMCFI = 10; // offset: 76, xor const: 9080
	bool NFNJBCACFDM = 15; // offset: 68, xor const: 0
}

message MBGJKDMBFNA {
	int32 IKDJDPPLNOM = 2; // offset: 24, xor const: 0
	int32 JDEDBHLBEPD = 1; // offset: 28, xor const: 0
}

// CmdId: 6728
message FDOPBEMHGGP {
	uint64 HEJBMNAOJFL = 7; // offset: 56, xor const: 15905
	uint32 KMKPPDICOKA = 1; // offset: 48, xor const: 8384
	uint64 AEDAEPKDOAL = 14; // offset: 40, xor const: 12023
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 16, xor const: 0
	FDFFGHBCJOM CPEPJEPHPBD = 13; // offset: 24, xor const: 0
}

message PKIJNFHAJCD {
	bool ENCANOPLLDM = 1; // offset: 24, xor const: 0
}

enum NIIDKCCOBCF {
	NIIDKCCOBCF_IHGADIAIHEA = 0;
}

message DICLPNEFFLO {
	repeated HGEEALEMNCN AFCENAAEMKP = 13; // offset: 24, xor const: 0
}

// CmdId: 1177
message AJENCOHBIDD {
	uint64 HEJBMNAOJFL = 1; // offset: 48, xor const: 5463
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 8; // offset: 56, xor const: 5337
	uint64 AEDAEPKDOAL = 6; // offset: 40, xor const: 2721
	LBMDDCONGEM CPEPJEPHPBD = 7; // offset: 32, xor const: 0
}

// CmdId: 543
message BDJHAIJPEJF {
	uint64 AEDAEPKDOAL = 5; // offset: 48, xor const: 11874
	HKBBAJFBFKH CPEPJEPHPBD = 11; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 1; // offset: 40, xor const: 11020
	uint32 KMKPPDICOKA = 12; // offset: 56, xor const: 12539
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
}

message CADNBCFMDDF {
	int32 GAEGAIBNDCE = 4; // offset: 32, xor const: 0
	int32 KOMIMFNADCM = 2; // offset: 36, xor const: 0
	int32 BMOGODOFKBJ = 5; // offset: 44, xor const: 0
	string IMPOAHEBNNB = 1; // offset: 24, xor const: 0
	int32 NPLKKOGKMCK = 3; // offset: 40, xor const: 0
}

// CmdId: 1779
message CIHLKGJDJNB {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 13110
}

message KNJKFHMPMCP {
	uint32 NMHNBHDEKBP = 1; // offset: 52, xor const: 6094
	map<uint32, uint32> HFELJBPLGLH = 13; // offset: 24, xor const: 0
	uint32 HPKEHJGOOJJ = 5; // offset: 44, xor const: 635
	uint32 HDFEBCIOEPE = 10; // offset: 36, xor const: 12688
	uint32 IIIGDHJPFMI = 7; // offset: 32, xor const: 12091
	bool BKFADLJNBPJ = 12; // offset: 48, xor const: 0
	uint32 PGBADFMPAPK = 14; // offset: 40, xor const: 12574
}

message NLCCFMFEHMD {
	repeated uint32 EHKFBDFKCLL = 7; // offset: 16, xor const: 0
}

// CmdId: 1744
message MHIJHPBLGMG {
	uint32 EKLGNOIEMLA = 2; // offset: 24, xor const: 6151
	uint32 BALIJBBCCDN = 4; // offset: 28, xor const: 6817
}

enum FNDECKNKCIJ {
	FNDECKNKCIJ_IAKAHOKIDEN = 0;
	FNDECKNKCIJ_MLAPNGCKEEF = 1;
	FNDECKNKCIJ_PNHPBNHKAAD = 2;
	FNDECKNKCIJ_CPAEKKMAAJM = 3;
	FNDECKNKCIJ_PLIKAMJEOMP = 4;
	FNDECKNKCIJ_IACECEJHAJJ = 5;
	FNDECKNKCIJ_GJIEFLLGAND = 6;
	FNDECKNKCIJ_IDHMLGMABPN = 7;
}

// CmdId: 3898
message LKNADMKOAKD {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 4602
}

message BLKBPPNEKNC {
	uint32 EAILPOFOKLE = 4; // offset: 24, xor const: 13048
	uint32 NCAGHHFDAOG = 2; // offset: 36, xor const: 8364
	int32 EPCIHCMLFGI = 9; // offset: 40, xor const: 2909
	int32 KBFBDIJGDGG = 10; // offset: 28, xor const: 14527
	uint32 MIKLGCDHHBD = 14; // offset: 32, xor const: 16308
}

enum MBJIHDHIPHC {
	MBJIHDHIPHC_JDNEINJEIDI = 0;
	MBJIHDHIPHC_ANFDJIAFIBH = 1;
	MBJIHDHIPHC_HGNIPHNFIDJ = 2;
	MBJIHDHIPHC_LLDEHEEONKK = 3;
}

message IECKIEDAGBG {
	string FHIIIPELENE = 2; // offset: 40, xor const: 0
	FGKJFCJILIL BENNHKHKELC = 5; // offset: 56, xor const: 0
	string NKNBEAHDGCH = 3; // offset: 48, xor const: 0
	repeated OANENBPMALI DKNJIHKFFHN = 6; // offset: 32, xor const: 0
	string PGPOIMHKFPL = 1; // offset: 16, xor const: 0
	AOOFLMBFHHP OHCHGMHAABJ = 4; // offset: 64, xor const: 0
}

message JGCLBNNJJPN {
	bool MKKJCFLOAJC = 3; // offset: 28, xor const: 0
	int32 MCJMOLFCCFD = 2; // offset: 32, xor const: 0
	int32 ANBMHPHJOIO = 1; // offset: 24, xor const: 0
}

enum CLMDILKJFOL {
	CLMDILKJFOL_PCAJILDCOON = 0;
	CLMDILKJFOL_AAGJGDIFABI = 1;
	CLMDILKJFOL_JOFDGJIEPFN = 2;
	CLMDILKJFOL_CLCIMCECPIO = 3;
}

// CmdId: 1034
message PLLMBJAJDLO {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 1393
}

message FOFHBENHIOC {
	int32 NFFJFJBHDAF = 1; // offset: 24, xor const: 0
}

// CmdId: 9984
message JMHEPKLOFFN {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 3849
}

message HABLCPBNBDD {
	map<uint32, FMFPAJBGDDH> GIHCNALBBJB = 11; // offset: 40, xor const: 0
	map<uint32, int32> CADBHGDIOBC = 14; // offset: 56, xor const: 0
	map<uint32, int32> BMCOOCOOEEL = 5; // offset: 16, xor const: 0
	map<uint32, int32> EHBGLCPDGJN = 2; // offset: 24, xor const: 0
	map<uint32, int32> IJCCGKMOHNG = 8; // offset: 32, xor const: 0
	float AKKOGFBFPMD = 13; // offset: 68, xor const: 0
	int32 ENAGMPEHPIM = 4; // offset: 64, xor const: 1716
}

message HGFIMCFNFAG {
	uint32 HLEICCGMEJH = 2; // offset: 32, xor const: 0
	bool LKEENIDDLCK = 3; // offset: 36, xor const: 0
	EDGCAIEHLHH CKBOJACIJDI = 1; // offset: 16, xor const: 0
}

enum FNNFKBFGGGO {
	FNNFKBFGGGO_HOLLOW_EVENT_TYPE_NONE = 0;
	FNNFKBFGGGO_HOLLOW_EVENT_TYPE_ALL = 1;
	FNNFKBFGGGO_BEGIN = 10;
	FNNFKBFGGGO_END = 20;
	FNNFKBFGGGO_INTERACT_END = 21;
	FNNFKBFGGGO_BATTLE_END = 22;
	FNNFKBFGGGO_CHANGE_LEVEL_INTERACT = 23;
	FNNFKBFGGGO_CHANGE_LEVEL_FIGHT = 24;
	FNNFKBFGGGO_BATTLE = 30;
	FNNFKBFGGGO_BATTLE_NORMAL = 31;
	FNNFKBFGGGO_BATTLE_ELITE = 32;
	FNNFKBFGGGO_BATTLE_BOSS = 33;
	FNNFKBFGGGO_HOLLOW_EVENT_TYPE_DIALOG = 40;
	FNNFKBFGGGO_DIALOG_POSITIVE = 41;
	FNNFKBFGGGO_DIALOG_NEGATIVE = 42;
	FNNFKBFGGGO_DIALOG_SPECIAL = 43;
}

message BABCPMGJADH {
	repeated bytes EIINGMCNCEJ = 4; // offset: 32, xor const: 0
	bool AJKEGDHFHKP = 5; // offset: 48, xor const: 0
	GPKIOKHHKPL HLEAEPDDBLE = 1; // offset: 52, xor const: 0
	repeated uint32 BGCHCIJGKEA = 3; // offset: 24, xor const: 0
	repeated GCFLBGBAPMJ AJNEJPBBEJG = 2; // offset: 16, xor const: 0
}

message HBHCPICAGFN {
}

// CmdId: 7616
message MMOOPKGEHMH {
	map<uint32, bool> EMDLDAGPHHG = 9; // offset: 24, xor const: 0
	uint32 MOMGDEFPOGM = 6; // offset: 36, xor const: 15826
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 14892
}

// CmdId: 1498
message DEANJMIGOKB {
}

// CmdId: 4084
message GPHKGOJKIOP {
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 32, xor const: 0
	MOGLNEGCJDC CPEPJEPHPBD = 2; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 13; // offset: 48, xor const: 757
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 277
	uint64 HEJBMNAOJFL = 15; // offset: 40, xor const: 7188
}

message ECMBOKPIBHE {
	FJABHNPMECL NFFJFJBHDAF = 2; // offset: 48, xor const: 0
	uint32 PEOCJCBFHJE = 5; // offset: 40, xor const: 0
	uint32 KCBFLELGHJM = 6; // offset: 44, xor const: 0
	FGKJFCJILIL GJBNAMGAJPI = 1; // offset: 32, xor const: 0
	FGKJFCJILIL MPNOKPDJNHK = 3; // offset: 24, xor const: 0
	bool MNNJDAFFEKP = 4; // offset: 52, xor const: 0
}

// CmdId: 8330
message KNOFNIDHJFH {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 621
}

// CmdId: 8119
message HFIDNCMAAAL {
	uint32 BCCEOLDLIFA = 13; // offset: 24, xor const: 12588
}

message PKOICIFKDLF {
	uint32 KINEKLHNPOO = 15; // offset: 28, xor const: 2902
	uint32 MJMIJENCMPM = 4; // offset: 24, xor const: 4685
}

message HEEKPCLIGPI {
	repeated uint32 KCOAKMDOKEB = 3; // offset: 16, xor const: 0
	uint32 AMIJIAHGPMC = 12; // offset: 32, xor const: 10502
}

enum EDINMFFNLBN {
	EDINMFFNLBN_GPHIGPABEND = 0;
	EDINMFFNLBN_AAEAJECEKLG = 1;
	EDINMFFNLBN_JCINHPIGPFB = 2;
	EDINMFFNLBN_EIINBOFJHPB = 3;
}

// CmdId: 8460
message JINIPMMGNFL {
	uint32 KMKPPDICOKA = 11; // offset: 40, xor const: 8095
	uint64 HEJBMNAOJFL = 6; // offset: 48, xor const: 4000
	uint64 AEDAEPKDOAL = 12; // offset: 56, xor const: 10285
	NOKDLFAMFKJ CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 32, xor const: 0
}

// CmdId: 3798
message ENGCGKMJHDH {
	uint32 PINPDKKCOMK = 9; // offset: 32, xor const: 8644
	uint32 BCCEOLDLIFA = 3; // offset: 28, xor const: 14615
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 13099
}

enum BGCLHJPHAKO {
	BGCLHJPHAKO_EADJIFLLGNN = 0;
	BGCLHJPHAKO_BBJAODGADDD = 1;
	BGCLHJPHAKO_HCIENLKEBFI = 2;
	BGCLHJPHAKO_EAEEIOLOMCB = 3;
}

// CmdId: 5587
message EAFAEAHBPHB {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 13619
}

enum ILEBHMKOONP {
	ILEBHMKOONP_IHOIMHAFADA = 0;
	ILEBHMKOONP_MMMBICNIHHI = 1;
	ILEBHMKOONP_JEGPGGHPCFH = 2;
	ILEBHMKOONP_EBPDDPKKHNF = 3;
	ILEBHMKOONP_IEINBDIAGFA = 4;
	ILEBHMKOONP_CKKNEDDONLA = 5;
	ILEBHMKOONP_EDMENFLPNHL = 6;
	ILEBHMKOONP_DBCMCALOKPE = 7;
	ILEBHMKOONP_BLLPNFGJBPF = 8;
	ILEBHMKOONP_JPOOHPKFECC = 100;
	ILEBHMKOONP_GCFMGAGNLCA = 101;
	ILEBHMKOONP_PKBABJNIDHE = 102;
}

message FLDKAJKMOEI {
	FGKJFCJILIL KJHJDKLMJDP = 2; // offset: 32, xor const: 0
	FGKJFCJILIL CCHBCDDMCMO = 1; // offset: 40, xor const: 0
	FGKJFCJILIL ONMHFAMPOPL = 3; // offset: 24, xor const: 0
}

// CmdId: 614
message AANEKGFMIEJ {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 5316
}

message CKDCMBIFFCN {
	repeated BNLFKBLGDIE EIDNKBICGEL = 6; // offset: 32, xor const: 0
	repeated uint32 NBHKBMNGHMK = 5; // offset: 56, xor const: 0
	repeated uint32 MLCEIPIDDAI = 9; // offset: 24, xor const: 0
	repeated uint32 CJGJINEEOJP = 7; // offset: 40, xor const: 0
	repeated uint32 ADNJBECEPMK = 3; // offset: 16, xor const: 0
	int32 HJPEDEIFLLG = 13; // offset: 64, xor const: 13415
}

message OPKPJDFJMIB {
	bool PPKOKAKLAIN = 15; // offset: 24, xor const: 0
}

message BNLFKBLGDIE {
	bool PJOPGAAHLJE = 6; // offset: 44, xor const: 0
	repeated uint32 EMMAPCNEPKK = 12; // offset: 16, xor const: 0
	uint32 JPEBKOKPNOM = 14; // offset: 40, xor const: 10288
	repeated IAKPGKFEGDI MIOLJCKFLPH = 7; // offset: 32, xor const: 0
}

message PDOFLDNJNEG {
	BCCDKFPEIFO FHBODIGDBNH = 11; // offset: 40, xor const: 0
	BCCDKFPEIFO HCAHGMGNJEH = 12; // offset: 56, xor const: 0
	FGKJFCJILIL BENNHKHKELC = 7; // offset: 64, xor const: 0
	bool MIKNOEILGIL = 13; // offset: 100, xor const: 0
	repeated BCCDKFPEIFO DKNJIHKFFHN = 10; // offset: 80, xor const: 0
	NPBOLNEDEAO NHBIGNMBBMM = 6; // offset: 96, xor const: 0
	bool FMCGAHFGHGP = 14; // offset: 101, xor const: 0
	repeated FGKJFCJILIL FDGKOLPLJLI = 9; // offset: 48, xor const: 0
	string NKNBEAHDGCH = 3; // offset: 24, xor const: 0
	string FHIIIPELENE = 2; // offset: 88, xor const: 0
	PAPEPFMIPFB NNELBDMFOHB = 4; // offset: 104, xor const: 0
	FGKJFCJILIL DADPMGNGAAD = 8; // offset: 32, xor const: 0
	AOOFLMBFHHP OHCHGMHAABJ = 5; // offset: 108, xor const: 0
	string PGPOIMHKFPL = 1; // offset: 16, xor const: 0
}

// CmdId: 6409
message BFIMCANEKOJ {
	uint32 EKLGNOIEMLA = 10; // offset: 44, xor const: 5259
	repeated uint32 APKKBCHHMGA = 11; // offset: 32, xor const: 0
	repeated uint32 GHDFNHICMJJ = 4; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 40, xor const: 755
}

message IFOKJMPOILD {
	PPBPLIOAOOI BFGCKCNIHPJ = 1; // offset: 24, xor const: 0
}

message OMHPFBIGIPB {
	repeated OAHEBLFKPIC MDKKOCECLCH = 4; // offset: 32, xor const: 0
	repeated uint32 AMMIGDCKFDG = 14; // offset: 40, xor const: 0
	repeated uint32 IBHLNHEAIPB = 5; // offset: 16, xor const: 0
	repeated uint32 NGOLHJACJAA = 2; // offset: 24, xor const: 0
	uint32 FDIJEMGKCBK = 13; // offset: 72, xor const: 11602
	repeated uint32 CFNMIPCPEMO = 11; // offset: 56, xor const: 0
	repeated uint32 PHFCPNELEFG = 7; // offset: 48, xor const: 0
}

// CmdId: 330
message HBJGKGBDBDL {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 6068
}

enum FHANJGEFKLI {
	FHANJGEFKLI_FREEZE_CAMERA_TYPE_NONE = 0;
	FHANJGEFKLI_FREEZE_CAMERA_TYPE_MANUAL = 1;
	FHANJGEFKLI_FREEZE_CAMERA_TYPE_CENTER = 2;
}

message DCJFNOCAJOL {
	string GJNCANEGADM = 3; // offset: 32, xor const: 0
	int32 MBFAFFLKBME = 2; // offset: 40, xor const: 0
	string DICHOLEBGIH = 1; // offset: 24, xor const: 0
	int32 IAKDAPNCNPI = 4; // offset: 48, xor const: 0
	int32 MOMGDEFPOGM = 5; // offset: 44, xor const: 0
}

enum BJCODCLMFNF {
	BJCODCLMFNF_MFMACDBDOEE = 0;
	BJCODCLMFNF_FAHEGPHEOJF = 1;
	BJCODCLMFNF_ADCCEEOPDCB = 2;
}

// CmdId: 6141
message FCFGNGLPKJO {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 2122
}

enum IMIEJEHPPNA {
	IMIEJEHPPNA_DHJGGDEOKFF = 0;
	IMIEJEHPPNA_MMLJNMGNELD = 1;
}

// CmdId: 8074
message BAEHJKBOKCL {
	int32 IHIGNMLCHDK = 8; // offset: 32, xor const: 10766
	KOLGGBMDDOO CPEPJEPHPBD = 1; // offset: 16, xor const: 0
}

// CmdId: 6932
message KFBMDNKPOOA {
	uint32 NMHNBHDEKBP = 7; // offset: 24, xor const: 1776
}

// CmdId: 2776
message ALPGMDJHIAK {
	repeated uint32 NLJNPENCPFO = 11; // offset: 16, xor const: 0
}

message MLIKLHDJEPF {
	int32 HJGOMPLJPPI = 5; // offset: 24, xor const: 4797
	bool PMAIBEJABNF = 11; // offset: 32, xor const: 0
	int32 OFMMCHFPNGP = 4; // offset: 28, xor const: 6281
}

message EIBEHNLOLNE {
	HNGOJGJNNHM ABCKEBAEOAH = 2; // offset: 52, xor const: 0
	repeated uint32 BOCPNEEHCNK = 7; // offset: 32, xor const: 0
	uint32 HDMDKOKNGEL = 1; // offset: 48, xor const: 0
	string IOFKNPIMHJA = 4; // offset: 40, xor const: 0
	bool GOFLPKHHDIB = 5; // offset: 56, xor const: 0
	repeated uint32 JLJNDGHKPPN = 3; // offset: 24, xor const: 0
	bool JILFNHHHMPE = 6; // offset: 57, xor const: 0
}

message LFPGKMOFEHC {
	repeated uint32 NKMKNCDKPKO = 3; // offset: 16, xor const: 0
	uint32 NNNEKMDKBFJ = 11; // offset: 32, xor const: 11748
}

// CmdId: 1484
message JKNFODAJBEN {
	NJHCCJPHMCC FPPHBHBOAOP = 13; // offset: 24, xor const: 0
	bool NGAPMECIAAB = 6; // offset: 40, xor const: 0
	int64 JNLAKNOIKEG = 10; // offset: 32, xor const: 15218
	int32 HCIKOCHONNP = 1; // offset: 44, xor const: 7351
}

// CmdId: 1620
message BGAFFLAEGCN {
	bool PNLEBDKBOEH = 15; // offset: 24, xor const: 0
	uint32 BDBCHFAMMDD = 11; // offset: 28, xor const: 13111
}

message DELBKBHMBEA {
	string FDCGDACGAKF = 4; // offset: 24, xor const: 0
	string DMICGIPOOGF = 2; // offset: 40, xor const: 0
	uint32 AOMGCDOFEGA = 5; // offset: 56, xor const: 0
	bool BPKJPOLAIKA = 11; // offset: 64, xor const: 0
	uint32 EICHPLAMIJE = 6; // offset: 52, xor const: 0
	OOLEHBAIOKG CPDBDPHJLOL = 1; // offset: 48, xor const: 0
	bool PLPGGKDANFH = 9; // offset: 66, xor const: 0
	bool MGHPCCMDEME = 10; // offset: 65, xor const: 0
	string HPFLMAIOCEL = 3; // offset: 16, xor const: 0
	uint32 IIIGDHJPFMI = 8; // offset: 68, xor const: 0
	bool OMJCFPOACJF = 12; // offset: 67, xor const: 0
	float OEMMGOBCCEL = 7; // offset: 60, xor const: 0
}

message ICODPOPMPIL {
	double EFJPPJJFNJM = 2; // offset: 24, xor const: 0
	double LNHKNCIEFIF = 5; // offset: 56, xor const: 0
	double AEIHIBLACCM = 1; // offset: 40, xor const: 0
	double JKLNHAJEOGA = 4; // offset: 48, xor const: 0
	double HEDOHAABKHD = 3; // offset: 32, xor const: 0
}

enum KNMPDNCMMMN {
	KNMPDNCMMMN_BCNBDCHDBOE = 0;
}

// CmdId: 1911
message KBNHMAICOLI {
}

enum KFDFDOGELNF {
	KFDFDOGELNF_OGICPGDLIJN = 0;
	KFDFDOGELNF_NJCDIBPNONK = 1;
	KFDFDOGELNF_FNGHNJEJAPG = 2;
	KFDFDOGELNF_PINKPHALAJO = 3;
	KFDFDOGELNF_JLKJANLPPCK = 4;
	KFDFDOGELNF_HHOBJNELNDL = 5;
	KFDFDOGELNF_MCHFNLBKHHN = 6;
	KFDFDOGELNF_ONDGHNPBENP = 7;
}

// CmdId: 4248
message GGCMGKHMCON {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 6838
}

message FAEJPNFFPJL {
	uint32 IPNANHEPICK = 1; // offset: 24, xor const: 0
	int32 BEIBHOAJPPD = 2; // offset: 28, xor const: 0
}

message MOGLNEGCJDC {
	int32 PGPNKDPHGCB = 2; // offset: 24, xor const: 14223
	int32 KDNGMPMPACC = 14; // offset: 28, xor const: 1527
}

message AKGMFOBAIJJ {
	repeated NMFOCGHDMCM JOKOHDHNHDM = 13; // offset: 24, xor const: 0
}

// CmdId: 3870
message JLBPLBJEEDH {
	repeated DGLPKMCOICC MMDLCKMPHNG = 4; // offset: 24, xor const: 0
}

message DOFFKBCMEEI {
	int32 KFJIBDLHPBJ = 5; // offset: 36, xor const: 9387
	float FBMNFCDAMCH = 7; // offset: 40, xor const: 0
	JLNLHBOGFII CKBOJACIJDI = 2; // offset: 24, xor const: 0
	int32 EFFMOLNLHLM = 9; // offset: 32, xor const: 148
}

message GCGNDLBANEK {
	uint32 EKLGNOIEMLA = 10; // offset: 40, xor const: 5215
	repeated uint32 FPDHGKJJONL = 13; // offset: 16, xor const: 0
	repeated FEJNHNCFGCO PDNCKGLOMEL = 5; // offset: 32, xor const: 0
}

// CmdId: 7656
message OAJMIENAJNN {
	map<string, int64> ONKEOHNGJBA = 5; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 1893
}

// CmdId: 7734
message JDCFBBIPGFD {
	uint32 PEDKNCIMHLA = 6; // offset: 24, xor const: 12595
}

// CmdId: 2650
message KLMPPLACHHF {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 1885
}

// CmdId: 5306
message IHNCNIJAJPG {
	repeated PNJELGEADIC POPGNHJNLCC = 10; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 4; // offset: 40, xor const: 9696
	uint64 HEJBMNAOJFL = 8; // offset: 48, xor const: 4430
	ABGMPNJCBLK CPEPJEPHPBD = 7; // offset: 32, xor const: 0
}

enum EDGHMAEKKNI {
	EDGHMAEKKNI_BCHCBNFKGGO = 0;
	EDGHMAEKKNI_AMMAMBCHGMN = 1;
	EDGHMAEKKNI_BLCKDOBHAOG = 2;
	EDGHMAEKKNI_ACLJPDKNOAF = 3;
	EDGHMAEKKNI_BJIFFPJIJCE = 4;
	EDGHMAEKKNI_CONOONCBMAH = 5;
}

// CmdId: 4720
message HAAGIKCKEIB {
	string PPOOOHEPNGI = 7; // offset: 16, xor const: 0
	uint32 KEIPIHKKBNH = 11; // offset: 32, xor const: 4110
}

message NBILJAFDBGB {
	int32 KDNGMPMPACC = 3; // offset: 28, xor const: 6511
	int32 PGPNKDPHGCB = 2; // offset: 24, xor const: 4602
}

message CALMNENKOHH {
	FMLADAJDHHM IPAOONNHFOF = 3; // offset: 24, xor const: 0
	bool LNICCMGJPJH = 1; // offset: 60, xor const: 0
	uint32 CBDBIPMJEPJ = 2; // offset: 40, xor const: 2218
	uint32 AIOEOFNLEHL = 15; // offset: 56, xor const: 1346
	uint32 HJHFOICGOAC = 13; // offset: 48, xor const: 15772
	uint32 PFCIOMCFGKL = 11; // offset: 52, xor const: 8661
	CJMGKMHACJK DOBNPPNIMMB = 5; // offset: 16, xor const: 0
	uint32 BEKFLJGFLJD = 6; // offset: 44, xor const: 5380
}

// CmdId: 6217
message BFLKCMEHIJA {
	repeated uint32 BGPKBHEAMFB = 5; // offset: 24, xor const: 0
}

// CmdId: 3938
message DAPLFODDIPP {
	int32 IHIGNMLCHDK = 5; // offset: 32, xor const: 3109
	NAMIFAJABBK DMNNKAGELLP = 10; // offset: 16, xor const: 0
}

message CEFKCKICJKH {
	int32 IHIGNMLCHDK = 3; // offset: 28, xor const: 594
	uint32 HJHFOICGOAC = 8; // offset: 24, xor const: 670
}

enum FJPFOCJAHDH {
	FJPFOCJAHDH_PATH_BLOCK_TYPE_NONE = 0;
	FJPFOCJAHDH_PATH_BLOCK_UP_IN = 1;
	FJPFOCJAHDH_PATH_BLOCK_DOWN_IN = 2;
	FJPFOCJAHDH_PATH_BLOCK_LEFT_IN = 4;
	FJPFOCJAHDH_PATH_BLOCK_RIGHT_IN = 8;
	FJPFOCJAHDH_PATH_BLOCK_UP_OUT = 16;
	FJPFOCJAHDH_PATH_BLOCK_DOWN_OUT = 32;
	FJPFOCJAHDH_PATH_BLOCK_LEFT_OUT = 64;
	FJPFOCJAHDH_PATH_BLOCK_RIGHT_OUT = 128;
}

message BHPEJOOPKAK {
	uint32 PBOAMDEBIGO = 6; // offset: 44, xor const: 15079
	uint32 IIIGDHJPFMI = 13; // offset: 28, xor const: 8843
	uint32 EDKNMHGIHPH = 8; // offset: 40, xor const: 4634
	uint32 OPFEAMDPIAG = 3; // offset: 36, xor const: 7317
	uint32 MGIOAGPHNCM = 15; // offset: 32, xor const: 10505
	uint32 HLEAEPDDBLE = 12; // offset: 24, xor const: 6088
}

// CmdId: 550
message GOAPBFHFHIG {
	int32 IHIGNMLCHDK = 6; // offset: 56, xor const: 7222
	repeated NEIFHLADLGD IFEGBMCBLLD = 1; // offset: 40, xor const: 0
	repeated uint32 AEGKOIJDMNL = 15; // offset: 24, xor const: 0
	map<uint32, NKLIBHLKAHC> GKOOOOMIIDJ = 8; // offset: 16, xor const: 0
	map<uint32, HNEDNEHECJP> HOMFEHMKOOB = 11; // offset: 48, xor const: 0
}

message GPPLNECINCL {
	bool LGLCBJFMJOO = 3; // offset: 24, xor const: 0
	uint32 NJFOLJNDPGG = 1; // offset: 28, xor const: 0
}

// CmdId: 3697
message NBMKIGLJMAD {
	CCHCCMLDFIH CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 9; // offset: 48, xor const: 1335
	uint32 KMKPPDICOKA = 10; // offset: 56, xor const: 14979
	uint64 HEJBMNAOJFL = 11; // offset: 40, xor const: 14120
}

message FMFHHMIMCBE {
	LDHKJGEMKIO KDIMAAINDHE = 1; // offset: 24, xor const: 0
	bool PIACCOFDGKI = 2; // offset: 32, xor const: 0
}

message KICOMECHEID {
	bool FHPFNJFEDAA = 2; // offset: 25, xor const: 0
	bool IDPLNAIAOMK = 1; // offset: 26, xor const: 0
	bool EGCOLMCDDAP = 3; // offset: 24, xor const: 0
}

message CBAGAEIKMMA {
	FGKJFCJILIL MHINMINPONI = 1; // offset: 32, xor const: 0
	string ABDEFNDIGFF = 2; // offset: 24, xor const: 0
}

message OBIDLOFLFBC {
	map<string, string> MJLEJNJHLON = 2; // offset: 16, xor const: 0
	map<string, string> EJKEBPHDJKL = 3; // offset: 40, xor const: 0
	string EBPKOEFDAEB = 1; // offset: 24, xor const: 0
}

message MANBNAFPOFD {
}

// CmdId: 4075
message GAHFBCOOJJB {
	HBFBNKAODPJ NCAGHHFDAOG = 1; // offset: 24, xor const: 0
	string FFCHHODCCGA = 7; // offset: 40, xor const: 0
	IFGDJNNPCAN NEGLLNDIPHC = 15; // offset: 32, xor const: 0
}

message HNJGKFHJDOP {
	FGKJFCJILIL GNBBEMMEIJH = 2; // offset: 16, xor const: 0
	FGKJFCJILIL IKDJDPPLNOM = 1; // offset: 32, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 40, xor const: 0
}

message NMNCDMGDDDI {
	repeated uint32 IPPOENDILGI = 11; // offset: 16, xor const: 0
	repeated uint32 KBGEJLEGHCB = 2; // offset: 40, xor const: 0
	repeated uint32 OBDPJJKMKBI = 1; // offset: 24, xor const: 0
	repeated int32 OONJMLKPCOE = 3; // offset: 32, xor const: 0
}

message FDEHPPPAIJN {
	MBGCDIHFOLG PBOAMDEBIGO = 8; // offset: 24, xor const: 0
	uint32 OPFEAMDPIAG = 4; // offset: 28, xor const: 15962
}

message OCAHDBELLBB {
	int32 GLENENDCEBO = 4; // offset: 24, xor const: 5996
}

// CmdId: 9490
message PDOBPCCBNBJ {
}

// CmdId: 4356
message CDILAPPJPNJ {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 4949
}

// CmdId: 2101
message PAEPKMILMDL {
}

message GKCKHCJFCEG {
	ChessUIColor ICCKMNEBAAN = 7; // offset: 44, xor const: 0
	HollowEntityType DNAENEJOADB = 6; // offset: 40, xor const: 0
	ChessUIControlType HLEAEPDDBLE = 1; // offset: 52, xor const: 0
	ChessUIIconType JKKOBAOAAMP = 2; // offset: 48, xor const: 0
	FGKJFCJILIL GMFDCLHIIDJ = 3; // offset: 24, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 5; // offset: 16, xor const: 0
}

// CmdId: 8140
message MCMBDIJEHPD {
}

message GOEBGMHJAJJ {
	EDGCAIEHLHH AGLLNBCMBMC = 2; // offset: 32, xor const: 0
	HELLMDLOOIP KDAKBFJNEJN = 1; // offset: 56, xor const: 0
	bytes DHLEGHCPJDI = 5; // offset: 40, xor const: 0
	bytes GJNFOLBDDPG = 3; // offset: 16, xor const: 0
	EDGCAIEHLHH MDAHPHPHPHI = 4; // offset: 48, xor const: 0
}

message GPNFHBKKGPD {
	uint32 EIGDAGJOEPE = 11; // offset: 28, xor const: 7927
	uint32 KMICMPHGGCM = 15; // offset: 24, xor const: 8165
	uint32 EKLGNOIEMLA = 3; // offset: 32, xor const: 967
}

// CmdId: 1586
message EBFKHJCBNCL {
	uint64 HEJBMNAOJFL = 11; // offset: 40, xor const: 5775
	uint64 AEDAEPKDOAL = 12; // offset: 48, xor const: 2389
	FNHGCPDMLIE CPEPJEPHPBD = 1; // offset: 16, xor const: 0
	repeated PNJELGEADIC POPGNHJNLCC = 9; // offset: 32, xor const: 0
}

message HOBFCMPBINJ {
	map<uint32, OGPGGIGGAIP> KFHPFAGLBED = 1; // offset: 16, xor const: 0
}

// CmdId: 7662
message PHMOMHPIIJJ {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 11244
}

message BDIKFEPGEKL {
}

message HFACEOCDOMJ {
	FGKJFCJILIL JDEDBHLBEPD = 1; // offset: 24, xor const: 0
	int32 IKDJDPPLNOM = 2; // offset: 32, xor const: 0
}

message FDCDBBIEKCJ {
	string JBKPFBFGDEO = 2; // offset: 40, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 96, xor const: 5496
	string NPIBLGNNMND = 4; // offset: 72, xor const: 0
	string PDIJDJEGAEE = 10; // offset: 80, xor const: 0
	string PGPOIMHKFPL = 15; // offset: 16, xor const: 0
	int64 PILDEGKJDPF = 3; // offset: 104, xor const: 8435
	string PEPOBENKFKC = 9; // offset: 64, xor const: 0
	string LGOLBHBBEGG = 14; // offset: 88, xor const: 0
	int64 EMGCHGOPJOG = 8; // offset: 112, xor const: 9815
	string OOODKIGJBCN = 13; // offset: 56, xor const: 0
	string ELMOGGFBADL = 11; // offset: 24, xor const: 0
	string LDBIGLBNGKL = 1; // offset: 48, xor const: 0
}

message MBFBMDHKNEM {
	FGKJFCJILIL DJCDIOGKILB = 2; // offset: 16, xor const: 0
	bool KANNJFMLNCI = 1; // offset: 32, xor const: 0
}

// CmdId: 4692
message CHBPJIJKBHM {
	map<uint32, MIMBHHMCKEO> IPKEKOALAIL = 15; // offset: 24, xor const: 0
	bool LEFNBHIKJEA = 13; // offset: 40, xor const: 0
	bool KCAGAEDLCML = 10; // offset: 41, xor const: 0
	repeated uint32 HJCHPEPEOKA = 7; // offset: 16, xor const: 0
}

message CPGMKEBOCHP {
	FGKJFCJILIL HMHIKBELPIA = 3; // offset: 40, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 16, xor const: 0
	FGKJFCJILIL KBEGDFLLAMA = 5; // offset: 32, xor const: 0
	IHHJNHHDNHN BDANKJGCPGB = 6; // offset: 52, xor const: 0
	ADIHDDCLCHK JNKOLKFGBCA = 4; // offset: 56, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 48, xor const: 0
}

message JFNICDNJIEH {
	uint32 MIKFNJGPFCA = 6; // offset: 36, xor const: 12279
	bool PGHAPDABGMI = 12; // offset: 32, xor const: 0
	uint32 IKDJDPPLNOM = 15; // offset: 40, xor const: 15019
	repeated uint32 KMJOONDNLAK = 2; // offset: 24, xor const: 0
	bool FLMEBFEHOAO = 7; // offset: 33, xor const: 0
}

// CmdId: 2025
message NGLOGBFLABF {
	HGIPNPJMOEO LBAFNNOJNJF = 4; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 775
}

// CmdId: 9792
message POOOEFKICNH {
}

enum LOBNMCKMOEF {
	LOBNMCKMOEF_LLFDOLEOFIJ = 0;
}

message HBFBNKAODPJ {
	uint32 AKEKFONOGGJ = 1; // offset: 24, xor const: 0
	uint32 AAFMNDENHLA = 2; // offset: 28, xor const: 0
}

// CmdId: 779
message LJECGPDJKME {
	CLIMDJKKBJC AKGIGOMDOOI = 7; // offset: 24, xor const: 0
}

message CHLPFGMHCEP {
	uint32 HJHFOICGOAC = 11; // offset: 24, xor const: 14716
}

// CmdId: 2642
message MLBCLIBMBEG {
	uint32 EKLGNOIEMLA = 9; // offset: 24, xor const: 14361
}

message FHAMMKPLLEM {
	string IHNHAMPGMNF = 1; // offset: 24, xor const: 0
}

message NMBFJKDEODI {
	repeated uint32 OMFCBFIPNON = 1; // offset: 16, xor const: 0
}

message CGLAPOKLOBO {
	bool FLHMKIGAHML = 8; // offset: 37, xor const: 0
	bool DOLPJGFGLEG = 7; // offset: 38, xor const: 0
	bool EJDJFKGJNGL = 4; // offset: 36, xor const: 0
	uint32 PMHDIDFIJGH = 3; // offset: 24, xor const: 0
	uint32 EKLGNOIEMLA = 2; // offset: 40, xor const: 0
	uint32 MDHJEKIIDIO = 1; // offset: 32, xor const: 0
	uint32 ENNMCGLNOJC = 5; // offset: 28, xor const: 0
	bool CBECMMPBLIF = 6; // offset: 39, xor const: 0
}

message PHNGMAKNFPM {
	LAEMDNOJPAI HLEAEPDDBLE = 2; // offset: 32, xor const: 0
	FGKJFCJILIL HCIKOCHONNP = 1; // offset: 16, xor const: 0
}

message OGBFNNLIPGM {
	repeated string ANOKOGNOHJP = 1; // offset: 24, xor const: 0
	string HGHIHOIMHBO = 2; // offset: 16, xor const: 0
}

// CmdId: 5499
message FLDADBBHAEM {
	uint32 CCHBCDDMCMO = 6; // offset: 32, xor const: 14649
	map<string, string> EJKEBPHDJKL = 9; // offset: 24, xor const: 0
}

message CHKPMOJAJMB {
	repeated int32 BLHMJBFEELA = 1; // offset: 16, xor const: 0
}

message LIBFBAEKFJI {
}

message MIMIIBIPDLF {
	repeated uint32 HPBOCFHKLKJ = 12; // offset: 16, xor const: 0
}

// CmdId: 1839
message EKIACGFIAGG {
	HFFBPENOCGG KLAGNMDOIIA = 12; // offset: 16, xor const: 0
	bool LJKHJACKMPM = 15; // offset: 32, xor const: 0
}

message IEMJJOBENGN {
	uint32 NMHNBHDEKBP = 2; // offset: 36, xor const: 10648
	uint32 NCAGHHFDAOG = 3; // offset: 40, xor const: 10870
	JAAOCOMFKHP ACEMBJPDCDK = 8; // offset: 24, xor const: 0
	int32 ENEGAHHFOPK = 10; // offset: 32, xor const: 12447
}

message OEJKBBEGJKO {
	bool MCHCELPMMBH = 4; // offset: 24, xor const: 0
}

message DMHJLCEBGDK {
	bool GLNCKDJPDPF = 2; // offset: 32, xor const: 0
	FGKJFCJILIL AKDCAPHBLDC = 1; // offset: 16, xor const: 0
}

message NOMLPMJIFAE {
	uint32 NJFOLJNDPGG = 1153; // offset: 184, xor const: 461
	bool BKFADLJNBPJ = 1259; // offset: 236, xor const: 0
	repeated MKAGHFLNNFM BEIAMGAKHOK = 2025; // offset: 136, xor const: 0
	repeated AKBJFOBGGAH OGNNGBPCBJE = 1689; // offset: 112, xor const: 0
	repeated int32 HILLEFPNONG = 1851; // offset: 120, xor const: 0
	bool LNMCFJCEMEG = 1848; // offset: 225, xor const: 0
	string CEAPCCAHHEP = 13; // offset: 80, xor const: 0
	repeated DHEOMBFKEAK FGDHMLCKLGK = 1214; // offset: 48, xor const: 0
	string FKLMJHMMOGJ = 907; // offset: 32, xor const: 0
	uint32 NHBOIAKPLAP = 899; // offset: 192, xor const: 5717
	int32 OIKAPOPDCHI = 1208; // offset: 240, xor const: 14481
	string IEOJLBEKEIH = 12; // offset: 152, xor const: 0
	string CJINLLKAPLJ = 1075; // offset: 88, xor const: 0
	int64 MOHHBACKBOK = 7; // offset: 176, xor const: 7360
	bool JIEECKLFIAL = 1633; // offset: 239, xor const: 0
	int32 OPGKHDPCBCK = 1; // offset: 256, xor const: 9811
	uint32 JFOEEJABPGO = 1368; // offset: 208, xor const: 9338
	uint32 IEKNEPOECJD = 66; // offset: 232, xor const: 4972
	uint32 PLFCIIAEIFC = 9; // offset: 188, xor const: 1583
	repeated AKBJFOBGGAH JAIPILJKHOG = 1603; // offset: 16, xor const: 0
	string IINMKHNAGJJ = 1163; // offset: 144, xor const: 0
	repeated uint32 BHOEIIMENLB = 976; // offset: 40, xor const: 0
	uint32 JCFGCPFEDPG = 6; // offset: 196, xor const: 13045
	bool ADAOKHLNODJ = 689; // offset: 238, xor const: 0
	int64 OGNMFJENENM = 1698; // offset: 168, xor const: 12385
	repeated uint32 BJHIABJBKPL = 1351; // offset: 24, xor const: 0
	string HGHPEKEKKCF = 11; // offset: 64, xor const: 0
	uint32 CDJBNNIFJNN = 533; // offset: 264, xor const: 198
	int64 DEHDJDKCBKG = 5; // offset: 216, xor const: 11965
	int64 FPAHDJMJFJK = 882; // offset: 200, xor const: 8653
	uint32 HAJDKPEANBC = 1722; // offset: 272, xor const: 8119
	string NADCMIFPCHO = 130; // offset: 160, xor const: 0
	bool EBNIHMMNEDN = 1343; // offset: 237, xor const: 0
	string LHKOOKDDFHL = 3; // offset: 56, xor const: 0
	bool GDMAOALJPNF = 131; // offset: 224, xor const: 0
	uint32 HCDJAJPBJAC = 1552; // offset: 252, xor const: 7507
	string FPBILJDMGNM = 10; // offset: 104, xor const: 0
	uint32 DDKOHDEIFCD = 4; // offset: 268, xor const: 3280
	uint32 ADFMCMNJDNE = 584; // offset: 248, xor const: 6367
	uint32 IBMGOFCCGIC = 2; // offset: 260, xor const: 1077
	string EHIDGGIBHKD = 15; // offset: 96, xor const: 0
	uint32 HBGFCOPAOEL = 8; // offset: 212, xor const: 5050
	string PJLJCJDABFK = 252; // offset: 72, xor const: 0
	uint32 EALAHMBHEPF = 14; // offset: 244, xor const: 12138
	uint32 BKCKNHJBNAP = 208; // offset: 228, xor const: 1512
}

message ENAIOPDHOIA {
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 24, xor const: 0
}

message HNIKEGPBMNI {
	uint32 AMIJIAHGPMC = 2; // offset: 28, xor const: 0
	NAAAFHNCPNG HLEAEPDDBLE = 1; // offset: 24, xor const: 0
}

message LKBOGOCMNPP {
	repeated HGEEALEMNCN MEFBBMAHEEE = 3; // offset: 64, xor const: 0
	repeated BJAEGDHNHOG CGPNMNGLCJD = 525; // offset: 40, xor const: 0
	uint32 HCDJAJPBJAC = 5; // offset: 88, xor const: 4977
	bool GBKNCJDLDJB = 13; // offset: 81, xor const: 0
	int32 OGPELMENNCK = 297; // offset: 104, xor const: 12537
	bool KBCNOLNEPLL = 11; // offset: 80, xor const: 0
	uint32 MNHMFPCHHDF = 2; // offset: 100, xor const: 6859
	bool BILIFPHPGHN = 12; // offset: 82, xor const: 0
	string CLFMJCHIOLC = 4; // offset: 48, xor const: 0
	uint32 LGKFFALECNB = 1; // offset: 124, xor const: 7790
	repeated HGEEALEMNCN LFHLOPEJAEO = 7; // offset: 32, xor const: 0
	int32 NHBOIAKPLAP = 9; // offset: 84, xor const: 9704
	uint32 BKCKNHJBNAP = 1530; // offset: 120, xor const: 9878
	string CFDDOHAILFB = 6; // offset: 16, xor const: 0
	uint32 FOEAJHDEEJP = 14; // offset: 92, xor const: 7499
	int64 KCDAILEMPKE = 8; // offset: 128, xor const: 11291
	string IINMKHNAGJJ = 15; // offset: 72, xor const: 0
	int64 MOHHBACKBOK = 200; // offset: 112, xor const: 13422
	string GOGPILGPPHC = 980; // offset: 56, xor const: 0
	uint32 NOHACIHIOPO = 10; // offset: 96, xor const: 13287
}

message PFEBLIMPHIN {
	repeated EMENOCOFGHN GGMHCEMGEEM = 5; // offset: 24, xor const: 0
}

// CmdId: 8030
message LKIFBBBFBMP {
	repeated FHJHFMCLGJM EMKPBGIPONA = 14; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 5497
	uint32 FMPLPNPNPDB = 2; // offset: 36, xor const: 7838
	uint32 KAICGHCMCCG = 4; // offset: 40, xor const: 5668
}

message AJENIKNKEDJ {
	FGKJFCJILIL BGGAGBMEIKM = 17; // offset: 88, xor const: 0
	FGKJFCJILIL NCHBOPJGKAJ = 9; // offset: 120, xor const: 0
	FGKJFCJILIL LIILGGMFCIC = 2; // offset: 48, xor const: 0
	FGKJFCJILIL OGGOEDGJBPN = 8; // offset: 40, xor const: 0
	FGKJFCJILIL FDGKLHAHFAE = 14; // offset: 128, xor const: 0
	FGKJFCJILIL PLHCKHILIND = 12; // offset: 64, xor const: 0
	FGKJFCJILIL LMOCOOJFGMO = 1; // offset: 104, xor const: 0
	FGKJFCJILIL AEGKANGPEHJ = 13; // offset: 112, xor const: 0
	FGKJFCJILIL FHLCFNNNOCF = 10; // offset: 96, xor const: 0
	FGKJFCJILIL NFHDFFMDLOP = 16; // offset: 152, xor const: 0
	FGKJFCJILIL BPGIOHDDCHP = 3; // offset: 136, xor const: 0
	FGKJFCJILIL BGLMMDDIJKP = 6; // offset: 16, xor const: 0
	FGKJFCJILIL BAMMJGEDCKK = 11; // offset: 56, xor const: 0
	FGKJFCJILIL IKCFFNLHKIH = 4; // offset: 32, xor const: 0
	FGKJFCJILIL PFMAFELIAEK = 15; // offset: 80, xor const: 0
	FGKJFCJILIL IANIIABLOIB = 5; // offset: 24, xor const: 0
	FGKJFCJILIL BPBBLCPEICC = 7; // offset: 144, xor const: 0
}

message PMIKJNHDMHH {
	LEHENCIPJIE MNEBNHOGLKF = 4; // offset: 104, xor const: 0
	bool ANFIPPGADMD = 13; // offset: 88, xor const: 0
	string NGFLBMOBPMJ = 8; // offset: 64, xor const: 0
	EGMFOFFEAKK HLEAEPDDBLE = 2; // offset: 92, xor const: 0
	repeated string AMLOFHFDIKN = 15; // offset: 48, xor const: 0
	string CKILDKNGINN = 7; // offset: 16, xor const: 0
	string JEBFNAIPOHF = 6; // offset: 32, xor const: 0
	string ACGLAKNPAFN = 5; // offset: 80, xor const: 0
	EDGCAIEHLHH JNPEOOCMNKC = 10; // offset: 56, xor const: 0
	string PECAFAPOHND = 1; // offset: 40, xor const: 0
	bool NBMIGHKEDOE = 17; // offset: 89, xor const: 0
	EDGCAIEHLHH HMFDILBMLDP = 9; // offset: 24, xor const: 0
	double NBNJEFMBCEE = 14; // offset: 96, xor const: 0
	bool FKMGHFBAFID = 12; // offset: 90, xor const: 0
	bool IONAIHFONID = 16; // offset: 91, xor const: 0
}

// CmdId: 9533
message NGPBLBINMAC {
	bool OEDAJBHDHCG = 1; // offset: 52, xor const: 0
	map<uint32, uint32> KIPNNJGCONB = 3; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 7; // offset: 48, xor const: 706
	repeated FLJACNGIIGH DDKIBLIBAJG = 8; // offset: 24, xor const: 0
	PMAONELDKME MAKPAFIJCDE = 15; // offset: 40, xor const: 0
}

message IKIJDHJEOHH {
	uint32 PBAJDPMEPCL = 1; // offset: 24, xor const: 0
	uint32 NNAADAHJMHH = 2; // offset: 28, xor const: 0
	uint32 BNHLELAHKIO = 3; // offset: 32, xor const: 0
}

// CmdId: 699
message CACNDKOMKJO {
	JAMIPMDCAJB APKAEIEAILJ = 4; // offset: 24, xor const: 0
}

message AHEKENOHLFF {
	int32 BKKABBFNGOC = 1; // offset: 24, xor const: 0
}

// CmdId: 5394
message CDKLGHIGNLB {
	int32 IHIGNMLCHDK = 10; // offset: 36, xor const: 6315
	repeated uint32 ONKIDHEMGMO = 5; // offset: 16, xor const: 0
	uint32 PLFCIIAEIFC = 13; // offset: 32, xor const: 6097
}

enum DELGLGEKIAN {
	DELGLGEKIAN_GRID_STAMINA_TYPE_NONE = 0;
	DELGLGEKIAN_GRID_STAMINA_TYPE_DEFAULT = 1;
	DELGLGEKIAN_GRID_STAMINA_TYPE_NO_STAMINA = 2;
	DELGLGEKIAN_GRID_STAMINA_TYPE_STAMINA = 3;
}

// CmdId: 9912
message FJNOGMNEPGD {
	uint32 KMKPPDICOKA = 13; // offset: 56, xor const: 1462
	uint64 HEJBMNAOJFL = 1; // offset: 40, xor const: 5030
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 48, xor const: 4634
	IDHJCGNHNGI CPEPJEPHPBD = 8; // offset: 32, xor const: 0
}

message CDNMAMNKEIH {
	int32 MPOEGEILPNO = 9; // offset: 24, xor const: 1715
}

message AMKKNFOBCEG {
	repeated string JJIEEGMOBJF = 1; // offset: 16, xor const: 0
	string BBDCJMMKGEA = 2; // offset: 24, xor const: 0
	repeated string GFBIEJLFPNH = 4; // offset: 40, xor const: 0
}

// CmdId: 2703
message JHPLIDJGJPF {
	repeated HBFBNKAODPJ IKHEMBLOMCN = 13; // offset: 16, xor const: 0
	repeated HBFBNKAODPJ GCJKKFDPABN = 7; // offset: 24, xor const: 0
}

// CmdId: 6059
message BGLKALGIAII {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 12802
}

message FMKEDHHCOIP {
	bool BOHDDJJOINB = 12; // offset: 24, xor const: 0
}

message DBBOHCHDINN {
	int32 EKLGNOIEMLA = 1; // offset: 24, xor const: 0
}

message MGHMCFELPDO {
	uint64 NCAGHHFDAOG = 6; // offset: 32, xor const: 12062
	INLFFDKGPNK AODMMCCECAP = 8; // offset: 16, xor const: 0
}

// CmdId: 6035
message JOMPNEKMFCF {
	uint32 MDHJEKIIDIO = 10; // offset: 28, xor const: 7059
	bool IFIKMHEILBL = 2; // offset: 24, xor const: 0
}

// CmdId: 7691
message DGJAIMCPLCG {
}

// CmdId: 7872
message EHHMLKELEAF {
	repeated LPIFPENKKJN OCLKLBCOGDO = 4; // offset: 40, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 48, xor const: 8787
	bool IJHGGGHDFDC = 10; // offset: 52, xor const: 0
	repeated KIOHPACMDIL KKCABCOKCLC = 5; // offset: 16, xor const: 0
	repeated HIMNKGHPKIJ JCHIPMCOHHE = 2; // offset: 24, xor const: 0
}

// CmdId: 7789
message JAMDOFLIIPE {
	uint32 FCBDMMLCGMD = 14; // offset: 24, xor const: 5098
}

// CmdId: 6346
message NACPGNAPFFK {
}

// CmdId: 5789
message HLOLNKNLGHI {
	string OOODKIGJBCN = 8; // offset: 16, xor const: 0
}

message CGNOCJFODJE {
	MEGKPCHHBBM AMDFPDIKMIJ = 1; // offset: 40, xor const: 0
	MEGKPCHHBBM HMJPCPJIEFD = 2; // offset: 16, xor const: 0
	repeated PGBFJLGLIFB HLFHAGCLKAP = 3; // offset: 32, xor const: 0
	int32 NMJENODBDLD = 4; // offset: 48, xor const: 0
}

// CmdId: 3477
message KEBINCDODAH {
	int32 IHIGNMLCHDK = 8; // offset: 48, xor const: 4434
	repeated IEGBEGDBNGE LFEIAELMBIG = 4; // offset: 32, xor const: 0
	repeated uint32 MIMLLFLPAJF = 15; // offset: 24, xor const: 0
	repeated uint32 DIOJBGCFNPP = 5; // offset: 40, xor const: 0
}

enum COBCMGEIKGI {
	COBCMGEIKGI_GGOCFFPKLBA = 0;
	COBCMGEIKGI_MNCCKFFBFFC = 1001;
	COBCMGEIKGI_JGOMNAFCNPC = 1004;
	COBCMGEIKGI_FPMCIMPEENE = 1008;
	COBCMGEIKGI_NKEEBDEFFML = 2003;
	COBCMGEIKGI_KPHPIAHDAJF = 2004;
	COBCMGEIKGI_IEOANKCOLKC = 2005;
	COBCMGEIKGI_BNPJDODEIJH = 2006;
	COBCMGEIKGI_FNICBFHLMJM = 2008;
}

message JBOACCJLKOC {
	LBICOCBNCEE MPMEKJLOABG = 1; // offset: 48, xor const: 0
	CLPGLOLILFF KBFBDIJGDGG = 2; // offset: 52, xor const: 0
	FGKJFCJILIL POENEFADBFH = 5; // offset: 24, xor const: 0
	FGKJFCJILIL ACEMBJPDCDK = 3; // offset: 40, xor const: 0
	FGKJFCJILIL HFMHKLKPJJN = 4; // offset: 32, xor const: 0
}

message MGIOKECIMBC {
	IFGDJNNPCAN CPOGPPICDJO = 5; // offset: 32, xor const: 0
	HBFBNKAODPJ HFOCBHBFPPJ = 15; // offset: 24, xor const: 0
	IFGDJNNPCAN FGALEHFDFPD = 11; // offset: 16, xor const: 0
}

// CmdId: 401
message IHAOILPHNIG {
	repeated uint32 OPFJGPEOIJF = 9; // offset: 32, xor const: 0
	uint32 BCMPKLAOIHK = 10; // offset: 60, xor const: 11396
	uint32 LAACPPOOIBG = 15; // offset: 48, xor const: 8462
	uint32 IODCLDBDCPD = 14; // offset: 40, xor const: 3979
	LAMNOAJHOLI NODBAHCCOBD = 3; // offset: 56, xor const: 0
	repeated HOJAILAHCMA KINLLKOHJON = 2; // offset: 24, xor const: 0
	uint32 KBKLJLLBLCD = 11; // offset: 44, xor const: 888
	uint32 NBNJEFMBCEE = 1; // offset: 52, xor const: 3050
}

enum NPBOLNEDEAO {
	NPBOLNEDEAO_BY_PREMISE = 0;
	NPBOLNEDEAO_NOT_BY_PREMISE = 1;
}

message EKDLCKPMCHB {
	float NLDHBILGNKA = 6; // offset: 24, xor const: 0
	bool JCNJNFCMKEG = 8; // offset: 28, xor const: 0
}

// CmdId: 6741
message GAPNGHHNEDA {
	uint32 AMHBBOAFGFC = 12; // offset: 60, xor const: 4545
	bool EELEJJPGOHO = 6; // offset: 53, xor const: 0
	bool OIPKIACBCAA = 13; // offset: 52, xor const: 0
	int32 EAFPEPHBMKP = 4; // offset: 48, xor const: 5135
	uint32 IIIGDHJPFMI = 10; // offset: 32, xor const: 13351
	uint32 OFOHMECNCIO = 7; // offset: 56, xor const: 3122
	string OFPODKIOKBK = 2; // offset: 24, xor const: 0
	uint64 DIMEDPILOOA = 5; // offset: 40, xor const: 5603
	int32 HGLMKIBNFMC = 15; // offset: 36, xor const: 392
}

// CmdId: 5023
message BMPCPLGLIBD {
	uint32 NPEJBOLJENA = 7; // offset: 32, xor const: 5360
	uint32 AGAKIKAEHHB = 5; // offset: 36, xor const: 12473
	string MCAPKBCEHHM = 4; // offset: 24, xor const: 0
	uint32 HPJJFBEFFPI = 1; // offset: 40, xor const: 7916
}

// CmdId: 1182
message CNIJHMPCLKG {
	repeated uint32 FBEALPHEPEN = 9; // offset: 24, xor const: 0
}

// CmdId: 6521
message DPBJJAOBLHA {
	uint64 AEDAEPKDOAL = 6; // offset: 56, xor const: 772
	uint32 KMKPPDICOKA = 15; // offset: 40, xor const: 13412
	uint64 HEJBMNAOJFL = 2; // offset: 48, xor const: 5880
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 16, xor const: 0
	OEDFAKGEFGJ CPEPJEPHPBD = 14; // offset: 32, xor const: 0
}

message PPJPFHFLOAB {
	uint32 HLEAEPDDBLE = 4; // offset: 24, xor const: 14103
	uint32 KLNNHOPCNIP = 13; // offset: 28, xor const: 11474
}

message HONCMAFOEHG {
	int32 HLDGILCCDOJ = 13; // offset: 32, xor const: 10467
	string NHEMPPCFLEN = 2; // offset: 16, xor const: 0
}

// CmdId: 1259
message NIKANLAACBK {
	FHJHFMCLGJM GGPPMELMEEM = 12; // offset: 24, xor const: 0
}

message KNDEEEODDAE {
	float AEIHIBLACCM = 10; // offset: 32, xor const: 0
	uint32 NCAGHHFDAOG = 13; // offset: 36, xor const: 3570
	int32 MHIHFGKDOMB = 11; // offset: 24, xor const: 890
	float EFJPPJJFNJM = 8; // offset: 28, xor const: 0
}

// CmdId: 719
message FAMJDNBNEJE {
	repeated int32 NMAGCIFNFKG = 14; // offset: 24, xor const: 0
}

message PJCKLIFMGCI {
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 24, xor const: 0
}

// CmdId: 7650
message MPKFBBPCOKF {
}

message DJKELFFPCPP {
	repeated uint32 EHKFBDFKCLL = 10; // offset: 24, xor const: 0
}

message PLIJIFGIGIM {
	ICIHPNPIBHC PPGDOGELPIL = 1; // offset: 24, xor const: 0
}

message LDHKJGEMKIO {
	bool BGGFMPMLOHI = 1; // offset: 44, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 2; // offset: 40, xor const: 0
	FGKJFCJILIL MENKJMFJMHG = 3; // offset: 24, xor const: 0
	repeated FGKJFCJILIL MJCMAAPBHLG = 4; // offset: 16, xor const: 0
}

enum HLCBBNHEFBC {
	HLCBBNHEFBC_NAOBPJOLBBF = 0;
	HLCBBNHEFBC_JHMEFBLJBFO = 1;
	HLCBBNHEFBC_AHAGOCEDMBO = 2;
	HLCBBNHEFBC_FHCPGOIJCOK = 3;
	HLCBBNHEFBC_PFIPIOEIGHK = 4;
	HLCBBNHEFBC_CPLHDAKDEEG = 5;
}

message AHJEGFPMLDG {
	FGKJFCJILIL KDMLCPPFJNH = 3; // offset: 40, xor const: 0
	HollowEntityType DNAENEJOADB = 10; // offset: 48, xor const: 0
	FGKJFCJILIL JOBGGPFOKHP = 7; // offset: 16, xor const: 0
	ChessUIControlType KLNHNJLOLJC = 1; // offset: 56, xor const: 0
	ChessUIControlType PMOEINGBKCB = 5; // offset: 52, xor const: 0
	ChessUIIconType FDBGIBHCPOK = 6; // offset: 60, xor const: 0
	ChessUIColor MIHBIKHOAJH = 8; // offset: 68, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 9; // offset: 32, xor const: 0
	ChessUIIconType JJNKMIFPNIO = 2; // offset: 72, xor const: 0
	ChessUIColor IMDLKJJEGCL = 4; // offset: 64, xor const: 0
}

message BHHIFIMCLCL {
}

// CmdId: 8374
message BDEHBNJOEFO {
	uint32 IBCHINNIKJO = 10; // offset: 40, xor const: 13417
	repeated string LJHHDLEMAJN = 8; // offset: 16, xor const: 0
	string DBOACCIJPDL = 1; // offset: 24, xor const: 0
}

// CmdId: 725
message APPPLJENHNK {
	uint32 EKLGNOIEMLA = 10; // offset: 24, xor const: 9279
}

message AHLMPMLHGMA {
}

message KOCMIGAPLOP {
	int32 JMELFDAHFCJ = 6; // offset: 24, xor const: 13567
}

// CmdId: 1743
message CBJJBPGBDNP {
}

enum GOCGBIPBPDJ {
	GOCGBIPBPDJ_NJMNKIHONGM = 0;
	GOCGBIPBPDJ_HKGFFMLOFDJ = 1;
	GOCGBIPBPDJ_GNNJBJNHFFN = 2;
	GOCGBIPBPDJ_BKKLCALPMGE = 4;
}

// CmdId: 5294
message EIMIOLLFHFB {
	PNHMKMECKBM LKKJHFPKECH = 3; // offset: 32, xor const: 0
	PCFEPJDNMBM FJJLFABNKGG = 10; // offset: 16, xor const: 0
}

// CmdId: 7694
message PGPKDAGJNGC {
	string JJOBDEFMGEA = 2; // offset: 24, xor const: 0
	uint32 AMIJIAHGPMC = 8; // offset: 32, xor const: 7778
}

message JPABKIDDHPK {
	repeated uint32 FHGKKAEOIDO = 14; // offset: 24, xor const: 0
}

message OJKILOGDPNP {
	enum HGGNDEPHENI {
		HGGNDEPHENI_JJMFODJNBAI = 0;
		HGGNDEPHENI_GCOIMBBIGGF = 1;
		HGGNDEPHENI_ODGDLMENBKF = 2;
		HGGNDEPHENI_HDENNJOABEE = 3;
	}

	repeated uint32 DMMFACJJJLF = 2; // offset: 24, xor const: 0
	OJKILOGDPNP.HGGNDEPHENI BGFCGLNNGGE = 1; // offset: 32, xor const: 0
}

enum FCJHDJECBLH {
	FCJHDJECBLH_FGNBKPDOPLM = 0;
}

message GNPOHDANEGH {
	uint32 DKEPGACINMM = 4; // offset: 24, xor const: 13318
	uint64 KCFODGNIJLB = 8; // offset: 32, xor const: 1776
}

message NEJEKCEPBIC {
}

// CmdId: 5782
message BLPDCBFAIEB {
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 10; // offset: 48, xor const: 13900
	JEHFLBFDINF CPEPJEPHPBD = 14; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 3; // offset: 40, xor const: 5681
	uint32 KMKPPDICOKA = 9; // offset: 56, xor const: 10248
}

message PIJJIOODIIB {
}

// CmdId: 5277
message JIEMECMANGA {
	repeated uint32 GFBFEKAJDIG = 8; // offset: 16, xor const: 0
}

message BBCNAPPHLJN {
	repeated uint32 MFCDIEAHPJM = 14; // offset: 32, xor const: 0
	repeated uint32 FNLCBCADKIL = 19; // offset: 56, xor const: 0
	OGHHEDDOFHL ILKAELPDOJO = 8; // offset: 96, xor const: 0
	map<uint32, uint32> ENNIIAIBLDD = 2; // offset: 128, xor const: 0
	repeated string ONANGIHNEGN = 17; // offset: 120, xor const: 0
	repeated string FAJLMBGMMEA = 20; // offset: 64, xor const: 0
	repeated FFKGGJEDKGJ OPJBPHHHHKL = 1; // offset: 104, xor const: 0
	repeated HFFBPENOCGG KIOFHPMJAIO = 9; // offset: 24, xor const: 0
	map<uint32, uint32> LAJECCNCELM = 16; // offset: 72, xor const: 0
	repeated uint32 HDNPMDHHAOH = 15; // offset: 16, xor const: 0
	repeated AOOOFFJDBEM ANOPNEKIOOA = 4; // offset: 48, xor const: 0
	MNKEPKOAGFE MONCJFCMLAO = 12; // offset: 80, xor const: 0
	uint32 ONAFFEPBJFK = 13; // offset: 152, xor const: 0
	bool PJGPHEBFPML = 18; // offset: 157, xor const: 0
	repeated uint32 IMLMFMGKLCC = 5; // offset: 40, xor const: 0
	repeated uint32 MPHCDGCACGK = 11; // offset: 112, xor const: 0
	repeated uint32 ECCNIDJOHFF = 3; // offset: 136, xor const: 0
	map<uint32, uint32> AJHKCHFNHAL = 6; // offset: 88, xor const: 0
	bool PCGFEFAEPCK = 7; // offset: 156, xor const: 0
}

message MGDEKIKDGOE {
	EDGCAIEHLHH CKBOJACIJDI = 3; // offset: 24, xor const: 0
	string DDMIIIEJHPE = 2; // offset: 16, xor const: 0
	ACOGLKILALC HLEAEPDDBLE = 1; // offset: 40, xor const: 0
}

// CmdId: 8603
message JKCKPPEKHFL {
	uint32 OJHKCKCKOLE = 15; // offset: 24, xor const: 14047
}

message LJKIOCEAOOE {
	repeated uint32 GCJMOJNMMBN = 12; // offset: 16, xor const: 0
}

message GLINLJHKKKD {
}

message NEJFIMHOINK {
	uint32 ANBMHPHJOIO = 1; // offset: 24, xor const: 0
}

message KIPGCAMBLCM {
	int32 JJPMDIMPANI = 10; // offset: 48, xor const: 13795
	int32 DKCOLLHBKNJ = 1; // offset: 44, xor const: 13796
	repeated ENAIPOANMAN NFFFMGBAJDE = 9; // offset: 16, xor const: 0
	uint64 IPKODLOAIJP = 14; // offset: 32, xor const: 9849
	int32 BMFAIMFHKCO = 8; // offset: 40, xor const: 12348
}

// CmdId: 4262
message MLLKLMGJBOM {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 5701
}

// CmdId: 1378
message FNEDDKPNOKN {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 10110
}

// CmdId: 6231
message FBMFGCEBHKA {
	uint32 HAJDKPEANBC = 3; // offset: 32, xor const: 8045
	repeated uint32 BGPKBHEAMFB = 12; // offset: 24, xor const: 0
}

enum DJIHLKNEKCK {
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_NONE = 0;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_LEVEL = 1;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_CURRENCY = 2;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_DURABILITY = 3;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_ENERGY = 4;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_FEVER = 5;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_DURABILITY_LIMIT = 6;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_ENERGY_LIMIT = 7;
	DJIHLKNEKCK_HACKER_GAME_PARAM_TYPE_FEVER_LIMIT = 8;
}

message BOCMBNOADMB {
	uint32 OHCIOPAIBKK = 2; // offset: 48, xor const: 0
	CFDOAKNPIAN CHGCBDFNDGP = 6; // offset: 40, xor const: 0
	CFDOAKNPIAN FJODEBCOKKJ = 5; // offset: 16, xor const: 0
	CFDOAKNPIAN KBMJBGBBFIE = 4; // offset: 24, xor const: 0
	uint32 IPJGGIAHGGE = 1; // offset: 52, xor const: 0
	uint32 IHIEIMELEEH = 3; // offset: 56, xor const: 0
}

message FDLHCDMKEPF {
	HollowEntityType DNAENEJOADB = 11; // offset: 32, xor const: 0
	bytes IOIPJPNLNKF = 2; // offset: 16, xor const: 0
}

// CmdId: 4237
message HKJIFCNGOEL {
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 4; // offset: 48, xor const: 11155
	uint32 KMKPPDICOKA = 1; // offset: 40, xor const: 10773
	KOEGGPMAHIM CPEPJEPHPBD = 3; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 56, xor const: 4148
}

enum BJKMJPKMCKH {
	BJKMJPKMCKH_DIJPLEHDADG = 0;
}

message DEOKGFOPEDB {
	repeated int32 PHNPGKEHPAO = 12; // offset: 16, xor const: 0
	DHJOJLIONBI MNMLFHFJCIB = 15; // offset: 32, xor const: 0
	uint32 KGBEPDABMJE = 14; // offset: 40, xor const: 14209
}

// CmdId: 7717
message GOFFHPAFNKM {
	PMAMMEEBNAD CPEPJEPHPBD = 1; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 48, xor const: 1742
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 12039
	uint64 HEJBMNAOJFL = 14; // offset: 56, xor const: 6555
}

message AKAPOEHPNFN {
	KCLMMGAONPB IFIOILMDBAO = 15; // offset: 48, xor const: 0
	OBIGNMBGBKM NNHPDFGKIGB = 13; // offset: 40, xor const: 0
	KHHLFHHJONB DEDIMCANELO = 14; // offset: 16, xor const: 0
	AJPOKNCKCCL IMKPPIOIKPB = 7; // offset: 24, xor const: 0
}

message PIOHNMEFJIA {
	EDINMFFNLBN PBOAMDEBIGO = 5; // offset: 28, xor const: 0
	uint32 EKLGNOIEMLA = 3; // offset: 24, xor const: 1662
}

message AFEMKBIAMEF {
	uint32 CBDBIPMJEPJ = 11; // offset: 32, xor const: 2665
	uint32 BEKFLJGFLJD = 12; // offset: 28, xor const: 11782
	uint32 HJHFOICGOAC = 7; // offset: 24, xor const: 10422
}

message BPHJHJIJDPC {
	repeated uint32 KCOAKMDOKEB = 13; // offset: 24, xor const: 0
}

// CmdId: 6916
message CBPEDBDCIDO {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 8672
}

message DOOLKHIDOFN {
	MDLABLBJOND DMIMGNLILLP = 1; // offset: 24, xor const: 0
}

message DNCJIENKBAJ {
	FGKJFCJILIL LJEHCDLJOIG = 2; // offset: 24, xor const: 0
	string NMHNHMNIHLL = 1; // offset: 32, xor const: 0
}

// CmdId: 4703
message HMAALBBCJOF {
	bool KCBFCPPPMOG = 8; // offset: 32, xor const: 0
	HBDCMALHDBF CHLDGHLJAPK = 15; // offset: 16, xor const: 0
}

message CKBEKELLHKN {
	repeated DDNJFBPLHBO KHCNECFENAG = 6; // offset: 16, xor const: 0
}

enum KMEMAAEOPJK {
	KMEMAAEOPJK_ANAFHMKIKFJ = 0;
	KMEMAAEOPJK_DGKGLPCIIAL = 1;
}

// CmdId: 7091
message DLJLBAOFHEF {
	uint32 EKLGNOIEMLA = 1; // offset: 24, xor const: 12424
}

// CmdId: 3232
message BMCNGDOLEOE {
	int32 JFOEEJABPGO = 14; // offset: 24, xor const: 6660
}

// CmdId: 4665
message GKNPNGCFDEO {
	uint32 AMIJIAHGPMC = 2; // offset: 28, xor const: 15447
	uint32 BBPJKDPGIPG = 5; // offset: 24, xor const: 8960
}

message JOOCGGEDCIC {
	bool AJFIALNFMBP = 5; // offset: 48, xor const: 0
	EDGCAIEHLHH EEHLAOCPGDB = 2; // offset: 24, xor const: 0
	uint32 OPBPINPHDOL = 3; // offset: 40, xor const: 0
	uint32 IJAKNKECGKG = 4; // offset: 44, xor const: 0
	repeated EDGCAIEHLHH EJDEKFCCENA = 1; // offset: 16, xor const: 0
}

// CmdId: 1162
message CDLLNOOFABO {
	uint64 HEJBMNAOJFL = 8; // offset: 48, xor const: 5868
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 2282
	BHGALMOMDKG CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 8442
}

enum EndHollowMiniGameType {
	END_HOLLOW_MINI_GAME_TYPE_END_HOLLOW_MINI_GAME_TYPE_NONE = 0;
	END_HOLLOW_MINI_GAME_TYPE_END_HOLLOW_MINI_GAME_TYPE_FAIL = 1;
	END_HOLLOW_MINI_GAME_TYPE_END_HOLLOW_MINI_GAME_TYPE_SUCC = 2;
	END_HOLLOW_MINI_GAME_TYPE_END_HOLLOW_MINI_GAME_TYPE_REBEGIN = 3;
	END_HOLLOW_MINI_GAME_TYPE_END_HOLLOW_MINI_GAME_TYPE_GIVE_UP = 4;
}

message EHEEHJMDHPD {
	IMJIJLIDHEC HLADBGMOMGH = 10; // offset: 16, xor const: 0
	GEHKNLCAAOE AADKLGBDEFO = 13; // offset: 32, xor const: 0
	uint32 BKPPOOKFECD = 3; // offset: 40, xor const: 4974
}

message OADIJJFOGJP {
	map<uint32, GOEPMDGKCPN> BOFEMMNPMAN = 1; // offset: 40, xor const: 0
	AKAPOEHPNFN IFIINCJGJGH = 15; // offset: 24, xor const: 0
	map<uint32, GOEPMDGKCPN> OLOCAEMOAGI = 13; // offset: 32, xor const: 0
}

enum BCGDAFBAGFD {
	BCGDAFBAGFD_JBOJKCNMMGH = 0;
	BCGDAFBAGFD_ELNIHDHGLOC = 1;
	BCGDAFBAGFD_EMFPKILICNO = 2;
	BCGDAFBAGFD_AIOALOMHMCB = 3;
	BCGDAFBAGFD_IDILLAECMEL = 4;
	BCGDAFBAGFD_LENIPFIOODO = 5;
}

message LDEFICMJHBH {
	FGKJFCJILIL OEAKLPENHNC = 1; // offset: 16, xor const: 0
}

message INBHIPGHCND {
	repeated uint32 HDJGMLAJGEK = 4; // offset: 24, xor const: 0
	repeated EIDGMALNGEI CHBFAMKMMIE = 5; // offset: 40, xor const: 0
	repeated uint32 NHNKJBCBPNA = 8; // offset: 112, xor const: 0
	repeated PMFLGCCMCPP KIJKNELJFOD = 15; // offset: 104, xor const: 0
	repeated BGAABBCIEND IKIEKOFDNHA = 1; // offset: 88, xor const: 0
	repeated uint32 JJGNCHDBIOC = 14; // offset: 32, xor const: 0
	repeated uint32 NILJBPGBHNP = 10; // offset: 16, xor const: 0
	repeated uint32 BGMCABPDBLF = 2; // offset: 64, xor const: 0
	repeated uint32 PMJKEHFGLNM = 12; // offset: 80, xor const: 0
	repeated uint32 BLBGDHFJKPJ = 13; // offset: 72, xor const: 0
	repeated uint32 JAJLBEJJPBK = 11; // offset: 96, xor const: 0
	repeated uint32 OKLMOLOLNFH = 6; // offset: 48, xor const: 0
}

// CmdId: 6473
message KPGFMHMDDEM {
	PDMKMHLLPHI EILDHJJLINK = 13; // offset: 16, xor const: 0
}

message PJJEKOEAJKE {
	FGKJFCJILIL HEJNMINGDKJ = 1; // offset: 24, xor const: 0
}

message EKIFNKJOKFF {
	FGKJFCJILIL ACEMBJPDCDK = 3; // offset: 32, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 4; // offset: 40, xor const: 0
	HollowEntityType HCOBCBNNPLD = 2; // offset: 60, xor const: 0
	FGKJFCJILIL JKHCMCDKJEG = 1; // offset: 24, xor const: 0
	string IDJGGFMIMIE = 5; // offset: 16, xor const: 0
	IHHJNHHDNHN DPFOGDHCHND = 6; // offset: 56, xor const: 0
}

// CmdId: 1979
message EGCLKAHKGDH {
	uint32 CONOAJMMHMB = 1; // offset: 28, xor const: 14367
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 1030
}

message LDBAGKFFGAE {
	FGKJFCJILIL MHINMINPONI = 4; // offset: 16, xor const: 0
	FGKJFCJILIL IIIGDHJPFMI = 5; // offset: 24, xor const: 0
	repeated string DEBMKPIJBNB = 1; // offset: 40, xor const: 0
	LMCILCCLNEJ DJJHAJNAEIK = 3; // offset: 48, xor const: 0
	bool IELHFNJBHLG = 2; // offset: 52, xor const: 0
}

message BIODMMPDDEL {
	bool FBJAPHDGGJH = 1; // offset: 24, xor const: 0
}

// CmdId: 5472
message KFECMOIJIOL {
	int32 JLNKGEOEFLE = 15; // offset: 24, xor const: 219
}

message PJMAPNKKIDE {
	bool PPKOKAKLAIN = 12; // offset: 24, xor const: 0
}

// CmdId: 381
message ABANGGJHMFD {
	uint32 BCCEOLDLIFA = 2; // offset: 44, xor const: 15442
	uint32 LDJADGOOKIJ = 12; // offset: 40, xor const: 14464
	repeated uint32 EBMKIPGJOOL = 7; // offset: 24, xor const: 0
	repeated uint32 PINPDKKCOMK = 11; // offset: 16, xor const: 0
}

message FEMFOBPNLDK {
	int32 ABNALIPAMAB = 6; // offset: 24, xor const: 6708
}

message MGBCFHGOKGI {
	NKNKJIOBOEA GCCPOBFDFLI = 5; // offset: 16, xor const: 0
	uint32 AMHBBOAFGFC = 1; // offset: 48, xor const: 0
	EFHPHHHKEBC FCGOGKDNNBL = 4; // offset: 40, xor const: 0
	DLJPDINFDFE OEEBEDIBLJP = 6; // offset: 24, xor const: 0
	bool KLHGHEGILOA = 2; // offset: 44, xor const: 0
	bool DCPCBLJHHFM = 3; // offset: 45, xor const: 0
}

enum EGMFOFFEAKK {
	EGMFOFFEAKK_TRIGGER_POSITION = 0;
	EGMFOFFEAKK_PLAYER = 1;
	EGMFOFFEAKK_CENTER = 2;
	EGMFOFFEAKK_CUSTOM_BOUND = 3;
	EGMFOFFEAKK_BACK = 4;
}

enum DGEBOGDHICM {
	DGEBOGDHICM_INDENGGDGKE = 0;
	DGEBOGDHICM_ANOLMGKPNCJ = 1;
	DGEBOGDHICM_IEBGPHIAKIJ = 2;
}

message IMCMMOPADIP {
	map<uint32, BILJPKBGACD> AFCGCLOELLC = 1; // offset: 16, xor const: 0
}

enum GONMALNEEDK {
	GONMALNEEDK_SCRIPT_BUDDY_TYPE_ALL = 0;
	GONMALNEEDK_SCRIPT_BUDDY_TYPE_BATTLE = 1;
	GONMALNEEDK_SCRIPT_BUDDY_TYPE_SUPPORT = 2;
}

// CmdId: 3854
message LIFDLMJMOOK {
	uint32 AHDMDKJCMFE = 10; // offset: 24, xor const: 9417
}

// CmdId: 3294
message HNPIAPFBLFP {
	uint32 AKEKFONOGGJ = 12; // offset: 32, xor const: 1821
	uint32 HONFNLBAIAN = 5; // offset: 36, xor const: 8418
	repeated FIEKHMIAJCO FLIGKKGIEEH = 1; // offset: 24, xor const: 0
}

message DFPBMDFINIC {
	uint32 CLHNDIJPNOI = 13; // offset: 84, xor const: 8889
	repeated uint32 PIICJACBOPJ = 10; // offset: 24, xor const: 0
	repeated uint32 DLBHDMFHKGJ = 2; // offset: 32, xor const: 0
	uint32 BCDFMMCFFEM = 3; // offset: 60, xor const: 5873
	bool DLFKLHHCOJA = 9; // offset: 80, xor const: 0
	repeated uint32 MHOOODIDOEN = 5; // offset: 48, xor const: 0
	int32 GOFJKOBODPG = 14; // offset: 56, xor const: 12003
	repeated uint32 HGEPHANHLBG = 1; // offset: 40, xor const: 0
	int64 LBHOJDGKNBH = 6; // offset: 64, xor const: 15850
	int64 GPGEFHLNEGD = 15; // offset: 72, xor const: 11176
	bool KGCLIDHIBNH = 11; // offset: 81, xor const: 0
}

message AFGOOFEGJLN {
	uint32 FHFBFBKIDGI = 2; // offset: 44, xor const: 0
	uint32 ECGHGCACHMI = 1; // offset: 40, xor const: 0
	string BPKMEHGDOJP = 4; // offset: 16, xor const: 0
	string NHEMPPCFLEN = 3; // offset: 32, xor const: 0
}

// CmdId: 9844
message ENIKILJKACO {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 14407
}

// CmdId: 3097
message DGJIKIKJEKE {
	uint32 KEABELIIBNC = 4; // offset: 28, xor const: 8437
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 2293
}

enum IAOLGBGEDPJ {
	IAOLGBGEDPJ_FNNLEDBAPBN = 0;
	IAOLGBGEDPJ_LEHPLELBEBP = 1;
	IAOLGBGEDPJ_GCDPPGLNPCD = 2;
	IAOLGBGEDPJ_OEBEPJNMJGH = 3;
	IAOLGBGEDPJ_HOAKDCMCKPI = 4;
	IAOLGBGEDPJ_IIGMEMHBIGH = 5;
}

message OEHDKHHAMHO {
}

message BCAALKNPAKE {
	FGKJFCJILIL MDDJMCEJKIF = 1; // offset: 16, xor const: 0
	bool LKEENIDDLCK = 2; // offset: 32, xor const: 0
}

message BNJBECCAAIE {
	POBBNAODCDI HFPEBMAHCEA = 4; // offset: 40, xor const: 0
	FGKJFCJILIL ICKEMDCGCJD = 2; // offset: 48, xor const: 0
	string FHIIIPELENE = 1; // offset: 24, xor const: 0
	repeated KJAOJGLANFL DKNJIHKFFHN = 3; // offset: 32, xor const: 0
}

message ADHFIFIDKPC {
	bool HMNJMGODALO = 1; // offset: 24, xor const: 0
	bool HMPHHFJAIHF = 2; // offset: 25, xor const: 0
}

enum FJFHIHFHNLE {
	FJFHIHFHNLE_KPFPBNNCHIF = 0;
	FJFHIHFHNLE_BGJCAGDDJFN = 2003;
}

// CmdId: 1385
message DFBLKHCHNEC {
	int32 OEBCJOHGHCK = 14; // offset: 36, xor const: 12874
	int32 CEHJOKIJLIN = 8; // offset: 32, xor const: 2511
	int32 JMEDEACJNDA = 1; // offset: 40, xor const: 14245
	map<uint32, int32> PMFHKDNNKCE = 9; // offset: 24, xor const: 0
}

// CmdId: 9638
message ELEMLMGKGOO {
	uint32 NNEKEEFEKAG = 15; // offset: 24, xor const: 6094
	CLPGLOLILFF MAMIMKMLMDH = 6; // offset: 32, xor const: 0
	uint32 DCIGFJKJBKL = 14; // offset: 28, xor const: 6996
}

message BEKIAHNECIH {
	map<string, int32> MJLEJNJHLON = 2; // offset: 24, xor const: 0
	int32 OKLMBMKDNEL = 1; // offset: 32, xor const: 0
}

message GIIBOCACPDK {
	string MIBLHGCBGPD = 6; // offset: 40, xor const: 0
	bool LJCPBCKEEDH = 4; // offset: 72, xor const: 0
	repeated float FPFGONHMBOP = 7; // offset: 32, xor const: 0
	IGHFDHOBEOH NNANBCMLFBL = 3; // offset: 48, xor const: 0
	BCPFHENIDCD PBOAMDEBIGO = 1; // offset: 56, xor const: 0
	FOFHBENHIOC DIONHPBOEKB = 2; // offset: 16, xor const: 0
	uint64 NIJLEDIPBGF = 5; // offset: 64, xor const: 0
}

message IHCMGJJNKCK {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 24, xor const: 0
	FGKJFCJILIL JGGEJOPBDGJ = 5; // offset: 40, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 48, xor const: 0
	FGKJFCJILIL FPBOFDFLDGE = 3; // offset: 32, xor const: 0
	HollowEntityType IPLGNDJBFFE = 4; // offset: 52, xor const: 0
}

// CmdId: 8333
message HHDOFBIHOLK {
	uint32 NJFOLJNDPGG = 9; // offset: 24, xor const: 7830
	int32 IHIGNMLCHDK = 2; // offset: 28, xor const: 16016
}

// CmdId: 7324
message PNDMJHOFIGK {
}

enum POOONOPHFJA {
	POOONOPHFJA_AMHMKNEJCFF = 0;
	POOONOPHFJA_JJOIAGAAJKI = 1;
	POOONOPHFJA_EMIIHDBHCOE = 2;
	POOONOPHFJA_OJLMPDEJNBC = 3;
	POOONOPHFJA_BGEPFGBADID = 4;
	POOONOPHFJA_HHALDBOMFAG = 5;
	POOONOPHFJA_KJBFAFGGDII = 6;
	POOONOPHFJA_LBGGCLGLHNM = 7;
	POOONOPHFJA_KLPONFKLJAJ = 8;
	POOONOPHFJA_INAAPAPONFB = 9;
	POOONOPHFJA_FMKHBHIHMLE = 10;
	POOONOPHFJA_BHEINFIOOBL = 11;
	POOONOPHFJA_LKCIPDEPPIN = 12;
	POOONOPHFJA_EBBLGPCKMHJ = 13;
	POOONOPHFJA_LNBAPLCDEKD = 14;
	POOONOPHFJA_BAHLJEFCKEJ = 15;
	POOONOPHFJA_FIHHNAPNENA = 16;
	POOONOPHFJA_LNPGBLDDIPB = 17;
	POOONOPHFJA_LGLIIJJCFNC = 18;
	POOONOPHFJA_NAPPIKKNNDP = 19;
	POOONOPHFJA_EPDBDEIGGMF = 20;
	POOONOPHFJA_IEPHPIFAHNE = 21;
	POOONOPHFJA_HEOFLLAMEGG = 22;
	POOONOPHFJA_GICLBMNGMNH = 23;
	POOONOPHFJA_FKLINLLMAGN = 24;
	POOONOPHFJA_HHFBDIEGADC = 25;
	POOONOPHFJA_KJFCHPDGHEN = 100;
}

message JCBBOKHIDHH {
	repeated IMJIJLIDHEC GACFBIFFJOH = 1; // offset: 24, xor const: 0
}

// CmdId: 5969
message ODKOPLFABPF {
	uint64 AEDAEPKDOAL = 6; // offset: 40, xor const: 1900
	uint32 KMKPPDICOKA = 2; // offset: 48, xor const: 15725
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 24, xor const: 0
	LNODHGJPJIO CPEPJEPHPBD = 10; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 13; // offset: 56, xor const: 6278
}

enum EIHKPIPHCFF {
	EIHKPIPHCFF_PPMEOCAJNCM = 0;
	EIHKPIPHCFF_CMKJDBGCAGE = 1;
	EIHKPIPHCFF_NBIAKLNPDDE = 2;
	EIHKPIPHCFF_HBFEGJDPAAE = 3;
	EIHKPIPHCFF_DMFEOHPIMLD = 4;
	EIHKPIPHCFF_PKJKEGBMJGA = 5;
	EIHKPIPHCFF_OLFGODNBAID = 6;
	EIHKPIPHCFF_FOENIJNBJFM = 7;
	EIHKPIPHCFF_OPMKDCDFELF = 8;
}

enum JAPEIOHEMJG {
	JAPEIOHEMJG_PLAYER_TYPE_ALL = 0;
	JAPEIOHEMJG_TEAM_CHARACTER_1 = 1;
	JAPEIOHEMJG_TEAM_CHARACTER_2 = 2;
	JAPEIOHEMJG_TEAM_CHARACTER_3 = 3;
}

message BMEJIIJLNEF {
	repeated OGFMILIPINN JNAHBDBEPNN = 14; // offset: 16, xor const: 0
	repeated uint32 DLNEMMDJDCK = 4; // offset: 48, xor const: 0
	repeated uint32 MLMPMFBOIND = 11; // offset: 32, xor const: 0
	KIICEKGINPC AFBCPAFLGMA = 15; // offset: 40, xor const: 0
}

message NBIGECCJOLO {
	FGKJFCJILIL MHINMINPONI = 2; // offset: 16, xor const: 0
	bool PIACCOFDGKI = 4; // offset: 44, xor const: 0
	FGKJFCJILIL ICLCHMFPMMA = 3; // offset: 32, xor const: 0
	HCGMBFHEECA HPIPONEIIPO = 1; // offset: 40, xor const: 0
}

// CmdId: 5507
message AHCNCJNGFLD {
	bool PJOPGAAHLJE = 1; // offset: 24, xor const: 0
}

// CmdId: 8553
message PGLMIHAJBGA {
}

// CmdId: 125
message BMGFKNFHNJP {
	repeated BMCHAGEMDJP DEIBLPEBBPK = 3; // offset: 16, xor const: 0
	uint32 IKNMGIGKDOO = 11; // offset: 32, xor const: 10001
}

// CmdId: 4521
message FMICGCANEBK {
	int32 IHIGNMLCHDK = 7; // offset: 32, xor const: 4787
	APHBEHJMFND JAMBGLLHNMO = 10; // offset: 16, xor const: 0
}

message FKLKGMNPCKE {
	bool FOPPABKBCIH = 6; // offset: 36, xor const: 0
	int32 GJPPELNNBEN = 5; // offset: 32, xor const: 0
	int32 HLEAEPDDBLE = 2; // offset: 24, xor const: 0
	bool GMCAABHABEO = 3; // offset: 37, xor const: 0
	int32 EKLGNOIEMLA = 1; // offset: 28, xor const: 0
	bool MKKJCFLOAJC = 4; // offset: 38, xor const: 0
}

message NJIAAFJAAMN {
	uint32 JFHHBHAIBLF = 15; // offset: 32, xor const: 11801
	uint32 CPEGDKBNGDH = 2; // offset: 24, xor const: 4456
	uint32 OPFEAMDPIAG = 10; // offset: 28, xor const: 15585
}

message JCBFCDHDPCG {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 8472
}

message MLINEOECGJE {
	FGKJFCJILIL AGLLNBCMBMC = 1; // offset: 32, xor const: 0
	FGKJFCJILIL LPEKBBJAKBP = 2; // offset: 24, xor const: 0
}

// CmdId: 1205
message FKJOFLGBECK {
	uint32 GFCLKDAOMBM = 11; // offset: 28, xor const: 11224
	bool NCPKBCEMCEH = 3; // offset: 24, xor const: 0
}

// CmdId: 2154
message KANDPIMLPNC {
	EHIFNFPAHIB GAMKFKMFIDP = 13; // offset: 16, xor const: 0
}

message BKAPFDIJEGH {
	bool NAODGHJGPGE = 11; // offset: 60, xor const: 0
	repeated PICLFKBFPKL EBGCEEKCAAM = 9; // offset: 40, xor const: 0
	FAKNFKDEHJE JAIAJLJCKCJ = 12; // offset: 24, xor const: 0
	PBADIIBPLCN PPCNCKBKEJB = 7; // offset: 56, xor const: 0
	string OJKCBDNAIHA = 6; // offset: 48, xor const: 0
	uint32 MHINMINPONI = 3; // offset: 64, xor const: 13831
	NLIKKNNCBCK MALDIJFANDM = 8; // offset: 16, xor const: 0
}

// CmdId: 7574
message LOACDKJCKPM {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 7966
}

enum MNOFMNFDCBC {
	MNOFMNFDCBC_LNCGCDCKOEI = 0;
	MNOFMNFDCBC_NOELLAPPDNM = 1;
	MNOFMNFDCBC_KJHJCKGODEA = 2;
	MNOFMNFDCBC_GMMJAIHKABD = 3;
	MNOFMNFDCBC_MGGOFBKCDPI = 4;
}

message DHOJGNHOGAH {
	LIPILJCHNGP FAKKGPCCDND = 10; // offset: 56, xor const: 0
	CIOIJBPBNDG COHHLMBPNIK = 1; // offset: 64, xor const: 0
	OJDNKGDPOED HBADKBNPKBP = 6; // offset: 48, xor const: 0
	PCMGPLJNNFN KMFKGJIDDOK = 2; // offset: 24, xor const: 0
	AFEMKBIAMEF BLHJGPKOAAB = 12; // offset: 32, xor const: 0
	uint64 NCAGHHFDAOG = 7; // offset: 72, xor const: 8473
	MCICCJPNHGK HKHDEMMBFFK = 15; // offset: 16, xor const: 0
}

message CEHOOCNNKPF {
	repeated GKDEKBPAIAG NAPJLJFLDIB = 7; // offset: 24, xor const: 0
	repeated GKDEKBPAIAG ADEDCEIFAJC = 10; // offset: 40, xor const: 0
	repeated GKDEKBPAIAG DCEBKOOJGPA = 13; // offset: 32, xor const: 0
}

message FOEAOBHDICN {
	FGKJFCJILIL OALGBGBPHDC = 6; // offset: 56, xor const: 0
	FGKJFCJILIL FGALEHFDFPD = 2; // offset: 24, xor const: 0
	FGKJFCJILIL MPIPHCJMHKK = 10; // offset: 40, xor const: 0
	FGKJFCJILIL APGPOIJHIML = 5; // offset: 48, xor const: 0
	FGKJFCJILIL GONEFGMBJGN = 8; // offset: 32, xor const: 0
	FGKJFCJILIL KINMJMCICJL = 9; // offset: 88, xor const: 0
	bool KJOAKBGECHJ = 4; // offset: 96, xor const: 0
	FGKJFCJILIL CEPCJJOEJOL = 3; // offset: 16, xor const: 0
	FGKJFCJILIL AGDDDGNMKPE = 1; // offset: 72, xor const: 0
	FGKJFCJILIL FAMKDKIGDJB = 7; // offset: 80, xor const: 0
}

message CIGMHJMGJDF {
	uint32 AKEKFONOGGJ = 14; // offset: 48, xor const: 10662
	repeated uint32 IBNPDPNHGMA = 12; // offset: 24, xor const: 0
	IFGDJNNPCAN CPOGPPICDJO = 2; // offset: 16, xor const: 0
	IFGDJNNPCAN FGALEHFDFPD = 8; // offset: 32, xor const: 0
}

message MJDIKOFGAHP {
	bool GIBMBJFPPBE = 13; // offset: 25, xor const: 0
	uint32 OPFEAMDPIAG = 10; // offset: 28, xor const: 10947
	bool PDCGEGPEODA = 11; // offset: 24, xor const: 0
}

// CmdId: 2553
message BKKHOODGHDD {
	int32 BFBMMDFJIKD = 1; // offset: 40, xor const: 13395
	HBFBNKAODPJ NCAGHHFDAOG = 13; // offset: 24, xor const: 0
	map<int32, int32> KLCJNDABMOF = 5; // offset: 32, xor const: 0
}

message FMCJHDKCJGF {
	JMCDDIKBNAC NOBFMFCLLLC = 5; // offset: 44, xor const: 0
	IMJIJLIDHEC OFFBEDNKDIP = 9; // offset: 24, xor const: 0
	uint32 BFABKNIJNGM = 15; // offset: 48, xor const: 5887
	repeated FGHICGPHKJA PNGDGPFIJCE = 7; // offset: 16, xor const: 0
	uint32 ACHJDNJBFPL = 13; // offset: 40, xor const: 13204
}

enum LHIFDJDCBMK {
	LHIFDJDCBMK_XY_2_INDEX = 0;
	LHIFDJDCBMK_INDEX_2_XY = 1;
}

enum IMBJGILDJFM {
	IMBJGILDJFM_SCENE_TAG_DEFAULT = 0;
	IMBJGILDJFM_SCENE_TAG_METRO = 1;
	IMBJGILDJFM_SCENE_TAG_CONSTRUCTION_SITE = 2;
	IMBJGILDJFM_SCENE_TAG_SKY_SCRAPER = 3;
	IMBJGILDJFM_SCENE_TAG_ZERO = 4;
	IMBJGILDJFM_SCENE_TAG_STREET = 5;
	IMBJGILDJFM_SCENE_TAG_OUTER_RING = 6;
}

// CmdId: 7833
message HHPMMFDOOBD {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 3279
}

// CmdId: 6026
message LNELDMPLGNG {
	IODKMLDEAGC GOKDPHLGHHP = 6; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 9798
}

// CmdId: 1921
message FKHJOBMONBB {
	uint32 CMOLKPGAPEO = 12; // offset: 28, xor const: 8143
	uint32 GGKMIKBEPOG = 2; // offset: 24, xor const: 4263
}

// CmdId: 220
message CALGBNMHPGO {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 11524
}

message GMFNJCPEOEH {
	FGKJFCJILIL NEFAAKJKNDC = 1; // offset: 32, xor const: 0
	FGKJFCJILIL FAHPBJNOMMI = 2; // offset: 24, xor const: 0
}

enum DELHACJOOAK {
	DELHACJOOAK_MJMLPMEAJDH = 0;
}

// CmdId: 5652
message DANDFCMJPIN {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 6589
}

message IGHFDHOBEOH {
	int32 NNANBCMLFBL = 1; // offset: 24, xor const: 0
}

// CmdId: 569
message BIDICMMAALL {
	uint32 IKDJDPPLNOM = 8; // offset: 28, xor const: 2019
	uint32 MBCGBANAKMH = 15; // offset: 24, xor const: 11843
}

message BBOOEHHKEMM {
	FNDECKNKCIJ FAONFANGBHE = 14; // offset: 40, xor const: 0
	bool GLNFOAAKAOH = 2; // offset: 28, xor const: 0
	int32 LEGPJAHGOKL = 1; // offset: 24, xor const: 14189
	BDEANJLNPKC DDMIPKHLKDL = 15; // offset: 32, xor const: 0
	LCABOEJJBNB POCEGNDAKOC = 11; // offset: 36, xor const: 0
}

// CmdId: 5656
message DLDBMNCDLNM {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 2900
	bool JLMOLDGHOFF = 12; // offset: 28, xor const: 0
}

message PJLNMHOFNLE {
	repeated BGFCBEBDAEI PIKOAHDKGIM = 6; // offset: 24, xor const: 0
	uint32 HJHFOICGOAC = 9; // offset: 32, xor const: 2177
}

message AKBJFOBGGAH {
	int32 OPFEAMDPIAG = 11; // offset: 32, xor const: 13078
	repeated BJAEGDHNHOG CGPNMNGLCJD = 6; // offset: 16, xor const: 0
}

message PEHPAGPDPBN {
	INLFFDKGPNK AODMMCCECAP = 3; // offset: 16, xor const: 0
}

// CmdId: 6783
message CMEEOOFGMOO {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 3884
	bool DNHEODGDCMN = 3; // offset: 28, xor const: 0
}

message PMDHEHKKGOC {
	int32 OPFEAMDPIAG = 4; // offset: 32, xor const: 4812
	bytes GNDFHDAFOEG = 15; // offset: 24, xor const: 0
}

message LJBICODKBDD {
	MCICCJPNHGK HKHDEMMBFFK = 10; // offset: 24, xor const: 0
	LIPILJCHNGP FAKKGPCCDND = 14; // offset: 40, xor const: 0
	uint64 NCAGHHFDAOG = 12; // offset: 48, xor const: 669
	OJDNKGDPOED HBADKBNPKBP = 15; // offset: 16, xor const: 0
}

// CmdId: 141
message KCMOAOJAFMF {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 9065
}

enum KAOOHLACGEB {
	KAOOHLACGEB_ACTIVITY_BUBBLE_TYPE_NONE = 0;
	KAOOHLACGEB_ACTIVITY_BUBBLE_TYPE_MAINCITY = 2;
	KAOOHLACGEB_ACTIVITY_BUBBLE_TYPE_SPECIAL = 3;
}

message HMNIMPPEHDJ {
	PHFJPCHBLPC NINCGEHHAHN = 1; // offset: 28, xor const: 0
	NAAAFHNCPNG HLEAEPDDBLE = 2; // offset: 24, xor const: 0
}

message HKBOEHOHHMD {
	bool BGKBBCOMAHE = 1; // offset: 24, xor const: 0
}

// CmdId: 7603
message CMPKLNOPGML {
}

// CmdId: 6423
message NEPCNPNEEJP {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 12026
}

enum OMGLMOFPIAC {
	OMGLMOFPIAC_JKDAOAAAGCO = 0;
	OMGLMOFPIAC_EAHPKJAFEKE = 1;
	OMGLMOFPIAC_KJMLOJCCNMC = 2;
	OMGLMOFPIAC_ALNOJNNFEAP = 3;
}

// CmdId: 5877
message COBCNHIPLIG {
}

message MLGHMGAMJCB {
	bool LPKDNCPCGAE = 2; // offset: 24, xor const: 0
	bool OHPKBAGBOAA = 1; // offset: 25, xor const: 0
}

// CmdId: 903
message KKDLAEOLGPN {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 14138
}

// CmdId: 2143
message HHCGMKKDGCP {
	EKNBFJLMCBA NKLNDMMPNAJ = 14; // offset: 16, xor const: 0
}

message BMCMPNNCEHG {
}

message ONAJOPJAMGL {
	repeated uint32 KAPHIGAFCGA = 1; // offset: 16, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 2; // offset: 32, xor const: 0
}

enum JINFCAJLKOE {
	JINFCAJLKOE_LEMGKBCLHHN = 0;
	JINFCAJLKOE_JBPFNFEKJMH = 1;
	JINFCAJLKOE_KEHBEKJKCBG = 2;
	JINFCAJLKOE_FGIGFLCPNMK = 3;
	JINFCAJLKOE_FNNFFLCJBBH = 4;
	JINFCAJLKOE_FFLMMAPKDLN = 5;
	JINFCAJLKOE_PHHLLELNEAB = 6;
	JINFCAJLKOE_GIOGNPFBPHD = 7;
	JINFCAJLKOE_DLHMHCMNBNA = 8;
	JINFCAJLKOE_NJAHLDANGEP = 9;
	JINFCAJLKOE_DCMKNJFFDJJ = 10;
	JINFCAJLKOE_LOOGHCAFIIN = 11;
	JINFCAJLKOE_FJGIBJDKKFO = 12;
	JINFCAJLKOE_GCMPLFAHFJH = 13;
	JINFCAJLKOE_MHDHPPOAPBE = 14;
	JINFCAJLKOE_OBDFOFAGOCD = 15;
	JINFCAJLKOE_NACMHFEGJJC = 16;
}

message MJBFJGCLGCP {
	INLFFDKGPNK AODMMCCECAP = 10; // offset: 16, xor const: 0
}

message LKFDPCMCDHG {
	bool INMCIEMCEMN = 1; // offset: 24, xor const: 0
}

message PHMGBGCPBGD {
	repeated KIKNILICNLM OJKDMCAEMON = 12; // offset: 16, xor const: 0
}

// CmdId: 5660
message HKCEJAPIIEI {
	uint64 AEDAEPKDOAL = 9; // offset: 40, xor const: 13270
	uint32 KMKPPDICOKA = 2; // offset: 56, xor const: 3596
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
	JGLJNLDEAML CPEPJEPHPBD = 15; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 1; // offset: 48, xor const: 9207
}

enum KHKIHLONHME {
	KHKIHLONHME_LFILJHEJKBF = 0;
	KHKIHLONHME_PPCGLKKBNED = 1;
	KHKIHLONHME_CNAEAADGGAA = 2;
	KHKIHLONHME_GKDPDCIAGHK = 3;
	KHKIHLONHME_FHLOEJMDJOE = 4;
	KHKIHLONHME_DAHPIALFLDD = 5;
	KHKIHLONHME_EEMIOLKCENO = 6;
	KHKIHLONHME_GHOAOGLDFIG = 7;
	KHKIHLONHME_HKPFOFCAPEP = 8;
	KHKIHLONHME_MGMPPJJIBIE = 9;
}

// CmdId: 1001
message OOPBDJGEBNM {
	map<string, int32> MKDMGMBDBDN = 2; // offset: 16, xor const: 0
}

message BHNFOLBOKDE {
	string ECBFKCKFLDI = 1; // offset: 16, xor const: 0
	int32 ENCANOPLLDM = 2; // offset: 32, xor const: 0
}

message BHFILFDKOPA {
	uint32 BMFDANPJJLN = 5; // offset: 68, xor const: 0
	bool GEOPCPMNPKI = 4; // offset: 64, xor const: 0
	bytes AOMBNNENNBC = 7; // offset: 48, xor const: 0
	repeated BJBMKGLBKFG LAKBLLFMGFJ = 2; // offset: 16, xor const: 0
	uint32 DFJCCCOLGCE = 1; // offset: 56, xor const: 0
	repeated NEICNIAKAOF KFKDEKKPBLO = 3; // offset: 32, xor const: 0
	DPMPICBHLHB GKPFHJKHHDH = 6; // offset: 24, xor const: 0
	uint32 IKDJDPPLNOM = 9; // offset: 60, xor const: 0
}

message DAMBIDGIPMN {
	int32 OFMMCHFPNGP = 7; // offset: 24, xor const: 5519
}

// CmdId: 3206
message ANNLMJMLNFI {
	uint64 HEJBMNAOJFL = 9; // offset: 40, xor const: 11155
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 5723
	uint32 KMKPPDICOKA = 12; // offset: 48, xor const: 8860
	CAJAABCPNDJ CPEPJEPHPBD = 10; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 16, xor const: 0
}

message CBKPJPKDGEJ {
	HBFBNKAODPJ NCAGHHFDAOG = 14; // offset: 24, xor const: 0
	map<int32, int32> KLCJNDABMOF = 12; // offset: 32, xor const: 0
}

// CmdId: 6749
message ICFEBMEIKOB {
	GDPMPPFACEJ MDFKPGBALJI = 13; // offset: 24, xor const: 0
}

enum NIMHCILFPHL {
	NIMHCILFPHL_OHHEHGNCIBB = 0;
}

message LLAKLKMBJGH {
	FGKJFCJILIL GNBCGKKCOFO = 1; // offset: 24, xor const: 0
}

message GJGEFNGDAAI {
	JIMJJLJGLDL EKBBPLMJOBD = 1220; // offset: 64, xor const: 0
	repeated uint32 NEKIALCCKCO = 7; // offset: 48, xor const: 0
	repeated uint32 MONKBFJEFJP = 10; // offset: 88, xor const: 0
	uint32 JJHIDNMILIL = 14; // offset: 96, xor const: 10894
	uint32 DJDEEPFNIHG = 1466; // offset: 124, xor const: 13829
	uint32 OCJBHMDBDGH = 1210; // offset: 128, xor const: 12185
	map<uint32, uint32> GLMKFDOLMGP = 13; // offset: 80, xor const: 0
	repeated uint32 ENNHDFLHGPP = 11; // offset: 72, xor const: 0
	uint32 DNIAJMONECH = 686; // offset: 120, xor const: 13308
	map<uint32, uint32> KPMAMDLINLH = 8; // offset: 16, xor const: 0
	uint32 HPLENIGAMLA = 4; // offset: 108, xor const: 4555
	uint32 GOOADIKEJCC = 9; // offset: 132, xor const: 15205
	uint32 EOEOKHDEDJG = 1; // offset: 104, xor const: 11719
	bool INMCIEMCEMN = 1539; // offset: 136, xor const: 0
	uint32 DFAIIIFNJPB = 2; // offset: 116, xor const: 12382
	repeated uint32 HPBOCFHKLKJ = 1187; // offset: 56, xor const: 0
	repeated uint32 DOHHBDFIING = 6; // offset: 24, xor const: 0
	repeated uint32 GCNBDCLLBGL = 3; // offset: 40, xor const: 0
	uint32 ALGADJLDDPA = 800; // offset: 112, xor const: 11205
	uint32 JHFBOHABIAL = 5; // offset: 100, xor const: 11511
}

message MGENEPOFEJP {
}

message FCLGBLGMBFJ {
}

// CmdId: 6155
message BDCJDMDOFJB {
	MEBCPCBJLLG CPEPJEPHPBD = 13; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 56, xor const: 14839
	uint64 HEJBMNAOJFL = 15; // offset: 48, xor const: 6746
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 40, xor const: 7813
}

// CmdId: 5937
message LINEBOEALEE {
	uint32 BBLCHBANJID = 3; // offset: 36, xor const: 15474
	LCLKCAIOLEP HLEAEPDDBLE = 4; // offset: 32, xor const: 0
	repeated uint32 GFBFEKAJDIG = 1; // offset: 16, xor const: 0
}

message EFAGLHOJNAF {
	uint32 BEKFLJGFLJD = 1; // offset: 28, xor const: 12357
	uint32 CBDBIPMJEPJ = 8; // offset: 40, xor const: 15891
	uint32 HJHFOICGOAC = 3; // offset: 24, xor const: 12581
	uint64 HEJBMNAOJFL = 10; // offset: 32, xor const: 4987
}

message FCIJBOLDIHP {
	FGKJFCJILIL EKLGNOIEMLA = 2; // offset: 24, xor const: 0
	bool FOOOOLONFOG = 1; // offset: 32, xor const: 0
}

enum OEOAAAOKAJB {
	OEOAAAOKAJB_CHANGE_HOLLOW_SECTION_PERFORM_TYPE_NONE = 0;
	OEOAAAOKAJB_TYPE_1 = 1;
	OEOAAAOKAJB_TYPE_2 = 2;
	OEOAAAOKAJB_TYPE_3 = 3;
}

// CmdId: 7707
message LCMABPMDGEJ {
	uint32 AMIJIAHGPMC = 9; // offset: 24, xor const: 11234
	uint32 IMIBEBEKOEO = 4; // offset: 28, xor const: 3847
	bool LOLFFJHDBJB = 6; // offset: 32, xor const: 0
}

enum TimePeriodType {
	TIME_PERIOD_TYPE_TIME_PERIOD_TYPE_NONE = 0;
	TIME_PERIOD_TYPE_MORNING = 1;
	TIME_PERIOD_TYPE_AFTERNOON = 2;
	TIME_PERIOD_TYPE_EVENING = 3;
	TIME_PERIOD_TYPE_NIGHT = 4;
	TIME_PERIOD_TYPE_NOW = 99;
}

message LHFKJLHJDKB {
	string PCBCMLLCEOM = 7; // offset: 16, xor const: 0
	string GFEHCJAHLEF = 10; // offset: 24, xor const: 0
}

message DEEGIKMFFBG {
	uint32 IIIGDHJPFMI = 9; // offset: 40, xor const: 10137
	int32 DNAENEJOADB = 10; // offset: 44, xor const: 2742
	repeated LIHJKCGFLHL CINDMJOJPLG = 5; // offset: 24, xor const: 0
	repeated CLDKNEJCPLN MKLMOBKBGDC = 2; // offset: 32, xor const: 0
}

message IAENIOKAEPP {
	uint32 OHACLKJNNPE = 2; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 24, xor const: 0
}

enum JCMPAPDJANJ {
	JCMPAPDJANJ_CJGAKMIBIFE = 0;
	JCMPAPDJANJ_GOPIBGBPDPA = 1;
}

message OKNKANOOGIL {
}

message HJCGJNOIPPG {
	uint32 DCMIEKANCIE = 6; // offset: 32, xor const: 5123
	CIANPIDLILL IEFLICEGJOO = 15; // offset: 24, xor const: 0
}

// CmdId: 5432
message PGHCKNBIPJG {
	map<uint32, int32> PMFHKDNNKCE = 12; // offset: 24, xor const: 0
	uint32 PGBADFMPAPK = 6; // offset: 32, xor const: 16268
}

enum KDPKJFLCNIO {
	KDPKJFLCNIO_GCFCPGMKMCK = 0;
	KDPKJFLCNIO_KMHJPOMBMDE = 1;
	KDPKJFLCNIO_HFGLHFBEACP = 2;
	KDPKJFLCNIO_LDGOKOPNKEA = 3;
}

// CmdId: 8486
message AAPCAELLOMO {
	NJHCCJPHMCC FPPHBHBOAOP = 5; // offset: 24, xor const: 0
}

message AICBCBHNANL {
	int32 KOMIMFNADCM = 1; // offset: 40, xor const: 0
	int32 NPLKKOGKMCK = 2; // offset: 44, xor const: 0
	int32 GAEGAIBNDCE = 3; // offset: 48, xor const: 0
	repeated CADNBCFMDDF MKCJPLBPKKH = 5; // offset: 16, xor const: 0
	string EKNFDKHABNN = 4; // offset: 24, xor const: 0
}

// CmdId: 3885
message AMGBACMEAEP {
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 3; // offset: 56, xor const: 6512
	BEFEOIJLGLO CPEPJEPHPBD = 8; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 48, xor const: 12880
	uint64 AEDAEPKDOAL = 1; // offset: 40, xor const: 5363
}

message DOONIOGFDBI {
	repeated NDCBFGNACIH BONFCKLGEEA = 9; // offset: 16, xor const: 0
}

message KPAFLKHPIGN {
	repeated uint32 MLMPMFBOIND = 1; // offset: 24, xor const: 0
	repeated uint32 DLNEMMDJDCK = 8; // offset: 32, xor const: 0
	KIICEKGINPC AFBCPAFLGMA = 11; // offset: 16, xor const: 0
	repeated OGFMILIPINN JNAHBDBEPNN = 10; // offset: 40, xor const: 0
}

enum GOKKJBEPJID {
	GOKKJBEPJID_PEBDIKIKPEM = 0;
}

message PPGLPIIOHMM {
}

message PFBBGCFPIIE {
	bool CHCGCJMDMEA = 3; // offset: 40, xor const: 0
	FGKJFCJILIL GNBCGKKCOFO = 1; // offset: 16, xor const: 0
	FGKJFCJILIL JDIHJDMIDFI = 2; // offset: 32, xor const: 0
}

// CmdId: 9350
message BFKNMFLCJEP {
}

message CEFHOJDDBNF {
	uint32 HJHFOICGOAC = 15; // offset: 32, xor const: 2799
	repeated NEICNIAKAOF KFKDEKKPBLO = 14; // offset: 16, xor const: 0
}

message MAOFBLAHCEL {
	int32 GCIPFFADIKE = 14; // offset: 24, xor const: 14402
	uint32 CPEGDKBNGDH = 7; // offset: 28, xor const: 10949
	uint32 IHIEIMELEEH = 5; // offset: 32, xor const: 13293
}

// CmdId: 9903
message OMHENOJIIAH {
	uint32 JJJJAPLJLHB = 7; // offset: 28, xor const: 6907
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 14759
}

message NHEGLHDLJJG {
	repeated uint32 HAGAPPKDFGH = 15; // offset: 32, xor const: 0
	repeated uint32 LKJKNDNEMPN = 14; // offset: 80, xor const: 0
	repeated uint32 KLNICPAMMEI = 8; // offset: 24, xor const: 0
	map<uint32, uint32> AAPLJPGKBFC = 9; // offset: 56, xor const: 0
	DKNOEBEGAJK DJINPLHKPAO = 5; // offset: 96, xor const: 0
	repeated uint32 HEEHBIJLGDJ = 4; // offset: 88, xor const: 0
	repeated uint32 NMLBIEONLBF = 7; // offset: 16, xor const: 0
	repeated GJGEFNGDAAI HBCFONDIMLH = 3; // offset: 72, xor const: 0
	map<uint32, int32> LHCDCNKJJOI = 10; // offset: 48, xor const: 0
	repeated CBLMJKPANPI GPGNDBOCJOA = 11; // offset: 40, xor const: 0
	bool LCGOJIGPACO = 6; // offset: 100, xor const: 0
	uint32 IOKAKHFJEGB = 12; // offset: 104, xor const: 8895
}

message NPIDDHCELBE {
	string ENCANOPLLDM = 1; // offset: 24, xor const: 0
}

// CmdId: 2243
message GMDGPPFNBOM {
	FLBAOAPBMNC JAPLFDBJOJI = 14; // offset: 16, xor const: 0
}

message PGABEEMKBDE {
	repeated JFNICDNJIEH ABHPKGFFDNL = 8; // offset: 40, xor const: 0
	repeated uint32 HDLAHHOJACG = 6; // offset: 24, xor const: 0
	map<uint32, uint32> OBFCBCBIHEK = 12; // offset: 32, xor const: 0
	repeated LAJGHJDGOKM IDDHDNPMGKL = 7; // offset: 48, xor const: 0
}

// CmdId: 8852
message GIIBPLPGNPH {
	repeated uint32 GGMHCEMGEEM = 2; // offset: 16, xor const: 0
}

// CmdId: 5783
message FIAKKEEDALM {
	GHGFEEBEBNO POJHAIGGEGN = 7; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 32, xor const: 3884
}

// CmdId: 306
message JCDCPMPINIK {
	bool CLDGOHDFFAH = 14; // offset: 24, xor const: 0
}

message GPAECAKHODD {
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 8142
	HAJCGCMAPAC EOKGJGCHAHM = 14; // offset: 24, xor const: 0
}

// CmdId: 1585
message JLNLNIMJEPG {
	string BKMNMLNNILA = 9; // offset: 24, xor const: 0
}

message DFDMNKAKCBF {
	uint32 BEKIEKKGHBF = 9; // offset: 24, xor const: 15702
	uint32 DOGAPEGLHOD = 12; // offset: 28, xor const: 6738
	uint32 HHALEGBBNFO = 2; // offset: 32, xor const: 1466
}

enum FGFFNDAFKBC {
	FGFFNDAFKBC_JLNMKDPBPIK = 0;
	FGFFNDAFKBC_BHGDGBGEGFN = 1;
	FGFFNDAFKBC_OHKBDGGHHHL = 2;
}

// CmdId: 3461
message HPMOFGPEOHA {
	uint32 DCENCIPOBMC = 5; // offset: 24, xor const: 1121
}

enum OOHFKDJDCIH {
	OOHFKDJDCIH_LPIPAALCPFD = 0;
}

message ADNHGHBOOIA {
	FGKJFCJILIL PAGOBFILGPB = 1; // offset: 24, xor const: 0
}

// CmdId: 9754
message FOFCNDFHAMC {
	bool BKIBLCEDHLJ = 3; // offset: 24, xor const: 0
	uint32 CKCLOFPICJP = 11; // offset: 28, xor const: 2487
	uint32 IPJGGIAHGGE = 10; // offset: 32, xor const: 1396
}

enum HJNPMFOLBMD {
	HJNPMFOLBMD_ABPGPHHNLJI = 0;
}

message ECAOKOKBCNL {
	repeated NOCPPBBIAOF EKKBMLADKGC = 12; // offset: 16, xor const: 0
	map<int32, int32> PPFJCNKBKMH = 6; // offset: 32, xor const: 0
}

message BOFPFNNFFJF {
	uint32 MHIHFGKDOMB = 2; // offset: 24, xor const: 0
	uint32 CENMKDLDNAN = 1; // offset: 28, xor const: 0
}

message IBILJHIBGGC {
	uint32 ICMEFJCCNFP = 1; // offset: 24, xor const: 0
}

message MIAAGOIJDOO {
	enum CHGFFMKLEDF {
		CHGFFMKLEDF_NONE = 0;
		CHGFFMKLEDF_AVATAR = 7;
		CHGFFMKLEDF_MONSTER = 8;
		CHGFFMKLEDF_GADGET = 9;
		CHGFFMKLEDF_NPC = 10;
	}

	uint32 NJFOLJNDPGG = 2; // offset: 64, xor const: 0
	uint32 ENEGAHHFOPK = 3; // offset: 56, xor const: 0
	JGNBCMJPHFH CKBOJACIJDI = 4; // offset: 32, xor const: 0
	JGNBCMJPHFH IFNNCGDEFJD = 5; // offset: 24, xor const: 0
	uint32 KNJAHMDLBLC = 1; // offset: 60, xor const: 0
	repeated MFFOBNKMPED CGJJPMJFGHE = 6; // offset: 16, xor const: 0
	oneof HEBJLGHGPLK {
		GEBPDHHLPHN npc = 10;
		MCCHCGFJKJF gadget = 9;
		BLAICGNIFAI avatar = 7;
		ALCLGJKOAHL monster = 8;
	}
}

message MILIOGPHGCP {
	uint32 FOEAJHDEEJP = 1; // offset: 56, xor const: 3977
	string PIOHLEAHDLG = 13; // offset: 40, xor const: 0
	uint32 OPFEAMDPIAG = 10; // offset: 52, xor const: 14213
	uint32 CGEEGABMMAN = 9; // offset: 60, xor const: 118
	string JGNFLOHJKJO = 14; // offset: 16, xor const: 0
	uint32 HLEAEPDDBLE = 15; // offset: 48, xor const: 1459
	string HGHPEKEKKCF = 2; // offset: 32, xor const: 0
}

message CNLHCEOBHJJ {
	uint32 MDHJEKIIDIO = 6; // offset: 24, xor const: 7758
}

enum DFNCKKJNDPD {
	DFNCKKJNDPD_LLLDGMNPALM = 0;
	DFNCKKJNDPD_MBDDOAPEKCH = 1;
	DFNCKKJNDPD_GIDOEEMOIFI = 2;
	DFNCKKJNDPD_KAEFIEOKOKE = 3;
	DFNCKKJNDPD_HEMAIDJOCNO = 4;
	DFNCKKJNDPD_IICJEPFPGNJ = 5;
}

// CmdId: 3909
message MBKONJOENAP {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 1200
}

// CmdId: 7692
message AHPECCDECIA {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 7301
}

message LAGPOPCEGGD {
	uint32 FIFMIGPLLFB = 10; // offset: 40, xor const: 0
	uint32 MJMJPCCAPNE = 3; // offset: 68, xor const: 0
	repeated uint32 JLCKCHKGAJF = 5; // offset: 16, xor const: 0
	bool NOHNKKOOHFO = 6; // offset: 56, xor const: 0
	uint32 CKAJHOBIDGB = 1; // offset: 44, xor const: 0
	uint32 DHGMIFELJCH = 7; // offset: 60, xor const: 0
	uint32 EEAJFLDOPCP = 2; // offset: 52, xor const: 0
	ABMBAKLOFAN IDIBCDFONEB = 4; // offset: 48, xor const: 0
	uint32 HKMIKAEFOBA = 11; // offset: 64, xor const: 0
	repeated uint32 AJCADNFCOON = 8; // offset: 32, xor const: 0
	uint32 NOOEFOBBAPI = 9; // offset: 72, xor const: 0
}

// CmdId: 1720
message LHAHLPBHDDF {
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 15867
	uint64 AEDAEPKDOAL = 8; // offset: 40, xor const: 6902
	HDENOEIKKEP CPEPJEPHPBD = 10; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 15; // offset: 56, xor const: 10783
}

// CmdId: 786
message PLOJNKAIOJO {
	int32 IHIGNMLCHDK = 14; // offset: 28, xor const: 6761
	uint32 GFOBLCFLFBH = 7; // offset: 24, xor const: 4106
}

message LODBLIMDICH {
	bool NKPPHNELJHO = 7; // offset: 68, xor const: 0
	uint32 PEOCJCBFHJE = 8; // offset: 72, xor const: 0
	uint32 KCBFLELGHJM = 9; // offset: 64, xor const: 0
	repeated FGKJFCJILIL OMOOJNBHLHO = 3; // offset: 48, xor const: 0
	string KPGPIPANJHI = 6; // offset: 24, xor const: 0
	repeated FGKJFCJILIL JHNICIPMNJG = 5; // offset: 16, xor const: 0
	bool MBFFDICGCFA = 4; // offset: 69, xor const: 0
	string OGKBAELBNDJ = 2; // offset: 32, xor const: 0
	FGKJFCJILIL MCLIPIPICMO = 1; // offset: 40, xor const: 0
}

enum GHHHKDCJJDH {
	GHHHKDCJJDH_FFPNHOAGENJ = 0;
	GHHHKDCJJDH_HPALJHDDHCO = 1;
	GHHHKDCJJDH_HDAENKGMABN = 2;
	GHHHKDCJJDH_JMECBJNLEPG = 3;
	GHHHKDCJJDH_KNEJPENOOJL = 4;
	GHHHKDCJJDH_MCFPAIEJNHE = 5;
}

message BOLCAIPBDEN {
	map<uint32, GOEPMDGKCPN> GDLNPBBJOBJ = 5; // offset: 32, xor const: 0
	repeated uint32 MLEOMHBLNKB = 10; // offset: 16, xor const: 0
	map<uint32, GOEPMDGKCPN> OKAIFJINMJJ = 15; // offset: 24, xor const: 0
}

message DACKFJCNIEH {
	repeated string DBDGIKHGDNF = 1; // offset: 16, xor const: 0
	repeated uint32 MKKJCEDCDBM = 2; // offset: 32, xor const: 0
	string KFHKGELKJBD = 3; // offset: 24, xor const: 0
	float DDBBIFLGBDD = 4; // offset: 52, xor const: 0
	float HMBCAFBDPOK = 6; // offset: 56, xor const: 0
	float BJOHLFOLFFM = 5; // offset: 48, xor const: 0
}

message FDKONGBFJHJ {
}

// CmdId: 2592
message PMGOBBALLPL {
	uint32 KMKPPDICOKA = 7; // offset: 48, xor const: 1495
	uint64 AEDAEPKDOAL = 11; // offset: 56, xor const: 3687
	uint64 HEJBMNAOJFL = 9; // offset: 40, xor const: 342
	GNPOHDANEGH CPEPJEPHPBD = 10; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 32, xor const: 0
}

message INFPIHIGHAE {
	EHCBGINKMCH GCMCJBMEJLP = 7; // offset: 24, xor const: 0
	PMDHEHKKGOC JOGGOAJIAJJ = 5; // offset: 16, xor const: 0
}

// CmdId: 1344
message PDAODACKIFK {
	uint32 JCFCKNIIGID = 10; // offset: 32, xor const: 10166
	repeated uint32 BGPKBHEAMFB = 6; // offset: 16, xor const: 0
}

message EHIFNFPAHIB {
	string MGKDAPNPGDI = 2; // offset: 24, xor const: 0
	string BPFKMGACOOA = 4; // offset: 48, xor const: 0
	int32 EAFPEPHBMKP = 5; // offset: 56, xor const: 0
	int32 HGLMKIBNFMC = 6; // offset: 60, xor const: 0
	string GBFHPJIPHJJ = 3; // offset: 16, xor const: 0
	string EAHODMOAMFB = 1; // offset: 32, xor const: 0
}

// CmdId: 1418
message NNAHJNPHINO {
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 11968
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 8; // offset: 56, xor const: 14239
	uint64 AEDAEPKDOAL = 13; // offset: 40, xor const: 14345
	CHNFNMBAHHP CPEPJEPHPBD = 5; // offset: 24, xor const: 0
}

// CmdId: 4161
message GELHIIABGAE {
	uint32 HJGCHCAKKNJ = 11; // offset: 24, xor const: 8986
}

message OBIGNMBGBKM {
	int32 GEGINGBHNEK = 15; // offset: 48, xor const: 2503
	uint32 KKOOBMNIBCH = 12; // offset: 36, xor const: 8020
	int32 GDHBDIEAOFI = 11; // offset: 44, xor const: 10939
	repeated uint32 PFKMPPPPALE = 2; // offset: 24, xor const: 0
	uint32 DHLCPNBLAPD = 10; // offset: 32, xor const: 15576
	uint32 MHEBGJDAHIL = 14; // offset: 40, xor const: 1356
}

message EKEECJPCAIC {
	uint32 IIIGDHJPFMI = 3; // offset: 32, xor const: 0
	uint32 NMHNBHDEKBP = 2; // offset: 36, xor const: 0
	string DMICGIPOOGF = 1; // offset: 24, xor const: 0
}

message CEDOLOKPAHP {
}

message LEBOPDIMFBL {
	uint32 AIKLNDGPHKB = 2; // offset: 36, xor const: 0
	uint32 FACMKPOCPBC = 4; // offset: 24, xor const: 0
	int32 NEHNBBGJKHP = 5; // offset: 40, xor const: 0
	bool ECIICIKOAMO = 3; // offset: 28, xor const: 0
	HollowShopType DPKKBOHMNEO = 1; // offset: 32, xor const: 0
}

message CONKLNGOMKP {
	JLNLHBOGFII ACEMBJPDCDK = 12; // offset: 16, xor const: 0
	uint32 NCAGHHFDAOG = 14; // offset: 32, xor const: 4545
}

message JEPOINPGDGK {
	repeated JEFLFHLBAOG PLBCOFDFMEN = 2; // offset: 16, xor const: 0
}

message MANAECEBJJM {
	bool ALPPGLAFMNA = 6; // offset: 42, xor const: 0
	bool KHOGCGJIFDG = 13; // offset: 41, xor const: 0
	repeated JDEBIOFLNGD OKMCJGCLNNH = 10; // offset: 24, xor const: 0
	bool EAHPGKJAAEG = 9; // offset: 40, xor const: 0
	string LCIHMDFPAEB = 8; // offset: 32, xor const: 0
	bool EMKAHDDHLFJ = 15; // offset: 43, xor const: 0
}

// CmdId: 4626
message PHIHGJNPEAN {
	map<uint32, uint32> NDCHCCEEHEM = 1; // offset: 16, xor const: 0
}

// CmdId: 1215
message EJMLJCNDIKN {
	int32 IHIGNMLCHDK = 8; // offset: 32, xor const: 12582
	repeated uint32 NOAPNHGNDNC = 2; // offset: 16, xor const: 0
}

message FACCEFNKPEP {
	int32 PHLPFLOFMNI = 4; // offset: 36, xor const: 0
	int32 KOMIMFNADCM = 3; // offset: 32, xor const: 0
	int32 FGJDHNEHANJ = 2; // offset: 28, xor const: 0
	int32 GJKPGBIALLL = 1; // offset: 24, xor const: 0
}

// CmdId: 5900
message ICPMELJAECD {
	repeated DAFOJLDLDBC EPDLJMJMHDK = 5; // offset: 24, xor const: 0
}

// CmdId: 4488
message OIAGJGBMLGL {
	uint32 AMIJIAHGPMC = 11; // offset: 24, xor const: 2139
}

message NELGNIPOCON {
	LDHKJGEMKIO POALCIPHOII = 1; // offset: 24, xor const: 0
}

// CmdId: 142
message EPNJGKIOGEG {
	JAMIPMDCAJB APKAEIEAILJ = 5; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 5657
}

message PHJBLHFPHAO {
	uint32 BAJNLOLEDMC = 5; // offset: 24, xor const: 3754
}

// CmdId: 5619
message CLJNKNABINO {
}

message FDOOCFMJEND {
	repeated FGKJFCJILIL LMDNANEMPGA = 1; // offset: 16, xor const: 0
}

// CmdId: 3243
message KFOFEBECNJB {
	uint32 PEDKNCIMHLA = 4; // offset: 24, xor const: 3125
}

enum FGEDOAININN {
	FGEDOAININN_PDDJBADMGCI = 0;
	FGEDOAININN_AOPNLKKMAHE = 1;
	FGEDOAININN_EGOJBEDGOBD = 2;
	FGEDOAININN_CIAELHBCIOG = 3;
	FGEDOAININN_HHFKDPEPGMB = 4;
	FGEDOAININN_PEPIPKKJKEA = 5;
}

message LDDJOLMINNI {
	bool JHGEBOLIDAI = 8; // offset: 64, xor const: 0
	bool MAEPJNGMKDJ = 2; // offset: 65, xor const: 0
	repeated LDIOEKLBBDI KOFDBOKFMHO = 5; // offset: 16, xor const: 0
	bool OJIGAMKELLG = 1; // offset: 66, xor const: 0
	repeated GOMKCDJDEMI CINLLDANPHN = 7; // offset: 40, xor const: 0
	FGKJFCJILIL IHPGIMHMLGP = 3; // offset: 32, xor const: 0
	repeated NPCEFPFKCOJ CKNBIHGMHDD = 6; // offset: 24, xor const: 0
	FGKJFCJILIL ABOCKLPJHDA = 4; // offset: 56, xor const: 0
}

// CmdId: 3283
message FCPBCIMIGCM {
	uint64 AEDAEPKDOAL = 4; // offset: 48, xor const: 7524
	HDLLHADJPHE CPEPJEPHPBD = 6; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 7; // offset: 40, xor const: 16169
	uint64 HEJBMNAOJFL = 5; // offset: 56, xor const: 2632
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 24, xor const: 0
}

message KHMKBHNIPBH {
	OFJJMLKFPNH MLOCGOPJHKA = 1; // offset: 24, xor const: 0
}

message LBPKINHENKJ {
	int32 JMELFDAHFCJ = 3; // offset: 24, xor const: 14211
}

message BDFEGMAKMGJ {
	repeated uint32 NCJJDMHHJIE = 2; // offset: 24, xor const: 0
	uint32 EKLGNOIEMLA = 8; // offset: 36, xor const: 3046
	bool FMPPEACBIMM = 13; // offset: 32, xor const: 0
}

message ACDPLEECKMP {
}

message MPBFPMFOBFN {
	bool FOOOOLONFOG = 1; // offset: 24, xor const: 0
	uint32 EKLGNOIEMLA = 2; // offset: 28, xor const: 0
}

message MDLNBOHHAGE {
	string NBNDPINNFHL = 1; // offset: 24, xor const: 0
}

enum LAEMDNOJPAI {
	LAEMDNOJPAI_HOLLOW_BATTLE_EVENT_TYPE_DEFAULT = 0;
	LAEMDNOJPAI_HOLLOW_BATTLE_EVENT_TYPE_NORMAL = 1;
	LAEMDNOJPAI_HOLLOW_BATTLE_EVENT_TYPE_ELITE = 2;
	LAEMDNOJPAI_HOLLOW_BATTLE_EVENT_TYPE_BOSS = 3;
	LAEMDNOJPAI_HOLLOW_BATTLE_EVENT_TYPE_LEVEL_END = 4;
	LAEMDNOJPAI_HOLLOW_BATTLE_EVENT_TYPE_LEVEL_FIN = 5;
}

// CmdId: 7823
message LFIKGMHDBJA {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 6912
}

message NCKIHPBPNBO {
	FGKJFCJILIL NMHNBHDEKBP = 1; // offset: 16, xor const: 0
}

message IBEMPFGCLKL {
	bool PBKCHBKABLN = 3; // offset: 36, xor const: 0
	uint32 MOMGDEFPOGM = 6; // offset: 40, xor const: 12568
	bool FOIABNOGLKP = 9; // offset: 37, xor const: 0
	map<uint32, OMLDHANIEGM> MCMJBBLNKIH = 2; // offset: 24, xor const: 0
	uint32 LGCOLPMBENH = 14; // offset: 32, xor const: 6818
}

// CmdId: 7361
message LDCCHOOAINB {
	bool MKHLOJDGMKH = 12; // offset: 32, xor const: 0
	IMLEDAGJCLD HMPDCPHGJNC = 8; // offset: 16, xor const: 0
}

message MICBCAEPMOM {
	int32 KGHFOLOCDJN = 5; // offset: 68, xor const: 2277
	int32 LDEFBNHMJKK = 3; // offset: 56, xor const: 8245
	int32 CBBPJPAOMEC = 2; // offset: 96, xor const: 14411
	int32 DMIKOLMLDNM = 7; // offset: 100, xor const: 6623
	int32 APGFHCHHKLK = 1065; // offset: 108, xor const: 9006
	int32 AALNDJPOHBB = 1; // offset: 44, xor const: 14417
	int32 DICPEFACGEH = 1759; // offset: 40, xor const: 13109
	int32 MAIEIMPHALM = 1669; // offset: 116, xor const: 15205
	int32 JFHOCOKFLHD = 783; // offset: 112, xor const: 14802
	int32 GIIDABOKJDH = 13; // offset: 64, xor const: 15181
	int32 OFPMFFGILFN = 9; // offset: 104, xor const: 5847
	int32 HLHBNNENFLE = 900; // offset: 48, xor const: 5785
	int32 GNKKFNPIOPG = 1125; // offset: 52, xor const: 4335
	int32 EHIDCEIKNNI = 15; // offset: 80, xor const: 7512
	repeated JDJDMPAOFDK AFCENAAEMKP = 11; // offset: 16, xor const: 0
	int32 KBKLJLLBLCD = 12; // offset: 60, xor const: 9440
	int32 NALDDDKAODD = 14; // offset: 92, xor const: 5958
	repeated float IDPJDJPJJEM = 10; // offset: 32, xor const: 0
	float FDIALDBGEOH = 4; // offset: 84, xor const: 0
	int32 AKBLICMCPJB = 6; // offset: 76, xor const: 6390
	int32 LJGPMNEGPDD = 8; // offset: 88, xor const: 3034
	bool DNDNEKOAPBB = 344; // offset: 72, xor const: 0
}

// CmdId: 8063
message KDPEJBLDPMP {
	bool CAIFJBJECCK = 11; // offset: 44, xor const: 0
	uint64 DIMEDPILOOA = 10; // offset: 32, xor const: 9782
	KMIPCLLILAN EFOJIHJFCOF = 8; // offset: 40, xor const: 0
	MDLAIOAJEBJ CHLDGHLJAPK = 15; // offset: 24, xor const: 0
}

// CmdId: 5405
message CLHCDOCDFBN {
	repeated FEJNHNCFGCO PDNCKGLOMEL = 8; // offset: 24, xor const: 0
	uint32 EOGLIBEDMCG = 9; // offset: 92, xor const: 12721
	repeated uint32 JBNOAIGPEGA = 14; // offset: 32, xor const: 0
	repeated FDEHPPPAIJN NAEFAOMBHCG = 5; // offset: 56, xor const: 0
	repeated uint32 BOGDLAGHDEL = 12; // offset: 48, xor const: 0
	repeated GCGNDLBANEK FBCIEONGFEI = 13; // offset: 80, xor const: 0
	repeated uint32 EGHGEGNACON = 6; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 88, xor const: 5604
	repeated uint32 KCGFEAJPBBD = 7; // offset: 72, xor const: 0
	repeated uint32 IKAECGFAIBB = 2; // offset: 40, xor const: 0
}

message PHKIOOBCGGA {
	INLFFDKGPNK AODMMCCECAP = 9; // offset: 16, xor const: 0
}

// CmdId: 3540
message IDDGFJEIEEG {
	repeated uint32 CNBEMMFOCJD = 7; // offset: 32, xor const: 0
	uint32 HKMIKAEFOBA = 15; // offset: 60, xor const: 5329
	uint32 EELDLMADHPK = 2; // offset: 56, xor const: 11879
	uint32 GMGKKPNAHII = 5; // offset: 44, xor const: 3186
	uint32 MJMJPCCAPNE = 12; // offset: 52, xor const: 13778
	uint32 HHAEIHKMEHE = 9; // offset: 40, xor const: 15268
	repeated uint32 FPBNNAGIJEH = 11; // offset: 16, xor const: 0
	bool LNICCMGJPJH = 8; // offset: 48, xor const: 0
}

// CmdId: 8541
message OAOCCNCOJCK {
	repeated BLIFLCKGBNP MPJOIJKOJCI = 11; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 14; // offset: 32, xor const: 2245
}

enum ABMBAKLOFAN {
	ABMBAKLOFAN_JDKBPOBKKIC = 0;
	ABMBAKLOFAN_NGABOLBDDHM = 1;
	ABMBAKLOFAN_LJIKCFMLJFG = 2;
	ABMBAKLOFAN_GCOHNFJAJJJ = 4;
}

message BLPKKPIKGPO {
	FGKJFCJILIL KINEKLHNPOO = 1; // offset: 16, xor const: 0
	HICNHCBPOKP PBOAMDEBIGO = 2; // offset: 32, xor const: 0
}

// CmdId: 4146
message IELMIEFODCO {
	EBDAIGALHDI DBOACCIJPDL = 9; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 8652
}

enum OPEAHCHGFGJ {
	OPEAHCHGFGJ_FDGLHKGECLK = 0;
	OPEAHCHGFGJ_BPDHGDBJMCH = 1;
	OPEAHCHGFGJ_DCEBKAHFLON = 2;
}

message PNJELGEADIC {
	uint64 EKFMGFLOJMN = 6; // offset: 32, xor const: 11656
	string MPHLIEKKFIK = 9; // offset: 16, xor const: 0
}

message PLBAEBLEAHC {
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 16, xor const: 0
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 32, xor const: 0
}

message LDOEPPJOFEI {
}

message CNBMOFOBLKK {
	repeated FGKJFCJILIL DKCCEELAHJJ = 3; // offset: 16, xor const: 0
	FGKJFCJILIL MOMGDEFPOGM = 1; // offset: 24, xor const: 0
	bool NCGIBKDJLAA = 2; // offset: 40, xor const: 0
}

enum NNKMABOFJLJ {
	NNKMABOFJLJ_IGNDGGPELJJ = 0;
	NNKMABOFJLJ_PPLLECBKMBA = 1;
	NNKMABOFJLJ_CIMHBJDAEPG = 2;
	NNKMABOFJLJ_KAMECKFEHKM = 3;
	NNKMABOFJLJ_DIGFNEOEPEB = 4;
}

message EEKDJAEOJKM {
	repeated FLOBEMMNNOB BKHFJEOPDJN = 10; // offset: 24, xor const: 0
}

message NEDCGJKAFDD {
	repeated HBNPHCKHHDB PHGJIPKOBLO = 4; // offset: 24, xor const: 0
	bool KCEMJKLOBKD = 7; // offset: 32, xor const: 0
	uint32 EDPKPJBJLNM = 15; // offset: 36, xor const: 8357
}

enum LCABOEJJBNB {
	LCABOEJJBNB_IGDEGLAMDMC = 0;
	LCABOEJJBNB_MCNKNHKBODA = 1;
	LCABOEJJBNB_IIENFCPLCNO = 2;
	LCABOEJJBNB_CAFEOEPADKE = 4;
	LCABOEJJBNB_GGGCKECJMFK = 5;
	LCABOEJJBNB_GADIGPOKKIF = 6;
	LCABOEJJBNB_LMNHPNIJBFH = 7;
}

// CmdId: 6641
message PFNDGGNGANN {
	int32 IHIGNMLCHDK = 4; // offset: 36, xor const: 5456
	uint32 GFOBLCFLFBH = 14; // offset: 32, xor const: 3341
	repeated KKEHJLGILDH IGJDOPJFEAL = 5; // offset: 24, xor const: 0
}

message HKEFGCBKIHI {
	int32 NEFAAKJKNDC = 1; // offset: 24, xor const: 0
}

enum NKPCOAOHKHA {
	NKPCOAOHKHA_SHOW_MASK_AUTO = 0;
	NKPCOAOHKHA_SHOW_MASK_TRUE = 1;
	NKPCOAOHKHA_SHOW_MASK_FALSE = 2;
}

message GHDHIAIKKPK {
	INLFFDKGPNK AODMMCCECAP = 4; // offset: 16, xor const: 0
}

message PHNBCGPDPBJ {
	bool IGADOMHOINM = 1; // offset: 24, xor const: 0
}

enum MMCDMEFOBHI {
	MMCDMEFOBHI_PMJPOOOODIB = 0;
	MMCDMEFOBHI_AKEGJMDEAGL = 1;
	MMCDMEFOBHI_MMCPCGENGCL = 2;
	MMCDMEFOBHI_POOAENJIBKI = 3;
	MMCDMEFOBHI_PDPLLLDNKHC = 4;
	MMCDMEFOBHI_CIPNOOBJNMF = 5;
	MMCDMEFOBHI_FBPAHPGNEIJ = 6;
	MMCDMEFOBHI_JDFKLMKLNCN = 7;
}

// CmdId: 7066
message ODLJBPJJMEC {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 804
}

// CmdId: 7473
message GEFDLNOEHEM {
	uint64 HEJBMNAOJFL = 10; // offset: 48, xor const: 377
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 24, xor const: 0
	CEEIHDINFLC CPEPJEPHPBD = 9; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 14; // offset: 40, xor const: 9564
	uint64 AEDAEPKDOAL = 1; // offset: 56, xor const: 9469
}

message GCGABKANJJL {
	uint32 IKDJDPPLNOM = 1; // offset: 36, xor const: 0
	uint32 BOFLBMIHJAM = 3; // offset: 32, xor const: 0
	bool FLMEBFEHOAO = 4; // offset: 40, xor const: 0
	FGKJFCJILIL GMIGLBEGLKA = 2; // offset: 24, xor const: 0
}

// CmdId: 8202
message OKDPGPDIBGG {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 14189
}

// CmdId: 7922
message GGGEDCNMNNL {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 727
}

enum FBCOEGFFBDB {
	FBCOEGFFBDB_AAKANBFNHEO = 0;
	FBCOEGFFBDB_NKAOOCLJHDN = 1;
	FBCOEGFFBDB_ENEKBODCJNH = 2;
}

// CmdId: 5779
message MHIMGLBFDPA {
}

message GFAAECNGDAC {
	BMCHAGEMDJP BPIOGPIFLDE = 3; // offset: 24, xor const: 0
	uint32 HEEKOOMEBOG = 2; // offset: 36, xor const: 0
	int32 IFNNCGDEFJD = 4; // offset: 40, xor const: 0
	uint32 DAKBELMMMIG = 1; // offset: 32, xor const: 0
}

// CmdId: 9328
message MHPHNCPDNML {
	repeated PCJAKPLKPGH NEGLKKDDEGC = 7; // offset: 24, xor const: 0
}

enum DEJFKOPODDM {
	DEJFKOPODDM_KHDBIOBLJCL = 0;
	DEJFKOPODDM_MMDAMILOPAB = 10001;
}

// CmdId: 7055
message PMODOENGKPP {
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 3635
	NMCPELHNCCL FCNOKELEBCC = 5; // offset: 24, xor const: 0
}

// CmdId: 500
message DCDCFMFEIMM {
	repeated uint32 IPNPACKKBND = 7; // offset: 32, xor const: 0
	uint32 GFOBLCFLFBH = 10; // offset: 40, xor const: 14595
	int32 IHIGNMLCHDK = 1; // offset: 44, xor const: 6739
	repeated uint32 MEAGONFPPDG = 9; // offset: 16, xor const: 0
}

enum PPJALLKBEEG {
	PPJALLKBEEG_LDKFKKKILMO = 0;
	PPJALLKBEEG_KOPLONFHPKJ = 1;
}

message OFHLMPNLFFC {
	uint32 HBOLPEJLHAL = 4; // offset: 32, xor const: 15583
	uint32 NGJGGJNAHNF = 10; // offset: 36, xor const: 4830
	repeated int32 DALBJGKKDAC = 8; // offset: 24, xor const: 0
}

message FCDPBALGLAG {
}

// CmdId: 2680
message BCEAGGFHFCD {
	uint32 IFNJLLHALOP = 9; // offset: 24, xor const: 3498
}

// CmdId: 8175
message ICBCMBDNAKM {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 12492
}

enum LDHKKKBAAEL {
	LDHKKKBAAEL_COUNT = 0;
	LDHKKKBAAEL_POP = 1;
}

message IJHAFJMHNMG {
	FGKJFCJILIL OMAGKOPBJEB = 1; // offset: 16, xor const: 0
}

message ICAKKIMFOHO {
	FGKJFCJILIL PBNBMCJMAMF = 1; // offset: 24, xor const: 0
}

enum ALBPPDBAAOI {
	ALBPPDBAAOI_LBCBILDFKDB = 0;
	ALBPPDBAAOI_GIGBBMKHBMD = 1;
}

message KNAFGNOOGNH {
}

// CmdId: 9969
message DCAIILKEFGH {
}

// CmdId: 9181
message NEKNONEHNHH {
	uint32 BIEJKKALIIP = 14; // offset: 24, xor const: 3442
}

// CmdId: 9763
message PEEAPOOOBAO {
	uint64 AEDAEPKDOAL = 12; // offset: 40, xor const: 9702
	AHLMPMLHGMA CPEPJEPHPBD = 3; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 56, xor const: 12301
	uint64 HEJBMNAOJFL = 14; // offset: 48, xor const: 15146
}

// CmdId: 5016
message EBAPCMBGHAP {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 13491
}

// CmdId: 1440
message MDAAMEMLPML {
}

// CmdId: 4157
message FPOJIPKBLAI {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 1077
}

message KDPHDCFDLMF {
	FGKJFCJILIL ACEMBJPDCDK = 2; // offset: 40, xor const: 0
	HollowEntityType HCOBCBNNPLD = 1; // offset: 52, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 4; // offset: 48, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 3; // offset: 16, xor const: 0
	string IBACFALKFHM = 5; // offset: 32, xor const: 0
}

message JLBGLKNLFMD {
	int32 KFNFJDDGDBJ = 11; // offset: 44, xor const: 149
	repeated int32 POOIDNHFEDC = 6; // offset: 16, xor const: 0
	repeated int32 LDEIILMIFGI = 3; // offset: 24, xor const: 0
	int32 KDJFIGKAAGM = 1; // offset: 40, xor const: 7423
}

message MKAGHFLNNFM {
	int32 KFNPCEPNIDB = 4; // offset: 32, xor const: 5026
	repeated int32 EKLGNOIEMLA = 1; // offset: 16, xor const: 0
}

// CmdId: 2423
message AOMOPGLOMNL {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 2939
}

message MDHABLKIBIJ {
	FGKJFCJILIL IKEJJNJIKOG = 2; // offset: 24, xor const: 0
	FGKJFCJILIL CKBOJACIJDI = 1; // offset: 32, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 3; // offset: 40, xor const: 0
}

message MEBCHDALDHF {
	PDABMGDABAN HLEAEPDDBLE = 15; // offset: 24, xor const: 0
	int32 ENCANOPLLDM = 1; // offset: 28, xor const: 10223
}

message MDCMADKAICO {
	uint32 LJEBCGGBBNA = 15; // offset: 32, xor const: 16276
	repeated uint32 JBGCCCKMKAF = 3; // offset: 24, xor const: 0
}

enum EFHPHHHKEBC {
	EFHPHHHKEBC_KDMEDACCOFK = 0;
	EFHPHHHKEBC_NPHKHPBMHDP = 1;
	EFHPHHHKEBC_GFCNLBDOFEL = 2;
}

// CmdId: 9279
message BNMFDPHJBAJ {
	repeated int32 NMAGCIFNFKG = 8; // offset: 24, xor const: 0
	uint32 IKNMGIGKDOO = 14; // offset: 32, xor const: 14299
}

message GDKNFMOJFNC {
	string DBOACCIJPDL = 1; // offset: 16, xor const: 0
}

message AKPKOGKIMJL {
	string CCHMOEOOHDP = 4; // offset: 56, xor const: 0
	bool CPGCCJJCEMN = 5; // offset: 68, xor const: 0
	uint32 LGDJKPLKGMH = 8; // offset: 72, xor const: 0
	string HOAJKFKJDFD = 7; // offset: 32, xor const: 0
	KDGCPFALAPD CBJNLKOBINJ = 2; // offset: 76, xor const: 0
	repeated int32 MMDLCKMPHNG = 3; // offset: 40, xor const: 0
	string CKEALLHKCNH = 6; // offset: 24, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 16, xor const: 0
	uint32 KHPHFEHAELK = 9; // offset: 64, xor const: 0
}

message LOKILPKDMHP {
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 16, xor const: 0
	repeated LLJOFEOGNCC MKLMOBKBGDC = 2; // offset: 24, xor const: 0
}

message EOLBFPPPBAA {
	FGKJFCJILIL IKDJDPPLNOM = 1; // offset: 32, xor const: 0
	FGKJFCJILIL AMIJIAHGPMC = 2; // offset: 16, xor const: 0
}

message ILIDACGAJHN {
	uint32 EKLGNOIEMLA = 12; // offset: 28, xor const: 12931
	uint32 OFOHMECNCIO = 8; // offset: 32, xor const: 12812
	uint32 HPIIHHICOAF = 7; // offset: 24, xor const: 7452
}

message NOLNKKKGFOG {
	repeated HollowGridLink MCFKMJFHOOP = 1; // offset: 24, xor const: 0
}

// CmdId: 6437
message CLLOCLGPLFI {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 132
}

// CmdId: 5475
message KEBCDHFCCKP {
	uint64 AEDAEPKDOAL = 5; // offset: 40, xor const: 14756
	NLDFCKOOECG CPEPJEPHPBD = 14; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 1729
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 8; // offset: 56, xor const: 8845
}

// CmdId: 7425
message NODMELFNOPL {
	uint32 CNNFHILKJPI = 14; // offset: 36, xor const: 5154
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 16017
	string DBPIEEMPAKL = 7; // offset: 24, xor const: 0
}

message OJLFLLNKDOB {
	FGKJFCJILIL LJBJIDKPADJ = 2; // offset: 40, xor const: 0
	FGKJFCJILIL JAMOJHCHODC = 3; // offset: 16, xor const: 0
	FGKJFCJILIL HDDODEFFPJB = 4; // offset: 24, xor const: 0
	bool GJCLJAFDEJA = 5; // offset: 56, xor const: 0
	repeated OFIIFKENFKF IMFHFCDIJBC = 1; // offset: 32, xor const: 0
}

message CNGOEHINGIP {
	int32 FBCFJIHPOFJ = 12; // offset: 24, xor const: 3779
}

message OKLBPGGBKKC {
	uint32 KFBCDDCIKAM = 1; // offset: 28, xor const: 0
	bool NMPGMGGFLDH = 5; // offset: 24, xor const: 0
	int32 DLADEJFFHFC = 2; // offset: 32, xor const: 0
	bool NHHFJCMOKEF = 3; // offset: 26, xor const: 0
	bool NHKHGONDPMC = 4; // offset: 25, xor const: 0
}

message DPIPKKJJIAB {
	DLCEMKGCCCA GGMGEHBMDLC = 1; // offset: 24, xor const: 0
	uint32 PBOAMDEBIGO = 2; // offset: 32, xor const: 0
}

// CmdId: 962
message FCHAIHGFCPF {
	AHDLPDHEMHM CEIHLKCPIOF = 11; // offset: 32, xor const: 0
	repeated AHDLPDHEMHM NGECCIMHKBP = 12; // offset: 40, xor const: 0
	AHDLPDHEMHM FBCILPDHFLL = 14; // offset: 16, xor const: 0
}

message AJLLDCLOHCC {
	string GMKGIJAJOCJ = 1; // offset: 24, xor const: 0
	string GACIFFBDGCF = 2; // offset: 16, xor const: 0
}

enum FDNCLONHJLL {
	FDNCLONHJLL_PREPARE_DATA_TYPE_NONE = 0;
	FDNCLONHJLL_PREPARE_DATA_TYPE_MESSAGE = 1;
	FDNCLONHJLL_PREPARE_DATA_TYPE_INTERKNOT = 2;
}

// CmdId: 5342
message JPGIKGFMNGD {
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 5; // offset: 48, xor const: 2099
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 343
	PGOMLIKPJMP CPEPJEPHPBD = 6; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 9; // offset: 40, xor const: 2926
}

// CmdId: 1505
message DGPMMIOPLKN {
	uint32 DMIMGNLILLP = 3; // offset: 24, xor const: 1410
}

enum FABIMGEEJOK {
	FABIMGEEJOK_CJLFNKNNGOG = 0;
	FABIMGEEJOK_KFOEGPAAMIC = 1;
	FABIMGEEJOK_LLDEANJCJFG = 2;
	FABIMGEEJOK_NOHJDDKDLDG = 3;
	FABIMGEEJOK_COMECFIDFIK = 4;
	FABIMGEEJOK_KDDMDPBNMFC = 5;
	FABIMGEEJOK_NEBCFPHJMBE = 6;
	FABIMGEEJOK_IHPCFODMPKH = 10;
	FABIMGEEJOK_CFIEBIBDOEB = 99;
	FABIMGEEJOK_HAAFCLBOKLJ = 102;
}

message EGGDHNKKGEO {
	uint32 AMHBBOAFGFC = 12; // offset: 36, xor const: 1247
	uint32 GFCLKDAOMBM = 1; // offset: 32, xor const: 12757
	uint32 OFOHMECNCIO = 9; // offset: 40, xor const: 3698
	bool DKJPFHEBCKH = 14; // offset: 24, xor const: 0
	uint32 NLGHJLHIGCM = 4; // offset: 28, xor const: 14740
}

message GEDBFLPCJLJ {
	repeated FAJACHHHPBO CPAGFLFJEBC = 2; // offset: 16, xor const: 0
	uint32 LHPFJFPGEEA = 1; // offset: 32, xor const: 0
}

// CmdId: 2325
message ILLGLNDILFG {
	uint32 HLEAEPDDBLE = 12; // offset: 24, xor const: 12773
}

message IHOCOGDJFCI {
	repeated GEAGHMNKJJJ EMCAHGICCAC = 2; // offset: 32, xor const: 0
	PEJAJJIICPN KFGNJBCLBLG = 1; // offset: 40, xor const: 0
	FGKJFCJILIL DPGDDHBLDKI = 3; // offset: 24, xor const: 0
}

// CmdId: 247
message GDBLPEAIKLL {
	uint32 CPEGJHGIFAA = 7; // offset: 24, xor const: 4184
}

message HIHKKBHKOOE {
	bool DCCDKIBIBEF = 4; // offset: 33, xor const: 0
	FGKJFCJILIL ANBMHPHJOIO = 1; // offset: 16, xor const: 0
	bool JGPIOKMAAEP = 3; // offset: 32, xor const: 0
}

// CmdId: 8763
message KMCPMIFJEPE {
	uint32 HJGCHCAKKNJ = 13; // offset: 36, xor const: 9293
	uint32 BBPJKDPGIPG = 15; // offset: 32, xor const: 5039
	map<uint32, uint32> NKGPHLLFNOB = 8; // offset: 16, xor const: 0
}

// CmdId: 6587
message OELDMNHPAAE {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 11485
}

// CmdId: 7542
message NNBIJABFKJK {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 10163
}

// CmdId: 1760
message HDODMOLHADG {
	uint32 CKCLOFPICJP = 5; // offset: 24, xor const: 2294
}

message KOEGGPMAHIM {
	JCAIEKOGNGC KIAMDFIOGJD = 7; // offset: 24, xor const: 0
	int32 IGEKIBJNPNA = 13; // offset: 32, xor const: 6858
}

message MDBDGGPHMFG {
	bool PBOAMDEBIGO = 1; // offset: 25, xor const: 0
	bool MKKJCFLOAJC = 2; // offset: 24, xor const: 0
}

message CKBPEJBCMIO {
	enum IINAOHDFFIA {
		IINAOHDFFIA_NONE = 0;
		IINAOHDFFIA_INSTANCED_ABILITY_ID = 1;
		IINAOHDFFIA_INSTANCED_MODIFIER_ID = 2;
	}

	int32 EIDBJKNMEJC = 3; // offset: 44, xor const: 0
	repeated int32 NAHLOOAEAEJ = 4; // offset: 16, xor const: 0
	oneof HGJLGJFPNPB {
		int32 instanced_modifier_id = 2;
		int32 instanced_ability_id = 1;
	}
}

message AIIAKEPDOJE {
	bool ADBBBJLEBMD = 8; // offset: 61, xor const: 0
	string NLMHFPBBNNI = 4; // offset: 16, xor const: 0
	int32 LDLJPDBHPLJ = 1; // offset: 56, xor const: 0
	repeated string EOGNCFFAKGG = 5; // offset: 48, xor const: 0
	string OOPFKJLAKKJ = 3; // offset: 32, xor const: 0
	bool LOLNBHABHAK = 6; // offset: 60, xor const: 0
	string PBBDNBIGFMI = 7; // offset: 24, xor const: 0
	int32 JOJBOMLDHAO = 2; // offset: 64, xor const: 0
}

message MEGKPCHHBBM {
	enum OKFGPPAHKIO {
		OKFGPPAHKIO_NONE = 0;
		OKFGPPAHKIO_STR = 1;
		OKFGPPAHKIO_HASH = 2;
	}

	oneof EHIDIDHEKIJ {
		string str = 1;
		uint32 hash = 2;
	}
}

// CmdId: 5288
message IFDFHIPOAGH {
	repeated uint32 GLFAIDIPKHL = 9; // offset: 16, xor const: 0
	uint32 GFCLKDAOMBM = 14; // offset: 44, xor const: 15699
	repeated uint32 PPBCKBHDIIH = 13; // offset: 32, xor const: 0
	uint32 EKLGNOIEMLA = 3; // offset: 40, xor const: 9955
}

// CmdId: 2606
message JPJJDGELPLI {
	uint32 HAJDKPEANBC = 8; // offset: 24, xor const: 1823
}

message MFEBOEDEMPE {
	bool MKKJCFLOAJC = 4; // offset: 29, xor const: 0
	int32 EKLGNOIEMLA = 1; // offset: 36, xor const: 0
	bool FOPPABKBCIH = 6; // offset: 28, xor const: 0
	bool GMCAABHABEO = 3; // offset: 30, xor const: 0
	int32 GJPPELNNBEN = 5; // offset: 32, xor const: 0
	int32 HLEAEPDDBLE = 2; // offset: 24, xor const: 0
}

// CmdId: 4788
message IFEPLPPOADA {
	int32 IHIGNMLCHDK = 14; // offset: 44, xor const: 3795
	uint32 KGBEPDABMJE = 11; // offset: 48, xor const: 7741
	repeated DEOKGFOPEDB KMMELEGOHOO = 10; // offset: 32, xor const: 0
	uint32 HMJHFMHOOFF = 13; // offset: 40, xor const: 12852
	string AFLKOOLENPI = 7; // offset: 24, xor const: 0
}

message HOOJJPJMADN {
	string GBJIEBEKHNA = 2; // offset: 24, xor const: 0
	repeated LNINNDACNPE GFMKPFCHILH = 3; // offset: 16, xor const: 0
	bool DCAMJLPNPNG = 1; // offset: 40, xor const: 0
}

// CmdId: 6344
message NIHNNDMNHHA {
	BAMDBNHHHDJ EPKJLOIIBBI = 13; // offset: 16, xor const: 0
}

// CmdId: 5409
message OCMFLAMKBII {
	uint32 NMHNBHDEKBP = 2; // offset: 28, xor const: 15411
	uint32 CPEGJHGIFAA = 5; // offset: 24, xor const: 228
}

// CmdId: 3105
message FEEEGEMPGMI {
	uint32 CPEGDKBNGDH = 12; // offset: 32, xor const: 451
	uint32 EKLGNOIEMLA = 6; // offset: 28, xor const: 2110
	uint32 MHDFOCGAOPO = 7; // offset: 24, xor const: 14363
}

message OOMLPHCIAIM {
	repeated uint32 BKECKNNKLPO = 1; // offset: 16, xor const: 0
	bool KHFFDKGGOPB = 2; // offset: 32, xor const: 0
}

// CmdId: 5584
message OJHIAEJIOJE {
	int32 HHDGGJMOJHI = 3; // offset: 24, xor const: 7355
}

message PAPFGCEFNIA {
	HAPLOHNMGHJ PFCIOMCFGKL = 3; // offset: 44, xor const: 0
	KJCAAFPNOHO EHLFGCCHECJ = 5; // offset: 24, xor const: 0
	uint32 CMOLKPGAPEO = 2; // offset: 48, xor const: 0
	KJCAAFPNOHO HMCPPMGJPJH = 4; // offset: 32, xor const: 0
	MJCPCKPAGOH PCBAMHPKCHG = 1; // offset: 40, xor const: 0
	ALFAIAAFKHD BNLOIMJJGFO = 6; // offset: 52, xor const: 0
}

message IKNMNICOCNM {
	repeated LDIOEKLBBDI ACANJEFCHKL = 3; // offset: 16, xor const: 0
	bool MAEPJNGMKDJ = 2; // offset: 33, xor const: 0
	bool OJIGAMKELLG = 1; // offset: 32, xor const: 0
}

// CmdId: 1012
message KBJCANPADGC {
	repeated CBKPJPKDGEJ CIGDFJKJHJO = 1; // offset: 24, xor const: 0
	float PILAAEFBPDM = 8; // offset: 32, xor const: 0
}

enum LJOBGFBPIDA {
	LJOBGFBPIDA_AOLIPAOMOHA = 0;
}

// CmdId: 9550
message DEGPDEMNKPF {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 4601
}

// CmdId: 536
message PBHEGJBJMMF {
	map<int32, int32> JIMOHCAHMJI = 3; // offset: 16, xor const: 0
}

message NDBGCLEIPAL {
	FGKJFCJILIL AEIHIBLACCM = 2; // offset: 24, xor const: 0
	FGKJFCJILIL MHINMINPONI = 4; // offset: 16, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 3; // offset: 40, xor const: 0
	LEHENCIPJIE MPOLOJLNGDL = 1; // offset: 48, xor const: 0
}

message PENNALCJHBE {
	string OPBPINPHDOL = 3; // offset: 32, xor const: 0
	repeated FGKJFCJILIL EJDEKFCCENA = 1; // offset: 40, xor const: 0
	FGKJFCJILIL IJAKNKECGKG = 4; // offset: 16, xor const: 0
	string EEHLAOCPGDB = 2; // offset: 48, xor const: 0
}

message KCCPCNKCNOB {
	string DBOACCIJPDL = 2; // offset: 24, xor const: 0
	int32 NBNJEFMBCEE = 3; // offset: 32, xor const: 0
	bool IACKCNHEGKD = 4; // offset: 40, xor const: 0
	PostEffectType HLEAEPDDBLE = 1; // offset: 36, xor const: 0
}

// CmdId: 2255
message ABFGFEFFEJN {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 6993
}

// CmdId: 4290
message LLBFGBHGANM {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 1840
}

// CmdId: 7317
message OBJAGBMIDDM {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 2595
}

message AMIBMJCFMJB {
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 24, xor const: 0
	FGKJFCJILIL ONBCDKMPFPK = 2; // offset: 32, xor const: 0
}

// CmdId: 3002
message EODIDIJAKGF {
	repeated EJFPJPHOHPE EHHADGAPJDD = 8; // offset: 16, xor const: 0
	repeated ICFGODJBAOM MHEBDCIOMAI = 12; // offset: 40, xor const: 0
	bool CBFBFJMPPHM = 2; // offset: 50, xor const: 0
	int32 GCALGKGBHDO = 7; // offset: 56, xor const: 1409
	bool GACNDEKMCKB = 4; // offset: 49, xor const: 0
	bool CAJNKCKMLGI = 11; // offset: 48, xor const: 0
	int32 LACBPMGKLJB = 1; // offset: 52, xor const: 1751
	repeated BJJEMPMGFFN PCIECDCKDAP = 10; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 60, xor const: 4770
}

// CmdId: 8101
message POMMDOABCPD {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 14133
}

// CmdId: 3580
message LBBEOOEIFOJ {
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 2712
	JPPNFLGHPHF CPEPJEPHPBD = 9; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 48, xor const: 7800
	uint64 HEJBMNAOJFL = 10; // offset: 40, xor const: 3765
}

message IOIKADNIIAD {
	uint32 MBPNPBGAPCE = 2; // offset: 76, xor const: 7021
	int32 KBKLJLLBLCD = 12; // offset: 64, xor const: 7711
	repeated KFIDJIFIEDM KAHPBMBFPKA = 14; // offset: 16, xor const: 0
	uint32 KBNBFMCKFOE = 11; // offset: 48, xor const: 15324
	int64 NDPBONCOLMH = 8; // offset: 56, xor const: 3995
	uint32 DJCPBKHAKGF = 4; // offset: 68, xor const: 16258
	int32 ECFNNFKLEPH = 3; // offset: 52, xor const: 15452
	uint32 MOMGDEFPOGM = 10; // offset: 80, xor const: 14759
	map<uint32, uint32> GOGNBDIGCNJ = 13; // offset: 40, xor const: 0
	repeated uint32 EFOOPPOIMOE = 6; // offset: 24, xor const: 0
	uint32 EKLGNOIEMLA = 5; // offset: 72, xor const: 4652
	uint32 PLFCIIAEIFC = 9; // offset: 84, xor const: 16162
}

message DEFGIDPGDHH {
	HIJPOABGBKK KBFBDIJGDGG = 1; // offset: 32, xor const: 0
	LDHKJGEMKIO OCAOFHJGJPC = 3; // offset: 16, xor const: 0
	LLJOFEOGNCC JAGKKPPCPFK = 2; // offset: 36, xor const: 0
}

// CmdId: 6638
message KDGBJADMGCH {
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 978
	uint64 HEJBMNAOJFL = 5; // offset: 56, xor const: 3724
	uint32 KMKPPDICOKA = 10; // offset: 40, xor const: 14782
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 16, xor const: 0
	JBIKAEIDIOL CPEPJEPHPBD = 2; // offset: 24, xor const: 0
}

// CmdId: 9933
message HGBBJMJABJO {
	FAKNFKDEHJE GGOMEMCNOAL = 14; // offset: 24, xor const: 0
}

enum ICIHPNPIBHC {
	ICIHPNPIBHC_TOT_DEFAULT = 0;
	ICIHPNPIBHC_TOT_CAR = 1;
	ICIHPNPIBHC_TOT_BUS = 2;
	ICIHPNPIBHC_TOT_SUBWAY = 3;
	ICIHPNPIBHC_TOT_MOTOR = 4;
}

message OEDPLCLFPLI {
	int64 COKLIMHEIHI = 12; // offset: 40, xor const: 201
	uint32 FCLPINBBCHD = 5; // offset: 36, xor const: 4728
	string CFDDOHAILFB = 1; // offset: 16, xor const: 0
	uint32 KFNPCEPNIDB = 6; // offset: 32, xor const: 9810
	uint32 FLNILHOIDAC = 7; // offset: 52, xor const: 16129
	uint32 CAFDKMKAAJH = 11; // offset: 48, xor const: 1509
}

message IGJEKICLDDF {
	uint32 PEDKNCIMHLA = 1; // offset: 24, xor const: 0
	uint64 EFOCIEHGBNA = 2; // offset: 32, xor const: 0
	uint64 MOHHBACKBOK = 3; // offset: 40, xor const: 0
}

// CmdId: 4803
message AGBFFCJGOHO {
	bool GHMKOINGGLH = 5; // offset: 28, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 13867
}

message PDMKMHLLPHI {
	string LPKFCGNAMPJ = 12; // offset: 24, xor const: 0
	uint32 OBPMOEHGAIM = 3; // offset: 52, xor const: 10633
	uint32 GCBIFKHALPH = 6; // offset: 32, xor const: 1130
	uint64 DIMEDPILOOA = 14; // offset: 40, xor const: 2733
	uint32 NDIPLLIFDND = 1; // offset: 36, xor const: 207
	uint32 MDHJEKIIDIO = 10; // offset: 48, xor const: 13505
}

message PILKEGCDGEL {
	uint32 MPCJAJNKKDE = 3; // offset: 48, xor const: 0
	uint32 PEOCJCBFHJE = 2; // offset: 52, xor const: 0
	repeated int32 AHFPHBMAKFI = 5; // offset: 24, xor const: 0
	map<uint32, uint32> PMFHKDNNKCE = 1; // offset: 40, xor const: 0
	string GJNCANEGADM = 4; // offset: 16, xor const: 0
}

message COLAGPNLBHF {
	PostEffectType HLEAEPDDBLE = 1; // offset: 40, xor const: 0
	bool IACKCNHEGKD = 4; // offset: 44, xor const: 0
	string DBOACCIJPDL = 2; // offset: 16, xor const: 0
	FGKJFCJILIL NBNJEFMBCEE = 3; // offset: 32, xor const: 0
}

message APMHKGIFEON {
	uint32 OKDNNHHOHCK = 5; // offset: 44, xor const: 12888
	int32 JIFOALHKOAF = 12; // offset: 40, xor const: 44
	int32 PGBADFMPAPK = 7; // offset: 48, xor const: 7240
	JLNLHBOGFII ACEMBJPDCDK = 3; // offset: 16, xor const: 0
	uint32 HGANFMDOEFK = 6; // offset: 36, xor const: 4197
	int32 JGHNEOMIBLN = 15; // offset: 32, xor const: 12559
}

// CmdId: 8811
message DEKOMMFBLOE {
	map<uint32, uint32> BNAJDJHBECP = 12; // offset: 24, xor const: 0
}

message CJAMNANJCML {
	bool NAGCHMJKNAI = 1; // offset: 24, xor const: 0
}

message LEJKGLFGIAB {
	repeated LGFJHCGPEAK EHEKHHADGOB = 5; // offset: 24, xor const: 0
}

message LAJGHJDGOKM {
	uint32 CONOAJMMHMB = 1; // offset: 24, xor const: 0
	bool HHEOJJDIBIA = 2; // offset: 28, xor const: 0
}

message BOFHCIJNNEE {
	JIGPDFKHLPL FJOECPEAHPN = 19; // offset: 32, xor const: 0
	EAIEOGODGOP IOMNKEHPJOA = 1001; // offset: 56, xor const: 0
	ADMEBAFJOLI POCEGNDAKOC = 14; // offset: 72, xor const: 0
	LLADOPDHAAI HOOFGEAPHHP = 16; // offset: 88, xor const: 0
	repeated uint32 MEKFJPIGCHJ = 20; // offset: 40, xor const: 0
	int32 DDHAIAPKEOD = 12; // offset: 100, xor const: 0
	int32 DDMIPKHLKDL = 10; // offset: 116, xor const: 0
	int32 MJIJGNBMIKH = 1; // offset: 76, xor const: 0
	LKHOJEJJMNO MMBDBOGDFAG = 7; // offset: 108, xor const: 0
	JIGPDFKHLPL IJHOPKLKPKJ = 18; // offset: 64, xor const: 0
	KHJOLJLHGNP GJGALCAEJPE = 23; // offset: 24, xor const: 0
	repeated string OFCGEBAEIAN = 11; // offset: 16, xor const: 0
	int32 GJCKKMFMHPH = 22; // offset: 92, xor const: 0
	BGEBIEPLIIN COFLGGKCKGP = 2; // offset: 112, xor const: 0
	uint32 HMJHDAIKOJE = 21; // offset: 104, xor const: 0
	bool CDOPHENOIFA = 15; // offset: 80, xor const: 0
	int32 INEMAMOLPEK = 13; // offset: 96, xor const: 0
	uint32 JKHCMCDKJEG = 17; // offset: 84, xor const: 0
}

// CmdId: 5714
message JJFGNKHCGEL {
	int32 BHMJNPHIHBD = 5; // offset: 24, xor const: 1301
}

message EJLIKAKJCHJ {
	uint32 OPLGEBADGBH = 1; // offset: 24, xor const: 0
}

// CmdId: 8105
message DEEDBEPLJHD {
}

message JGLGDIDPAPJ {
}

// CmdId: 5355
message OKJPDFMBBHM {
	uint32 AFMOPJONJBE = 11; // offset: 32, xor const: 1279
	uint32 JNIAMIKKAAF = 15; // offset: 28, xor const: 4132
	uint32 FMNLIEDIAMK = 12; // offset: 24, xor const: 14233
	uint32 PHPIFGFOBNE = 13; // offset: 36, xor const: 15996
	uint32 NPIAKBEDBLE = 8; // offset: 44, xor const: 5859
	uint32 HDKJLAOCOPA = 3; // offset: 40, xor const: 7439
}

// CmdId: 5616
message NLIIHJKLPCI {
	bool LNOFGHPKDGK = 2; // offset: 44, xor const: 0
	uint32 HIHJPDKOFID = 9; // offset: 40, xor const: 6972
	string JHBHHBPPEEN = 15; // offset: 24, xor const: 0
	uint32 DCENCIPOBMC = 11; // offset: 48, xor const: 15464
	string NMMADBDFJCK = 3; // offset: 32, xor const: 0
}

enum HAPLOHNMGHJ {
	HAPLOHNMGHJ_JGIJBNHPOEH = 0;
	HAPLOHNMGHJ_DCEIKDBENCK = 1;
	HAPLOHNMGHJ_FBHAGPPCFNL = 2;
	HAPLOHNMGHJ_FFGFPDMGMFE = 3;
	HAPLOHNMGHJ_LMFEPFBMOJJ = 4;
}

// CmdId: 3750
message MMMJAICNHCM {
	bool ALPLGBAEPOJ = 11; // offset: 24, xor const: 0
}

message DEEINFILEKC {
	bool NIECAAPELPC = 12; // offset: 24, xor const: 0
}

// CmdId: 9745
message MNNCLJIPOIH {
	int32 IJAILFHDHMB = 6; // offset: 24, xor const: 9328
	int32 IHIGNMLCHDK = 7; // offset: 28, xor const: 5852
}

message GPEFNIABBPJ {
	uint32 CBELLMGEFDA = 2; // offset: 32, xor const: 0
	ENIAFFJKLPO FALGCIMJCHM = 1; // offset: 16, xor const: 0
}

message KEHGIPLICJF {
	int32 NBNJEFMBCEE = 4; // offset: 48, xor const: 0
	OAFBFNEKLEE HLEAEPDDBLE = 3; // offset: 52, xor const: 0
	bool EABOHHKFEEM = 5; // offset: 59, xor const: 0
	FGKJFCJILIL IPKLDCAFBOJ = 7; // offset: 16, xor const: 0
	bool AIILCIIMLLP = 9; // offset: 57, xor const: 0
	FGKJFCJILIL FPAMMKPBAGA = 2; // offset: 40, xor const: 0
	bool HLOPDECPFMA = 8; // offset: 58, xor const: 0
	bool GGHCFJLOIPG = 6; // offset: 56, xor const: 0
	FGKJFCJILIL JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

message KFIMGFDNHFC {
}

message GBEMKELLCHA {
	string DBOACCIJPDL = 6; // offset: 24, xor const: 0
	int32 PGBADFMPAPK = 14; // offset: 32, xor const: 11974
	ChessUIControlType MLOCGOPJHKA = 15; // offset: 36, xor const: 0
}

message BBPDECJACMJ {
}

message DGFMJHCJCNG {
	repeated uint32 ALLKNECDFEG = 1; // offset: 24, xor const: 0
}

message PCJAKPLKPGH {
	uint32 AKEKFONOGGJ = 6; // offset: 64, xor const: 0
	HFOGBFJBFCE JCCADBICFEF = 1; // offset: 16, xor const: 0
	bytes NFKEHMEHFLH = 3; // offset: 32, xor const: 0
	DOODFFPABPM BCNIOBLEDNH = 5; // offset: 56, xor const: 0
	HBFBNKAODPJ NCAGHHFDAOG = 4; // offset: 40, xor const: 0
	bool DABLOBHMDBH = 7; // offset: 68, xor const: 0
	DIMFLLFJNEN AFPHGPEGPBH = 2; // offset: 60, xor const: 0
	HBFBNKAODPJ GOBNBFMNADI = 8; // offset: 48, xor const: 0
}

// CmdId: 7541
message HBDOENPJBGM {
	LKGLAMDOIHI LNFAIEOOHNE = 8; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 6320
}

message BAMDBNHHHDJ {
	repeated IKMCCPGPKPL KABHHJIFPPB = 2; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 32, xor const: 741
}

message DPMPICBHLHB {
	IAIFHONNPFH OKNDDEHGJBB = 2; // offset: 32, xor const: 0
	MPLOIHHKGLM MNOMAGLEDKP = 1; // offset: 16, xor const: 0
}

// CmdId: 3020
message CIJGHDOGENH {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 9148
}

message KDCCAMDNIDH {
	ABMABLFFPEN AFCENAAEMKP = 7; // offset: 24, xor const: 0
}

enum KJBIFBCNPKJ {
	KJBIFBCNPKJ_NDLBNGCLGDM = 0;
}

message EPJOHIJFGEC {
	PCGCOKKCJLE NODBAHCCOBD = 1; // offset: 24, xor const: 0
}

message FMDMPFNDALK {
	uint32 NCAGHHFDAOG = 13; // offset: 40, xor const: 8640
	AENFCJHIEEM DPHOFAFNDLC = 8; // offset: 24, xor const: 0
	repeated BBCMOPLJAIL PCBFCIPHIGI = 9; // offset: 32, xor const: 0
}

enum DKNOEBEGAJK {
	DKNOEBEGAJK_MFJHJGEMCDN = 0;
	DKNOEBEGAJK_OCAKEACJJAB = 1;
	DKNOEBEGAJK_NNPCBNAHLOO = 2;
}

// CmdId: 7723
message BPLLKPFNMNF {
	uint32 CBEKJFGOOEK = 11; // offset: 60, xor const: 3469
	repeated uint32 APNDAHMMMML = 9; // offset: 32, xor const: 0
	uint32 PHFKAEHHBNF = 3; // offset: 52, xor const: 11525
	string OADODDJEPMB = 6; // offset: 16, xor const: 0
	bool BKFADLJNBPJ = 12; // offset: 73, xor const: 0
	int32 DIHPHKCMFOB = 1731; // offset: 80, xor const: 10368
	bool ANMGJBMLLMK = 7; // offset: 87, xor const: 0
	uint64 PCMACLCEGME = 5; // offset: 64, xor const: 9181
	uint32 GDBJOOIDHLL = 8; // offset: 76, xor const: 7933
	bool EKNNHPIBIME = 13; // offset: 86, xor const: 0
	bool OHHLNDDJEMC = 14; // offset: 85, xor const: 0
	bool PEKLANMNOHE = 1; // offset: 84, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 56, xor const: 12260
	bool PMJIOLPMGBO = 2; // offset: 72, xor const: 0
	bytes JBMKEEEBFDI = 4; // offset: 24, xor const: 0
	uint32 PHDCPENIMEH = 10; // offset: 48, xor const: 836
}

message NIGOLGGNMCH {
	bool MAFPPFLMKON = 1; // offset: 26, xor const: 0
	bool MKKJCFLOAJC = 3; // offset: 25, xor const: 0
	int32 AFJOGKIENOC = 2; // offset: 32, xor const: 0
	NKPCOAOHKHA IOPNIIBPJFN = 5; // offset: 28, xor const: 0
	bool HNDCBPADDHG = 4; // offset: 24, xor const: 0
}

// CmdId: 6109
message CDNLMEJGIBP {
	DAFOJLDLDBC DJMJLPBKEHG = 1; // offset: 16, xor const: 0
}

message GNDMFNDCNDK {
	uint32 LLNPIFPKJGM = 1; // offset: 44, xor const: 4072
	string GJNIPIDILJH = 9; // offset: 32, xor const: 0
	uint32 JNDALPHDMCO = 14; // offset: 40, xor const: 13378
	repeated uint32 MKKJCEDCDBM = 7; // offset: 16, xor const: 0
	uint32 ALOMPEPNAMH = 2; // offset: 48, xor const: 9283
}

message FGKJFCJILIL {
	string HPNJFKABKFC = 1; // offset: 24, xor const: 0
}

enum NMCDNPDFFBJ {
	NMCDNPDFFBJ_PHJHPMNNONG = 0;
	NMCDNPDFFBJ_HKGHGEFMLAH = 1;
}

message IHKLFLEBPDK {
	string HLAFOHLEBCF = 1; // offset: 24, xor const: 0
}

// CmdId: 6662
message OHDMNCABGEM {
	uint32 IIIGDHJPFMI = 12; // offset: 40, xor const: 10647
	string FMFBKIMIHIN = 13; // offset: 16, xor const: 0
	IFGDJNNPCAN CKBOJACIJDI = 7; // offset: 32, xor const: 0
	uint32 HONFNLBAIAN = 4; // offset: 44, xor const: 5041
}

// CmdId: 3955
message MAJMFFLCPHB {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 16274
}

message ANLEJPPGMPB {
	FJPFOCJAHDH DJPBPGFIBDI = 9; // offset: 24, xor const: 0
}

// CmdId: 3224
message GGEFNKJCBMH {
	int32 GJPPELNNBEN = 2; // offset: 36, xor const: 1564
	int32 AKGCAOJNAEG = 13; // offset: 40, xor const: 10705
	int32 PPCNCKBKEJB = 14; // offset: 48, xor const: 15510
	int32 PFALALOLBGL = 12; // offset: 32, xor const: 9613
	int64 JKFJAOBEAGI = 9; // offset: 24, xor const: 15767
	int32 DMEGAAMMDGG = 11; // offset: 44, xor const: 9097
}

enum HCLPBDEADGM {
	HCLPBDEADGM_CCJIODNFEFA = 0;
	HCLPBDEADGM_CIKGPGPPFBL = 1;
	HCLPBDEADGM_CDJNCMHBDPJ = 2;
}

// CmdId: 4414
message NFPHLDJINNO {
}

message HDFHDCCAOLC {
	JLEFHMNFFHN CPEPJEPHPBD = 7; // offset: 16, xor const: 0
}

message AOOOFFJDBEM {
	string NHEMPPCFLEN = 1; // offset: 24, xor const: 0
	int32 HLDGILCCDOJ = 2; // offset: 32, xor const: 0
}

message GKBJIAENMFI {
	repeated uint32 HONIAFPIOBC = 2; // offset: 16, xor const: 0
	bool LLLEDJLENDP = 1; // offset: 32, xor const: 0
}

enum FKNGHODDFNO {
	FKNGHODDFNO_END_BLACK_MASK_NONE = 0;
	FKNGHODDFNO_END_BLACK_MASK_WAIT_TRANSITION = 1;
	FKNGHODDFNO_END_BLACK_MASK_AUTO_CLOSE = 2;
}

message IKMCCPGPKPL {
	repeated LELJMLNFICH MKLMOBKBGDC = 3; // offset: 24, xor const: 0
	uint32 LHENDDCMDAM = 7; // offset: 32, xor const: 270
}

message LEJLANPGDAE {
	uint32 FAMEFJHIFMH = 1; // offset: 32, xor const: 0
	uint32 IHBPOCCGLKB = 2; // offset: 28, xor const: 0
	uint32 ENCANOPLLDM = 3; // offset: 24, xor const: 0
}

message NNDEEJAAJNB {
	int32 GBACBNPOPAH = 8; // offset: 48, xor const: 0
	string PECAFAPOHND = 1; // offset: 32, xor const: 0
	float CKILDKNGINN = 6; // offset: 60, xor const: 0
	EDGCAIEHLHH HCGNFMFOLFO = 2; // offset: 16, xor const: 0
	int32 ODAAFDKEJEP = 9; // offset: 56, xor const: 0
	FHANJGEFKLI HLEAEPDDBLE = 5; // offset: 52, xor const: 0
	float NGFLBMOBPMJ = 7; // offset: 64, xor const: 0
	bool EFHKPGKDCOP = 10; // offset: 68, xor const: 0
	bool FGBPLOKICAF = 4; // offset: 69, xor const: 0
	EDGCAIEHLHH MEJNAAHILIM = 3; // offset: 40, xor const: 0
}

// CmdId: 9377
message GCKIMNIFDAP {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 14733
}

enum GKDKGDCLEAJ {
	GKDKGDCLEAJ_HOLLOW_SHOP_SHOW_TYPE_NORMAL = 0;
	GKDKGDCLEAJ_HOLLOW_SHOP_SHOW_TYPE_BY_GROUP = 1;
}

// CmdId: 2459
message EOLBBBDHGNB {
	string MCAPKBCEHHM = 1; // offset: 32, xor const: 0
	string KKGKAHJBIIG = 12; // offset: 24, xor const: 0
	uint32 AGAKIKAEHHB = 2; // offset: 40, xor const: 13101
	uint32 HPJJFBEFFPI = 9; // offset: 44, xor const: 14827
	int32 IHIGNMLCHDK = 6; // offset: 48, xor const: 15777
}

message HJILJBANHPN {
	repeated LLNLCACOLGL OOOFEBOPOJD = 9; // offset: 16, xor const: 0
	bool FFCLNODNFAM = 1; // offset: 32, xor const: 0
	int32 OGOIFACKOBF = 2; // offset: 36, xor const: 15897
}

message JFMNCHHKALD {
	FGKJFCJILIL HLAFOHLEBCF = 1; // offset: 24, xor const: 0
}

message EGEHBOIDLAD {
	uint32 IACFJPOKLHE = 10; // offset: 120, xor const: 10691
	repeated uint32 JHEIFFNNMMB = 1978; // offset: 48, xor const: 0
	repeated NFCNGKMEIEB ICAGDPMGAEE = 14; // offset: 80, xor const: 0
	bool MFBEPEOMAMH = 11; // offset: 126, xor const: 0
	repeated uint32 PCAJPMNFJFN = 2; // offset: 88, xor const: 0
	bool LFGGFDAHNPH = 1686; // offset: 125, xor const: 0
	bool IPBBLELGGLJ = 810; // offset: 127, xor const: 0
	repeated uint32 OAAGKKEMHOP = 3; // offset: 32, xor const: 0
	repeated uint32 CLJFPIFGHNB = 5; // offset: 64, xor const: 0
	uint32 OFGGFJCBIDJ = 8; // offset: 104, xor const: 11464
	repeated uint32 HMPICAPMOMF = 877; // offset: 72, xor const: 0
	repeated uint32 PKOJCHDICDL = 1794; // offset: 96, xor const: 0
	uint32 IDNNCNMBPAM = 4; // offset: 108, xor const: 10132
	uint32 DIDADEFCGAA = 358; // offset: 136, xor const: 4157
	repeated uint32 KGKMKIDMGAE = 1419; // offset: 56, xor const: 0
	repeated uint32 ENNHDFLHGPP = 7; // offset: 40, xor const: 0
	uint64 ODJBLJOHKIF = 13; // offset: 128, xor const: 9025
	uint32 LLNBPJPHCED = 12; // offset: 112, xor const: 544
	bool HMIKOOGIKPN = 15; // offset: 124, xor const: 0
	uint32 HCDPIMKANDL = 1055; // offset: 140, xor const: 8093
	uint32 AJHBLCOFPJC = 1; // offset: 116, xor const: 3236
	repeated uint32 FBDMNIEEBHN = 6; // offset: 24, xor const: 0
}

// CmdId: 1019
message MKELOFLENOD {
	BAMDBNHHHDJ EPKJLOIIBBI = 15; // offset: 16, xor const: 0
}

enum DIBKFNKGCGL {
	DIBKFNKGCGL_AHICEEFOMIG = 0;
	DIBKFNKGCGL_JBNIDMOMLAG = 1;
	DIBKFNKGCGL_LOJAPCEDNGN = 2;
}

message IEGBEGDBNGE {
	bool BKDHFLEJNAC = 10; // offset: 48, xor const: 0
	uint32 IIIGDHJPFMI = 13; // offset: 32, xor const: 13493
	uint32 CPEGDKBNGDH = 9; // offset: 44, xor const: 8407
	uint32 OPFEAMDPIAG = 5; // offset: 24, xor const: 2857
	uint32 HIMNJDFAOCH = 3; // offset: 36, xor const: 1383
	bool BKFADLJNBPJ = 15; // offset: 49, xor const: 0
	uint32 BANLCDDECLK = 2; // offset: 28, xor const: 8825
	uint32 LOABNMJMDNI = 8; // offset: 40, xor const: 3222
}

message OAHEBLFKPIC {
	uint32 CPEGDKBNGDH = 10; // offset: 48, xor const: 3229
	uint32 MPKKONPAPCH = 13; // offset: 52, xor const: 1654
	bool EMFFMAFPPII = 5; // offset: 56, xor const: 0
	string HPDBMLBCFON = 2; // offset: 32, xor const: 0
	repeated JKHNMPEIHFB INNLDHJAENF = 15; // offset: 16, xor const: 0
	uint32 AJJEDCGFBDN = 3; // offset: 40, xor const: 12009
	uint32 KEIPIHKKBNH = 14; // offset: 44, xor const: 656
}

// CmdId: 8845
message KAKPGKENDGG {
	uint32 GFOBLCFLFBH = 3; // offset: 28, xor const: 7660
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 6201
}

enum ENAKOFHJBBI {
	ENAKOFHJBBI_DDOECHOECFK = 0;
	ENAKOFHJBBI_BHMIOFHKLOP = 1;
	ENAKOFHJBBI_AEMNPBFKHBC = 2;
	ENAKOFHJBBI_EAOFDAIGOIP = 3;
	ENAKOFHJBBI_JOJPEAHCPBK = 4;
	ENAKOFHJBBI_ELJEELCPIHH = 5;
	ENAKOFHJBBI_OMIMIAJALOA = 6;
	ENAKOFHJBBI_PMIBCDDJEEE = 7;
	ENAKOFHJBBI_GNANKHIFHBE = 8;
	ENAKOFHJBBI_GMLHDEJHJEM = 9;
	ENAKOFHJBBI_BOBJGOADOHE = 10;
	ENAKOFHJBBI_GIDKOOHPPOK = 11;
	ENAKOFHJBBI_DEKBGFKHLNI = 12;
}

message JEJPGHIHCMA {
	FGKJFCJILIL ACEMBJPDCDK = 11; // offset: 56, xor const: 0
	FGKJFCJILIL NMKKGHJMGFM = 7; // offset: 72, xor const: 0
	repeated BAJKLEIGNIG CDBJJOJECMG = 12; // offset: 24, xor const: 0
	PBPNEPEOIJF HLEAEPDDBLE = 1; // offset: 112, xor const: 0
	repeated FGKJFCJILIL CEDEGBDEGHE = 8; // offset: 40, xor const: 0
	string NKIJGOBFOJL = 5; // offset: 88, xor const: 0
	FGKJFCJILIL GDFAFMMKDJE = 2; // offset: 80, xor const: 0
	FGKJFCJILIL PHGFPICGGPL = 6; // offset: 32, xor const: 0
	repeated LBEHJJJGPEI BCKEPMNCJKO = 9; // offset: 16, xor const: 0
	FGKJFCJILIL MBKJOGMFKOL = 3; // offset: 96, xor const: 0
	repeated MLIBEAMJADL IJMDFKAAAIJ = 10; // offset: 104, xor const: 0
	FGKJFCJILIL IIIGDHJPFMI = 4; // offset: 48, xor const: 0
}

message PCPKPLCDIID {
	float EFJPPJJFNJM = 2; // offset: 28, xor const: 0
	float AEIHIBLACCM = 1; // offset: 24, xor const: 0
}

message MOGPNPJOOCA {
	uint32 BHDLCHFDHNO = 11; // offset: 60, xor const: 6426
	repeated uint32 AFAIMHMGEHK = 7; // offset: 16, xor const: 0
	string EBGONDCPMJO = 9; // offset: 32, xor const: 0
	int64 FHAICMLDNOK = 1; // offset: 48, xor const: 8506
	bool MNIEGOJIKPP = 4; // offset: 56, xor const: 0
	repeated AJHGKJINFHL NCDJIINHAMB = 6; // offset: 24, xor const: 0
}

// CmdId: 7463
message PFGIIBNBDBF {
	int32 IHIGNMLCHDK = 3; // offset: 28, xor const: 13249
	int32 MOBFEGPEKEF = 10; // offset: 24, xor const: 4842
	uint64 DIMEDPILOOA = 1; // offset: 32, xor const: 2539
}

enum FGCHGKJFLPL {
	FGCHGKJFLPL_KBPKEMHGCBH = 0;
	FGCHGKJFLPL_AEHCOMDCELP = 1;
	FGCHGKJFLPL_DPHPCBCPHKA = 2;
	FGCHGKJFLPL_HEMJOJMIEIG = 3;
}

// CmdId: 9234
message PELGGLBGDGL {
}

enum AMNEMEAEHHP {
	AMNEMEAEHHP_VHS_FLOW_BUFF_SOURCE_NONE = 0;
	AMNEMEAEHHP_VHS_FLOW_BUFF_SOURCE_QUEST = 1;
}

// CmdId: 4498
message DLEGNBAOPJD {
	uint32 DCENCIPOBMC = 12; // offset: 24, xor const: 12560
}

// CmdId: 3720
message PGBOPMKDCMG {
}

message FDGENGONJMP {
	FGKJFCJILIL CNNFHILKJPI = 1; // offset: 16, xor const: 0
}

// CmdId: 7769
message EGMFHIGNHEB {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 2973
}

message NDCBFGNACIH {
	uint32 KOMIMFNADCM = 11; // offset: 28, xor const: 11964
	uint32 AMIJIAHGPMC = 1; // offset: 24, xor const: 16191
}

enum OFNAKIIFDJP {
	OFNAKIIFDJP_ECEKLLGBGFE = 0;
	OFNAKIIFDJP_DNNHGDICLCG = 1;
	OFNAKIIFDJP_NBAPDDCFOAK = 2;
	OFNAKIIFDJP_FFCMIBFNJEE = 3;
	OFNAKIIFDJP_EBAFDGAAOGI = 6;
	OFNAKIIFDJP_DFKMNMDFFPP = 7;
	OFNAKIIFDJP_NHDLHHCFGHI = 8;
	OFNAKIIFDJP_BJFBDFFHMHL = 9;
	OFNAKIIFDJP_DOLIFDGOMOA = 10;
	OFNAKIIFDJP_OOKGCGHIIFG = 11;
	OFNAKIIFDJP_LDNFNOBKIHB = 12;
	OFNAKIIFDJP_MAFPNKANGLO = 13;
	OFNAKIIFDJP_ECKLHALJHGH = 14;
	OFNAKIIFDJP_NKPIFINOBHL = 15;
	OFNAKIIFDJP_JEFAEFLJIBK = 16;
	OFNAKIIFDJP_HHFLBDOJAFC = 17;
	OFNAKIIFDJP_MLDNOBHJALD = 18;
	OFNAKIIFDJP_DHOAAIHCCOL = 19;
	OFNAKIIFDJP_BJPEJIHHDOG = 20;
}

message NIDPHPKLALL {
	string NDPDGFJGEIF = 2; // offset: 24, xor const: 0
	bool ANFIPPGADMD = 4; // offset: 32, xor const: 0
}

message JGMOOGLPHCO {
}

message AHPDMDJKPMC {
	INLFFDKGPNK AODMMCCECAP = 3; // offset: 24, xor const: 0
}

// CmdId: 5839
message KOCIFPIFKMA {
	uint32 DCENCIPOBMC = 7; // offset: 24, xor const: 3967
}

// CmdId: 7719
message LGBGEKCAMJH {
	repeated IMJOMAPGGCB FAPGMLGODCM = 13; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 1752
}

// CmdId: 4174
message EFPOEGHGJPF {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 2530
	MFGEMBAOENB CPEPJEPHPBD = 6; // offset: 24, xor const: 0
}

// CmdId: 6645
message CIEEBMCEBBM {
	uint32 HLEAEPDDBLE = 10; // offset: 44, xor const: 11676
	int32 IHIGNMLCHDK = 5; // offset: 40, xor const: 10864
	map<uint32, uint32> LOCPFBHPHPL = 15; // offset: 16, xor const: 0
	EEPDCIENCAL BDBDIBCGCBL = 12; // offset: 24, xor const: 0
}

// CmdId: 7374
message EBKFINIEALE {
	NCJKBPCGAMB CPEPJEPHPBD = 10; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 10013
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 13229
	uint64 AEDAEPKDOAL = 15; // offset: 40, xor const: 10168
}

message EBLGOAAIAGP {
	uint32 NPIAKBEDBLE = 3; // offset: 72, xor const: 15913
	repeated FHDIFPNAPIA NMHAAOICIBD = 14; // offset: 16, xor const: 0
	int64 GBMAHLHAMGH = 12; // offset: 80, xor const: 7912
	repeated FHDIFPNAPIA JDGNMABLMAC = 15; // offset: 24, xor const: 0
	uint32 NMHNBHDEKBP = 8; // offset: 76, xor const: 6408
	uint32 HOFHOPHMMNO = 9; // offset: 64, xor const: 8131
	uint32 CBKMCIPEMIF = 1; // offset: 48, xor const: 15614
	uint32 OJNNMPEPDNC = 11; // offset: 68, xor const: 11592
	uint32 PHPIFGFOBNE = 5; // offset: 44, xor const: 5967
	int64 OIPBJGDLBGC = 10; // offset: 56, xor const: 16235
	uint32 IFONIMNCEIF = 2; // offset: 40, xor const: 10241
}

message CANGFFPKADI {
	LDHKJGEMKIO PJFLHPDGIGO = 1; // offset: 16, xor const: 0
}

// CmdId: 1671
message IMNMNIEHLKH {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 865
}

enum OENIFBFNDJL {
	OENIFBFNDJL_MODIFY_TIME_SEGMENT_TYPE_NONE = 0;
	OENIFBFNDJL_MODIFY_TIME_SEGMENT_TYPE_MODIFY = 1;
	OENIFBFNDJL_MODIFY_TIME_SEGMENT_TYPE_SAVE = 2;
	OENIFBFNDJL_MODIFY_TIME_SEGMENT_TYPE_RESET = 4;
	OENIFBFNDJL_MODIFY_TIME_SEGMENT_TYPE_APPLY = 5;
}

// CmdId: 2574
message PMEJBALFCFF {
	FAKNFKDEHJE GGOMEMCNOAL = 7; // offset: 16, xor const: 0
}

message PAIICEFDNLK {
	repeated ECOAGFFAHNM IGMNPAPILDA = 1; // offset: 24, xor const: 0
}

// CmdId: 9349
message EIEJDGFJKDI {
	uint64 GEENLDPINFI = 13; // offset: 24, xor const: 16084
}

message CHNFNMBAHHP {
	bool PPKOKAKLAIN = 7; // offset: 24, xor const: 0
}

message AAAMMNLPNHD {
	uint32 BEKFLJGFLJD = 1; // offset: 32, xor const: 0
	repeated FMLADAJDHHM GJHPDKHHONE = 2; // offset: 16, xor const: 0
}

message DBPLBOMKFIH {
	repeated int32 LMDNANEMPGA = 1; // offset: 16, xor const: 0
}

enum PBDLHPAAKLK {
	PBDLHPAAKLK_KEADNFMHGOF = 0;
	PBDLHPAAKLK_EHMFHIEBJJO = 1;
	PBDLHPAAKLK_DAIMPPCNNDM = 2;
	PBDLHPAAKLK_FMKAHDLCIKM = 3;
	PBDLHPAAKLK_GGJJLINOMDI = 4;
	PBDLHPAAKLK_KNNPKMEHPCC = 5;
	PBDLHPAAKLK_MODBPHFDBPO = 6;
}

message HELNIDGJEGF {
	repeated OKLEIONNCCC LHGECGJPAOH = 7; // offset: 24, xor const: 0
}

// CmdId: 7949
message EGKHBGLNODK {
	repeated MFKDEOEHEHI BFHGCPPPEGP = 13; // offset: 24, xor const: 0
	HBFBNKAODPJ NCAGHHFDAOG = 4; // offset: 32, xor const: 0
}

// CmdId: 1087
message JDCBGGHCHPE {
	IPNAJKDNBBO HLEAEPDDBLE = 12; // offset: 36, xor const: 0
	uint32 CIHANDNPAMA = 8; // offset: 32, xor const: 1280
	uint32 DLMLGALCIBC = 9; // offset: 24, xor const: 7324
	uint32 AMIJIAHGPMC = 1; // offset: 28, xor const: 8488
}

message LHFFGHCCFJF {
	repeated uint32 OJFLFKINOOC = 1; // offset: 16, xor const: 0
}

message CGKPNADDHGB {
	DHFLJAOPJAE PBOAMDEBIGO = 1; // offset: 24, xor const: 0
}

// CmdId: 5791
message DENKEDCPDJI {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 10156
}

// CmdId: 4032
message IAOKHDDHEAP {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 3308
	DFPBMDFINIC ENJEPPJGOCA = 14; // offset: 24, xor const: 0
}

message KKCIFIJHDEK {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 40, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 48, xor const: 0
	FGKJFCJILIL HMHIKBELPIA = 3; // offset: 16, xor const: 0
	FGKJFCJILIL ALEIHPPPCCB = 4; // offset: 32, xor const: 0
	ADIHDDCLCHK JNKOLKFGBCA = 5; // offset: 52, xor const: 0
}

// CmdId: 6284
message PHGJPPBBONK {
	int32 IHIGNMLCHDK = 15; // offset: 28, xor const: 12485
	int32 CIAHEFIJODM = 4; // offset: 24, xor const: 10085
}

// CmdId: 3194
message BCNKLPAGIFC {
}

message JBBAKNCFJPP {
	uint32 MOMGDEFPOGM = 1; // offset: 24, xor const: 0
	uint32 APBDIOHLMGB = 2; // offset: 28, xor const: 0
}

message DLMEMNLJCBJ {
	bytes JBLIKGJLPBP = 1; // offset: 24, xor const: 0
	uint32 HFILJIFFAON = 11; // offset: 32, xor const: 13401
}

message KAEHADDMLPO {
}

// CmdId: 7369
message PEJKFKEBBLA {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 4244
}

message JLEAMPMLIJB {
	uint32 PFCIOMCFGKL = 9; // offset: 44, xor const: 8976
	uint32 HJHFOICGOAC = 7; // offset: 32, xor const: 10401
	uint32 CBDBIPMJEPJ = 5; // offset: 40, xor const: 9222
	uint32 BEKFLJGFLJD = 8; // offset: 36, xor const: 4244
	FMLADAJDHHM IPAOONNHFOF = 1; // offset: 16, xor const: 0
}

message AMLKEGHALFJ {
	repeated uint32 LJIKAOCDPHC = 13; // offset: 16, xor const: 0
}

message ELCLKMCODEK {
	repeated FGKJFCJILIL GPFNPNDPMPC = 1; // offset: 24, xor const: 0
}

message JAAOCOMFKHP {
	float HEDOHAABKHD = 4; // offset: 24, xor const: 0
	float EFJPPJJFNJM = 3; // offset: 28, xor const: 0
	float AEIHIBLACCM = 12; // offset: 32, xor const: 0
}

// CmdId: 2869
message IKLBFICLJAE {
	repeated MMMMDOJIAKK BKHNDCOIALP = 7; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 6156
}

message MBMHLIIPANB {
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 24, xor const: 0
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 16, xor const: 0
}

message ODIEFPCJHFL {
	uint32 IKDJDPPLNOM = 4; // offset: 28, xor const: 12089
	uint32 NLMNJKEKGJO = 14; // offset: 32, xor const: 13048
	bool JPECICJCHFN = 2; // offset: 25, xor const: 0
	bool PHABANOBOMD = 6; // offset: 24, xor const: 0
}

message KKOMCOMOLIF {
	FGKJFCJILIL ANBMHPHJOIO = 1; // offset: 16, xor const: 0
}

message MIMBHHMCKEO {
	bool KNMADBKFKGI = 13; // offset: 41, xor const: 0
	int32 DIAFFBABMNJ = 1; // offset: 48, xor const: 10460
	bool PGEDIJJECAM = 14; // offset: 40, xor const: 0
	bool FCKONCOJHLD = 10; // offset: 42, xor const: 0
	repeated uint32 AOPFKBPCFGD = 15; // offset: 16, xor const: 0
	map<uint32, int32> MICILDBBIMJ = 9; // offset: 24, xor const: 0
	uint32 AMIJIAHGPMC = 3; // offset: 44, xor const: 3561
}

// CmdId: 131
message IGHGBHLDIAF {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 3224
}

message JINKIACHGJC {
}

message KCOGKMCKAEN {
	string FDCGDACGAKF = 3; // offset: 40, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 11; // offset: 88, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 8; // offset: 96, xor const: 0
	repeated uint32 KAPHIGAFCGA = 13; // offset: 64, xor const: 0
	FGKJFCJILIL GPMMDGNHBLJ = 7; // offset: 48, xor const: 0
	FGKJFCJILIL EICHPLAMIJE = 5; // offset: 24, xor const: 0
	bool PIFPEPANAGC = 10; // offset: 109, xor const: 0
	FGKJFCJILIL AOMGCDOFEGA = 4; // offset: 16, xor const: 0
	string DMICGIPOOGF = 1; // offset: 32, xor const: 0
	OOLEHBAIOKG CPDBDPHJLOL = 12; // offset: 104, xor const: 0
	FGKJFCJILIL OEMMGOBCCEL = 6; // offset: 56, xor const: 0
	bool LDCLBDKJNOP = 9; // offset: 108, xor const: 0
	string HPFLMAIOCEL = 2; // offset: 80, xor const: 0
}

message MIJMPCIKHJI {
	bool ENGBBEGLFLN = 2; // offset: 57, xor const: 0
	uint32 LIBCGNINMEL = 11; // offset: 24, xor const: 373
	bool EMAGFNAAFBI = 1; // offset: 52, xor const: 0
	bool FLPHMLNFBPJ = 10; // offset: 54, xor const: 0
	uint32 AMIJIAHGPMC = 9; // offset: 48, xor const: 13087
	int64 IGOAFOBNJIM = 13; // offset: 40, xor const: 10392
	uint32 BCIPFPAHHHH = 4; // offset: 36, xor const: 5207
	uint32 MOIMDGDEMDJ = 3; // offset: 32, xor const: 11749
	uint32 BHDOBKJHLDD = 5; // offset: 28, xor const: 7718
	int64 EFOCIEHGBNA = 12; // offset: 64, xor const: 8028
	bool AEEONPLIDNJ = 15; // offset: 56, xor const: 0
	bool LJKPBAAONAB = 7; // offset: 55, xor const: 0
	bool IADFDPCBCKO = 8; // offset: 53, xor const: 0
}

enum MACHBHLABPG {
	MACHBHLABPG_LOBDMMLJLGF = 0;
	MACHBHLABPG_BNBJMOFPOMH = 1;
	MACHBHLABPG_JKOEKGOLOPC = 2;
	MACHBHLABPG_JMBCHHEMKED = 3;
	MACHBHLABPG_FCGBCPPEGAB = 4;
	MACHBHLABPG_FDOOHGFPHJD = 5;
	MACHBHLABPG_HHJEFMBDEDE = 6;
}

message CKKOHOICDMI {
	int64 BAFAKLAALOK = 1; // offset: 80, xor const: 13932
	uint32 LOABNMJMDNI = 6; // offset: 56, xor const: 5925
	bool NCPKBCEMCEH = 13; // offset: 60, xor const: 0
	uint32 OPFEAMDPIAG = 4; // offset: 72, xor const: 15578
	repeated uint32 NBKDGEFFKMH = 15; // offset: 16, xor const: 0
	repeated AOKBMGJCGCE BIHEKCLHGPM = 12; // offset: 24, xor const: 0
	uint32 HIMNJDFAOCH = 3; // offset: 68, xor const: 6406
	repeated GAPEGNPKDFD LCCJLKCPFOI = 8; // offset: 32, xor const: 0
	uint32 LAHLJKCMEMP = 11; // offset: 64, xor const: 14157
	uint32 IHIEIMELEEH = 7; // offset: 52, xor const: 179
	uint32 CPEGDKBNGDH = 2; // offset: 48, xor const: 4265
}

message FCCGLGHKHEP {
	FGKJFCJILIL MHINMINPONI = 1; // offset: 16, xor const: 0
	string NODBAHCCOBD = 2; // offset: 32, xor const: 0
}

// CmdId: 6911
message JCMOCDGCEHJ {
	uint32 IIIGDHJPFMI = 9; // offset: 56, xor const: 12732
	int64 MHAOFMELHPH = 12; // offset: 64, xor const: 5997
	int32 IHIGNMLCHDK = 7; // offset: 48, xor const: 11796
	uint32 GAMGKMCEFLA = 11; // offset: 52, xor const: 9243
	string OOODKIGJBCN = 15; // offset: 40, xor const: 0
	string MINGAFGEOGP = 5; // offset: 24, xor const: 0
	string HGBGHHPHBMN = 1; // offset: 16, xor const: 0
}

// CmdId: 179
message MNLCJDPLFJM {
	OAHEBLFKPIC GMILNLEOIHO = 15; // offset: 24, xor const: 0
	repeated OAHEBLFKPIC MDKKOCECLCH = 8; // offset: 32, xor const: 0
}

message DFJCMANCJJC {
	string BMGLHOIKAIN = 1; // offset: 32, xor const: 0
	string IOFKNPIMHJA = 4; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 48, xor const: 0
	int64 JIPKKDEEJLA = 2; // offset: 40, xor const: 0
	bool NMPAECPHNAF = 5; // offset: 52, xor const: 0
}

enum OHHJECIKFBE {
	OHHJECIKFBE_OKJFCPFLAFM = 0;
	OHHJECIKFBE_OPBJKFIFMJA = 1;
	OHHJECIKFBE_HNEOGDBFFGB = 2;
}

message ENFOMKOFNNA {
	string FJFGAPOFNJH = 2; // offset: 24, xor const: 0
	string FHIIIPELENE = 1; // offset: 16, xor const: 0
	string CKEALEBCPAA = 3; // offset: 40, xor const: 0
}

message CABFALHAACM {
	bool BHKGIJDCEEK = 1; // offset: 36, xor const: 0
	int32 IFAJHJFKOFA = 3; // offset: 32, xor const: 0
	HBFBNKAODPJ HPINEDNJOAP = 2; // offset: 16, xor const: 0
}

enum BOLNNMJOIDK {
	BOLNNMJOIDK_OLJBMHAJKCL = 0;
	BOLNNMJOIDK_FNLFDEODFOD = 1;
	BOLNNMJOIDK_OMHGGPBPAEJ = 2;
}

// CmdId: 7664
message CNGNKECPCCJ {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 10680
}

// CmdId: 3828
message FHFBIKBIBPO {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 3446
	uint32 KCFEIJAALGK = 13; // offset: 28, xor const: 14414
}

enum KGNKNJLDLFN {
	KGNKNJLDLFN_ABGPEMDPMBC = 0;
	KGNKNJLDLFN_HNJOFFBJLCB = 1;
	KGNKNJLDLFN_JBJOOENLIPH = 2;
	KGNKNJLDLFN_AMDEGBHBAGE = 3;
}

// CmdId: 5240
message IFDHMCEPNAJ {
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 40, xor const: 11752
	AHPDMDJKPMC CPEPJEPHPBD = 9; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 5; // offset: 48, xor const: 11890
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 10674
}

// CmdId: 3584
message GBBEDDIOOAK {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 10495
}

message MPEGDKGEIEB {
	FGKJFCJILIL NBNDPINNFHL = 1; // offset: 16, xor const: 0
}

message GLLKDCAPGMO {
	repeated BOFPFNNFFJF FFOLAMONEJO = 2; // offset: 24, xor const: 0
	repeated EGOODNPKPIF COHKMPCFDDO = 3; // offset: 32, xor const: 0
	uint32 IDCDPNGEGHN = 1; // offset: 40, xor const: 0
}

// CmdId: 2412
message IEGLJALPIDG {
	AHDLPDHEMHM FBCILPDHFLL = 996; // offset: 104, xor const: 0
	uint32 EFNFANEIJMH = 7; // offset: 196, xor const: 2965
	uint32 CIHANDNPAMA = 6; // offset: 204, xor const: 4977
	repeated string ONANGIHNEGN = 102; // offset: 136, xor const: 0
	bool CBPLOJMODHF = 3; // offset: 185, xor const: 0
	uint32 MPEHHLEOPAP = 9; // offset: 160, xor const: 52
	repeated int32 MFCDIEAHPJM = 512; // offset: 96, xor const: 0
	NKPCOAOHKHA IOPNIIBPJFN = 514; // offset: 152, xor const: 0
	uint32 HGGEMOLGKAC = 1540; // offset: 172, xor const: 3279
	repeated int32 ILLMKMOIJHB = 1310; // offset: 64, xor const: 0
	uint32 AEIOGIJPKDA = 1; // offset: 200, xor const: 15216
	uint32 FGIEGOLKIEC = 1126; // offset: 188, xor const: 7373
	uint32 EFINMGELGGO = 1452; // offset: 180, xor const: 7550
	repeated HFFBPENOCGG KIOFHPMJAIO = 1739; // offset: 112, xor const: 0
	map<uint32, uint32> FGHCBNLBKIL = 24; // offset: 32, xor const: 0
	repeated uint32 PJKOLPPLOLB = 1688; // offset: 120, xor const: 0
	map<int32, int32> JIMOHCAHMJI = 12; // offset: 48, xor const: 0
	repeated int32 HDNPMDHHAOH = 949; // offset: 56, xor const: 0
	bool DICGABOENEB = 995; // offset: 156, xor const: 0
	repeated uint32 HINPCNKJGAA = 1227; // offset: 72, xor const: 0
	uint32 AFJOGKIENOC = 13; // offset: 176, xor const: 10660
	uint32 LBMFDPOMACM = 1746; // offset: 168, xor const: 13516
	repeated int32 FNEMBOOACFL = 1262; // offset: 24, xor const: 0
	repeated IBEMPFGCLKL OPJBPHHHHKL = 4; // offset: 40, xor const: 0
	bool BPANHJOICNP = 15; // offset: 157, xor const: 0
	repeated string FAJLMBGMMEA = 842; // offset: 128, xor const: 0
	uint32 NAHIEHJOLIK = 14; // offset: 192, xor const: 15563
	bool PCGFEFAEPCK = 11; // offset: 186, xor const: 0
	repeated GNDMFNDCNDK FKNHJKPOGGO = 2; // offset: 144, xor const: 0
	uint32 DLMLGALCIBC = 10; // offset: 164, xor const: 3091
	repeated HONCMAFOEHG DMPGCFCNHHC = 5; // offset: 80, xor const: 0
	repeated uint32 IKKCICIHKIH = 426; // offset: 16, xor const: 0
	bool OLJBKKBDAJJ = 1185; // offset: 184, xor const: 0
}

message FNKFCDDANDD {
	int32 OBEFAEKODFE = 15; // offset: 28, xor const: 2614
	int32 OJMJINJPBBK = 1; // offset: 36, xor const: 14943
	uint32 GJKEGJFHKDA = 5; // offset: 40, xor const: 2610
	uint32 OPFEAMDPIAG = 11; // offset: 44, xor const: 10809
	bool IFEAKBEBIMI = 8; // offset: 32, xor const: 0
	int32 CALAECMKKOG = 14; // offset: 24, xor const: 15376
}

message PBGJNEGPFKG {
	BDBLGKJOGFM PFCIOMCFGKL = 2; // offset: 28, xor const: 0
	int32 OPFEAMDPIAG = 1; // offset: 24, xor const: 0
}

message MOMGHPAAHIG {
	repeated string OJLPMGNJHIB = 3; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 40, xor const: 0
	repeated FGKJFCJILIL BCCEOLDLIFA = 1; // offset: 24, xor const: 0
}

message FEKFKDMMDBC {
	int32 NBNJEFMBCEE = 3; // offset: 44, xor const: 0
	int32 MHDFOCGAOPO = 2; // offset: 40, xor const: 0
	repeated int32 KBHCKJOMKAP = 4; // offset: 32, xor const: 0
	int32 EAILPOFOKLE = 1; // offset: 48, xor const: 0
	repeated int32 LLOIEIIANOM = 5; // offset: 24, xor const: 0
}

// CmdId: 2065
message JKGFJCCCFFD {
	uint32 BCJOPPLKDMB = 14; // offset: 24, xor const: 14615
}

message BOMMDDBEEHB {
	int32 IBCJMOCLDPH = 15; // offset: 32, xor const: 15295
	bool NODBAHCCOBD = 4; // offset: 28, xor const: 0
	int32 GMDLABOAGEN = 10; // offset: 24, xor const: 15415
}

message HCFPOJBGAGL {
	FGKJFCJILIL EFNFANEIJMH = 1; // offset: 16, xor const: 0
}

enum EKHKEEFKOOA {
	EKHKEEFKOOA_EHFDALBNHKE = 0;
}

message NCDDPDDCNEP {
	repeated JCDEOBCOEBA NCDJIINHAMB = 9; // offset: 48, xor const: 0
	repeated uint32 AEDEIFOIFBB = 2; // offset: 16, xor const: 0
	OMHPFBIGIPB HCDMDNEIFFG = 11; // offset: 24, xor const: 0
	repeated uint32 LAJIJIEHLCM = 4; // offset: 56, xor const: 0
	repeated uint32 KPKFGFHILOP = 6; // offset: 40, xor const: 0
}

message PEDDLFPAAED {
	uint32 NIJLEDIPBGF = 6; // offset: 32, xor const: 4986
	repeated BCBMPHPGJHJ BBCMGLFKBLF = 7; // offset: 16, xor const: 0
	bool COALJDMLICD = 2; // offset: 36, xor const: 0
}

// CmdId: 3631
message CKGAJOEBMGJ {
}

message BMCHAGEMDJP {
	int32 EFJPPJJFNJM = 2; // offset: 28, xor const: 0
	int32 AEIHIBLACCM = 1; // offset: 24, xor const: 0
}

message ECGMEHHDOMK {
	repeated int32 CNLOGPKEGFL = 3; // offset: 16, xor const: 0
	uint32 NECLECGLKED = 2; // offset: 36, xor const: 0
	EJODHGBHCKA MLOCGOPJHKA = 1; // offset: 32, xor const: 0
}

enum OJIAOOMBAMK {
	OJIAOOMBAMK_ODBEOKFCAPJ = 0;
	OJIAOOMBAMK_EFNOBKHPBBB = 1;
	OJIAOOMBAMK_PGAHFPAJELC = 2;
	OJIAOOMBAMK_PNMHJMMILGE = 3;
}

// CmdId: 7556
message MIKOCNBOHDA {
	HCBOKOMEOFG FMJCKGGPCAL = 8; // offset: 16, xor const: 0
	bool OEDAJBHDHCG = 12; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 2; // offset: 36, xor const: 8806
}

enum DNCLFGDIPOG {
	DNCLFGDIPOG_LEIHIHPDLCB = 0;
}

enum PKGLMMOGOJG {
	PKGLMMOGOJG_DDEHMNHMJHB = 0;
	PKGLMMOGOJG_GONNADEFCAI = 1;
	PKGLMMOGOJG_LPIKHEKBCDP = 2;
}

enum PFKDNJFHPFN {
	PFKDNJFHPFN_MODIFY_STACK_ORDER_UP = 0;
	PFKDNJFHPFN_MODIFY_STACK_ORDER_DOWN = 1;
	PFKDNJFHPFN_MODIFY_STACK_ORDER_TOP = 2;
	PFKDNJFHPFN_MODIFY_STACK_ORDER_BOTTOM = 3;
	PFKDNJFHPFN_MODIFY_STACK_ORDER_LIST = 4;
}

enum LNGCIHIGNDF {
	LNGCIHIGNDF_LBNDDENALAN = 0;
	LNGCIHIGNDF_JAPKBCCENOC = 1;
	LNGCIHIGNDF_NKCENANGMOJ = 2;
	LNGCIHIGNDF_HMALCAAMIJH = 3;
	LNGCIHIGNDF_GDLMAFFFAKI = 4;
	LNGCIHIGNDF_HANMDMKKAAO = 5;
	LNGCIHIGNDF_MBEIGCHNGJI = 6;
}

// CmdId: 2099
message IBFJNCGDAJJ {
	uint64 HEJBMNAOJFL = 3; // offset: 48, xor const: 8982
	uint32 KMKPPDICOKA = 14; // offset: 40, xor const: 10655
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 10772
	HEJJNBDAGIG CPEPJEPHPBD = 12; // offset: 32, xor const: 0
}

// CmdId: 9929
message ADPLGJGHGMG {
	repeated uint32 GKACGFBJBFO = 5; // offset: 16, xor const: 0
}

// CmdId: 3301
message NKLIPAGIHGC {
	DLCEMKGCCCA AIEHCAEOLEE = 14; // offset: 24, xor const: 0
}

message JCBIAICLPGH {
	IHHJNHHDNHN JDDNAHKAFIK = 1; // offset: 52, xor const: 0
	map<string, FGKJFCJILIL> APINIAJAPMK = 4; // offset: 32, xor const: 0
	string DBOACCIJPDL = 2; // offset: 40, xor const: 0
	string PMCOPBJCCLK = 5; // offset: 24, xor const: 0
	JPPHPHLOEFJ KMOBAHJLFMD = 3; // offset: 48, xor const: 0
}

// CmdId: 8176
message PINBLPAFKMM {
	int32 APBDIOHLMGB = 14; // offset: 24, xor const: 6405
}

message ILGHKOBPBIH {
	FGKJFCJILIL PEDKNCIMHLA = 1; // offset: 32, xor const: 0
	bool EFLCLCKFFPB = 2; // offset: 40, xor const: 0
	FGKJFCJILIL JGGKGHJMDFA = 3; // offset: 24, xor const: 0
}

message OLONNPDBELP {
}

// CmdId: 9166
message BFFGHFKGMOI {
	uint32 KMKPPDICOKA = 8; // offset: 48, xor const: 11775
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	DIHLDBOLAMF CPEPJEPHPBD = 4; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 40, xor const: 3021
	uint64 HEJBMNAOJFL = 6; // offset: 56, xor const: 12712
}

// CmdId: 8443
message ICICDILKFBH {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 10805
}

message AIPELPNJBMN {
	int32 FFMNLLHJJGI = 3; // offset: 36, xor const: 0
	int32 MOMGDEFPOGM = 2; // offset: 32, xor const: 0
	bool GOJGBCHBFIB = 4; // offset: 40, xor const: 0
	string KAGNLCFDCPA = 1; // offset: 24, xor const: 0
}

// CmdId: 5125
message IJKAOCMNDAF {
	uint32 BCCEOLDLIFA = 9; // offset: 28, xor const: 11668
	uint32 OPFEAMDPIAG = 5; // offset: 32, xor const: 1680
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 13437
}

message OOJAAKLGCPJ {
	string FHIIIPELENE = 1; // offset: 24, xor const: 0
	FGKJFCJILIL FMFBALBHPOF = 4; // offset: 32, xor const: 0
	repeated HKOFKFMGODC ALLMEBMKONG = 3; // offset: 16, xor const: 0
	repeated FBBEJGJOPBL DKNJIHKFFHN = 2; // offset: 40, xor const: 0
}

message MFPJFIHOHDB {
	repeated HGIPJOCNKDF NKBIMCNHCOI = 1; // offset: 32, xor const: 0
	uint32 CBELLMGEFDA = 2; // offset: 40, xor const: 0
	repeated uint32 KAPHIGAFCGA = 3; // offset: 16, xor const: 0
}

message LAIFBFLGKGJ {
	uint32 JFHHBHAIBLF = 14; // offset: 52, xor const: 10451
	uint32 CFFBEBHBFFH = 2; // offset: 48, xor const: 14216
	repeated string LBAJFGIMFKB = 9; // offset: 32, xor const: 0
	uint32 INJPKJCCMDC = 1; // offset: 44, xor const: 14511
	uint32 OPFEAMDPIAG = 6; // offset: 40, xor const: 13653
	repeated int32 JPHHMDAKJBA = 5; // offset: 24, xor const: 0
}

// CmdId: 67
message CJLBPEKDPGM {
	int32 IHIGNMLCHDK = 10; // offset: 40, xor const: 10018
	repeated uint32 MOCNDIDNNIE = 1; // offset: 24, xor const: 0
	uint32 BCCEOLDLIFA = 8; // offset: 36, xor const: 9469
	uint32 GFOBLCFLFBH = 7; // offset: 32, xor const: 6880
}

// CmdId: 6317
message BJBIMMHKGFG {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 13527
}

message GJCBLIPGEOK {
	uint32 MBOABCJENFG = 7; // offset: 24, xor const: 14895
	bool GBKNCJDLDJB = 8; // offset: 28, xor const: 0
}

message HMAALDFABOG {
}

enum HNDDJIAGCCG {
	HNDDJIAGCCG_FHFOLCEJLHK = 0;
}

// CmdId: 4367
message FBOEKNEPBNI {
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 9025
	uint64 AEDAEPKDOAL = 2; // offset: 48, xor const: 8681
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 24, xor const: 0
	KNAFGNOOGNH CPEPJEPHPBD = 1; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 8; // offset: 56, xor const: 5613
}

message HCDNIJIONEC {
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 24, xor const: 0
	EEIIAICEBEN NNMGPAKBPFG = 2; // offset: 32, xor const: 0
}

message HALBFJLJNHG {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 16, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 40, xor const: 0
	FGKJFCJILIL DOJOAAAAJDC = 3; // offset: 32, xor const: 0
}

message MDLAIOAJEBJ {
	KMIPCLLILAN EFOJIHJFCOF = 14; // offset: 56, xor const: 0
	uint32 HJIEEMOHALD = 5; // offset: 52, xor const: 11000
	PCFEPJDNMBM FJJLFABNKGG = 13; // offset: 32, xor const: 0
	uint32 PEDKNCIMHLA = 2; // offset: 48, xor const: 2540
	PNHMKMECKBM LKKJHFPKECH = 7; // offset: 64, xor const: 0
	repeated BPGFKIOHAJP GJHPDKHHONE = 1; // offset: 16, xor const: 0
	uint64 DIMEDPILOOA = 15; // offset: 40, xor const: 11242
	uint32 BPCDLCKGAGE = 3; // offset: 60, xor const: 16350
}

// CmdId: 6688
message NJMDPHPEHBC {
	string MPHLIEKKFIK = 12; // offset: 16, xor const: 0
	uint32 PKPOEKNLJKC = 9; // offset: 32, xor const: 11710
}

message ONEGAHFMPHI {
	GCDPKACBLAM ELHLEMFEMBF = 1; // offset: 24, xor const: 0
}

message GGFHFPCMLNO {
	uint32 JEIKHEIJDDN = 9; // offset: 28, xor const: 14794
	uint32 NBKJKJBKDOF = 7; // offset: 24, xor const: 6226
}

message DBBHGNOLOHL {
	int64 ENJFHPIPOGI = 11; // offset: 32, xor const: 15229
	string FDOFAIDIAEP = 8; // offset: 16, xor const: 0
}

message GJJANLBJLHB {
	bool KMJEMLLIGLE = 4; // offset: 40, xor const: 0
	FGKJFCJILIL NNEKEEFEKAG = 1; // offset: 16, xor const: 0
	CLPGLOLILFF KBFBDIJGDGG = 3; // offset: 44, xor const: 0
	FGKJFCJILIL DCIGFJKJBKL = 2; // offset: 24, xor const: 0
}

message MJFOCMMNNML {
	uint32 CPEGDKBNGDH = 3; // offset: 32, xor const: 5507
	bool MLIDADFBLAC = 9; // offset: 28, xor const: 0
	uint32 IMIBEBEKOEO = 5; // offset: 24, xor const: 1366
}

enum HOECHDDPEFI {
	HOECHDDPEFI_DABCAMELJJB = 0;
	HOECHDDPEFI_OCOODLNCPEC = 1;
}

message ONJAJLOMMHH {
	uint32 KEABELIIBNC = 2; // offset: 36, xor const: 242
	uint32 CLLMBNFMMPD = 8; // offset: 32, xor const: 5032
	repeated LOIIPNKICBA LCEFNEJHGKI = 10; // offset: 24, xor const: 0
}

message BHGALMOMDKG {
}

// CmdId: 5402
message FKBIGKENPEJ {
	repeated string ONANGIHNEGN = 3; // offset: 24, xor const: 0
}

enum NGLIPJIJCDJ {
	NGLIPJIJCDJ_EBOOODALOLM = 0;
	NGLIPJIJCDJ_DKGHEILJODA = 1;
	NGLIPJIJCDJ_AMOMKLELHGO = 2;
}

// CmdId: 1283
message KKPGHLHMBME {
	uint32 PHBHHMFAMOO = 5; // offset: 40, xor const: 619
	OAHEBLFKPIC GMILNLEOIHO = 13; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 14; // offset: 32, xor const: 7857
	uint32 GFOBLCFLFBH = 15; // offset: 36, xor const: 6034
}

message HMJFABAGHKM {
	uint32 EKBJILIANOI = 10; // offset: 36, xor const: 10264
	LHNMOGDJGHN GCAPJGMCHNE = 6; // offset: 24, xor const: 0
	uint32 HCLCILFPJBK = 8; // offset: 32, xor const: 7682
	uint32 FHOBDPHNKFO = 13; // offset: 40, xor const: 15838
}

message BJELEOJDICH {
	HOCCKBGNGOM CPEPJEPHPBD = 7; // offset: 24, xor const: 0
}

enum DGCKBJNLLNA {
	DGCKBJNLLNA_KHDHPFPJHLP = 0;
	DGCKBJNLLNA_JOCBHPMKDBG = 1;
	DGCKBJNLLNA_KPDBJBBDJFG = 2;
	DGCKBJNLLNA_IOODDDAAPPJ = 3;
	DGCKBJNLLNA_HCFHPJALCIH = 4;
	DGCKBJNLLNA_NNCFICBDCGL = 5;
	DGCKBJNLLNA_HBFPLHDAFLI = 6;
	DGCKBJNLLNA_CAFNGOEDNFO = 7;
	DGCKBJNLLNA_GGGBHLAOINA = 8;
	DGCKBJNLLNA_AMKOJJIPEKK = 9;
	DGCKBJNLLNA_MMMCBELGAJJ = 10;
	DGCKBJNLLNA_FODCCBPDFLM = 11;
	DGCKBJNLLNA_CMBDHNECCHM = 12;
	DGCKBJNLLNA_AEFIODJMMDG = 13;
	DGCKBJNLLNA_HIFFDJACMAC = 14;
	DGCKBJNLLNA_KCAEJBDKKNJ = 15;
}

message IJJNLAAJFJM {
	FGKJFCJILIL CPEGDKBNGDH = 8; // offset: 72, xor const: 0
	FGKJFCJILIL ECFNNFKLEPH = 5; // offset: 48, xor const: 0
	FGKJFCJILIL EPJDOELLFJL = 2; // offset: 40, xor const: 0
	FGKJFCJILIL BJNEMIOFMEJ = 4; // offset: 80, xor const: 0
	FGKJFCJILIL KAKNLJDGKAO = 1; // offset: 16, xor const: 0
	FGKJFCJILIL KCLKLABILAN = 6; // offset: 64, xor const: 0
	FGKJFCJILIL PBKLHHEOPCE = 3; // offset: 32, xor const: 0
	FGKJFCJILIL OLFNEGHNDDL = 7; // offset: 56, xor const: 0
}

enum IFNHDCPJADG {
	IFNHDCPJADG_GBMFLGHPGNM = 0;
	IFNHDCPJADG_MFKOIECPDCK = 1;
	IFNHDCPJADG_CCCKKMMACEB = 2;
	IFNHDCPJADG_MKJPFOLFODN = 3;
	IFNHDCPJADG_MGHDOHOHHOC = 4;
	IFNHDCPJADG_JPEFNGNLBPP = 5;
	IFNHDCPJADG_MJIKLDBFCEM = 6;
	IFNHDCPJADG_OCEKAEMNIHK = 7;
	IFNHDCPJADG_ACJAEINKCDG = 8;
	IFNHDCPJADG_PIMKHBPDCNL = 9;
	IFNHDCPJADG_BKECBMPIGKE = 10;
	IFNHDCPJADG_LCCPMAANIGL = 11;
	IFNHDCPJADG_FOBGGALCJAO = 12;
}

message IMLEDAGJCLD {
	uint64 MOIMDGDEMDJ = 4; // offset: 64, xor const: 11354
	bool DENJAPEDEJH = 2; // offset: 60, xor const: 0
	repeated string MOKPIAGBPHJ = 7; // offset: 40, xor const: 0
	string GFJBAFBJMJB = 8; // offset: 16, xor const: 0
	EGGJDFFDBCE FGBIIIECIAO = 14; // offset: 56, xor const: 0
	repeated int32 ONDKOLPNHLO = 10; // offset: 24, xor const: 0
	repeated HBFBNKAODPJ EPDLJMJMHDK = 11; // offset: 32, xor const: 0
}

// CmdId: 4664
message MBGDMMMJBGM {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 10577
}

enum LMCILCCLNEJ {
	LMCILCCLNEJ_HOLLOW_SCRIPT_TARGET_SCRIPT_OWNER = 0;
	LMCILCCLNEJ_HOLLOW_SCRIPT_TARGET_GLOBAL_EVENT = 1;
	LMCILCCLNEJ_HOLLOW_SCRIPT_TARGET_GRID = 2;
	LMCILCCLNEJ_HOLLOW_SCRIPT_TARGET_NPC = 3;
}

enum JKMIIDEPMNM {
	JKMIIDEPMNM_DGKPJALLAEK = 0;
	JKMIIDEPMNM_PIECNAICNAO = 1;
	JKMIIDEPMNM_NMKNDLKKKIM = 2;
	JKMIIDEPMNM_CCLGLNBMKJK = 3;
	JKMIIDEPMNM_ECCIPDFONMC = 4;
	JKMIIDEPMNM_BAFDHHDFDLM = 5;
}

message HPLGHHIFMPH {
	repeated uint32 COMPHFKCDCH = 1; // offset: 16, xor const: 0
	int64 MOHHBACKBOK = 2; // offset: 136, xor const: 5495
	string HEPPDMADMJI = 629; // offset: 48, xor const: 0
	uint32 NMKPODBHLAN = 61; // offset: 144, xor const: 8604
	repeated uint32 DLLIEOIPGON = 6; // offset: 32, xor const: 0
	uint32 JBHFPIFLGEC = 5; // offset: 160, xor const: 7242
	uint32 LLFPCHEJJKE = 1080; // offset: 152, xor const: 6681
	uint32 PKFPCJCBIPE = 165; // offset: 128, xor const: 13895
	uint32 AMLAIDJOHIO = 956; // offset: 208, xor const: 7179
	uint32 OJJKBODICHE = 1394; // offset: 156, xor const: 8882
	uint32 OPECJFJBNBC = 895; // offset: 176, xor const: 13622
	uint32 CPEGJHGIFAA = 4; // offset: 148, xor const: 15757
	string APGCNFJKDHG = 15; // offset: 80, xor const: 0
	uint32 CHBMGDLODDE = 2038; // offset: 212, xor const: 11142
	string BNMOIGIMEJF = 1198; // offset: 88, xor const: 0
	string GOHENKMMOHD = 1226; // offset: 56, xor const: 0
	uint32 IAFHGBNPAJK = 682; // offset: 196, xor const: 5914
	uint32 PCGAAHJPNFE = 854; // offset: 164, xor const: 13099
	uint32 PDBLFGLLBND = 8; // offset: 116, xor const: 8852
	repeated ENNHHBMIPPP PONENLHBIDF = 9; // offset: 64, xor const: 0
	uint32 NNOPACHGNNH = 12; // offset: 200, xor const: 6189
	bool AGFJMDJEIOI = 1166; // offset: 188, xor const: 0
	uint32 FGNLODGCMEG = 1598; // offset: 120, xor const: 10922
	uint32 IFFPLMNENIP = 11; // offset: 192, xor const: 8143
	repeated uint32 ABIELNCMCIN = 1183; // offset: 24, xor const: 0
	string NEILKJBKJDN = 14; // offset: 104, xor const: 0
	uint32 IMGPDGEBOFC = 13; // offset: 184, xor const: 10614
	repeated uint32 BBOBGFPOEPK = 694; // offset: 72, xor const: 0
	repeated uint32 PAMHKLBIEDG = 7; // offset: 40, xor const: 0
	int64 DEHDJDKCBKG = 10; // offset: 168, xor const: 15422
	uint32 JIFGOIAGOII = 504; // offset: 112, xor const: 9469
	uint32 OJCKJJLJKJP = 3; // offset: 180, xor const: 6721
	uint32 OMFIEBMDHCL = 992; // offset: 124, xor const: 7435
	uint32 GMHNFJABNNK = 662; // offset: 204, xor const: 1676
}

// CmdId: 5160
message BBCOELKPKGG {
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 10; // offset: 56, xor const: 4121
	uint32 KMKPPDICOKA = 14; // offset: 48, xor const: 4683
	CEDOLOKPAHP CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 9; // offset: 40, xor const: 4537
}

message EOLFNBDOMAN {
	JLNLHBOGFII FGALEHFDFPD = 3; // offset: 24, xor const: 0
	uint32 FPPKGHCDJNI = 4; // offset: 36, xor const: 2958
	uint32 NCAGHHFDAOG = 15; // offset: 32, xor const: 1982
}

message LKOMPIGADIP {
	bool MIIINDLCOMN = 14; // offset: 28, xor const: 0
	uint32 HLEAEPDDBLE = 13; // offset: 24, xor const: 4203
}

message PGHHABDIAML {
	FGKJFCJILIL MOMGDEFPOGM = 2; // offset: 16, xor const: 0
	int32 FFMNLLHJJGI = 3; // offset: 44, xor const: 0
	bool GOJGBCHBFIB = 4; // offset: 40, xor const: 0
	string KAGNLCFDCPA = 1; // offset: 24, xor const: 0
}

message EAALBLOAHJC {
	bool MGOMENIJFAA = 1; // offset: 25, xor const: 0
	bool GBKNCJDLDJB = 2; // offset: 24, xor const: 0
}

enum CMBFDLJOIAE {
	CMBFDLJOIAE_ICCOBINGMNB = 0;
	CMBFDLJOIAE_IMJAJGDJJJD = 1;
	CMBFDLJOIAE_ELLFOBGIPCN = 2;
	CMBFDLJOIAE_CHHACCCANLJ = 3;
	CMBFDLJOIAE_LCKGADOEAND = 4;
	CMBFDLJOIAE_GGNLJKKOJCP = 5;
}

enum OALKEBLKKDC {
	OALKEBLKKDC_HOLLOW_DIALOG_STATE_NONE = 0;
	OALKEBLKKDC_HOLLOW_DIALOG_STATE_OPEN = 1;
	OALKEBLKKDC_HOLLOW_DIALOG_STATE_CLOSE = 2;
}

// CmdId: 1670
message CMHGGNHGDJI {
	repeated int32 ONDKOLPNHLO = 6; // offset: 16, xor const: 0
}

enum LLJOFEOGNCC {
	LLJOFEOGNCC_HOLLOW_COMPONENT_TYPE_NONE = 0;
	LLJOFEOGNCC_ID_COMPONENT = 1;
	LLJOFEOGNCC_POS_COMPONENT = 2;
	LLJOFEOGNCC_HOLLOW_GRID_COMPONENT = 3;
	LLJOFEOGNCC_LIGHT_INTERACTION_COMPONENT = 4;
	LLJOFEOGNCC_OWNED_ENTITY_COMPONENT = 5;
	LLJOFEOGNCC_CHESS_UI_COMPONENT = 6;
	LLJOFEOGNCC_HOLLOW_EVENT_COMPONENT = 7;
	LLJOFEOGNCC_CATEGORY_COMPONENT = 8;
	LLJOFEOGNCC_BEHAVIOR_COMPONENT = 9;
	LLJOFEOGNCC_OWNER_COMPONENT = 10;
	LLJOFEOGNCC_HOLLOW_NPC_COMPONENT = 11;
	LLJOFEOGNCC_HOLLOW_SNAKE_COMPONENT = 12;
	LLJOFEOGNCC_HOLLOW_LIGHT_COMPONENT = 13;
	LLJOFEOGNCC_EXT_SCRIPT_VARIABLE_COMPONENT = 14;
	LLJOFEOGNCC_CONWAY_LIFE_GAME_LIFE_STATE_COMPONENT = 15;
	LLJOFEOGNCC_ENTITY_PRIORITY_COMPONENT = 16;
	LLJOFEOGNCC_BIG_TV_CHESS_UI_COMPONENT = 17;
	LLJOFEOGNCC_GRID_STATE_COMPONENT = 18;
	LLJOFEOGNCC_SPRING_COMPONENT = 19;
	LLJOFEOGNCC_BLOCK_COMPONENT = 20;
	LLJOFEOGNCC_CONWAY_LIFE_GAME_MGR_COMPONENT = 21;
	LLJOFEOGNCC_HOLLOW_SCRIPT_SEQUENCE_COMPONENT = 22;
	LLJOFEOGNCC_HOLLOW_SNAPSHOT_COMPONENT = 23;
	LLJOFEOGNCC_HOLLOW_MAP_COMPONENT = 24;
	LLJOFEOGNCC_HOLLOW_PLUGIN_COLLECTION_COMPONENT = 25;
	LLJOFEOGNCC_INNER_WORLD_PLUGIN = 26;
	LLJOFEOGNCC_HOLLOW_LIGHT_PLUGIN = 27;
	LLJOFEOGNCC_HOLLOW_NPC_MGR_COMPONENT = 28;
	LLJOFEOGNCC_HOLLOW_TIME_REWIND_COMPONENT = 29;
	LLJOFEOGNCC_NPC_POS_EXT = 30;
	LLJOFEOGNCC_CLIENT_STATE_COMPONENT = 31;
	LLJOFEOGNCC_PLAYER_POS_EXT = 33;
	LLJOFEOGNCC_HOLLOW_REPAIR_ZONE_COMPONENT = 34;
	LLJOFEOGNCC_HOLLOW_GLOBAL_COMPONENT = 35;
	LLJOFEOGNCC_AIM_RECT_COMPONENT = 36;
	LLJOFEOGNCC_SIGNAL_MGR_COMPONENT = 37;
	LLJOFEOGNCC_HOLLOW_FLOOR_MGR_COMPONENT = 39;
	LLJOFEOGNCC_AREA_CAMERA_COMPONENT = 40;
	LLJOFEOGNCC_GRID_INNER_WORLD_COMPONENT = 41;
	LLJOFEOGNCC_HOLLOW_SECTION_COMPONENT = 42;
	LLJOFEOGNCC_BIG_WORLD_COMPONENT = 44;
	LLJOFEOGNCC_ELEVATOR_GRID_COMPONENT = 45;
	LLJOFEOGNCC_HIDE_COMPONENT = 46;
	LLJOFEOGNCC_HOLLOW_SPAWNER_COMPONENT = 47;
	LLJOFEOGNCC_HOLLOW_HACKER_GAME_COMPONENT = 48;
	LLJOFEOGNCC_POP_INTERACT_COMPONENT = 49;
	LLJOFEOGNCC_ABILITY_MARK_COMPONENT = 50;
}

// CmdId: 8173
message DFGOIIGPHPC {
	repeated int32 AGMHJGGLJNI = 3; // offset: 24, xor const: 0
}

// CmdId: 6658
message LPIPNHNGFLP {
}

message PFGLMOLMHBN {
	DADOCBMJAJB DJCEMMNBFMD = 10; // offset: 40, xor const: 0
	repeated uint32 EDJBAHDBPIC = 4; // offset: 64, xor const: 0
	NBHOFFAMADO IDDJDIIGLPI = 15; // offset: 56, xor const: 0
	repeated BBDJGDCHMBM ACMNKFKGFJG = 11; // offset: 48, xor const: 0
	EMGFDDKHMML HICCDLBAHNJ = 13; // offset: 72, xor const: 0
	HOBPOLNDKHJ GPCPGDMCPAN = 8; // offset: 24, xor const: 0
	repeated BBDJGDCHMBM KBHGELDMIMN = 9; // offset: 32, xor const: 0
	bool GBKNCJDLDJB = 14; // offset: 76, xor const: 0
}

message BELIBOMFBDL {
}

message CJHHPHDKGJC {
	float ENCANOPLLDM = 1; // offset: 24, xor const: 0
}

message HIKBCFGFFCI {
	FHJHFMCLGJM PEHFNKFJLGC = 16; // offset: 56, xor const: 0
	string JJOBDEFMGEA = 5; // offset: 32, xor const: 0
	bytes DFBPOFOPDFM = 9; // offset: 40, xor const: 0
	MAPKHJJKEOM GLPMAIHEMJF = 8; // offset: 80, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 96, xor const: 0
	bool NBJAGLPLBLD = 7; // offset: 100, xor const: 0
	repeated NHKOIPBOBFB OKDEBPCLPDD = 3; // offset: 72, xor const: 0
	uint32 LPBIAKCBEAN = 2; // offset: 112, xor const: 0
	uint32 HCDCMIAKHOF = 11; // offset: 104, xor const: 0
	uint32 ACEMBJPDCDK = 14; // offset: 88, xor const: 0
	bool DLFDBILCKIB = 12; // offset: 101, xor const: 0
	uint32 CLHBDJCALLM = 13; // offset: 108, xor const: 0
	DFPOABNAHIK NGGDKJGKELE = 15; // offset: 116, xor const: 0
	BHFILFDKOPA EOJEJEDJLIA = 4; // offset: 16, xor const: 0
	uint32 PGNHCFJNBAC = 6; // offset: 92, xor const: 0
	bytes MLINKFHNPNM = 10; // offset: 48, xor const: 0
	JHCLBOKGMIK IDANNPKMANM = 17; // offset: 64, xor const: 0
}

message MEEJJPAAPCG {
	uint32 HFILJIFFAON = 6; // offset: 32, xor const: 4684
	bytes JBLIKGJLPBP = 10; // offset: 16, xor const: 0
}

// CmdId: 2034
message LDIFBKBCFIF {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 14829
}

message NJFBPGEHEDN {
	uint32 OPLGEBADGBH = 1; // offset: 24, xor const: 0
}

enum CPFLBMOOICA {
	CPFLBMOOICA_NPOINMGFPBJ = 0;
	CPFLBMOOICA_EBLFMFCGLCP = 1;
	CPFLBMOOICA_JNNDPICDMMK = 2;
}

// CmdId: 1408
message LIKBBGBDEAD {
	uint32 HAJDKPEANBC = 1; // offset: 24, xor const: 5997
}

message FBJAGHNPCHC {
	uint32 MKDLDIAHMFM = 2; // offset: 56, xor const: 386
	repeated GJGFDMJBCPO HHCNDPLDIEN = 4; // offset: 40, xor const: 0
	repeated uint32 IEJNJKFAHNO = 9; // offset: 16, xor const: 0
	uint32 NMAIBNEMOLC = 10; // offset: 60, xor const: 14759
	uint64 ODJBLJOHKIF = 6; // offset: 48, xor const: 14911
	repeated GJGFDMJBCPO FLMAFEJLGGA = 11; // offset: 24, xor const: 0
}

message DGLIBCFPFKH {
	int64 BPCLKADELFF = 13; // offset: 32, xor const: 14892
	uint32 PDNFHBMBFLO = 4; // offset: 24, xor const: 6569
}

// CmdId: 5391
message ICJBEELPHGD {
}

message KLIEIHNAENG {
}

enum DHMKIHPCENA {
	DHMKIHPCENA_JNJDNIIBINB = 0;
	DHMKIHPCENA_KKODBMHKJJP = 1;
	DHMKIHPCENA_JIKJIOFNDJP = 2;
	DHMKIHPCENA_GDAGGIEPEMK = 3;
}

message DCLOCDKIPPM {
	uint32 CPPIIEANBFE = 4; // offset: 44, xor const: 0
	uint32 AFJOGKIENOC = 5; // offset: 48, xor const: 0
	string HILFDGCAAGK = 2; // offset: 24, xor const: 0
	bool MKKJCFLOAJC = 6; // offset: 52, xor const: 0
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 32, xor const: 0
	uint32 MAHEIHMMJEA = 3; // offset: 40, xor const: 0
}

// CmdId: 9786
message ILMKHEIJEMK {
	EGEHBOIDLAD NOKODEJPLNI = 11; // offset: 16, xor const: 0
}

message LIADEHAICFL {
	int32 EFLPLGPDEGF = 9; // offset: 28, xor const: 9333
	int32 GCOLEONOCOD = 11; // offset: 24, xor const: 7217
}

// CmdId: 2740
message DDCLBMCLDAC {
	bool KHOGCGJIFDG = 8; // offset: 24, xor const: 0
}

// CmdId: 3603
message KODEFJOEMPP {
	HBFBNKAODPJ NCAGHHFDAOG = 13; // offset: 24, xor const: 0
}

message LJBNIMPPPNM {
	bool INIPBAKGBNE = 3; // offset: 68, xor const: 0
	string NPIAKBEDBLE = 11; // offset: 16, xor const: 0
	string IIDOBBKIPFF = 8; // offset: 56, xor const: 0
	uint32 MKHHJLEPGOG = 1; // offset: 64, xor const: 8772
	string OLFNEGHNDDL = 6; // offset: 24, xor const: 0
	repeated IMJOMAPGGCB AFCENAAEMKP = 7; // offset: 32, xor const: 0
	string MJBLHHJOJNO = 5; // offset: 48, xor const: 0
}

// CmdId: 249
message GBJHEADBBIC {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 3343
	uint32 ODIEODCGOGA = 1; // offset: 28, xor const: 2249
}

message BADAJENOIOH {
	repeated uint32 CADBFMIEGAH = 12; // offset: 16, xor const: 0
	repeated OKHOCEHDLDP NNJNGNGEJIO = 1; // offset: 24, xor const: 0
	repeated KGNDGHEDFAM HKDIKONCMLP = 14; // offset: 40, xor const: 0
}

// CmdId: 6946
message EFJKLKHMNMK {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 1848
}

enum OBAKODDLGFE {
	OBAKODDLGFE_IHKBDKKFEGK = 0;
	OBAKODDLGFE_AHEJFJAMNBL = 1;
	OBAKODDLGFE_PEPEFFDGANC = 2;
	OBAKODDLGFE_KHJLJFDDEFH = 3;
}

// CmdId: 6214
message FGKBJPHMOMK {
	OPKPJDFJMIB CPEPJEPHPBD = 1; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 3; // offset: 40, xor const: 5381
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 10619
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 14755
}

// CmdId: 8283
message EHEDFDPEJNM {
	uint32 NODBAHCCOBD = 10; // offset: 28, xor const: 6459
	uint32 PLFCIIAEIFC = 5; // offset: 36, xor const: 4035
	uint32 IHIEIMELEEH = 7; // offset: 32, xor const: 706
	uint32 PEDKNCIMHLA = 14; // offset: 24, xor const: 4864
}

message BILHLLBJOKD {
	int64 MOHHBACKBOK = 8; // offset: 40, xor const: 15326
	uint32 FMNLIEDIAMK = 4; // offset: 32, xor const: 3520
	uint32 FNLIGPEIAGK = 11; // offset: 28, xor const: 6695
	uint32 NLEDNFLFHPC = 9; // offset: 24, xor const: 13680
	int64 DEHDJDKCBKG = 5; // offset: 48, xor const: 6209
	bool EAHEFLIAJIO = 1; // offset: 36, xor const: 0
}

message HHPLBEOFHGA {
	int32 PLDCCCLNOIK = 14; // offset: 76, xor const: 4468
	float FDPOCANEMNE = 3; // offset: 80, xor const: 0
	map<int32, int32> FBKFJINMAMH = 2; // offset: 48, xor const: 0
	repeated int32 NHJPBOFJMEA = 9; // offset: 40, xor const: 0
	JGAJNMDJDKM GACCCKDIHEJ = 10; // offset: 24, xor const: 0
	map<int32, int32> AKAGLHEKKOK = 11; // offset: 56, xor const: 0
	repeated int32 IINJGLIHEKI = 5; // offset: 16, xor const: 0
	uint32 DOJAJFGINCI = 15; // offset: 72, xor const: 13570
	CBONLDPEEGL DHIFKFMEMAA = 7; // offset: 64, xor const: 0
	int32 LFIPGDIJNPE = 13; // offset: 84, xor const: 4450
}

message EMGIGKCOMKP {
	repeated uint32 HDNPMDHHAOH = 2; // offset: 24, xor const: 0
	repeated uint32 MFCDIEAHPJM = 1; // offset: 32, xor const: 0
}

// CmdId: 1737
message KOGOBDNHCML {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 5931
}

// CmdId: 5100
message AAKNGMDKNNJ {
	uint32 EHJHCNDFJGO = 6; // offset: 28, xor const: 238
	uint32 APIKLINFAIM = 12; // offset: 24, xor const: 16137
	bool CFBINONECHD = 15; // offset: 32, xor const: 0
}

// CmdId: 9432
message GLGOEALHDCL {
	uint32 FEGAMELGOKM = 2; // offset: 24, xor const: 10071
	uint32 OPFEAMDPIAG = 14; // offset: 28, xor const: 4586
}

// CmdId: 840
message DMCCLIPBPMO {
	uint32 PLFCIIAEIFC = 5; // offset: 28, xor const: 3358
	uint32 PEDKNCIMHLA = 8; // offset: 24, xor const: 4040
}

message AOFIBGPKKKE {
	repeated uint32 HONIAFPIOBC = 1; // offset: 16, xor const: 0
	string FLCONKCEEMO = 2; // offset: 32, xor const: 0
}

enum EIIAHLNOCBM {
	EIIAHLNOCBM_ALNIOIFNPFB = 0;
	EIIAHLNOCBM_KJPHFJBLKDP = 1;
	EIIAHLNOCBM_NJLCMIBGDDF = 2;
}

// CmdId: 7501
message PMLLKMJONED {
	int32 IHIGNMLCHDK = 7; // offset: 32, xor const: 11632
	repeated HGEEALEMNCN AFCENAAEMKP = 6; // offset: 16, xor const: 0
}

message IGFBEOLFMAE {
	bool EJIJEEDBKJK = 2; // offset: 32, xor const: 0
	map<string, int32> MJLEJNJHLON = 1; // offset: 16, xor const: 0
}

message PGPOCFFKBHB {
	int32 JHMFEPPLDOJ = 6; // offset: 24, xor const: 5594
}

message HKGJDFIAPKI {
	string BCCEOLDLIFA = 1; // offset: 16, xor const: 0
	string PBOAMDEBIGO = 2; // offset: 32, xor const: 0
}

// CmdId: 1461
message NKLBELJENPJ {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 11906
}

message DHMDJMJKALA {
}

// CmdId: 5828
message DOCAPAKGHMH {
}

// CmdId: 531
message FDDBOLJJELO {
	int32 BHMJNPHIHBD = 13; // offset: 28, xor const: 8230
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 8523
}

message AIMLOOKKKKP {
	repeated uint32 CFLMKEKGJFN = 4; // offset: 24, xor const: 0
	repeated uint32 DLGJMHENADP = 6; // offset: 48, xor const: 0
	repeated uint32 NFHNMOIPPPF = 11; // offset: 16, xor const: 0
	map<uint32, LIGFAPBODMD> IONHGBPFIOG = 5; // offset: 32, xor const: 0
	uint32 CPEGDKBNGDH = 9; // offset: 64, xor const: 8867
	repeated uint32 BNCCIPJKMIE = 12; // offset: 56, xor const: 0
}

// CmdId: 1555
message EHLMOBLMGEK {
	uint32 AKEKFONOGGJ = 11; // offset: 24, xor const: 7409
	uint64 DHIDENLMHDN = 15; // offset: 32, xor const: 5110
}

message NMEOBPHNHAC {
	string BPBBLCPEICC = 7; // offset: 48, xor const: 0
	string PLHCKHILIND = 12; // offset: 120, xor const: 0
	string NFHDFFMDLOP = 16; // offset: 128, xor const: 0
	string BGGAGBMEIKM = 17; // offset: 80, xor const: 0
	string LIILGGMFCIC = 2; // offset: 104, xor const: 0
	string BGLMMDDIJKP = 6; // offset: 24, xor const: 0
	string LMOCOOJFGMO = 1; // offset: 112, xor const: 0
	string AEGKANGPEHJ = 13; // offset: 56, xor const: 0
	string PFMAFELIAEK = 15; // offset: 144, xor const: 0
	string BAMMJGEDCKK = 11; // offset: 96, xor const: 0
	string OGGOEDGJBPN = 8; // offset: 32, xor const: 0
	string FDGKLHAHFAE = 14; // offset: 152, xor const: 0
	string NCHBOPJGKAJ = 9; // offset: 16, xor const: 0
	string BPGIOHDDCHP = 3; // offset: 72, xor const: 0
	string IKCFFNLHKIH = 4; // offset: 88, xor const: 0
	string IANIIABLOIB = 5; // offset: 64, xor const: 0
	string FHLCFNNNOCF = 10; // offset: 40, xor const: 0
}

// CmdId: 691
message EKCCADIMJMH {
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 3554
	uint64 AEDAEPKDOAL = 12; // offset: 56, xor const: 13652
	uint64 HEJBMNAOJFL = 8; // offset: 40, xor const: 14730
	MDOLCAJJKEB CPEPJEPHPBD = 11; // offset: 16, xor const: 0
}

message FDBDPBGIPOL {
	int32 KNHCKPGLMCJ = 2; // offset: 40, xor const: 0
	HBFBNKAODPJ GEPNHNAPGON = 4; // offset: 16, xor const: 0
	int32 KNGHKMPEPLI = 3; // offset: 36, xor const: 0
	int32 EBPCDLGCDON = 1; // offset: 32, xor const: 0
}

message AMPOMEEKHAO {
	int32 BFCJAOMNIMN = 5; // offset: 52, xor const: 0
	int32 BGGCOAJDMEL = 4; // offset: 44, xor const: 0
	int32 DOEOFCHEKGO = 1; // offset: 40, xor const: 0
	int64 OONKNAOHEJL = 2; // offset: 56, xor const: 0
	int32 PFALFLMGMEB = 8; // offset: 48, xor const: 0
	int32 KEIIBCLHPDL = 10; // offset: 36, xor const: 0
	int32 FIPBEEBHAKF = 9; // offset: 28, xor const: 0
	int32 KOMIMFNADCM = 3; // offset: 32, xor const: 0
	int32 KMGOAPFFKPN = 7; // offset: 24, xor const: 0
	int32 KAMJPGFCNOG = 6; // offset: 64, xor const: 0
}

// CmdId: 2233
message OHNEBMMKLFM {
	JIDNHIKGGCC CPEPJEPHPBD = 6; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 4994
	uint64 HEJBMNAOJFL = 10; // offset: 56, xor const: 911
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 7238
}

// CmdId: 5069
message CJBALOAIJKK {
	string MKGCFNMLHOC = 5; // offset: 88, xor const: 0
	bool ACJKJIEHPAO = 1265; // offset: 124, xor const: 0
	uint32 CLHBDJCALLM = 1438; // offset: 144, xor const: 14009
	string NKCCJMIAOHB = 11; // offset: 48, xor const: 0
	string KNEPHHIBEOP = 6; // offset: 32, xor const: 0
	int32 OJHKCKCKOLE = 12; // offset: 136, xor const: 296
	string PJJALJNBJDP = 10; // offset: 104, xor const: 0
	string BFIKKLGHCIP = 9; // offset: 64, xor const: 0
	string PJPEKGKJKJE = 1; // offset: 16, xor const: 0
	string GLEPLBMCJOG = 2; // offset: 80, xor const: 0
	uint32 COEHPKMEGPE = 14; // offset: 152, xor const: 4022
	uint32 PHDCPENIMEH = 7; // offset: 132, xor const: 10169
	uint32 IPADEMLINMB = 15; // offset: 148, xor const: 4405
	string OIJKIBNPHFN = 1884; // offset: 24, xor const: 0
	EHIFNFPAHIB GAMKFKMFIDP = 8; // offset: 72, xor const: 0
	string KGFHHOEAANK = 4; // offset: 96, xor const: 0
	uint32 PBGJGMJEEGH = 13; // offset: 120, xor const: 14685
	string DIANKFBMNMA = 3; // offset: 56, xor const: 0
	uint32 NKMEBFEBGPH = 47; // offset: 128, xor const: 6880
	uint32 AHDMDKJCMFE = 688; // offset: 140, xor const: 14923
	string DGAKHNDMOEG = 1208; // offset: 40, xor const: 0
}

message CPCLBFAHMEA {
	bytes NIPJILAKCBN = 3; // offset: 24, xor const: 0
	ONHNIHHFMIN OJLOLPPLLEO = 2; // offset: 36, xor const: 0
	uint32 FABGBAHDDJA = 1; // offset: 32, xor const: 0
}

// CmdId: 3462
message LFLAPBPFGHK {
	uint32 JHPDANKCDHB = 13; // offset: 28, xor const: 9843
	uint32 JJJJAPLJLHB = 7; // offset: 24, xor const: 3579
}

message JEIFFBFKDDL {
	int32 LGFHKMGKCDG = 6; // offset: 56, xor const: 0
	string PPIEGDBFCOJ = 2; // offset: 16, xor const: 0
	double FCEKKJNINKI = 7; // offset: 40, xor const: 0
	bool NEKDGPFIBOM = 5; // offset: 60, xor const: 0
	KEGNCKBIEJM NHHELNHMIPJ = 3; // offset: 48, xor const: 0
	int32 OAEJPMIBGDP = 1; // offset: 52, xor const: 0
	string BHIHEJNJCCJ = 4; // offset: 32, xor const: 0
}

// CmdId: 5817
message BIFEMOJCKDB {
	map<string, int32> ONKEOHNGJBA = 6; // offset: 32, xor const: 0
	map<string, string> AAJGPGJKKOK = 14; // offset: 16, xor const: 0
}

enum HNGAGJMDNEG {
	HNGAGJMDNEG_CMHGHCLNLIF = 0;
}

enum IECHNCKDPJA {
	IECHNCKDPJA_AGPMJJGJKLA = 0;
}

message IELGJNBGCGP {
	map<int32, EGEEJGKCOAG> CHBMOJHDLPN = 7; // offset: 24, xor const: 0
	map<int32, ADPGOAGNKAO> PHHDFHKEABN = 3; // offset: 16, xor const: 0
	repeated float EJIGELGLDGD = 12; // offset: 32, xor const: 0
}

enum BBLHNDGEJBL {
	BBLHNDGEJBL_PCBELPKLLKK = 0;
	BBLHNDGEJBL_OIMNECNFKAJ = 1;
	BBLHNDGEJBL_DOMGAFAEHFK = 2;
	BBLHNDGEJBL_BKLMLGPCLCG = 3;
}

enum JOCAMNHLNBK {
	JOCAMNHLNBK_NNEGDPOHPKD = 0;
	JOCAMNHLNBK_ILHALCOOAGI = 1;
	JOCAMNHLNBK_HKKAJJLDFIK = 2;
	JOCAMNHLNBK_BOOIDBKAEKO = 3;
}

message HLLIICIDFLC {
}

message HABMPPGMPEO {
	int32 ENEGAHHFOPK = 2; // offset: 40, xor const: 6527
	uint32 AAOFPEDIHFB = 12; // offset: 24, xor const: 14783
	uint64 AEDAEPKDOAL = 10; // offset: 32, xor const: 7781
	float HAHFMGOHAKB = 14; // offset: 44, xor const: 0
}

// CmdId: 4798
message PGLBIAPFAME {
	uint32 KMKPPDICOKA = 13; // offset: 40, xor const: 9898
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 32, xor const: 0
	IJAAGDDCKMM CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 6; // offset: 56, xor const: 1560
	uint64 HEJBMNAOJFL = 7; // offset: 48, xor const: 13782
}

message LLCKKHHMKLH {
	uint32 HJHFOICGOAC = 1; // offset: 56, xor const: 0
	int32 HMMAJONHGLM = 9; // offset: 48, xor const: 0
	int32 CLDGOHDFFAH = 10; // offset: 60, xor const: 0
	int32 GCIIBBMEMNO = 8; // offset: 76, xor const: 0
	uint64 OLIDNFIANHN = 6; // offset: 40, xor const: 0
	KIGHOAMIDJJ JFABCAKEMPL = 7; // offset: 32, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 5; // offset: 24, xor const: 0
	uint32 KBKLJLLBLCD = 3; // offset: 80, xor const: 0
	FPOOBLHJJPD PBOAMDEBIGO = 4; // offset: 72, xor const: 0
	int32 OLAGBAMDICG = 11; // offset: 64, xor const: 0
	int32 ILNFFHDLCHI = 12; // offset: 52, xor const: 0
	uint32 CBDBIPMJEPJ = 2; // offset: 68, xor const: 0
}

// CmdId: 8096
message DALJGICFLOD {
	repeated BMCHAGEMDJP DEIBLPEBBPK = 5; // offset: 16, xor const: 0
}

message PICLFKBFPKL {
	uint32 AIDMDANNAIE = 11; // offset: 64, xor const: 12936
	string MGEMBOOEJFP = 14; // offset: 32, xor const: 0
	uint32 DIMEDPILOOA = 10; // offset: 56, xor const: 6764
	uint32 EJJCNJFHHEC = 2; // offset: 72, xor const: 14887
	uint32 ONEODGNJJAM = 12; // offset: 60, xor const: 13936
	uint32 CENMKDLDNAN = 13; // offset: 52, xor const: 241
	uint32 NBGGBOKFJOB = 5; // offset: 76, xor const: 7224
	uint32 JJIHJCNKANL = 3; // offset: 68, xor const: 11932
	uint32 LEENDKIOFHC = 4; // offset: 48, xor const: 2340
	string AKPIAFHFFDP = 15; // offset: 40, xor const: 0
	CEHOOCNNKPF IDCMJDLNPEB = 1; // offset: 16, xor const: 0
}

// CmdId: 236
message IPLHHMFNFIN {
	uint32 IIIGDHJPFMI = 8; // offset: 36, xor const: 15658
	IFGDJNNPCAN CKBOJACIJDI = 11; // offset: 16, xor const: 0
	uint32 HONFNLBAIAN = 13; // offset: 32, xor const: 14065
}

// CmdId: 9522
message EHPMIAPMLNM {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 2623
}

enum IAFEDFLABID {
	IAFEDFLABID_NONE = 0;
	IAFEDFLABID_COMMON_GRID = 1;
	IAFEDFLABID_MINI_GAME = 2;
	IAFEDFLABID_TV_EXIT = 3;
}

enum JAJBJJKMFMA {
	JAJBJJKMFMA_JOENLLBKGLJ = 0;
	JAJBJJKMFMA_OOGJKCPCCBO = 1;
	JAJBJJKMFMA_MDPBENKAENA = 2;
	JAJBJJKMFMA_HKIJLFANCCC = 3;
}

message EMEBFLOKDFO {
	LIGKLGDKJGO PBOAMDEBIGO = 3; // offset: 44, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 16, xor const: 0
	FGKJFCJILIL AMIJIAHGPMC = 5; // offset: 24, xor const: 0
	JAPEIOHEMJG BDEMCBHPEHC = 2; // offset: 40, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 4; // offset: 48, xor const: 0
}

message LAPENMBKAJH {
	int32 DNAENEJOADB = 9; // offset: 32, xor const: 9075
	bytes BECDAMNHLDN = 2; // offset: 24, xor const: 0
}

// CmdId: 2686
message KFCDBCHJOKE {
	uint64 HEJBMNAOJFL = 1; // offset: 48, xor const: 5450
	uint32 KMKPPDICOKA = 15; // offset: 40, xor const: 10903
	uint64 AEDAEPKDOAL = 13; // offset: 56, xor const: 8137
	LCKINEOILAH CPEPJEPHPBD = 9; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 16, xor const: 0
}

message OFKJAHMNPPO {
	DDMNFLLDKMC IPGBFBPLHHF = 6; // offset: 24, xor const: 0
	repeated uint32 AMMIGDCKFDG = 13; // offset: 32, xor const: 0
}

enum BGGINBHKGAD {
	BGGINBHKGAD_HFDHKFDCMJM = 0;
	BGGINBHKGAD_DLEHGMACLAJ = 1;
	BGGINBHKGAD_BNJFCKNELIA = 2;
	BGGINBHKGAD_BDPMHBOINKC = 3;
	BGGINBHKGAD_EMANMKDHGEJ = 4;
	BGGINBHKGAD_BCBAFAEPGMH = 5;
	BGGINBHKGAD_PBIFPMBGOIN = 6;
	BGGINBHKGAD_FMCOEFCEJIB = 7;
	BGGINBHKGAD_HPNIKPOEKBN = 8;
	BGGINBHKGAD_MGBNACEPOBA = 9;
	BGGINBHKGAD_ALDEDPBIDBP = 10;
	BGGINBHKGAD_FOKGHDIHKLM = 11;
	BGGINBHKGAD_ABBPLKIAMBD = 12;
	BGGINBHKGAD_HLNFABFFDEK = 13;
	BGGINBHKGAD_FNODPJCICHH = 14;
	BGGINBHKGAD_PDMKCEDDBNH = 15;
	BGGINBHKGAD_EGIJCEJAIEI = 16;
	BGGINBHKGAD_GNABGDABDDD = 17;
	BGGINBHKGAD_CDBBOOFODHP = 18;
	BGGINBHKGAD_GKPOEAFCFHM = 19;
	BGGINBHKGAD_EGDELAAGHKH = 20;
	BGGINBHKGAD_NCPKOKJMBIC = 21;
	BGGINBHKGAD_JNCFNBFIDFN = 22;
	BGGINBHKGAD_MOODEHELDFA = 23;
	BGGINBHKGAD_BLPOBMGKPBJ = 24;
	BGGINBHKGAD_CJEDNNEPAMG = 25;
	BGGINBHKGAD_JGEIPKFEFAL = 26;
	BGGINBHKGAD_EDMNHGLHJEL = 27;
	BGGINBHKGAD_GAFGICHGNFM = 28;
	BGGINBHKGAD_MHEDOOLBBJE = 29;
	BGGINBHKGAD_EKBBGBOHKIG = 30;
	BGGINBHKGAD_PJPOLCMEPHN = 31;
	BGGINBHKGAD_DBIFNOEPFPC = 32;
	BGGINBHKGAD_NNINNINNNBB = 33;
	BGGINBHKGAD_IODAGOBNJLF = 34;
	BGGINBHKGAD_CJPMFCHMIED = 35;
	BGGINBHKGAD_BENHLIOOJNA = 36;
	BGGINBHKGAD_OOKIODFDJJC = 37;
	BGGINBHKGAD_ODBKLEKHLDJ = 38;
	BGGINBHKGAD_NBCFNOJBEOG = 39;
	BGGINBHKGAD_MJDGBPJBEAH = 40;
	BGGINBHKGAD_ONOOLMMIBGC = 41;
	BGGINBHKGAD_POIOMEDFGAG = 42;
	BGGINBHKGAD_DNDFCKFCGDO = 43;
	BGGINBHKGAD_AAEANPMAMMI = 44;
	BGGINBHKGAD_DNHLKBDPDJO = 45;
	BGGINBHKGAD_BADIIKGEFNH = 46;
	BGGINBHKGAD_KKECJNGAJLG = 47;
	BGGINBHKGAD_HGHONOOAGJG = 48;
	BGGINBHKGAD_DDLKKJKCDMM = 49;
	BGGINBHKGAD_POAMDLHBPCK = 50;
	BGGINBHKGAD_CILMKMDODLK = 51;
	BGGINBHKGAD_ANDGKKLEPNH = 52;
	BGGINBHKGAD_MPAPHJINNCJ = 53;
	BGGINBHKGAD_GJNIBDMKFNK = 54;
	BGGINBHKGAD_CCENMLPPHHO = 55;
	BGGINBHKGAD_JGANEFNFIJD = 56;
	BGGINBHKGAD_CLAFGGIMFME = 57;
	BGGINBHKGAD_DLBBGKLALDP = 58;
}

// CmdId: 1595
message NGPAIILNFHF {
	uint32 NIENEMJKPMK = 551; // offset: 96, xor const: 13375
	uint32 APMILCKDGAN = 1818; // offset: 80, xor const: 2478
	bool NPIHKBIJIPD = 13; // offset: 104, xor const: 0
	map<uint32, uint64> FEGIBLEILHC = 11; // offset: 48, xor const: 0
	map<uint32, ACDBKPCFDJP> OILHFBLCLLA = 620; // offset: 16, xor const: 0
	int32 MJPFDCDPEOB = 145; // offset: 84, xor const: 281
	map<uint32, ABMABLFFPEN> ODKAPICAPKH = 4; // offset: 40, xor const: 0
	uint32 NODBAHCCOBD = 9; // offset: 88, xor const: 14084
	CHAOGACNIMC BOAPJKMOOID = 530; // offset: 64, xor const: 0
	uint32 NLNOOGKKLMH = 12; // offset: 116, xor const: 7842
	uint32 EKLGNOIEMLA = 1; // offset: 100, xor const: 4798
	repeated PMFLGCCMCPP DHKIILIGGGF = 3; // offset: 32, xor const: 0
	repeated CNEKCPOECFA IJMKDBIBLDJ = 6; // offset: 24, xor const: 0
	uint32 AJHBLCOFPJC = 2; // offset: 108, xor const: 13945
	uint32 IHIEIMELEEH = 7; // offset: 92, xor const: 1785
	uint32 EDOEIIABJFN = 14; // offset: 112, xor const: 11469
	bool FKPIECDJFDA = 120; // offset: 106, xor const: 0
	string IOHNONAOAEA = 5; // offset: 56, xor const: 0
	bool HEJOFHGCDCN = 1325; // offset: 105, xor const: 0
}

// CmdId: 8879
message DGBOIAELPIH {
	uint32 OPFEAMDPIAG = 8; // offset: 24, xor const: 5203
	uint32 BCCEOLDLIFA = 4; // offset: 28, xor const: 12295
}

message JELDKBDOAJD {
	bool MJJDECLGGOD = 1; // offset: 48, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 3; // offset: 24, xor const: 0
	string HCMJLGCPFJG = 4; // offset: 16, xor const: 0
	FGKJFCJILIL INACMNNDLBO = 2; // offset: 32, xor const: 0
}

message KOGIHOEFDGJ {
	EKOAIDAMLDP DPHHJACAGBF = 3; // offset: 16, xor const: 0
	ENKDCGBCPOJ BOOMJEBBDBK = 14; // offset: 48, xor const: 0
	KLLBCHHPBPC JENMANFPGAC = 4; // offset: 96, xor const: 0
	repeated uint32 CNCNLICGDEF = 2; // offset: 80, xor const: 0
	BGPDLHGBAEJ ENFJMNHPFAF = 11; // offset: 64, xor const: 0
	repeated FFANHFOACDE KDOIMEBBBCN = 5; // offset: 56, xor const: 0
	JJACFJMAFPM PCIEMMNDBGO = 8; // offset: 72, xor const: 0
	JPABKIDDHPK JAMFBCGBAAE = 15; // offset: 128, xor const: 0
	LFPGKMOFEHC EKDBAKEAAPM = 10; // offset: 112, xor const: 0
	repeated uint32 EAHHLBKIAKH = 1; // offset: 88, xor const: 0
	EFNLFINDNHM PLJDMNOFPPG = 13; // offset: 40, xor const: 0
	repeated uint32 LLJHBLIKNCB = 6; // offset: 32, xor const: 0
	repeated DLJEPEGFAFB KIILPELHCJC = 9; // offset: 120, xor const: 0
	repeated uint32 LDGHPKFJJHC = 12; // offset: 24, xor const: 0
	DDHEFCBNEFE KCHCODIIBLL = 7; // offset: 104, xor const: 0
}

message JBFKHOEBGNA {
	repeated MILIOGPHGCP DFFENJEDGEM = 6; // offset: 24, xor const: 0
	repeated DKOLNHPBAPF NAEOPLOLMNE = 3; // offset: 64, xor const: 0
	repeated uint32 BEHEMHAKKFA = 7; // offset: 16, xor const: 0
	repeated JGKLEOEDGCM OGHDHCOJBIK = 14; // offset: 32, xor const: 0
	repeated CLEILMAOKAK KMMELEGOHOO = 9; // offset: 56, xor const: 0
	CLEILMAOKAK AFLKOOLENPI = 1; // offset: 48, xor const: 0
}

// CmdId: 8214
message KMKKNAAMAEA {
	repeated JDMJIPGGLMG NAHLOOAEAEJ = 7; // offset: 24, xor const: 0
}

enum LJFEFDMNEMP {
	LJFEFDMNEMP_CPOAHOACGIN = 0;
	LJFEFDMNEMP_LMLHGPBAMLE = 1;
	LJFEFDMNEMP_AEPGLKPGHCC = 2;
}

message MLIGDKKLKFG {
	bool IIAJJNKCICH = 1; // offset: 24, xor const: 0
}

// CmdId: 4239
message KGKPGLFBGGI {
	FMDMPFNDALK CPEPJEPHPBD = 1; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 3; // offset: 48, xor const: 9483
	uint64 AEDAEPKDOAL = 11; // offset: 40, xor const: 5156
	uint32 KMKPPDICOKA = 9; // offset: 56, xor const: 14003
}

enum FBACJIGMLCF {
	FBACJIGMLCF_APPCAHPDEPH = 0;
	FBACJIGMLCF_ONOIAIFDKAE = 1;
	FBACJIGMLCF_JBPIEFGFPBM = 2;
	FBACJIGMLCF_HDELDLHGALB = 3;
}

message NAFPINANDDA {
	bool GLNFOAAKAOH = 10; // offset: 80, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 7; // offset: 84, xor const: 0
	repeated FGKJFCJILIL CMIANHKFKJM = 4; // offset: 64, xor const: 0
	FGKJFCJILIL CBDJHCJDDGL = 9; // offset: 48, xor const: 0
	FGKJFCJILIL EJGAJHHMIHO = 6; // offset: 24, xor const: 0
	FGKJFCJILIL KKBEKMEMDIA = 5; // offset: 40, xor const: 0
	repeated FGKJFCJILIL JIFKKPKGAMA = 3; // offset: 16, xor const: 0
	repeated FGKJFCJILIL GHFLIKFGEFJ = 1; // offset: 32, xor const: 0
	HollowEntityType HPALGIHBENM = 2; // offset: 88, xor const: 0
	FGKJFCJILIL MKFKPOJOOIJ = 8; // offset: 72, xor const: 0
}

message LNCMDCHHAMG {
	HollowEntityType AKGNDIDKHGO = 2; // offset: 36, xor const: 0
	bool BHKGIJDCEEK = 4; // offset: 33, xor const: 0
	bool PJOPGAAHLJE = 3; // offset: 32, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 24, xor const: 0
}

enum FLEGIJDNIFO {
	FLEGIJDNIFO_JPIFCDDCMIN = 0;
	FLEGIJDNIFO_BANHGCOIEPJ = 1;
	FLEGIJDNIFO_ALBMHHNDEGH = 2;
	FLEGIJDNIFO_JDHCLPFGDJF = 3;
	FLEGIJDNIFO_DOFHENOJGNJ = 4;
	FLEGIJDNIFO_IMBMDHLJFHC = 5;
}

// CmdId: 7979
message PDJAKKKMCBL {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 7323
}

enum HPLPMDEEOKP {
	HPLPMDEEOKP_HKGNMAFKJPD = 0;
	HPLPMDEEOKP_MEFOPKMKBKN = 1;
	HPLPMDEEOKP_BODEKNMFPON = 2;
	HPLPMDEEOKP_NIDJIOFIKDE = 10;
	HPLPMDEEOKP_BNEDIIKAFEI = 100;
	HPLPMDEEOKP_OIGODGFALAD = 101;
	HPLPMDEEOKP_EOOPPDCMKCJ = 110;
	HPLPMDEEOKP_IPKNFKEBDOP = 111;
	HPLPMDEEOKP_LNJNDOOCIKK = 112;
	HPLPMDEEOKP_MBNBPFKDGFG = 118;
	HPLPMDEEOKP_MDNNMGMNEDF = 119;
	HPLPMDEEOKP_JLPAKJHLPJI = 201;
	HPLPMDEEOKP_KHFJAFEEGAN = 417;
	HPLPMDEEOKP_FGJBELNGLDK = 419;
	HPLPMDEEOKP_IDMNNKNIFOI = 421;
	HPLPMDEEOKP_NDKJLDDCKHF = 422;
	HPLPMDEEOKP_HDGBNLKCPCG = 501;
	HPLPMDEEOKP_KJHMJMHCJJK = 503;
	HPLPMDEEOKP_DECHEBHNJOI = 150201;
	HPLPMDEEOKP_CDCJAJNIPLE = 3000001;
	HPLPMDEEOKP_HGCBEHBPFPM = 3000100;
	HPLPMDEEOKP_BLJMPAHFBEL = 3000101;
}

message LDIEOFMEHIC {
	repeated uint32 NFFKIGOCGJA = 3; // offset: 24, xor const: 0
	repeated uint32 GIIAOMONIOM = 13; // offset: 16, xor const: 0
	repeated uint32 HCELCIBIAEL = 4; // offset: 32, xor const: 0
}

message KHINAKIAGJK {
	int32 DBEJHEDNALO = 2; // offset: 32, xor const: 0
	BMCHAGEMDJP ACEMBJPDCDK = 1; // offset: 16, xor const: 0
}

// CmdId: 3202
message DEFLCOJEHOC {
	int32 IHIGNMLCHDK = 1; // offset: 40, xor const: 3495
	NOHJLGNFKIN AGAHILDGMBC = 10; // offset: 44, xor const: 0
	CNBLOKMPKJM GLPMAIHEMJF = 3; // offset: 24, xor const: 0
	HEOABPLAEFB DPGHDDCBJIN = 4; // offset: 32, xor const: 0
}

// CmdId: 950
message OMCHLMFNEKC {
}

message JLDPHEFGADM {
	repeated IMJOMAPGGCB NNPHGPLGKBI = 11; // offset: 16, xor const: 0
}

message OKHKMHHGJDO {
	FGKJFCJILIL PEIFCGMHHDE = 2; // offset: 48, xor const: 0
	FGKJFCJILIL FPANNBHPAAF = 1; // offset: 16, xor const: 0
	repeated FGKJFCJILIL CHIDEMGKAMK = 4; // offset: 32, xor const: 0
	string MNICEIDGBHF = 3; // offset: 24, xor const: 0
}

message IGBMIJPCJPH {
}

enum BEFAKHGGEDK {
	BEFAKHGGEDK_GEFDOPCGLMJ = 0;
	BEFAKHGGEDK_JMOMCDNGKHP = 1;
	BEFAKHGGEDK_OKFKILIIBMO = 2;
	BEFAKHGGEDK_OPDGAIHKKBI = 3;
	BEFAKHGGEDK_IFLNIADOLPC = 4;
	BEFAKHGGEDK_FEEDKHEAJKM = 5;
	BEFAKHGGEDK_OCCCMLLNMOH = 6;
}

enum NKEOICFGDCC {
	NKEOICFGDCC_KIPAHMMFAAG = 0;
	NKEOICFGDCC_IOACOFEPBNO = 1;
}

// CmdId: 8276
message FIODGJOIIJK {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 4813
}

// CmdId: 9198
message KEBMLCPBNMM {
	repeated uint32 EHHBGAKJPAK = 11; // offset: 24, xor const: 0
	uint32 AMIJIAHGPMC = 3; // offset: 32, xor const: 8173
}

message JEHFLBFDINF {
	repeated JGLDAINDEGL FMFJCGKNCEH = 11; // offset: 24, xor const: 0
}

// CmdId: 7997
message FBJCGCLEIJD {
	repeated uint32 OMFCBFIPNON = 11; // offset: 16, xor const: 0
	uint32 EKOFKMMHGAJ = 15; // offset: 32, xor const: 7833
}

// CmdId: 5448
message CCCLPFJFLKC {
	OIJDMJPPIPN CPEPJEPHPBD = 8; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 7096
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 5975
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 9; // offset: 48, xor const: 15499
}

// CmdId: 2846
message HJHBODODNOF {
	bool LDAJOGGNMOA = 13; // offset: 24, xor const: 0
}

message ONPIIJJMEIF {
	FGKJFCJILIL BPELJHPDEBO = 1; // offset: 48, xor const: 0
	FGKJFCJILIL KBGIMHAEBBC = 5; // offset: 56, xor const: 0
	FGKJFCJILIL EFNFANEIJMH = 3; // offset: 32, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 2; // offset: 64, xor const: 0
	FGKJFCJILIL LPFHMFMNLIH = 4; // offset: 16, xor const: 0
	FGKJFCJILIL CLJJEHDHLOI = 6; // offset: 40, xor const: 0
}

enum CDGPCPLBKDN {
	CDGPCPLBKDN_PIJCKEHDBBJ = 0;
	CDGPCPLBKDN_PIJMMJDMEBC = 1;
	CDGPCPLBKDN_FBKJEKJNMKE = 2;
	CDGPCPLBKDN_KPIMGDIPNDH = 3;
	CDGPCPLBKDN_AALJOHDJMCB = 4;
	CDGPCPLBKDN_CIPPIBKGEMD = 5;
	CDGPCPLBKDN_OMLLGCIPIEC = 6;
	CDGPCPLBKDN_ABFGAEJACHL = 7;
	CDGPCPLBKDN_PACLAEJBPKJ = 8;
	CDGPCPLBKDN_IEOBGDINADB = 9;
	CDGPCPLBKDN_ALHJPCHANMM = 12;
	CDGPCPLBKDN_GKHDPINDKNA = 13;
	CDGPCPLBKDN_HDMIGMAODFN = 14;
	CDGPCPLBKDN_HKKCECFGPGJ = 15;
	CDGPCPLBKDN_CDNMBHAHPHH = 16;
	CDGPCPLBKDN_PJEGGIPLFDL = 17;
	CDGPCPLBKDN_LPCPJBDDKKJ = 18;
	CDGPCPLBKDN_JAIMOCLLKDK = 19;
	CDGPCPLBKDN_GPJPEFPJEFM = 20;
	CDGPCPLBKDN_EMCHPDKOFFC = 21;
	CDGPCPLBKDN_PHEPMEICKFO = 22;
	CDGPCPLBKDN_KMLLFMPDIKC = 23;
	CDGPCPLBKDN_ALHMMDFOLBE = 24;
	CDGPCPLBKDN_APCONJOLJGD = 25;
	CDGPCPLBKDN_IFOPNMPFMKF = 26;
	CDGPCPLBKDN_DEAPKFHMHPI = 27;
}

message LEMPDKDGNBA {
	HMINEHKNIBH NEHLMICHGEF = 1; // offset: 28, xor const: 0
	uint32 BBLCHBANJID = 2; // offset: 24, xor const: 0
}

enum PBPNEPEOIJF {
	PBPNEPEOIJF_REPAIR_ZONE_TYPE_NONE = 0;
	PBPNEPEOIJF_REPAIR_ZONE_TYPE_INIT = 1;
	PBPNEPEOIJF_REPAIR_ZONE_TYPE_REMOVE = 2;
	PBPNEPEOIJF_REPAIR_ZONE_TYPE_RESET = 3;
}

message PLMOLMHGOBD {
	repeated HKHKFBIJJCD IMLMFMGKLCC = 2; // offset: 40, xor const: 0
	repeated NNODHDIGMGM DKALGMFHDAF = 4; // offset: 16, xor const: 0
	uint32 PCPMFJKDBJC = 1; // offset: 48, xor const: 0
	repeated GFAAECNGDAC EAFMIENKAJL = 3; // offset: 24, xor const: 0
}

enum GDPMPPFACEJ {
	GDPMPPFACEJ_OONCENDKJOD = 0;
	GDPMPPFACEJ_OIJCNEFJIAN = 1;
	GDPMPPFACEJ_FGFLHCIPDEF = 2;
	GDPMPPFACEJ_LOHNNDKIHEK = 3;
	GDPMPPFACEJ_IBOBCLMHILM = 4;
	GDPMPPFACEJ_DOKBJHNLDHO = 5;
	GDPMPPFACEJ_DIEMKFFGHKI = 6;
	GDPMPPFACEJ_CHJBLEEKHMI = 7;
	GDPMPPFACEJ_ALDBMMMEHGP = 8;
	GDPMPPFACEJ_NEGLCLBKMGE = 9;
	GDPMPPFACEJ_AADPOIGAGMK = 10;
}

message MEKLNDCAHFE {
	uint32 CINAJFDNJBD = 1; // offset: 24, xor const: 0
	bool PGMEFNADEJN = 2; // offset: 28, xor const: 0
}

message ICBJJGNOKFA {
	FGKJFCJILIL HLAFOHLEBCF = 4; // offset: 32, xor const: 0
	uint32 CBELLMGEFDA = 2; // offset: 68, xor const: 0
	repeated uint32 KAPHIGAFCGA = 6; // offset: 48, xor const: 0
	repeated HGIPJOCNKDF CGILDNHMKOL = 3; // offset: 16, xor const: 0
	uint32 OPFEAMDPIAG = 1; // offset: 56, xor const: 0
	bool MJPDLDPGDNP = 7; // offset: 60, xor const: 0
	bool DGJCKLOEFPA = 5; // offset: 61, xor const: 0
	google.protobuf.Any IKNKKNPBMOP = 1001; // offset: 40, xor const: 0
	ONHNIHHFMIN JGIHAKGPJMJ = 1000; // offset: 64, xor const: 0
}

// CmdId: 7635
message HDGFLOMKILF {
	uint32 LBMFDPOMACM = 13; // offset: 32, xor const: 8355
	bool DICGABOENEB = 7; // offset: 40, xor const: 0
	uint32 FGIEGOLKIEC = 1; // offset: 24, xor const: 1933
	uint32 OAJOJBLDAJG = 8; // offset: 36, xor const: 10213
	uint32 MKLHJKJFBPL = 10; // offset: 28, xor const: 7475
}

enum AGLJMMCPMND {
	AGLJMMCPMND_HECJDAPAHFO = 0;
	AGLJMMCPMND_CCGNFFFJANP = 1;
}

enum AEJLOBOKMEO {
	AEJLOBOKMEO_EGHM_HANDLE_CHOSEN_GRIDS_NONE = 0;
	AEJLOBOKMEO_EGHM_HANDLE_CHOSEN_GRIDS_ADD_TO_POOL = 1;
	AEJLOBOKMEO_EGHM_HANDLE_CHOSEN_GRIDS_REMOVE_FROM_POOL = 2;
	AEJLOBOKMEO_EGHM_HANDLE_CHOSEN_GRIDS_KEEP_IN_POOL = 3;
}

// CmdId: 1547
message PFBJAKMALCG {
}

enum MPMCIMGGKPJ {
	MPMCIMGGKPJ_LHMBBMLOHIF = 0;
	MPMCIMGGKPJ_HGIAAJADBGL = 1;
}

message BBDPOEIFNLN {
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 32, xor const: 0
	string AAPEOMOAAPC = 3; // offset: 24, xor const: 0
	DHJPJJHKADF CIMKFHBNKFF = 2; // offset: 40, xor const: 0
}

// CmdId: 439
message PIHPOBMPIMI {
	DKNOEBEGAJK DJINPLHKPAO = 10; // offset: 24, xor const: 0
}

// CmdId: 4051
message EBHODPEHCFN {
	uint32 KMKPPDICOKA = 13; // offset: 48, xor const: 13596
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 7878
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 3156
	HHNAOBMJPBG CPEPJEPHPBD = 14; // offset: 32, xor const: 0
}

// CmdId: 1132
message GDGCHJCKBDF {
	uint32 ADBPGCNNJBK = 2; // offset: 24, xor const: 6137
}

// CmdId: 592
message EKACEHPGDCH {
	uint64 HEJBMNAOJFL = 10; // offset: 48, xor const: 5301
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 6978
	uint64 AEDAEPKDOAL = 13; // offset: 40, xor const: 11359
	JHEMDHCLHMP CPEPJEPHPBD = 1; // offset: 24, xor const: 0
}

message PFLDHLPDKLE {
	repeated LLJOFEOGNCC CINDMJOJPLG = 14; // offset: 40, xor const: 0
	BBOOEHHKEMM NBDPOHHDEIP = 9; // offset: 32, xor const: 0
	uint32 JJDFJLDNEGB = 1; // offset: 56, xor const: 7998
	uint32 IIIGDHJPFMI = 10; // offset: 52, xor const: 12442
	uint32 DNAENEJOADB = 8; // offset: 48, xor const: 1732
	repeated NFEDOCGKAJC MKLMOBKBGDC = 11; // offset: 24, xor const: 0
}

// CmdId: 2431
message MMAEIELBFMM {
	uint32 BFPINNDKOIK = 4; // offset: 28, xor const: 3089
	uint32 KLJOMJNCFEP = 2; // offset: 32, xor const: 13954
	uint32 NMHNBHDEKBP = 1; // offset: 24, xor const: 1918
}

message AOKOFBENNAI {
	IDNPKGJPNGM FDOFAIDIAEP = 4; // offset: 24, xor const: 0
	uint32 DCENCIPOBMC = 2; // offset: 44, xor const: 0
	uint32 DCLHPJODOMI = 1; // offset: 40, xor const: 0
	int64 ENJFHPIPOGI = 3; // offset: 32, xor const: 0
}

message IMEEODBKEFN {
	FGKJFCJILIL EHGLMGAGAIN = 2; // offset: 24, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 32, xor const: 0
}

// CmdId: 3742
message IOHMBFDEGFF {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 3818
}

message KGODJGPNIND {
	bool KLOGAIOIGEO = 2; // offset: 25, xor const: 0
	bool ECOKDEDFAIK = 1; // offset: 24, xor const: 0
}

message AOJFGGBDIOJ {
	int32 JOJBOMLDHAO = 2; // offset: 36, xor const: 0
	repeated string PBBLKCOPMKC = 3; // offset: 24, xor const: 0
	int32 LDLJPDBHPLJ = 1; // offset: 32, xor const: 0
}

// CmdId: 2867
message HDMPDNKGALC {
	uint32 KJOGAAFMOCH = 8; // offset: 24, xor const: 10146
	uint32 GFCLKDAOMBM = 4; // offset: 28, xor const: 2656
}

message KCBLEFEKAJA {
	bool LOCCBCHMHBJ = 1; // offset: 24, xor const: 0
	int32 CGFKPEHPMHP = 2; // offset: 28, xor const: 0
}

// CmdId: 1674
message KKAHJHOAHLL {
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 48, xor const: 10671
	uint64 HEJBMNAOJFL = 9; // offset: 56, xor const: 4854
	BBPDECJACMJ CPEPJEPHPBD = 8; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 5; // offset: 40, xor const: 10115
}

message NCBPFGMMEHP {
	IHHJNHHDNHN JDDNAHKAFIK = 2; // offset: 32, xor const: 0
	FGKJFCJILIL PCBMPJHNGIP = 1; // offset: 16, xor const: 0
}

message ENGMBIIGICI {
	bool DFBFOFANOPA = 10; // offset: 88, xor const: 0
	int32 COBLPOGOFIN = 8; // offset: 92, xor const: 0
	int32 DAILJGPFGIJ = 12; // offset: 80, xor const: 0
	repeated EDGCAIEHLHH NMLBNDGHLOB = 3; // offset: 24, xor const: 0
	EDGCAIEHLHH NNAHMCADIGI = 2; // offset: 40, xor const: 0
	PACDDMOMCJD MBAGDNNHBAL = 5; // offset: 16, xor const: 0
	double FAFKLLJNCJI = 4; // offset: 72, xor const: 0
	float FFMNLLHJJGI = 11; // offset: 96, xor const: 0
	NNNBNGBBDEH NPEAEBDEBFG = 1; // offset: 84, xor const: 0
	map<int32, IMDCCMAKBDB> DJNKPENOGGI = 7; // offset: 64, xor const: 0
	string AEBGALNHMBM = 6; // offset: 56, xor const: 0
	repeated uint32 EHMCIJPKAHH = 9; // offset: 32, xor const: 0
}

// CmdId: 4636
message FONECMHJIAG {
	PIFKMIKHKGK NKIMBAELCEN = 4; // offset: 24, xor const: 0
	bool OMJGMJOLBOO = 9; // offset: 28, xor const: 0
}

// CmdId: 4707
message DOFPNDODKJH {
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 9; // offset: 56, xor const: 13825
	uint32 KMKPPDICOKA = 7; // offset: 48, xor const: 10507
	MDDIDJCJOKK CPEPJEPHPBD = 5; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 11; // offset: 40, xor const: 1955
}

enum KGCJBLOCGBK {
	KGCJBLOCGBK_GOJLEFCOPOK = 0;
	KGCJBLOCGBK_JNKNGHPELLJ = 1;
}

message HDNKGKMGJCC {
	JHEMIBPHNFO KMOBAHJLFMD = 3; // offset: 52, xor const: 0
	string DBOACCIJPDL = 2; // offset: 16, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 1; // offset: 48, xor const: 0
	map<string, FGKJFCJILIL> APINIAJAPMK = 5; // offset: 24, xor const: 0
	repeated FGKJFCJILIL OIDDOJOCCJH = 4; // offset: 32, xor const: 0
}

// CmdId: 9091
message HJJILOGKKHL {
	repeated GCBNCOAGBDO GCPEDDINJEN = 6; // offset: 16, xor const: 0
}

enum LGKCNOELKCF {
	LGKCNOELKCF_EDHHLDGJDBA = 0;
	LGKCNOELKCF_FMDDHKIFDME = 1;
	LGKCNOELKCF_POMGKLFJGDK = 2;
}

message EIDGMALNGEI {
	uint32 JEHEOBFHENF = 15; // offset: 24, xor const: 9173
	bool BKFADLJNBPJ = 2; // offset: 28, xor const: 0
	uint32 CPEGDKBNGDH = 14; // offset: 32, xor const: 15270
}

enum CCGKOPIDBHO {
	CCGKOPIDBHO_CPPFKEBIDAC = 0;
	CCGKOPIDBHO_OGNMEFOLCBJ = 1;
	CCGKOPIDBHO_OIAOKDCNBPG = 2;
	CCGKOPIDBHO_BKCCGILEJGO = 3;
}

message MLPJFCOPIKA {
	INLFFDKGPNK AODMMCCECAP = 12; // offset: 24, xor const: 0
}

// CmdId: 1263
message KNHIDKGBDLP {
	AHMGLHGDNDF KOGEIGJFFEN = 6; // offset: 16, xor const: 0
	string ECABAPILHIB = 2; // offset: 24, xor const: 0
}

// CmdId: 2545
message MJGJJAJKIOB {
	map<string, int32> BMHPLOOJMDC = 3; // offset: 32, xor const: 0
	map<string, string> LIFKLPHIDFH = 9; // offset: 48, xor const: 0
	repeated string JIPHMHLKKFH = 7; // offset: 16, xor const: 0
	uint32 MJIJGNBMIKH = 10; // offset: 104, xor const: 4856
	uint32 CDAGGFJILEJ = 11; // offset: 96, xor const: 3581
	repeated GKEJIEAANMK IMDKPEBDFDP = 13; // offset: 72, xor const: 0
	uint32 EOHENAABBLD = 15; // offset: 84, xor const: 2229
	string OGDINHBBPOA = 849; // offset: 24, xor const: 0
	uint32 DCENCIPOBMC = 6; // offset: 80, xor const: 12052
	uint32 DDHAIAPKEOD = 2; // offset: 108, xor const: 206
	uint32 AGDDDGNMKPE = 4; // offset: 92, xor const: 476
	uint32 EFNFANEIJMH = 8; // offset: 88, xor const: 2861
	map<string, int32> ONKEOHNGJBA = 12; // offset: 40, xor const: 0
	DHHDGKMFLNB OAEJPMIBGDP = 1; // offset: 100, xor const: 0
	map<string, string> AAJGPGJKKOK = 5; // offset: 64, xor const: 0
}

enum PEJAJJIICPN {
	PEJAJJIICPN_HP_RECOVER = 0;
	PEJAJJIICPN_HP_DECREASE = 1;
	PEJAJJIICPN_HP_REPLACE = 2;
}

// CmdId: 4203
message JJGBBJBHLAG {
	uint32 AMIJIAHGPMC = 10; // offset: 32, xor const: 7742
	map<uint32, uint32> NKGPHLLFNOB = 14; // offset: 24, xor const: 0
	uint32 HJGCHCAKKNJ = 13; // offset: 36, xor const: 1610
}

// CmdId: 9459
message CFBHLLMALBO {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 9167
}

message AMAGPAFMFCC {
	uint32 EKLGNOIEMLA = 13; // offset: 40, xor const: 6273
	uint64 IHDDPIOPCOE = 11; // offset: 32, xor const: 15011
	repeated uint32 IGBBCGMHMNB = 9; // offset: 24, xor const: 0
	uint32 GCIIBBMEMNO = 15; // offset: 44, xor const: 13634
}

message PDFMEJPEJAK {
	repeated KAHEJAKHMKC OJKDMCAEMON = 4; // offset: 16, xor const: 0
	int32 MFIOHKNGJLA = 2; // offset: 36, xor const: 0
	int32 KBBKDKLKKOG = 1; // offset: 32, xor const: 0
}

message MFEAKDHCPAB {
	FGKJFCJILIL FAKKFDPKMNM = 1; // offset: 32, xor const: 0
	FGKJFCJILIL EFNFANEIJMH = 2; // offset: 16, xor const: 0
}

message BBCMOPLJAIL {
	int32 LDKDFDIACLC = 7; // offset: 28, xor const: 12753
	int64 AHNJFOJIGGK = 1; // offset: 32, xor const: 3924
	bool BKFADLJNBPJ = 9; // offset: 24, xor const: 0
}

message NOCPPBBIAOF {
	repeated EHCBGINKMCH PJEOJGMLHEJ = 5; // offset: 16, xor const: 0
	repeated PMDHEHKKGOC NAJDHPOMOAA = 14; // offset: 32, xor const: 0
	bool BONJBALAFND = 1; // offset: 40, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 56, xor const: 11203
	uint32 HPINEDNJOAP = 2; // offset: 64, xor const: 12782
	int32 HGANFMDOEFK = 12; // offset: 44, xor const: 15983
	int32 JMELFDAHFCJ = 6; // offset: 76, xor const: 4181
	int32 GNOBDOGJFPL = 10; // offset: 72, xor const: 12096
	uint64 AAOFPEDIHFB = 3; // offset: 48, xor const: 3580
	int32 IGNPNBKMNJD = 11; // offset: 68, xor const: 6874
}

message PMAONELDKME {
	uint32 KBKLJLLBLCD = 3; // offset: 24, xor const: 0
	bool DCIIBPDKKEK = 1; // offset: 32, xor const: 0
	uint32 IHIEIMELEEH = 2; // offset: 36, xor const: 0
	uint32 BKOHKAGFCPK = 4; // offset: 28, xor const: 0
}

// CmdId: 4270
message BGADLOJILOK {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 7983
}

enum AKDCCHBADDM {
	AKDCCHBADDM_GADANILHLKK = 0;
	AKDCCHBADDM_DBKMNMGIGFI = 1;
	AKDCCHBADDM_EIEIKGPCABO = 2;
}

enum JJIOMDMMIGG {
	JJIOMDMMIGG_LDMDFKIPDAL = 0;
	JJIOMDMMIGG_OAIFOBLEPIF = 1;
	JJIOMDMMIGG_ICAPDEIKAJO = 2;
	JJIOMDMMIGG_JLBMJCOGIKL = 3;
}

message MFFOBNKMPED {
	KNGCFKJKOCJ HLEAEPDDBLE = 1; // offset: 28, xor const: 0
	int32 ENCANOPLLDM = 2; // offset: 24, xor const: 0
}

enum MNCHHPDLECD {
	MNCHHPDLECD_EJGPFAEIOPK = 0;
	MNCHHPDLECD_INLIFDFEMGO = 1;
	MNCHHPDLECD_MPHNKADGJJP = 2;
}

message JMIKAHJDKBO {
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 24, xor const: 0
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 16, xor const: 0
}

enum ChessUIControlType {
	CHESS_UI_CONTROL_TYPE_CHESS_UI_CONTROL_TYPE_NONE = 0;
	CHESS_UI_CONTROL_TYPE_CHESS_UI_CONTROL_TYPE_SHOW = 1;
	CHESS_UI_CONTROL_TYPE_CHESS_UI_CONTROL_TYPE_HIDE = 2;
}

// CmdId: 5223
message HMKJFNMHKHF {
	enum HPAMJDJBBPD {
		HPAMJDJBBPD_GLKBPDEJBDO = 0;
		HPAMJDJBBPD_LNFFEHAFEMF = 1;
		HPAMJDJBBPD_GEICBLPBBOE = 2;
	}

	uint32 GFPLKEHEEAN = 13; // offset: 40, xor const: 7006
	string OOODKIGJBCN = 15; // offset: 32, xor const: 0
	string CPEGDKBNGDH = 10; // offset: 24, xor const: 0
}

message OIADPILGLNM {
	repeated GCGNDLBANEK FBCIEONGFEI = 9; // offset: 16, xor const: 0
	uint32 EOGLIBEDMCG = 10; // offset: 72, xor const: 13871
	repeated uint32 JBNOAIGPEGA = 4; // offset: 48, xor const: 0
	repeated FDEHPPPAIJN NAEFAOMBHCG = 2; // offset: 40, xor const: 0
	repeated FEJNHNCFGCO PDNCKGLOMEL = 11; // offset: 32, xor const: 0
	repeated uint32 IKAECGFAIBB = 14; // offset: 56, xor const: 0
	repeated uint32 KCGFEAJPBBD = 7; // offset: 64, xor const: 0
}

message JLKOPDJIJBI {
	bool KGCLIDHIBNH = 7; // offset: 24, xor const: 0
	uint32 CLHNDIJPNOI = 12; // offset: 28, xor const: 12270
}

message PEMCOINAGHM {
}

enum AHJOBGONFGL {
	AHJOBGONFGL_CNFLBNCLKGL = 0;
	AHJOBGONFGL_DCJNBLIHPJO = 1;
	AHJOBGONFGL_JDGALCKGPOP = 2;
	AHJOBGONFGL_GPOBDFHCBCK = 3;
	AHJOBGONFGL_JCFIABHPJDN = 4;
}

message FFOANLHLKOP {
	repeated MCPOLGFBPPI GDDLDODPNJN = 9; // offset: 24, xor const: 0
}

// CmdId: 8740
message JFOCEAJAGBL {
	bool JMLECJIFDHP = 12; // offset: 28, xor const: 0
	uint32 GFCLKDAOMBM = 15; // offset: 24, xor const: 14737
	uint32 OMGOMPKNPGM = 4; // offset: 32, xor const: 10667
}

message HKEGBGFBEFJ {
	string NEFAAKJKNDC = 1; // offset: 24, xor const: 0
}

message AKOLFHKMNKF {
	FGKJFCJILIL HLEAEPDDBLE = 1; // offset: 24, xor const: 0
}

// CmdId: 9161
message GBIGDCLAMGJ {
}

message FGNGODPDABF {
	repeated GAABPGHONLF NLBMLJLMLPA = 13; // offset: 24, xor const: 0
	uint32 AMHBBOAFGFC = 3; // offset: 32, xor const: 3168
}

// CmdId: 4899
message EEOJHDCFIBP {
	uint32 PDLOIEBNNLJ = 8; // offset: 24, xor const: 14334
}

message LCEHNKFNDKM {
	repeated JAAOCOMFKHP ACEMBJPDCDK = 14; // offset: 16, xor const: 0
	repeated JAAOCOMFKHP BPIOGPIFLDE = 7; // offset: 32, xor const: 0
	int32 JAOHLNNEELP = 8; // offset: 64, xor const: 5265
	int32 FDPOCANEMNE = 4; // offset: 60, xor const: 5270
	float MCGEJEKOFEL = 2; // offset: 68, xor const: 0
	int32 LNHKNCIEFIF = 13; // offset: 48, xor const: 5286
	float DFOJOKMBONI = 6; // offset: 52, xor const: 0
	JAAOCOMFKHP MAPFHPPIOMO = 9; // offset: 40, xor const: 0
	int32 DMFLFFGDHKJ = 12; // offset: 56, xor const: 7853
}

message ECIAJFMPHHB {
	uint32 CPEGDKBNGDH = 4; // offset: 64, xor const: 2472
	repeated uint32 KDAGCMKELOO = 10; // offset: 56, xor const: 0
	repeated AMAGPAFMFCC KDEACCLEHHJ = 8; // offset: 32, xor const: 0
	repeated uint32 MOPMCOCFKNM = 1; // offset: 24, xor const: 0
	repeated uint32 IGEKLAGIFHL = 3; // offset: 16, xor const: 0
	repeated uint32 CDHCMKCHPDG = 5; // offset: 40, xor const: 0
}

// CmdId: 9032
message NPDHNMPHEJA {
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 9240
	uint32 KMKPPDICOKA = 9; // offset: 40, xor const: 4720
	NMIKLCJLPIB CPEPJEPHPBD = 5; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 11; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 11912
}

message FGBKHODHPNL {
	repeated IEGBEGDBNGE LFEIAELMBIG = 11; // offset: 32, xor const: 0
	repeated AFNFKCMCOGG AADPNMEEKPC = 14; // offset: 24, xor const: 0
	repeated NOADHMBHHNN OKMCJGCLNNH = 15; // offset: 16, xor const: 0
}

message OLLIIKEDALP {
	repeated DDNJFBPLHBO KHCNECFENAG = 15; // offset: 24, xor const: 0
}

enum PostEffectType {
	POST_EFFECT_TYPE_POST_EFFECT_TYPE_NONE = 0;
	POST_EFFECT_TYPE_GLITCH = 1;
	POST_EFFECT_TYPE_VIGNETTE_EFFECT = 2;
	POST_EFFECT_TYPE_SCREEN_EFFECT = 3;
	POST_EFFECT_TYPE_RADIAL_BLUR = 4;
	POST_EFFECT_TYPE_COLOR_ADJUSTMENTS = 5;
}

enum JPCENOPDAJD {
	JPCENOPDAJD_MODIFY_TIME_REWIND_TYPE_NONE = 0;
	JPCENOPDAJD_MODIFY_TIME_REWIND_TYPE_INSERT = 1;
	JPCENOPDAJD_MODIFY_TIME_REWIND_TYPE_REMOVE = 2;
	JPCENOPDAJD_MODIFY_TIME_REWIND_TYPE_MODIFY = 3;
}

message DKJGGIMKCFE {
	map<uint32, MAOFBLAHCEL> MGICEFLCGID = 9; // offset: 16, xor const: 0
}

enum GLAEGNJEBPA {
	GLAEGNJEBPA_AREA_CAMERA_TYPE_NONE = 0;
	GLAEGNJEBPA_AREA_CAMERA_TYPE_FOCUS = 1;
	GLAEGNJEBPA_AREA_CAMERA_TYPE_CANCEL_AFTER_FOCUS = 2;
	GLAEGNJEBPA_AREA_CAMERA_TYPE_BACK_TO_PLAYER = 3;
}

// CmdId: 2353
message CHMMIMGBJNM {
	uint64 HEJBMNAOJFL = 12; // offset: 56, xor const: 14632
	uint64 AEDAEPKDOAL = 9; // offset: 48, xor const: 5071
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 24, xor const: 0
	HLBOHEJAKHG CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 40, xor const: 362
}

message GCFLBGBAPMJ {
	uint32 IOEFEPHHDEI = 1; // offset: 24, xor const: 0
	uint32 EFNFANEIJMH = 2; // offset: 28, xor const: 0
}

// CmdId: 5628
message DELGFELHMIA {
	uint32 MHINMINPONI = 9; // offset: 24, xor const: 2970
}

message ODJLLBHMHBP {
	FGKJFCJILIL MOMGDEFPOGM = 1; // offset: 40, xor const: 0
	repeated string IDNOKFABNGF = 3; // offset: 24, xor const: 0
	string OKJHCFCICNH = 2; // offset: 16, xor const: 0
}

message FOPEBPFODFK {
	IMJIJLIDHEC EOGKFCGNENA = 1; // offset: 16, xor const: 0
	IMJIJLIDHEC GMDJMOPECBF = 2; // offset: 24, xor const: 0
}

// CmdId: 4717
message FJELHDDDCME {
	map<uint32, uint32> PJGEACIPEME = 2; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 7177
}

message BGPDLHGBAEJ {
	repeated uint32 MOLELICJFIK = 9; // offset: 16, xor const: 0
}

// CmdId: 7790
message NHELAOMGEKJ {
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 9519
	DNLCMMNCBMI IKNNAEIAEGG = 2; // offset: 24, xor const: 0
}

// CmdId: 51
message JEJCOOFIELJ {
	bool LDCEPMIOBLD = 15; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 28, xor const: 3069
}

message PACDDMOMCJD {
	int32 OGGOEDGJBPN = 8; // offset: 68, xor const: 0
	int32 LMOCOOJFGMO = 1; // offset: 72, xor const: 0
	int32 LIILGGMFCIC = 2; // offset: 80, xor const: 0
	int32 IANIIABLOIB = 5; // offset: 32, xor const: 0
	int32 NFHDFFMDLOP = 16; // offset: 52, xor const: 0
	int32 NCHBOPJGKAJ = 9; // offset: 56, xor const: 0
	int32 PFMAFELIAEK = 15; // offset: 64, xor const: 0
	int32 BAMMJGEDCKK = 11; // offset: 24, xor const: 0
	int32 AEGKANGPEHJ = 13; // offset: 60, xor const: 0
	int32 FDGKLHAHFAE = 14; // offset: 44, xor const: 0
	int32 BGGAGBMEIKM = 17; // offset: 36, xor const: 0
	int32 BPGIOHDDCHP = 3; // offset: 76, xor const: 0
	int32 IKCFFNLHKIH = 4; // offset: 40, xor const: 0
	int32 BGLMMDDIJKP = 6; // offset: 48, xor const: 0
	int32 PLHCKHILIND = 12; // offset: 84, xor const: 0
	int32 FHLCFNNNOCF = 10; // offset: 88, xor const: 0
	int32 BPBBLCPEICC = 7; // offset: 28, xor const: 0
}

message KDEEDMLHBLP {
	uint32 DCIGFJKJBKL = 1; // offset: 36, xor const: 4103
	uint32 OPFEAMDPIAG = 3; // offset: 28, xor const: 7367
	uint32 PBOAMDEBIGO = 12; // offset: 32, xor const: 11990
	uint32 MCMILKMHKCG = 2; // offset: 24, xor const: 13061
}

// CmdId: 7058
message NOCOEFKNPIA {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 8265
}

message JNFEHHPDEGF {
	repeated int32 JGGKGHJMDFA = 1; // offset: 16, xor const: 0
}

message FALJAIPOGGN {
	repeated JLEFHMNFFHN CAPANHOAAEI = 2; // offset: 16, xor const: 0
	bool HKOCFKBBMJF = 1; // offset: 32, xor const: 0
}

enum CIMPBDCILML {
	CIMPBDCILML_JOPBHPPEIJI = 0;
	CIMPBDCILML_NAICDHNFLIP = 1;
}

message PBIEAOIOCNM {
}

// CmdId: 5418
message HGEMFGGBNFI {
	uint32 DCENCIPOBMC = 6; // offset: 28, xor const: 11677
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 795
}

enum EJLJIFBBOHK {
	EJLJIFBBOHK_DBMMHPNPIED = 0;
	EJLJIFBBOHK_NOOKADGICBO = 1;
	EJLJIFBBOHK_NGOHCPJIMAE = 2;
}

message NFEDOCGKAJC {
	bytes KJJCGLPLBGP = 6; // offset: 16, xor const: 0
	uint32 HLEAEPDDBLE = 14; // offset: 32, xor const: 4786
}

message GDGCHGDAJPP {
	int32 MBFAFFLKBME = 2; // offset: 44, xor const: 0
	int32 IAKDAPNCNPI = 4; // offset: 40, xor const: 0
	string DICHOLEBGIH = 1; // offset: 16, xor const: 0
	int32 MOMGDEFPOGM = 5; // offset: 48, xor const: 0
	string GJNCANEGADM = 3; // offset: 24, xor const: 0
}

message LBKIILPAMFJ {
	PHFJPCHBLPC NINCGEHHAHN = 5; // offset: 40, xor const: 0
	int32 MOMGDEFPOGM = 1; // offset: 32, xor const: 0
	int32 BBLCHBANJID = 4; // offset: 36, xor const: 0
	int32 APBDIOHLMGB = 2; // offset: 44, xor const: 0
	string CEEAJBNFKDB = 3; // offset: 24, xor const: 0
}

message NCCNDPAKLNF {
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 24, xor const: 0
	bool BOEBHAICPPC = 2; // offset: 32, xor const: 0
}

message JLFPLPICGKE {
	repeated uint32 JOMLMBNMGPI = 9; // offset: 24, xor const: 0
}

message NOADHMBHHNN {
	uint32 EPAEIOPFDHH = 15; // offset: 68, xor const: 528
	repeated uint32 NBKDGEFFKMH = 10; // offset: 48, xor const: 0
	repeated bool NPDKIIAPBMA = 8; // offset: 40, xor const: 0
	uint32 OPFEAMDPIAG = 1; // offset: 92, xor const: 625
	int64 BAFAKLAALOK = 13; // offset: 96, xor const: 1869
	uint32 HIMNJDFAOCH = 2; // offset: 88, xor const: 9914
	repeated HBMJHBJFILA KNKOOMLNOED = 3; // offset: 24, xor const: 0
	uint32 NLAIODPEIEI = 7; // offset: 80, xor const: 5364
	uint32 FCNIKFEJMFI = 1518; // offset: 64, xor const: 3097
	repeated HJHKBGGCOEG BIHEKCLHGPM = 9; // offset: 16, xor const: 0
	bool NCPKBCEMCEH = 14; // offset: 56, xor const: 0
	uint32 CPEGDKBNGDH = 11; // offset: 76, xor const: 11271
	BOLNNMJOIDK CNLDJMAGJPL = 5; // offset: 84, xor const: 0
	uint32 OFFNBNNPNOL = 6; // offset: 60, xor const: 1018
	uint32 IHIEIMELEEH = 12; // offset: 72, xor const: 9822
}

// CmdId: 8191
message HCAEPGILPPN {
	bool MCIKJFCBEGF = 7; // offset: 36, xor const: 0
	uint32 GFOBLCFLFBH = 11; // offset: 48, xor const: 5839
	int32 IHIGNMLCHDK = 6; // offset: 40, xor const: 5150
	repeated uint32 GMMDLFCJJGG = 3; // offset: 24, xor const: 0
	uint32 BCCEOLDLIFA = 10; // offset: 44, xor const: 15513
	uint32 MPNJDHIPKNJ = 2; // offset: 32, xor const: 232
}

// CmdId: 9524
message FCMFPDJCEND {
}

// CmdId: 8148
message MCGEPFOBEMO {
	repeated uint32 FPDHGKJJONL = 4; // offset: 16, xor const: 0
	uint32 EKLGNOIEMLA = 7; // offset: 32, xor const: 14755
}

enum OGDDEEAOAMK {
	OGDDEEAOAMK_LAYER_TYPE_NONE = 0;
	OGDDEEAOAMK_HOLLOW_OUT = 1;
	OGDDEEAOAMK_NON_HOLLOW_OUT = 2;
	OGDDEEAOAMK_MULTI_HOLLOW_OUT = 3;
}

// CmdId: 3571
message IBEJJJIFPPK {
	JAMIPMDCAJB APKAEIEAILJ = 14; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 8235
}

// CmdId: 1437
message KCKMJCLEOJF {
	uint32 CNNFHILKJPI = 10; // offset: 32, xor const: 4933
	string DBPIEEMPAKL = 3; // offset: 16, xor const: 0
}

message JDJDMPAOFDK {
	int32 BDAGOLKDEAB = 15; // offset: 24, xor const: 4943
	int32 CFGCIFIJHPB = 9; // offset: 28, xor const: 4760
}

message JLPFPMJIFIK {
	uint32 LGCMCFCMEJB = 7; // offset: 48, xor const: 0
	uint32 KBKLJLLBLCD = 3; // offset: 60, xor const: 0
	uint32 HJHFOICGOAC = 1; // offset: 32, xor const: 0
	uint32 CBDBIPMJEPJ = 2; // offset: 52, xor const: 0
	uint64 OLIDNFIANHN = 6; // offset: 40, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 5; // offset: 16, xor const: 0
	CFEOOCOIDPF PBOAMDEBIGO = 4; // offset: 56, xor const: 0
}

message PKOAJIKCKFG {
	uint32 FJPBKMMGLAE = 6; // offset: 24, xor const: 0
	uint32 BDAGOLKDEAB = 3; // offset: 48, xor const: 0
	uint32 KJGIFHIEEJN = 5; // offset: 28, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 36, xor const: 0
	uint32 ENCANOPLLDM = 4; // offset: 32, xor const: 0
	int32 NMHNBHDEKBP = 2; // offset: 44, xor const: 0
	HollowShopCurrencyType ADFBHNOBNAC = 7; // offset: 40, xor const: 0
}

enum DIMFLLFJNEN {
	DIMFLLFJNEN_JCCHMKPENPC = 0;
	DIMFLLFJNEN_FKAKHJGGIPF = 1;
	DIMFLLFJNEN_JCAIFNCIAOF = 2;
	DIMFLLFJNEN_DMHKLHAEDFG = 3;
	DIMFLLFJNEN_BHCAECLDOBJ = 4;
	DIMFLLFJNEN_DLONFKOKPPP = 5;
	DIMFLLFJNEN_OBDKNKDHPDO = 6;
	DIMFLLFJNEN_DBGBMFANIIG = 7;
	DIMFLLFJNEN_KFGHMEJJBIN = 50;
	DIMFLLFJNEN_LFPJGEPGMOG = 100;
	DIMFLLFJNEN_BPNJCKGPLAO = 101;
	DIMFLLFJNEN_BOBKECKHPME = 102;
	DIMFLLFJNEN_OPDOLHIPEAI = 103;
	DIMFLLFJNEN_LOPCIGHLOLB = 104;
	DIMFLLFJNEN_FHHCEDLICCP = 105;
	DIMFLLFJNEN_ALCCJKGDDEA = 106;
	DIMFLLFJNEN_HCFMCDFLDAI = 107;
	DIMFLLFJNEN_LFEEBPMPBLL = 108;
	DIMFLLFJNEN_ELOHNEMOGJH = 109;
}

message FPFMJMDLFIG {
	int32 JAINEDAJDMP = 1; // offset: 24, xor const: 3970
}

message GFGCIAFDADI {
	uint32 KKBOGOBJMMO = 2; // offset: 36, xor const: 0
	uint32 EMJMCBGGGHP = 1; // offset: 32, xor const: 0
	CMFFFGLDOLK NNAMNJEPALC = 3; // offset: 16, xor const: 0
}

enum OCJLJHPOJPE {
	OCJLJHPOJPE_KFJKFPIDCJM = 0;
	OCJLJHPOJPE_MAOKMJJELEO = 1;
	OCJLJHPOJPE_MCGIHEBPKIG = 2;
	OCJLJHPOJPE_GIOFCJODACC = 3;
	OCJLJHPOJPE_HCOPHFFNJPE = 4;
	OCJLJHPOJPE_OMAOHOHINGI = 5;
}

message IFAHCPEMGAG {
	uint32 GFCLKDAOMBM = 3; // offset: 24, xor const: 13409
}

message PBKHAAGHNKH {
	IFGDJNNPCAN IGIDDEEEDFD = 5; // offset: 64, xor const: 0
	uint32 CGDODMPIIMP = 2; // offset: 72, xor const: 14028
	int32 IPNHJLHJFGB = 4; // offset: 76, xor const: 887
	IFGDJNNPCAN PKHKOMDICNI = 12; // offset: 24, xor const: 0
	IFGDJNNPCAN EFFFBEDGNDN = 15; // offset: 40, xor const: 0
	repeated IFGDJNNPCAN HKAOHDPFLDM = 13; // offset: 32, xor const: 0
	IFGDJNNPCAN NEGLLNDIPHC = 7; // offset: 56, xor const: 0
	IFGDJNNPCAN PDNDHNDCBOF = 8; // offset: 16, xor const: 0
}

message AFJCAHFKNFI {
	repeated NFIKEHAEAAN IOAPILMECLB = 14; // offset: 16, xor const: 0
}

message KIOHPACMDIL {
	repeated HIMNKGHPKIJ JCHIPMCOHHE = 14; // offset: 16, xor const: 0
	uint32 AMIJIAHGPMC = 6; // offset: 40, xor const: 3319
	bool IJHGGGHDFDC = 1; // offset: 44, xor const: 0
	repeated LPIFPENKKJN OCLKLBCOGDO = 9; // offset: 24, xor const: 0
}

enum BGIHMCGOBGP {
	BGIHMCGOBGP_CFIFOHOPIGO = 0;
	BGIHMCGOBGP_CADENKAFHJJ = 1;
}

// CmdId: 2679
message IOHDJPPEKAK {
}

// CmdId: 1728
message EICEKOOEPGK {
	int32 BDHIFEBPHOI = 7; // offset: 24, xor const: 13292
}

// CmdId: 562
message EJAEBKAPJEJ {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 3579
}

message CCEOAAIIFEO {
	FGKJFCJILIL NBGGBOKFJOB = 1; // offset: 24, xor const: 0
}

enum HELLMDLOOIP {
	HELLMDLOOIP_TO_BIG_TV = 0;
	HELLMDLOOIP_TO_NORMAL_TV = 1;
}

enum NAAAFHNCPNG {
	NAAAFHNCPNG_CHARACTER_TYPE_MALE = 0;
	NAAAFHNCPNG_CHARACTER_TYPE_FEMALE = 1;
	NAAAFHNCPNG_CHARACTER_TYPE_EXCHANGE = 2;
	NAAAFHNCPNG_CHARACTER_TYPE_MAIN = 3;
	NAAAFHNCPNG_CHARACTER_TYPE_VICE = 4;
	NAAAFHNCPNG_CHARACTER_TYPE_AVATAR = 5;
}

message BGHKOBHAHJH {
	uint32 PNJFBPLBOCE = 3; // offset: 28, xor const: 9331
	uint32 ACGOBGOFCJJ = 1; // offset: 24, xor const: 16252
}

// CmdId: 1563
message PACLOLHOPMP {
	uint32 PLFCIIAEIFC = 10; // offset: 24, xor const: 14823
	bool GGFKJHFNKEG = 3; // offset: 28, xor const: 0
}

message PBMNFJIEADF {
	map<uint32, uint32> OMHHIEDNDOO = 3; // offset: 32, xor const: 0
	bool KGKEABFPKBL = 4; // offset: 72, xor const: 0
	bool NBMIGHKEDOE = 17; // offset: 74, xor const: 0
	float OFNJMHMENDK = 10; // offset: 68, xor const: 0
	bool IONAIHFONID = 16; // offset: 56, xor const: 0
	bool BNHLDEHJCDM = 15; // offset: 58, xor const: 0
	float AEMGKDCDLGG = 11; // offset: 76, xor const: 0
	int32 NGFLBMOBPMJ = 8; // offset: 64, xor const: 0
	int32 CKILDKNGINN = 7; // offset: 52, xor const: 0
	bool IJOGBNLFPDK = 13; // offset: 57, xor const: 0
	bool BLDDNHPNIIJ = 12; // offset: 59, xor const: 0
	uint32 EHCELHPLKIA = 5; // offset: 48, xor const: 0
	repeated FLCFBIAPGFC NLOCFBHBIPA = 2; // offset: 16, xor const: 0
	bool EFHKPGKDCOP = 14; // offset: 73, xor const: 0
	string IMMPAOGLOLG = 6; // offset: 24, xor const: 0
	bool FKMGHFBAFID = 9; // offset: 75, xor const: 0
	JMDOBAEPMFP HLEAEPDDBLE = 1; // offset: 60, xor const: 0
}

// CmdId: 2263
message CCHBPBMALNB {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 4430
}

// CmdId: 8306
message KMPAOOLBMGM {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 7786
}

enum EIPGCACPDNM {
	EIPGCACPDNM_REWARD_TIPS_TYPE_NONE = 0;
	EIPGCACPDNM_REWARD_TIPS_TYPE_MAIN_CITY = 1;
}

message NIJFGGDDGDM {
	OFJJMLKFPNH MLOCGOPJHKA = 1; // offset: 24, xor const: 0
}

// CmdId: 7302
message ABHHLCCOEOM {
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 4333
	MKBNDBCGBLO OOOHBJMLDGO = 8; // offset: 24, xor const: 0
}

// CmdId: 29
message BNKDDFNJIJN {
	uint32 EKLGNOIEMLA = 3; // offset: 32, xor const: 41
	repeated uint32 LCDGLAEPBPF = 15; // offset: 24, xor const: 0
}

message KBEMCFBDEFI {
	bool NHKHGONDPMC = 4; // offset: 36, xor const: 0
	bool NHHFJCMOKEF = 3; // offset: 38, xor const: 0
	FGKJFCJILIL KFBCDDCIKAM = 1; // offset: 16, xor const: 0
	bool NMPGMGGFLDH = 5; // offset: 37, xor const: 0
	int32 DLADEJFFHFC = 2; // offset: 32, xor const: 0
}

message IDAEPOBHJLK {
	LDHKJGEMKIO FCCONGDNBNE = 9; // offset: 24, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 14; // offset: 128, xor const: 0
	repeated HollowEntityType DEOGNDCMIHJ = 10; // offset: 80, xor const: 0
	LDHKJGEMKIO JIBAHCHHCAL = 3; // offset: 112, xor const: 0
	LDHKJGEMKIO GJJFBJMMLHB = 12; // offset: 96, xor const: 0
	LDHKJGEMKIO GNKMCKGNHOE = 4; // offset: 40, xor const: 0
	repeated HollowEntityType HKMMLBJMDJP = 2; // offset: 64, xor const: 0
	FGKJFCJILIL PGGGNINDNCP = 13; // offset: 16, xor const: 0
	LDHKJGEMKIO OMLONKKHOIE = 8; // offset: 104, xor const: 0
	LDHKJGEMKIO IGKBCAEPAAL = 11; // offset: 72, xor const: 0
	LDHKJGEMKIO KNLPFNDNLPD = 6; // offset: 88, xor const: 0
	LDHKJGEMKIO ENPGEHCJJGL = 7; // offset: 48, xor const: 0
	LDHKJGEMKIO IJPGHHDIMMD = 5; // offset: 56, xor const: 0
	LDHKJGEMKIO OCAAFEONLIJ = 1; // offset: 120, xor const: 0
}

message MFBCABOFDEA {
	FGKJFCJILIL JOELANGNPAH = 1; // offset: 16, xor const: 0
	string FNGHDBEGHEF = 2; // offset: 32, xor const: 0
}

message EHMGDCOJEMF {
	int32 NPLKKOGKMCK = 4; // offset: 52, xor const: 0
	int32 CPEGDKBNGDH = 3; // offset: 40, xor const: 0
	int32 KOMIMFNADCM = 2; // offset: 44, xor const: 0
	string EKNFDKHABNN = 6; // offset: 24, xor const: 0
	int32 GCGPNHPGPLH = 8; // offset: 56, xor const: 0
	int32 GAEGAIBNDCE = 5; // offset: 48, xor const: 0
	int32 GMFEDDIHAJL = 1; // offset: 60, xor const: 0
	repeated CADNBCFMDDF MKCJPLBPKKH = 7; // offset: 16, xor const: 0
}

message LCIBIIFACHH {
	FGKJFCJILIL DGBNKFIFGOH = 2; // offset: 24, xor const: 0
	FGKJFCJILIL DDCOJMPFHJC = 1; // offset: 16, xor const: 0
}

// CmdId: 1052
message PALNFHMOGMI {
	repeated uint32 GFBFEKAJDIG = 1; // offset: 24, xor const: 0
}

message ONFFOKHPGHO {
	string GKIMBDJODMF = 2; // offset: 56, xor const: 0
	string JMMNHAEKNMK = 3; // offset: 16, xor const: 0
	string NLBKAJKIPGG = 5; // offset: 32, xor const: 0
	string JPGOGFKDFGC = 4; // offset: 48, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 6; // offset: 64, xor const: 0
	FGKJFCJILIL AOMJNBKCIJL = 1; // offset: 40, xor const: 0
}

message FAIJGBIOJAJ {
	string IPGMMIMICMA = 4; // offset: 48, xor const: 0
	string BEMKPNCMFFE = 2; // offset: 24, xor const: 0
	bool MNBMPDPEHEA = 3; // offset: 56, xor const: 0
	bool BMEHMNFKDNH = 1; // offset: 57, xor const: 0
	string HAOGOPGJIJN = 5; // offset: 32, xor const: 0
	string EKNFNFCPCMH = 6; // offset: 16, xor const: 0
}

// CmdId: 4957
message AFNMDIHOFLP {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 10320
}

// CmdId: 1763
message BBAGIHIDEGN {
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 7053
	repeated HIFJLLPLFOC FDGCJDPENIC = 8; // offset: 24, xor const: 0
}

message KKHLDOCOEIC {
	repeated uint32 KCIAGPAFEBH = 13; // offset: 32, xor const: 0
	uint32 PJFBHOFCEND = 7; // offset: 40, xor const: 6726
	repeated PMFLGCCMCPP EHHADGAPJDD = 6; // offset: 16, xor const: 0
}

message OLOLMLBAEBA {
	bool HBFALCHNCLF = 3; // offset: 40, xor const: 0
	string LPEKBBJAKBP = 2; // offset: 16, xor const: 0
	FGKJFCJILIL BPELJHPDEBO = 1; // offset: 32, xor const: 0
}

// CmdId: 4194
message AKILPMPNAAH {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 5008
}

// CmdId: 4878
message KCMPGMNDOBG {
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 1990
	FLBAOAPBMNC JAPLFDBJOJI = 10; // offset: 24, xor const: 0
}

enum AJGBADKCOID {
	AJGBADKCOID_GACLDOPKFMA = 0;
	AJGBADKCOID_HMEKOPOBDCG = 1;
	AJGBADKCOID_NLCKHECLKKG = 2;
}

// CmdId: 1249
message EOKPDAOKNMP {
	uint32 JEHEOBFHENF = 11; // offset: 24, xor const: 2666
}

// CmdId: 9178
message DJDCJGIOGKC {
	repeated IMJOMAPGGCB FAPGMLGODCM = 1; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 6688
}

enum AGKHKAJNLFC {
	AGKHKAJNLFC_NCAKGAMKOOG = 0;
	AGKHKAJNLFC_BOPGGAFMJFL = 1;
	AGKHKAJNLFC_LCBNDKNFPEB = 2;
	AGKHKAJNLFC_INJCGPCNABM = 3;
}

message LPIFPENKKJN {
	uint32 MFPCLINKKLL = 5; // offset: 36, xor const: 10884
	repeated uint32 DLBOLFFLAGE = 3; // offset: 16, xor const: 0
	uint32 EFPCHEPEJLE = 2; // offset: 32, xor const: 14217
}

message BOLLJPKJJBG {
	repeated FGKJFCJILIL GPFNPNDPMPC = 2; // offset: 16, xor const: 0
	string OBECILHKFJO = 1; // offset: 24, xor const: 0
}

enum FJNJBBGCDJN {
	FJNJBBGCDJN_MNDPGOGMBID = 0;
	FJNJBBGCDJN_GJEMEBPGCGM = 2;
	FJNJBBGCDJN_CICDFGOKJNO = 3;
	FJNJBBGCDJN_KMFNHLLCPLG = 4;
	FJNJBBGCDJN_EJFBGBNAGGC = 5;
	FJNJBBGCDJN_KEOIGDONEJF = 6;
	FJNJBBGCDJN_ACKMKPECMGH = 7;
	FJNJBBGCDJN_HIKFALMNIFF = 8;
	FJNJBBGCDJN_PMLABOGKCJH = 9;
	FJNJBBGCDJN_PMFEKOJILDB = 10;
	FJNJBBGCDJN_AHENNBBHFMI = 11;
	FJNJBBGCDJN_DFFGLBACHHL = 12;
	FJNJBBGCDJN_CMPABELGJKM = 16;
	FJNJBBGCDJN_MJPPFLMCPDA = 17;
	FJNJBBGCDJN_DGHGHJADDJN = 18;
	FJNJBBGCDJN_HHGBBHKKBFA = 19;
	FJNJBBGCDJN_KILLDJKPBIL = 20;
	FJNJBBGCDJN_DPLDEBHEDHK = 21;
	FJNJBBGCDJN_MOBHIGKOOLA = 22;
	FJNJBBGCDJN_CDJLDBCKOOG = 23;
	FJNJBBGCDJN_ENEGIFMFLLH = 24;
	FJNJBBGCDJN_ALMKBFAAOAM = 25;
	FJNJBBGCDJN_DDCCGHFAMBC = 26;
	FJNJBBGCDJN_OJHCJHNMIIP = 28;
	FJNJBBGCDJN_PEPPBJAOLFB = 29;
	FJNJBBGCDJN_GCJPKMHIGAE = 30;
	FJNJBBGCDJN_LHHJAHMLGAE = 31;
	FJNJBBGCDJN_IKOMLFCPGBC = 32;
	FJNJBBGCDJN_MNPFOBKJJMD = 33;
	FJNJBBGCDJN_JOCLILGGNIM = 34;
	FJNJBBGCDJN_LGKDHBLLDHC = 35;
	FJNJBBGCDJN_JIOBHEPAGFK = 36;
	FJNJBBGCDJN_DMPKEIFICMN = 38;
	FJNJBBGCDJN_OAMMHEMNEHK = 39;
	FJNJBBGCDJN_PAFIIKGKOCC = 40;
	FJNJBBGCDJN_HGBPGJPPGDD = 41;
	FJNJBBGCDJN_MCKKKDDFAHJ = 42;
	FJNJBBGCDJN_PCFHEHPHPBL = 43;
	FJNJBBGCDJN_DAACIOIEPCI = 45;
	FJNJBBGCDJN_ALGPJIGEKEL = 46;
	FJNJBBGCDJN_ACELPENOCCB = 49;
	FJNJBBGCDJN_NKKFEHHJILI = 52;
	FJNJBBGCDJN_OMFNHKECFDG = 53;
	FJNJBBGCDJN_KFDMCBCCNKN = 54;
	FJNJBBGCDJN_FHOLAPFPHMD = 55;
	FJNJBBGCDJN_PPKCJAOKDEN = 56;
	FJNJBBGCDJN_GOOHNHLBLCM = 57;
	FJNJBBGCDJN_BPAOCHGHOOL = 58;
	FJNJBBGCDJN_HCAKEEFEKGK = 59;
	FJNJBBGCDJN_HIPJBHCAGOI = 60;
	FJNJBBGCDJN_HBKEMMOEEEB = 62;
	FJNJBBGCDJN_PJOPHPELJFL = 63;
	FJNJBBGCDJN_AKLBGPKAKMM = 64;
	FJNJBBGCDJN_MGGDLJHANAO = 67;
	FJNJBBGCDJN_KAMNONFGDCF = 68;
	FJNJBBGCDJN_NAJCAEEGGGF = 69;
	FJNJBBGCDJN_LDDIOBMCDGI = 70;
	FJNJBBGCDJN_DKFIFKOGEMI = 73;
	FJNJBBGCDJN_JKPNJBGNIDM = 74;
	FJNJBBGCDJN_EFGCLGNFMKD = 75;
	FJNJBBGCDJN_LMKHCLOIAGB = 76;
	FJNJBBGCDJN_LGHFBGFAGFA = 77;
	FJNJBBGCDJN_BEPABCNAEKI = 78;
	FJNJBBGCDJN_FANIKKHFIIO = 79;
	FJNJBBGCDJN_JIHFAKBOLGM = 81;
	FJNJBBGCDJN_LPIFEMCCIDO = 82;
	FJNJBBGCDJN_JDNBOJMADED = 83;
	FJNJBBGCDJN_CNGBMDJOPPB = 84;
	FJNJBBGCDJN_FDBKEGFCJCO = 85;
	FJNJBBGCDJN_JEIGNKGJGJF = 86;
	FJNJBBGCDJN_PDFDIHCOPAJ = 87;
	FJNJBBGCDJN_HMEKGAIOMBC = 88;
	FJNJBBGCDJN_CDIHBLBCDCI = 89;
	FJNJBBGCDJN_DBKNFLHCBLE = 90;
	FJNJBBGCDJN_HCDJGFIHAML = 91;
	FJNJBBGCDJN_NIOOJNEOEIF = 92;
	FJNJBBGCDJN_KPINABINEGI = 93;
	FJNJBBGCDJN_MHFJJMFLCOC = 94;
	FJNJBBGCDJN_MPKGNNOAJMF = 95;
	FJNJBBGCDJN_BHJJMCDLGGM = 96;
	FJNJBBGCDJN_PMDMEBFKEOL = 97;
	FJNJBBGCDJN_GHCGNBHMADG = 98;
	FJNJBBGCDJN_HNGLCIGMNEA = 99;
	FJNJBBGCDJN_HOLLBAFGGIM = 100;
	FJNJBBGCDJN_HCIEMOGOCEA = 101;
	FJNJBBGCDJN_HMFOIAAFALO = 103;
	FJNJBBGCDJN_PFOLAHACEFL = 104;
	FJNJBBGCDJN_HMHHKMJJHPD = 105;
	FJNJBBGCDJN_OEOEJDICFEG = 106;
	FJNJBBGCDJN_BPKKGBHNHIK = 107;
	FJNJBBGCDJN_KLHBAPJGMOL = 108;
	FJNJBBGCDJN_FFIFGGAJDJD = 109;
	FJNJBBGCDJN_DFNONBKIDGM = 110;
	FJNJBBGCDJN_CGEAECLKGIA = 112;
	FJNJBBGCDJN_MPGKCMPINAL = 113;
	FJNJBBGCDJN_IMIHHFEMHEO = 114;
	FJNJBBGCDJN_NEPNCNINDFN = 115;
	FJNJBBGCDJN_ECGMNNDNNHM = 116;
	FJNJBBGCDJN_PPHIGKBKLGO = 117;
	FJNJBBGCDJN_KDPKIJFHHEI = 118;
	FJNJBBGCDJN_IECOKMHIPKC = 119;
	FJNJBBGCDJN_ODMMIPAAPEB = 120;
	FJNJBBGCDJN_ENOGEFGFDHO = 121;
	FJNJBBGCDJN_DIJBEGOKPEF = 122;
	FJNJBBGCDJN_HCLAIEJAHLC = 123;
	FJNJBBGCDJN_DHKDDLFNJOK = 124;
	FJNJBBGCDJN_BBDNJJMEBIA = 125;
	FJNJBBGCDJN_NPGJNOCBKGM = 126;
	FJNJBBGCDJN_IKGPPFHEFFP = 127;
	FJNJBBGCDJN_KBBOEHKEKJG = 128;
	FJNJBBGCDJN_EKFKPDFHHMB = 129;
	FJNJBBGCDJN_DGBLEKGMNDE = 130;
	FJNJBBGCDJN_CFMFHHNMLPL = 131;
	FJNJBBGCDJN_GEJJEHDMPII = 132;
	FJNJBBGCDJN_ODONGLGLHBC = 133;
	FJNJBBGCDJN_FBKGAOFLJJP = 134;
	FJNJBBGCDJN_FJGNJKKLLDJ = 135;
	FJNJBBGCDJN_OLJHDBDBEBG = 136;
	FJNJBBGCDJN_LLKIGKKLFAH = 137;
	FJNJBBGCDJN_MFODJANAIDI = 138;
	FJNJBBGCDJN_GILHIMFMGAN = 139;
	FJNJBBGCDJN_LCBEFLHIDPN = 140;
	FJNJBBGCDJN_POHEFINNCAN = 141;
	FJNJBBGCDJN_KEPIJGEOFCK = 142;
	FJNJBBGCDJN_DKGEAGCAHDB = 143;
	FJNJBBGCDJN_EOGLEGDJBBE = 144;
	FJNJBBGCDJN_DHHJGMDKAIK = 145;
	FJNJBBGCDJN_BLCJHHALGJE = 146;
	FJNJBBGCDJN_NJCCJEBPIGE = 147;
	FJNJBBGCDJN_HCGMFKGNDML = 148;
	FJNJBBGCDJN_JDMAAILJDKF = 149;
	FJNJBBGCDJN_BGIAFPMAJGE = 150;
	FJNJBBGCDJN_FLGDHBNMIPB = 151;
	FJNJBBGCDJN_NPDPFOLJOCM = 152;
	FJNJBBGCDJN_GELGKKEPPBG = 153;
	FJNJBBGCDJN_KNGMBMKPCAL = 154;
	FJNJBBGCDJN_KDIJINMHGOG = 155;
	FJNJBBGCDJN_FEBCIELPENM = 156;
	FJNJBBGCDJN_EJMGBMKCDGE = 157;
	FJNJBBGCDJN_IKPKJIHJCEK = 158;
	FJNJBBGCDJN_PMFEIACCLND = 159;
	FJNJBBGCDJN_KJLDOKBAOJJ = 160;
	FJNJBBGCDJN_HENGEAHJDKD = 161;
	FJNJBBGCDJN_JAPPCDNFPPA = 162;
	FJNJBBGCDJN_DFFDGLLPOAG = 163;
	FJNJBBGCDJN_MKOIDCKADKJ = 164;
	FJNJBBGCDJN_AEIGAEGCGKP = 165;
	FJNJBBGCDJN_DLMPKMGPAIA = 166;
	FJNJBBGCDJN_ECKEIFMHNOL = 167;
	FJNJBBGCDJN_FDOMLBPIJBL = 168;
	FJNJBBGCDJN_JBKIBNFAKOA = 169;
	FJNJBBGCDJN_LDJHHEGNJJM = 170;
	FJNJBBGCDJN_EDMLNAPOCMO = 171;
	FJNJBBGCDJN_ADMEDMCFGKC = 172;
	FJNJBBGCDJN_OAAENPDPCAN = 173;
	FJNJBBGCDJN_CANIJAAFCPC = 174;
	FJNJBBGCDJN_ECAHJINNEHG = 175;
	FJNJBBGCDJN_BHGKMFDMKFG = 176;
	FJNJBBGCDJN_JHBGGJJELID = 177;
	FJNJBBGCDJN_BMCFHPGIICC = 178;
	FJNJBBGCDJN_CMKNMPECINM = 179;
	FJNJBBGCDJN_OFLOJFHFGDP = 180;
	FJNJBBGCDJN_JMCKGNHPNFM = 181;
	FJNJBBGCDJN_MJBFLABNIEL = 182;
	FJNJBBGCDJN_PJPFKGPPODI = 183;
	FJNJBBGCDJN_OGIFKJDIHAN = 184;
	FJNJBBGCDJN_KCFMKOGBOEN = 185;
	FJNJBBGCDJN_FBLOMFBACDA = 187;
	FJNJBBGCDJN_DHDLAHPACAO = 188;
	FJNJBBGCDJN_IMBEJMGJAHP = 189;
	FJNJBBGCDJN_AOKNGPHPKCH = 190;
	FJNJBBGCDJN_DPJOPDLNAIN = 191;
	FJNJBBGCDJN_ELOHAPLDDIH = 192;
	FJNJBBGCDJN_NINENOGABJI = 193;
	FJNJBBGCDJN_AHKLNPFBBLG = 194;
	FJNJBBGCDJN_DJKNDNCCEJH = 195;
	FJNJBBGCDJN_BNCBEAFLIBE = 196;
	FJNJBBGCDJN_GINNHLJOING = 197;
	FJNJBBGCDJN_KPIIBFPDPHI = 198;
	FJNJBBGCDJN_NDOOIDHLOBN = 199;
	FJNJBBGCDJN_OFJPMFFBCKI = 200;
	FJNJBBGCDJN_BBPEFBLEJHL = 201;
	FJNJBBGCDJN_EGJKGJFIAHA = 202;
	FJNJBBGCDJN_ONOLMELIKBG = 203;
	FJNJBBGCDJN_NIJBPNOIAOE = 204;
	FJNJBBGCDJN_FHHNCFALJIC = 206;
	FJNJBBGCDJN_JGBLAKGIHGM = 207;
	FJNJBBGCDJN_MBBHKKLOINO = 208;
	FJNJBBGCDJN_HLIHGDIIAAK = 209;
	FJNJBBGCDJN_MBEBAIBCNFN = 210;
	FJNJBBGCDJN_HKDHIDJNBBH = 211;
	FJNJBBGCDJN_FIHLDPAGACE = 213;
	FJNJBBGCDJN_LKMJBJJDDKP = 214;
	FJNJBBGCDJN_PEDPDLDDGHM = 215;
	FJNJBBGCDJN_PPLPAIHKIEF = 216;
	FJNJBBGCDJN_JGONLJNHHCE = 217;
	FJNJBBGCDJN_GCPMMNCIEFK = 218;
	FJNJBBGCDJN_HPLIPEKBALA = 219;
	FJNJBBGCDJN_JCPIHCADCDN = 220;
	FJNJBBGCDJN_PAEMCLJLFHH = 221;
	FJNJBBGCDJN_CMPECOEJHGH = 222;
	FJNJBBGCDJN_NDKOELAPDPP = 223;
	FJNJBBGCDJN_ODAPAIEJPHO = 224;
	FJNJBBGCDJN_HDAMFIDLDPM = 225;
	FJNJBBGCDJN_NOFLMBPKJGF = 226;
	FJNJBBGCDJN_FFLMNJOOHDI = 227;
	FJNJBBGCDJN_HCJDGEIFLGH = 228;
	FJNJBBGCDJN_LPJKOJNFLOA = 229;
	FJNJBBGCDJN_JPJMKIKKIBK = 230;
	FJNJBBGCDJN_EJIGABNAAJE = 231;
	FJNJBBGCDJN_JFFCHKDPGKI = 232;
	FJNJBBGCDJN_CHIMBGGLLMJ = 233;
	FJNJBBGCDJN_NLOHAKAGHBE = 234;
	FJNJBBGCDJN_OGPEADNMAJD = 235;
	FJNJBBGCDJN_JAMJIIKKEBD = 236;
	FJNJBBGCDJN_PHCDDNBCOJP = 237;
	FJNJBBGCDJN_HNLBLHHGKGP = 238;
	FJNJBBGCDJN_PEHAKDFDBKB = 239;
}

message DLKFNHIDLNL {
}

// CmdId: 1938
message HAKLGDHIMED {
	uint64 HEJBMNAOJFL = 9; // offset: 48, xor const: 8809
	AJMNHBANABI CPEPJEPHPBD = 6; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 12; // offset: 40, xor const: 14684
	uint32 KMKPPDICOKA = 13; // offset: 56, xor const: 16250
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 32, xor const: 0
}

message ANPOILGHJMP {
	string AACOGNFLAAB = 1; // offset: 16, xor const: 0
	uint32 KCJLECGKGKL = 2; // offset: 32, xor const: 0
}

// CmdId: 8180
message LMPDIIFGJBD {
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 16032
	repeated GJJILBOGFLJ KKCABCOKCLC = 2; // offset: 24, xor const: 0
}

// CmdId: 8066
message LKMNLMLNCAB {
	repeated AELEDMNAFMH DHBPIOBOCBE = 10; // offset: 24, xor const: 0
	uint32 INNLFNHLDML = 7; // offset: 40, xor const: 5499
	bool HCGBDKEMILO = 15; // offset: 36, xor const: 0
	int32 IHIGNMLCHDK = 3; // offset: 44, xor const: 13567
	uint32 DCLCMCCDFMK = 5; // offset: 32, xor const: 557
}

// CmdId: 9301
message FPJHJPHCCKJ {
	uint32 FMNLIEDIAMK = 13; // offset: 24, xor const: 889
}

message ELMBHLKPJKG {
	FGKJFCJILIL ENOKCDKNCLJ = 2; // offset: 16, xor const: 0
	FGKJFCJILIL ODGGGMNMKBK = 1; // offset: 24, xor const: 0
}

message MCPOLGFBPPI {
	int32 MILFCLKPNGI = 4; // offset: 32, xor const: 15998
	AMNEMEAEHHP ECAPMCDCLJF = 3; // offset: 28, xor const: 0
	int32 EGCDHCEHELC = 1; // offset: 36, xor const: 981
	POBNCBHAOLK KFOLOCMEFKB = 14; // offset: 24, xor const: 0
}

message DCOOHEFKBKE {
}

message GKKDGIAJBAL {
	repeated KIKNILICNLM OJKDMCAEMON = 12; // offset: 16, xor const: 0
}

enum DPPJPHMDHFK {
	DPPJPHMDHFK_FNPFNPCJGDE = 0;
	DPPJPHMDHFK_HNAEABOMAII = 1;
	DPPJPHMDHFK_BJGPMBGLHJH = 2;
	DPPJPHMDHFK_CEKGHNAKHPK = 3;
}

message ANNIPHJCOLH {
	FGKJFCJILIL IPNANHEPICK = 1; // offset: 24, xor const: 0
	string FCFMJJJKJAM = 2; // offset: 32, xor const: 0
	IHHJNHHDNHN JDLIABJGLHB = 3; // offset: 44, xor const: 0
	bool EMBAAGJGMMP = 4; // offset: 40, xor const: 0
}

message HFOGBFJBFCE {
	int32 IFAJHJFKOFA = 2; // offset: 44, xor const: 0
	int32 NMJENODBDLD = 1; // offset: 36, xor const: 0
	int32 EIDBJKNMEJC = 3; // offset: 32, xor const: 0
	int32 MEBCEJFGAEI = 4; // offset: 40, xor const: 0
	HBFBNKAODPJ FNNGEDGDEPE = 5; // offset: 16, xor const: 0
}

// CmdId: 3815
message FOPDCBIIHKP {
	string CPEPJEPHPBD = 8; // offset: 32, xor const: 0
	uint32 IIIGDHJPFMI = 9; // offset: 60, xor const: 3924
	bytes FCKEPMHNCML = 2; // offset: 24, xor const: 0
	uint32 JFHHBHAIBLF = 1; // offset: 48, xor const: 7246
	int32 MDFKPGBALJI = 10; // offset: 52, xor const: 6242
	uint64 AOAFHIFLBIP = 7; // offset: 40, xor const: 11517
	bool BGNOOGFIPFH = 12; // offset: 57, xor const: 0
	bool EOCCFLGKJLK = 11; // offset: 56, xor const: 0
}

message BMHDPIALDPD {
	repeated uint32 IBEHHFDNHOA = 1; // offset: 32, xor const: 0
	uint32 JFPGDDPDLBL = 11; // offset: 48, xor const: 4803
	repeated uint32 PNJCIGNEICK = 4; // offset: 16, xor const: 0
	repeated uint32 GCJKKFDPABN = 14; // offset: 24, xor const: 0
}

// CmdId: 7388
message FIAMPOANPCI {
	repeated int32 ONDKOLPNHLO = 1; // offset: 16, xor const: 0
	ANPILAJNBCN EJPPLIKAPLB = 8; // offset: 32, xor const: 0
}

enum EMGFDDKHMML {
	EMGFDDKHMML_KBNABGILFGF = 0;
	EMGFDDKHMML_OJOHIJPJNCF = 1;
	EMGFDDKHMML_ABJMDDBFCMJ = 2;
	EMGFDDKHMML_JFJJHAJHFEH = 3;
}

// CmdId: 4652
message OJIBMLMIMMC {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 417
}

message LIGOHGBIGLC {
	int32 LFABBICIHPG = 10; // offset: 40, xor const: 7391
	map<int32, int32> PDPCOBIOFKF = 12; // offset: 32, xor const: 0
	IFGDJNNPCAN CKBOJACIJDI = 4; // offset: 16, xor const: 0
}

message FEJPIBDBNGO {
	bool NCIFMOAJFJK = 1; // offset: 24, xor const: 0
}

// CmdId: 8418
message NJLDPHNPOHF {
}

enum LABEKLPANDN {
	LABEKLPANDN_JMJBGIJFGIM = 0;
	LABEKLPANDN_OPGJKPGDCMM = 1;
	LABEKLPANDN_EKODJMPFDDB = 2;
	LABEKLPANDN_BOCHDNAONKN = 3;
}

// CmdId: 6721
message FOOLCHECLBN {
	repeated uint32 DGOHKPOHMAN = 3; // offset: 24, xor const: 0
}

enum NGECOFHBBDF {
	NGECOFHBBDF_OPDKGEDCHEH = 0;
	NGECOFHBBDF_DEKCGBAIPAH = 1;
}

message KIGHOAMIDJJ {
	uint32 MNEHOJDNDND = 1; // offset: 24, xor const: 0
	uint32 NGFLJAJGFOO = 7; // offset: 36, xor const: 0
	uint32 JHDMHCCJOBJ = 6; // offset: 40, xor const: 0
	uint32 BEOHFPKHODI = 3; // offset: 32, xor const: 0
	uint32 NEJMMLIOFIE = 4; // offset: 44, xor const: 0
	uint32 FKEKIGONJNG = 5; // offset: 48, xor const: 0
	uint32 JOHIIDMMFMH = 2; // offset: 28, xor const: 0
}

enum GEAGHMNKJJJ {
	GEAGHMNKJJJ_AVATAR_POS_ALL = 0;
	GEAGHMNKJJJ_AVATAR_POS_RANDOM = 1;
	GEAGHMNKJJJ_CHARACTER_1 = 2;
	GEAGHMNKJJJ_CHARACTER_2 = 3;
	GEAGHMNKJJJ_CHARACTER_3 = 4;
	GEAGHMNKJJJ_RANDOM_ALIVE = 5;
	GEAGHMNKJJJ_RANDOM_DEATH = 6;
	GEAGHMNKJJJ_RANDOM_BAN = 7;
}

message AHPAHENOKIL {
	repeated AJCBLJBLGBH KDEACCLEHHJ = 4; // offset: 16, xor const: 0
}

message IFPJHFHDNPK {
	string IEJHLKKMDJD = 6; // offset: 64, xor const: 0
	string GPKACNOPNKG = 1; // offset: 40, xor const: 0
	string MNOLJLHDICM = 3; // offset: 16, xor const: 0
	string BMLEKFOHIHF = 5; // offset: 32, xor const: 0
	string DCEHNEKFHPL = 2; // offset: 72, xor const: 0
	string CNMBOIICALM = 4; // offset: 48, xor const: 0
	string OICKEABJJJL = 7; // offset: 24, xor const: 0
}

// CmdId: 7117
message KOPNBENKJAH {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 10718
}

message OHJDPONFMIH {
	IMJIJLIDHEC AGPECBDDLAG = 6; // offset: 24, xor const: 0
}

message BFCCBKMCAFC {
	bool BEPCLLPMAHN = 6; // offset: 40, xor const: 0
	uint32 ANCMOCAFOFE = 3; // offset: 52, xor const: 0
	uint32 PEDKNCIMHLA = 1; // offset: 32, xor const: 0
	HLCBBNHEFBC EPNHGODIOPH = 2; // offset: 44, xor const: 0
	string FAGJPOKKOFA = 7; // offset: 16, xor const: 0
	uint32 FPJGBFNAEEC = 4; // offset: 36, xor const: 0
	uint32 HJHEKCKNMDB = 5; // offset: 48, xor const: 0
}

enum BEHHIDBGIGD {
	BEHHIDBGIGD_NLAIIFCEDGL = 0;
	BEHHIDBGIGD_IOKJEDEBLAK = 1;
}

message HACMBNELIOK {
	EDMCJDKBAKN PBOAMDEBIGO = 2; // offset: 32, xor const: 0
	FGKJFCJILIL MMEEBFNCPIG = 1; // offset: 16, xor const: 0
}

message JFHDOCMCKPA {
}

message PIBOFOANJBD {
	repeated CPCLBFAHMEA MNGLCDDPIGH = 2; // offset: 16, xor const: 0
	uint32 NJFOLJNDPGG = 1; // offset: 32, xor const: 0
}

// CmdId: 6379
message NDIDAGMEOGL {
	uint32 GJPPELNNBEN = 7; // offset: 24, xor const: 10173
	uint32 PLFCIIAEIFC = 5; // offset: 28, xor const: 7899
}

// CmdId: 6289
message BHKAPPEEAEM {
}

enum GLJCBPHNHJF {
	GLJCBPHNHJF_CICMBIFLIJL = 0;
	GLJCBPHNHJF_DEIGNGHCFFL = 1;
	GLJCBPHNHJF_PMHLDDBGBMH = 2;
}

message CKKPIFPKPKI {
}

message BKAEBCBKKCP {
	uint32 ALDBCKBIMNH = 14; // offset: 32, xor const: 6428
	uint32 HMPHNEOFJLF = 6; // offset: 60, xor const: 8061
	uint32 OGGCAGGAKHH = 13; // offset: 36, xor const: 2437
	uint32 COPMKIHONCI = 11; // offset: 56, xor const: 1933
	uint32 MALAPBBADBE = 12; // offset: 44, xor const: 11090
	uint32 GHBECIICKAD = 8; // offset: 68, xor const: 2399
	uint32 IBOGGIOGNJF = 7; // offset: 28, xor const: 12827
	uint32 OFGGFJCBIDJ = 2; // offset: 40, xor const: 7210
	uint32 IACFJPOKLHE = 4; // offset: 24, xor const: 676
	uint32 HOOJNJKDBLC = 15; // offset: 52, xor const: 9812
	uint32 ICFLDFGAFKC = 9; // offset: 48, xor const: 1054
	bool DEMGBMKOABH = 10; // offset: 64, xor const: 0
}

// CmdId: 5815
message EGJDGNJNPIH {
	repeated uint32 JHGJOEDKONA = 12; // offset: 16, xor const: 0
}

message AJPOKNCKCCL {
	repeated PMFLGCCMCPP EHHADGAPJDD = 12; // offset: 24, xor const: 0
	uint32 JHFBOHABIAL = 5; // offset: 40, xor const: 10691
	repeated uint32 KCIAGPAFEBH = 13; // offset: 16, xor const: 0
}

// CmdId: 2111
message BIMIPIMOKKN {
	repeated uint32 FEJFGIGONEH = 6; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 11; // offset: 32, xor const: 10494
}

// CmdId: 8818
message EAMFIKNHFCN {
	FKKOIGHEKKE CPEPJEPHPBD = 4; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 56, xor const: 6497
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 2640
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 8; // offset: 40, xor const: 7151
}

message PODMJBHFABJ {
	repeated HIFJLLPLFOC FDGCJDPENIC = 15; // offset: 24, xor const: 0
	repeated int32 FGECPKGGMKP = 10; // offset: 32, xor const: 0
}

// CmdId: 9124
message JKBKFJLPLAM {
}

message BENGMDLOHCE {
	int32 LDKDFDIACLC = 8; // offset: 32, xor const: 7008
	repeated BBCMOPLJAIL BLNOFOPEFBK = 2; // offset: 16, xor const: 0
}

message FFJOECCLAKI {
	repeated uint32 MOLELICJFIK = 1; // offset: 24, xor const: 0
}

enum LGFGACJEOAI {
	LGFGACJEOAI_OINLHACDNJB = 0;
	LGFGACJEOAI_CBNKCIFDIKD = 1;
}

message NNBOJEELCOG {
	bool ABJBKNJMMLE = 12; // offset: 73, xor const: 0
	BNJNKKEFEKE DIONHPBOEKB = 8; // offset: 64, xor const: 0
	HBFBNKAODPJ EDJBLGOBDEK = 10; // offset: 16, xor const: 0
	MEGKPCHHBBM JEGJJEMNHDD = 7; // offset: 40, xor const: 0
	MEGKPCHHBBM LDDPOILBEII = 11; // offset: 24, xor const: 0
	bool KCMNLHJJNJA = 5; // offset: 72, xor const: 0
	repeated NAFOADACBAN FOOOPPBPODO = 4; // offset: 32, xor const: 0
	int32 BHLEOIMLMJA = 1; // offset: 68, xor const: 9737
	CABFALHAACM MKFDBKADBIO = 9; // offset: 56, xor const: 0
}

enum FCEDKHFJBKD {
	FCEDKHFJBKD_JKFMLEEPFOP = 0;
	FCEDKHFJBKD_FEFPCLBIFII = 1;
}

// CmdId: 3434
message OBFMCHCLLAA {
	repeated uint32 LPJNEKJKAIC = 5; // offset: 16, xor const: 0
	repeated DNLCMMNCBMI LDGGNEAFELM = 3; // offset: 32, xor const: 0
}

message NMPMLPDPPCC {
	FGKJFCJILIL FBJPAFKPCMH = 1; // offset: 24, xor const: 0
}

// CmdId: 5711
message MFGKOHLMJDL {
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 13871
	DGBKBOBGGBF NNNAJCEMIGL = 4; // offset: 16, xor const: 0
}

enum ADEGKJLGCBO {
	ADEGKJLGCBO_DOAJCEKNBPF = 0;
	ADEGKJLGCBO_ICGKLBDLPFM = 1;
	ADEGKJLGCBO_HDEFLCPNNKG = 2;
	ADEGKJLGCBO_KHPBMFJPDNO = 3;
	ADEGKJLGCBO_OLNHPKPCMFE = 4;
	ADEGKJLGCBO_MNKNKDDNADC = 5;
	ADEGKJLGCBO_DACEAFLAMBA = 6;
	ADEGKJLGCBO_ELMHJJGJKEK = 7;
}

message BNFNNNGLLKO {
}

// CmdId: 9215
message LOBCHKFHILL {
	uint64 AEDAEPKDOAL = 15; // offset: 48, xor const: 3176
	FBENHONLMBH CPEPJEPHPBD = 14; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 56, xor const: 14149
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 40, xor const: 452
}

message JLNMIBOODLK {
	repeated uint32 NJMHAJKFFLC = 2; // offset: 24, xor const: 0
	repeated EAGEICEOEMF CPAGFLFJEBC = 1; // offset: 32, xor const: 0
}

message EFPGDJLALKL {
	uint64 HKCHPDBIJHC = 12; // offset: 32, xor const: 2287
	uint64 AEDAEPKDOAL = 10; // offset: 56, xor const: 11841
	uint32 NIJLEDIPBGF = 1; // offset: 24, xor const: 5485
	uint64 KHJBNCBPCDN = 4; // offset: 40, xor const: 10930
	int32 INNCNMOJGPA = 7; // offset: 28, xor const: 9968
	uint64 HEJBMNAOJFL = 5; // offset: 48, xor const: 5981
}

message ILIEGFIIOGD {
}

enum BOALOJOEKFN {
	BOALOJOEKFN_OBJCKPFJJFG = 0;
	BOALOJOEKFN_FCCKECLNHMC = 1;
}

// CmdId: 3331
message KNNPAGOIDBF {
	uint32 MBDFGKPCMDE = 10; // offset: 24, xor const: 12836
	uint32 NMHNBHDEKBP = 6; // offset: 28, xor const: 6822
}

message BGGACNBPGBI {
	int32 HLEAEPDDBLE = 1; // offset: 32, xor const: 0
	string JGNFLOHJKJO = 2; // offset: 24, xor const: 0
}

message DOOCBIFJKME {
	bool PHCNLKJLMLH = 1; // offset: 24, xor const: 0
}

// CmdId: 3375
message FOBINKKMMBI {
	CEFHOJDDBNF CPEPJEPHPBD = 7; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 14; // offset: 48, xor const: 11245
	uint64 HEJBMNAOJFL = 5; // offset: 56, xor const: 10458
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 10; // offset: 40, xor const: 4805
}

message LNCHPECDBHM {
	EDGCAIEHLHH CKBOJACIJDI = 2; // offset: 16, xor const: 0
	string DDMIIIEJHPE = 1; // offset: 32, xor const: 0
	bool JEFBCDHDNNC = 3; // offset: 40, xor const: 0
}

enum ChessUIColor {
	CHESS_UI_COLOR_CHESS_UI_COLOR_NONE = 0;
	CHESS_UI_COLOR_CHESS_UI_COLOR_WHITE = 1;
	CHESS_UI_COLOR_CHESS_UI_COLOR_RED = 2;
	CHESS_UI_COLOR_CHESS_UI_COLOR_GREY = 3;
}

enum AKNPIEMHJMN {
	AKNPIEMHJMN_OLBAKIEMECK = 0;
	AKNPIEMHJMN_LGHLIHIJMCC = 1;
	AKNPIEMHJMN_EGLKOIKDDFF = 2;
	AKNPIEMHJMN_JAIPFFKDDEC = 3;
	AKNPIEMHJMN_KAGNMPPJCCA = 4;
	AKNPIEMHJMN_CGMAJPOIOOG = 5;
	AKNPIEMHJMN_ONGFBNNOMPB = 6;
	AKNPIEMHJMN_AEBPNNDKPLP = 7;
	AKNPIEMHJMN_DHINEGFENBG = 8;
	AKNPIEMHJMN_PGHELGJIOAA = 9;
	AKNPIEMHJMN_NMJKHAHKFCH = 10;
	AKNPIEMHJMN_OKNNJPCEFMB = 11;
	AKNPIEMHJMN_HHOFPHFGOKP = 12;
	AKNPIEMHJMN_ONHGJIDGNAP = 13;
	AKNPIEMHJMN_PILPGLGHOJD = 14;
	AKNPIEMHJMN_HAIBKIGFCJF = 15;
	AKNPIEMHJMN_BJJCMHMKFFB = 16;
	AKNPIEMHJMN_HAHEKNPLMBJ = 17;
	AKNPIEMHJMN_CBJKPGPDKDC = 18;
	AKNPIEMHJMN_IBCBPBCNPGG = 19;
	AKNPIEMHJMN_ICKCOKOMPDC = 20;
	AKNPIEMHJMN_OOKPIPDFPKN = 21;
	AKNPIEMHJMN_AFKIFNHHGDM = 22;
	AKNPIEMHJMN_NKCNPGMLFDC = 23;
	AKNPIEMHJMN_CJLPGDDPPOJ = 24;
	AKNPIEMHJMN_ENNBKLFGLLP = 25;
	AKNPIEMHJMN_CLDFPAPAJFC = 26;
	AKNPIEMHJMN_LOECNPEGICF = 27;
	AKNPIEMHJMN_JLAFHOCPHHC = 28;
	AKNPIEMHJMN_KEBMLCENNGP = 29;
	AKNPIEMHJMN_HNOEFGAFPEI = 30;
	AKNPIEMHJMN_AKFBGBIJEJD = 31;
	AKNPIEMHJMN_CPOAFCMFHCF = 33;
	AKNPIEMHJMN_OMHAJPBIFAB = 34;
	AKNPIEMHJMN_COHLIMFPKKM = 35;
	AKNPIEMHJMN_GMCMBNBBIHD = 36;
	AKNPIEMHJMN_BBDGEJPCHKK = 37;
	AKNPIEMHJMN_LCACJMNHPHN = 38;
	AKNPIEMHJMN_HAMGKNAMMOB = 99;
}

message DCECDPPFNGC {
	uint32 FOEAJHDEEJP = 6; // offset: 56, xor const: 6363
	bool GBKNCJDLDJB = 12; // offset: 76, xor const: 0
	uint32 OPFEAMDPIAG = 4; // offset: 72, xor const: 11543
	repeated HGEEALEMNCN LFHLOPEJAEO = 5; // offset: 24, xor const: 0
	uint32 DCKHKGFHHEK = 8; // offset: 80, xor const: 2417
	uint32 CHELJLHNGKF = 3; // offset: 84, xor const: 3977
	string CFDDOHAILFB = 2; // offset: 16, xor const: 0
	uint32 HCDJAJPBJAC = 10; // offset: 60, xor const: 10239
	int64 KCDAILEMPKE = 1; // offset: 64, xor const: 8430
	string IINMKHNAGJJ = 11; // offset: 48, xor const: 0
	repeated IMJOMAPGGCB IFEGBMCBLLD = 9; // offset: 40, xor const: 0
}

message JDDAEEHADIL {
	repeated uint32 CGEHLKPKPDM = 3; // offset: 32, xor const: 0
	repeated CKKOHOICDMI GCPEDDINJEN = 1; // offset: 40, xor const: 0
	repeated uint32 EKKDDOLDABF = 13; // offset: 16, xor const: 0
	repeated uint32 MOEOIPDNBJC = 11; // offset: 24, xor const: 0
	uint32 LKBMCANLJHK = 15; // offset: 60, xor const: 9021
	uint32 PANDNEBFPCI = 10; // offset: 56, xor const: 12622
}

enum ELPOBGCGMBG {
	ELPOBGCGMBG_KFINEGNHAHC = 0;
	ELPOBGCGMBG_BAIDEPAMDCK = 1;
	ELPOBGCGMBG_FIAPHCMLAFI = 2;
	ELPOBGCGMBG_HKGMAKCNFNE = 3;
	ELPOBGCGMBG_EFOMDBJGPIO = 4;
	ELPOBGCGMBG_CPECDJKJCAO = 5;
}

// CmdId: 5284
message EOALIAAEMCE {
	repeated NJCMGBIHAOD KFHPNLIBBCL = 7; // offset: 24, xor const: 0
}

message BKDLGHCFDFA {
	NLIKKNNCBCK MALDIJFANDM = 4; // offset: 32, xor const: 0
	uint32 GMGKKPNAHII = 6; // offset: 64, xor const: 3944
	repeated uint32 FPBNNAGIJEH = 8; // offset: 24, xor const: 0
	uint32 MJMJPCCAPNE = 2; // offset: 52, xor const: 16250
	uint32 HIOAAEKPOHA = 3; // offset: 48, xor const: 11567
	repeated uint32 CNBEMMFOCJD = 11; // offset: 16, xor const: 0
	uint32 EELDLMADHPK = 12; // offset: 60, xor const: 3598
	uint32 HKMIKAEFOBA = 7; // offset: 68, xor const: 1848
	uint32 HHAEIHKMEHE = 5; // offset: 56, xor const: 10027
}

// CmdId: 8210
message KADNDKJJBAI {
	uint64 AEDAEPKDOAL = 8; // offset: 40, xor const: 12472
	ANILFBALPKA CPEPJEPHPBD = 7; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 6; // offset: 56, xor const: 3230
	uint32 KMKPPDICOKA = 4; // offset: 48, xor const: 7852
}

// CmdId: 5416
message DBKBBKGMNFL {
}

// CmdId: 8446
message HHIGLDJMAKM {
	FHJHFMCLGJM GGPPMELMEEM = 4; // offset: 16, xor const: 0
	EJLJIFBBOHK ADENCEDGNDP = 7; // offset: 32, xor const: 0
}

message LMBGCLHGOCI {
}

message GGHJHJAKBGD {
	map<uint32, uint32> GLPLNJBEIPF = 12; // offset: 24, xor const: 0
}

enum MPDAMPDMNGN {
	MPDAMPDMNGN_KJDAMGJJAOF = 0;
	MPDAMPDMNGN_OJLKOLBILGP = 1;
	MPDAMPDMNGN_ELMCCEIMJBL = 2;
	MPDAMPDMNGN_KDHOFOPJOME = 3;
	MPDAMPDMNGN_MGHIPOAOMKB = 4;
	MPDAMPDMNGN_FKOBGHLGMKL = 5;
	MPDAMPDMNGN_JFDAAAGEBPE = 6;
	MPDAMPDMNGN_AAEIDMCNJMP = 7;
	MPDAMPDMNGN_OBIMNNEPENC = 9;
	MPDAMPDMNGN_DEGJBDHBEAB = 10;
}

message ENAIPOANMAN {
	int32 AMGIOFMMLIO = 5; // offset: 24, xor const: 7484
	uint64 GFIBJLOJGDE = 15; // offset: 32, xor const: 15316
}

message DMDJKAJNPJO {
	uint32 MJMJPCCAPNE = 13; // offset: 28, xor const: 15452
	uint32 BNJDOBPCLIG = 9; // offset: 24, xor const: 16283
}

// CmdId: 9872
message AONPLHIMMMH {
	LGGABHFHOPA JAIAJLJCKCJ = 4; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 1274
}

message DLDNBDLEIMD {
	uint32 GIIDABOKJDH = 7; // offset: 24, xor const: 2729
}

message IJAPHAPBFHD {
	repeated uint32 CAAIIAOJANE = 9; // offset: 40, xor const: 0
	repeated NBACDAGGAHE KGABIPNIKBK = 11; // offset: 24, xor const: 0
	repeated uint32 MAMOIMIFBKM = 15; // offset: 16, xor const: 0
}

// CmdId: 1899
message GPMHNNHNMNC {
	string OANHHOPDOKN = 1; // offset: 16, xor const: 0
	IIALJEKOFGB MHFEBOAECJC = 5; // offset: 32, xor const: 0
}

// CmdId: 4943
message KMHNAOJDJCK {
	string OFPODKIOKBK = 5; // offset: 32, xor const: 0
	bool JDMJJHOFKFB = 12; // offset: 56, xor const: 0
	IALNHBGIFBD EOJEJEDJLIA = 4; // offset: 40, xor const: 0
	IAENIOKAEPP EJNNGCMNFCH = 11; // offset: 16, xor const: 0
	FDAHEHHHBIB GMEPHOEHPIC = 6; // offset: 24, xor const: 0
}

message DGENFMKGLMK {
	FGKJFCJILIL OIGDDEBKDGA = 2; // offset: 32, xor const: 0
	HollowGridLink ACPGPLMFNOL = 1; // offset: 40, xor const: 0
	repeated LHDMGLDEGOE KALJGIMICFM = 3; // offset: 16, xor const: 0
}

message OEAKJGPGFEH {
	repeated AEIFPEEIAHG GCJCINGLBGD = 2; // offset: 24, xor const: 0
	map<int32, ANPOGBEIPJK> INEHOAAGNEL = 1; // offset: 16, xor const: 0
}

// CmdId: 8106
message DELPIMMCHDN {
	int32 IHIGNMLCHDK = 10; // offset: 28, xor const: 8030
	int32 GFOBLCFLFBH = 13; // offset: 24, xor const: 13207
}

message EBLBIDGKPPO {
	FGKJFCJILIL MHINMINPONI = 2; // offset: 24, xor const: 0
	HollowGridLink NFFJFJBHDAF = 4; // offset: 48, xor const: 0
	FGKJFCJILIL DEFFOFMKOFG = 1; // offset: 16, xor const: 0
	string HFLKGFNBMLE = 3; // offset: 32, xor const: 0
}

message HBAHIPDPHHC {
	EndHollowMiniGameType NODBAHCCOBD = 7; // offset: 52, xor const: 0
	map<string, int32> MJLEJNJHLON = 1; // offset: 16, xor const: 0
	bool DMPPPABGCCA = 2; // offset: 48, xor const: 0
	bool FLAGLPELMFG = 5; // offset: 49, xor const: 0
	DHMNNAPFLCB EBPKOEFDAEB = 3; // offset: 56, xor const: 0
	EDGCAIEHLHH CIAHEFIJODM = 6; // offset: 32, xor const: 0
	bytes GAMMNBGCIIF = 4; // offset: 40, xor const: 0
}

// CmdId: 416
message FDBDGGBAJLK {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 4208
}

// CmdId: 8680
message BBNADDPNGHH {
	uint32 BCCEOLDLIFA = 4; // offset: 32, xor const: 15959
	uint32 MPNJDHIPKNJ = 3; // offset: 36, xor const: 7252
	repeated uint32 GMMDLFCJJGG = 9; // offset: 24, xor const: 0
}

message KAHEJAKHMKC {
	string JINJHGJMHHG = 2; // offset: 32, xor const: 0
	string PGJBLHCGPFE = 1; // offset: 24, xor const: 0
}

message MFGEMBAOENB {
	NLCCFMFEHMD NKFPKHBNOHG = 1651; // offset: 48, xor const: 0
	BHEIFODMNDJ NPADHLHEFBM = 7; // offset: 168, xor const: 0
	AKGMFOBAIJJ AMJENEABBOP = 6; // offset: 88, xor const: 0
	LDAGDEGHMNA CDDJDEPCLHM = 1; // offset: 152, xor const: 0
	KOEADKBOAPP JAAMAKDIHCJ = 1796; // offset: 120, xor const: 0
	repeated KENODIPMMKE BFPAJEDGDOB = 1623; // offset: 184, xor const: 0
	EAALECJCOKC NHAMMCIELBI = 11; // offset: 192, xor const: 0
	FIBADHHODFI MOHOKCDEBKO = 353; // offset: 104, xor const: 0
	KDKCCFHNNHO OBFGBFGAIKD = 1032; // offset: 136, xor const: 0
	BOPIIGFKPOF DPDLGMAIDCG = 14; // offset: 56, xor const: 0
	FFDPHNIOKFD HBCDDCHCKOF = 10; // offset: 160, xor const: 0
	EJPLKNOKIBE AIPFMKLEKAM = 2; // offset: 72, xor const: 0
	JLELDLHDDCJ MACCEEADHGA = 13; // offset: 32, xor const: 0
	ILPDIHMFMCO HKCOLPPCEFG = 148; // offset: 24, xor const: 0
	DFPBMDFINIC JKHFEKEHOOA = 15; // offset: 64, xor const: 0
	EPPFMIPANGH NAAMLMMNLEE = 5; // offset: 96, xor const: 0
	JCFICOAPGIB GDJBAHEHKNF = 3; // offset: 128, xor const: 0
	ALALCIDBCBK POFEHAIAAII = 8; // offset: 176, xor const: 0
	EHEPBOHBIGC OBPAIGHFGEE = 698; // offset: 40, xor const: 0
	BMHDPIALDPD PGPOIMHKFPL = 1720; // offset: 200, xor const: 0
	LECIHLEDELK KCPGPPBCEHL = 9; // offset: 144, xor const: 0
	map<uint32, int32> JHLIHCONEII = 1960; // offset: 16, xor const: 0
	JDDAHHJBJJL CIDILKFNAAF = 1642; // offset: 208, xor const: 0
	BGFICLDCMBP MEGBCGNLIMJ = 4; // offset: 80, xor const: 0
}

message OHDJEBGALEG {
	int32 EKLGNOIEMLA = 1; // offset: 24, xor const: 0
}

message NJDCOMFLBIL {
	repeated string ECNNKMEPOIP = 4; // offset: 64, xor const: 0
	uint32 IIIGDHJPFMI = 12; // offset: 88, xor const: 7160
	KHJOLJLHGNP GJGALCAEJPE = 1164; // offset: 24, xor const: 0
	int32 CIAHEFIJODM = 5; // offset: 124, xor const: 14660
	int32 AGPECBDDLAG = 8; // offset: 80, xor const: 3838
	uint32 MNOOLAJMEAD = 15; // offset: 120, xor const: 7876
	int32 PBBDNBIGFMI = 1955; // offset: 116, xor const: 8756
	FFHLEGBFEKP EPAHGCLPEPB = 1286; // offset: 40, xor const: 0
	bool CDOPHENOIFA = 11; // offset: 108, xor const: 0
	int32 LDIOMPOJJDJ = 9; // offset: 84, xor const: 11954
	string KHNJKGCBBDL = 7; // offset: 16, xor const: 0
	string PBOAMDEBIGO = 2; // offset: 72, xor const: 0
	EAIEOGODGOP IOMNKEHPJOA = 1751; // offset: 48, xor const: 0
	int32 ACHJDNJBFPL = 13; // offset: 104, xor const: 11008
	ALCLMBFGJKO PPKOKAKLAIN = 10; // offset: 92, xor const: 0
	uint32 JKHCMCDKJEG = 3; // offset: 100, xor const: 15232
	uint32 OPFEAMDPIAG = 1; // offset: 128, xor const: 16030
	int32 EJHKDECFPBE = 440; // offset: 112, xor const: 9638
	PANBIJIGJDM GLNOALFHMGL = 6; // offset: 56, xor const: 0
	int32 KPJEBEPDMDI = 32; // offset: 96, xor const: 13206
}

message OCKNNCOIPHJ {
	int32 IGNPNBKMNJD = 13; // offset: 28, xor const: 9686
	uint32 CDGFHKLGKGL = 6; // offset: 24, xor const: 531
	int32 JMELFDAHFCJ = 8; // offset: 32, xor const: 4743
	float EJPCFFMBHJJ = 9; // offset: 36, xor const: 0
}

message DIIBMJNKONG {
	repeated uint32 HBMIPIMNKBJ = 9; // offset: 32, xor const: 0
	bool HDHMCDFLEOG = 12; // offset: 40, xor const: 0
	int64 ODJBLJOHKIF = 11; // offset: 48, xor const: 16307
	repeated uint32 PBLJNLLDPGP = 10; // offset: 24, xor const: 0
}

message FMMINHJFFLF {
}

// CmdId: 6541
message ICHLBBDBKHI {
}

message IAHCILMMPDJ {
	repeated FFOKOFJOGHI HFIFAHHPJCB = 7; // offset: 24, xor const: 0
	uint32 KGIOLPOGHMP = 11; // offset: 32, xor const: 10183
}

message EJGJDBBBEJP {
	repeated BILHLLBJOKD IHOKKBGPJPI = 1; // offset: 16, xor const: 0
	uint32 LGLGBJONIFO = 3; // offset: 40, xor const: 4973
	repeated NMCPELHNCCL MHEBDCIOMAI = 13; // offset: 32, xor const: 0
}

// CmdId: 6570
message PPOPMLCKGAN {
	repeated IMJOMAPGGCB FAPGMLGODCM = 12; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 13155
	int32 PBAMJIBOPAE = 10; // offset: 36, xor const: 16222
}

// CmdId: 7214
message CGGPIDDEBHK {
	enum JKPPFALLOPO {
		JKPPFALLOPO_GLKBPDEJBDO = 0;
		JKPPFALLOPO_CEKHMJEMBEI = 1;
		JKPPFALLOPO_JGGNDBMPFON = 2;
	}

	CGGPIDDEBHK.JKPPFALLOPO PPCNCKBKEJB = 2; // offset: 36, xor const: 0
	bool BKFADLJNBPJ = 14; // offset: 32, xor const: 0
	repeated IMJOMAPGGCB AFCENAAEMKP = 4; // offset: 24, xor const: 0
	uint32 AMIJIAHGPMC = 6; // offset: 40, xor const: 9420
}

// CmdId: 7294
message HKFDCAINAGC {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 11549
}

message LMBOFGDDJKB {
	uint32 PEDKNCIMHLA = 2; // offset: 24, xor const: 0
	uint32 LKKJHFPKECH = 1; // offset: 28, xor const: 0
	uint32 MDHJEKIIDIO = 3; // offset: 32, xor const: 0
}

// CmdId: 5785
message LPOLJKOHGPE {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 2355
}

enum JMCDDIKBNAC {
	JMCDDIKBNAC_HDFHFJAIHMN = 0;
	JMCDDIKBNAC_OICIOENPDBG = 1;
	JMCDDIKBNAC_PAMEOLPIGIA = 2;
}

message OFNEDNNFKGK {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 16, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 48, xor const: 0
	ADIHDDCLCHK JNKOLKFGBCA = 5; // offset: 52, xor const: 0
	FGKJFCJILIL ALEIHPPPCCB = 4; // offset: 24, xor const: 0
	FGKJFCJILIL HMHIKBELPIA = 3; // offset: 32, xor const: 0
}

message JLEFHMNFFHN {
	FGKJFCJILIL EKNFNFCPCMH = 6; // offset: 32, xor const: 0
	bool BMEHMNFKDNH = 1; // offset: 57, xor const: 0
	FGKJFCJILIL BEMKPNCMFFE = 2; // offset: 16, xor const: 0
	bool MNBMPDPEHEA = 3; // offset: 56, xor const: 0
	FGKJFCJILIL IPGMMIMICMA = 4; // offset: 40, xor const: 0
	FGKJFCJILIL HAOGOPGJIJN = 5; // offset: 24, xor const: 0
}

// CmdId: 5813
message APCJHBOCKKP {
	uint32 KBGIMHAEBBC = 14; // offset: 32, xor const: 12966
	KIPMLHICKLM FLHCMGDCLGE = 11; // offset: 36, xor const: 0
	uint32 MEDNCJDHMIH = 13; // offset: 24, xor const: 8649
	uint32 PEDKNCIMHLA = 12; // offset: 28, xor const: 4430
}

// CmdId: 7967
message EIJHGANIAGE {
	repeated uint32 IGIPCIIHLIO = 10; // offset: 16, xor const: 0
}

message FFMPMCFALFK {
	string BMFHGIHHNBB = 1; // offset: 16, xor const: 0
}

message OBECAAMLNJH {
	map<string, string> ALEBJDLHJNF = 2; // offset: 16, xor const: 0
	string NBNDPINNFHL = 1; // offset: 24, xor const: 0
}

// CmdId: 5693
message MKEPJENLCFK {
	uint32 KMKPPDICOKA = 7; // offset: 40, xor const: 1391
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 10; // offset: 48, xor const: 2279
	FHHOCAKEJEP CPEPJEPHPBD = 5; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 56, xor const: 887
}

// CmdId: 1689
message IHFKIGPENOA {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 1894
}

// CmdId: 585
message KGNKCFAAHAJ {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 16133
}

// CmdId: 1900
message DACMECKKCJC {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 1972
}

message HLBDIOJJFKG {
	enum NGLBNLELLJP {
		NGLBNLELLJP_KIKALEODJHL = 0;
		NGLBNLELLJP_NGPNKGPDKDC = 1;
		NGLBNLELLJP_ODGDLMENBKF = 2;
		NGLBNLELLJP_HDENNJOABEE = 3;
	}

	repeated uint32 PDCICMGGDOA = 2; // offset: 24, xor const: 0
	HLBDIOJJFKG.NGLBNLELLJP BGFCGLNNGGE = 1; // offset: 44, xor const: 0
	repeated uint32 AGIKNONDOBN = 3; // offset: 16, xor const: 0
	uint32 HJGCHCAKKNJ = 4; // offset: 40, xor const: 0
}

message ACDBKPCFDJP {
	uint32 IPNANHEPICK = 5; // offset: 32, xor const: 8190
	int32 AKAPKLLFHKL = 6; // offset: 28, xor const: 14213
	int32 GAIMCACMBMO = 3; // offset: 24, xor const: 5425
}

// CmdId: 6277
message FCKMKEHLNEL {
	uint32 LHDHLCKNFIG = 3; // offset: 48, xor const: 6139
	KKHPKIGGGAL CKBOJACIJDI = 4; // offset: 24, xor const: 0
	uint32 EOAIIKPEGNK = 15; // offset: 40, xor const: 3363
	bool PBFOCMGKEEK = 11; // offset: 32, xor const: 0
	uint32 EFNFANEIJMH = 2; // offset: 44, xor const: 7917
	uint32 IDCMIIFBGMK = 5; // offset: 36, xor const: 3119
}

message IMHDKNCJLEB {
	repeated uint32 APKKBCHHMGA = 13; // offset: 32, xor const: 0
	repeated uint32 GHDFNHICMJJ = 14; // offset: 24, xor const: 0
}

// CmdId: 6514
message GNADGFNIEPN {
	repeated IMJIJLIDHEC GJGOIFBPGFN = 9; // offset: 24, xor const: 0
}

// CmdId: 3553
message NFOMFHAILNI {
	repeated uint32 IKFOMEKMDBK = 12; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 5; // offset: 32, xor const: 3639
}

// CmdId: 6459
message PJLMIKDOKFD {
	uint32 EKLGNOIEMLA = 10; // offset: 24, xor const: 8535
}

// CmdId: 1919
message DMCLONBAGBM {
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 10751
	uint64 AEDAEPKDOAL = 10; // offset: 56, xor const: 4585
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 32, xor const: 0
	PIONAOEANNG CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 5; // offset: 48, xor const: 6986
}

// CmdId: 5213
message NJDHAHONHGA {
	uint32 DFKOCLNFPNN = 13; // offset: 24, xor const: 6962
}

// CmdId: 9114
message JIHGBCJFANB {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 14200
}

message GDKMBJLDAHG {
	uint32 EKLGNOIEMLA = 12; // offset: 24, xor const: 9049
	bool GFEHMCNGCPG = 9; // offset: 34, xor const: 0
	bool GIBMBJFPPBE = 4; // offset: 32, xor const: 0
	uint32 LOBECFAAHKE = 8; // offset: 28, xor const: 11203
	bool PDCGEGPEODA = 11; // offset: 33, xor const: 0
}

enum ECHLCJKDMIG {
	ECHLCJKDMIG_HLGJDBLCCEE = 0;
	ECHLCJKDMIG_KBDGPOOIJIP = 1;
	ECHLCJKDMIG_JGCDKLIGONF = 2;
	ECHLCJKDMIG_ECFFCPLMAOH = 3;
	ECHLCJKDMIG_FADIODLBLII = 4;
}

message MOFLBNMOMGC {
	uint32 GFMHBPABPND = 1; // offset: 32, xor const: 10556
	string GPDNCMBPOFB = 2; // offset: 24, xor const: 0
}

// CmdId: 8258
message ONIJFDDCGNP {
	bool MLCAIFBMJNH = 10; // offset: 32, xor const: 0
	repeated uint32 EJOMDMNOLPE = 9; // offset: 16, xor const: 0
}

message PCLGNAMIMGG {
	FGKJFCJILIL EBPCDLGCDON = 3; // offset: 48, xor const: 0
	JBOJGEAHGAH HLEAEPDDBLE = 2; // offset: 56, xor const: 0
	FGKJFCJILIL AMDFPDIKMIJ = 1; // offset: 32, xor const: 0
	FGKJFCJILIL PCCPEPAKCAN = 4; // offset: 40, xor const: 0
	map<string, FGKJFCJILIL> ALEBJDLHJNF = 5; // offset: 24, xor const: 0
}

// CmdId: 7859
message DMABCGECIKL {
}

message FAJJLANNBAA {
	JLNLHBOGFII ACEMBJPDCDK = 9; // offset: 24, xor const: 0
	uint32 NCAGHHFDAOG = 14; // offset: 36, xor const: 12883
	int32 KFJIBDLHPBJ = 5; // offset: 44, xor const: 9040
	uint32 AIKKGDDCHBM = 11; // offset: 32, xor const: 15956
	float NBNJEFMBCEE = 15; // offset: 40, xor const: 0
}

message DALIMDBNKPI {
	FGKJFCJILIL NBKJKJBKDOF = 1; // offset: 16, xor const: 0
}

enum EMKMHEMPOAI {
	EMKMHEMPOAI_KPIGBLPDIMJ = 0;
}

message KHPIPBNBNMP {
	bool GFACJDIKLDO = 27; // offset: 92, xor const: 0
	bool LOMPDIFAHLB = 15; // offset: 88, xor const: 0
	bool MKKJCFLOAJC = 18; // offset: 65, xor const: 0
	uint32 PCJIIBJKJDJ = 17; // offset: 72, xor const: 0
	DACKFJCNIEH BEPALPNKGAH = 23; // offset: 56, xor const: 0
	bool IJIDIPAAHIM = 19; // offset: 89, xor const: 0
	bool FDEPBEAMLHP = 4; // offset: 95, xor const: 0
	int32 JIJDGJCLJDG = 2; // offset: 84, xor const: 0
	bool GEBAGMOAKFJ = 6; // offset: 91, xor const: 0
	GGDBNPKALBM PPCNCKBKEJB = 7; // offset: 100, xor const: 0
	map<int32, string> HNLPNNBBDED = 25; // offset: 24, xor const: 0
	repeated int32 IGJGGEHAACC = 9; // offset: 40, xor const: 0
	int32 ELMIIBECGPH = 3; // offset: 76, xor const: 0
	bool OMCBLLDCEOJ = 12; // offset: 94, xor const: 0
	bool BGKLODNGJBP = 21; // offset: 93, xor const: 0
	bool LPMJANJPANB = 26; // offset: 97, xor const: 0
	FKNGHODDFNO NFPAJCJMJLF = 24; // offset: 80, xor const: 0
	repeated string PCBMPJHNGIP = 10; // offset: 48, xor const: 0
	bool DKEBHEKFKDM = 22; // offset: 90, xor const: 0
	uint32 ILOPALDIPKO = 16; // offset: 68, xor const: 0
	string HILFDGCAAGK = 14; // offset: 32, xor const: 0
	int32 GJPPELNNBEN = 1; // offset: 104, xor const: 0
	bool HEJOFHGCDCN = 20; // offset: 67, xor const: 0
	bool JJDCNHEENHF = 8; // offset: 66, xor const: 0
	bool HEOBFKAAAMC = 5; // offset: 96, xor const: 0
	int32 OHIKLBIBPKO = 13; // offset: 108, xor const: 0
	bool JPIDPCOKHEK = 11; // offset: 64, xor const: 0
}

message LKGEJNCNABG {
	uint32 DKEPGACINMM = 10; // offset: 24, xor const: 9315
}

// CmdId: 2014
message NGKMMIJEHFG {
	repeated HPCGDHEPEDE ONDKOLPNHLO = 1; // offset: 16, xor const: 0
	uint32 AMIJIAHGPMC = 3; // offset: 32, xor const: 11089
}

message GOFPMLFDKNO {
	string FMFBALBHPOF = 4; // offset: 32, xor const: 0
	repeated EKEECJPCAIC DKNJIHKFFHN = 2; // offset: 48, xor const: 0
	EBGLGFBKAEK ALLMEBMKONG = 3; // offset: 40, xor const: 0
	string FHIIIPELENE = 1; // offset: 16, xor const: 0
}

// CmdId: 1742
message DJDAECEPLFA {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 363
}

message ANCPNJIHBNG {
	int32 NKNJOBJHCPI = 5; // offset: 44, xor const: 0
	int32 AMIJIAHGPMC = 2; // offset: 36, xor const: 0
	int32 CPEGDKBNGDH = 3; // offset: 32, xor const: 0
	map<int32, int32> BIPEFOHBDBF = 6; // offset: 24, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 40, xor const: 0
	int32 LOABNMJMDNI = 4; // offset: 48, xor const: 0
}

message JJACFJMAFPM {
	repeated uint32 MNNCJCGLKDB = 14; // offset: 64, xor const: 0
	repeated uint32 LOGJIKNKNLC = 7; // offset: 40, xor const: 0
	uint32 FEHGPBMAKEE = 11; // offset: 76, xor const: 11569
	uint32 ABNALIPAMAB = 8; // offset: 72, xor const: 8749
	JEFEABEIEBD DIGBNAAGHNL = 6; // offset: 48, xor const: 0
	map<uint32, int64> AIFJKFNNPJI = 9; // offset: 24, xor const: 0
	repeated uint32 MGEMHBMIAPM = 1; // offset: 56, xor const: 0
	repeated uint32 KIFNAEBKNEA = 5; // offset: 32, xor const: 0
}

message DFAFALDEPOG {
	repeated FGKJFCJILIL HCDOIDCAGDG = 5; // offset: 24, xor const: 0
	repeated FGKJFCJILIL DIEKFDDMPDO = 6; // offset: 32, xor const: 0
	LMMCLEEIHPE ACJOHKFHJAI = 11; // offset: 92, xor const: 0
	repeated FGKJFCJILIL BPINHPPKMIP = 8; // offset: 16, xor const: 0
	repeated FGKJFCJILIL HNLFIOJCAFE = 4; // offset: 80, xor const: 0
	repeated FGKJFCJILIL NPEFFKFJFCP = 3; // offset: 64, xor const: 0
	FGKJFCJILIL PGBADFMPAPK = 10; // offset: 40, xor const: 0
	repeated FGKJFCJILIL IEIIMPBDBFF = 7; // offset: 48, xor const: 0
	bool JGCHIJNOFKC = 9; // offset: 88, xor const: 0
	repeated FGKJFCJILIL PDEJFBLBKPN = 2; // offset: 72, xor const: 0
}

message OGDPHGNCELD {
	uint32 NIJLEDIPBGF = 10; // offset: 32, xor const: 305
	bool COALJDMLICD = 1; // offset: 36, xor const: 0
	repeated JLEAMPMLIJB BBCMGLFKBLF = 12; // offset: 16, xor const: 0
}

message MICALNMDKAN {
	FGKJFCJILIL NGBOBBPIKJP = 1; // offset: 48, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 4; // offset: 32, xor const: 0
	FGKJFCJILIL LBLOBJKLPAM = 3; // offset: 24, xor const: 0
	FGKJFCJILIL BBFKIHDLHML = 2; // offset: 16, xor const: 0
}

// CmdId: 4277
message JHMPGCACGAF {
	repeated int32 HJAEDABENOJ = 3; // offset: 16, xor const: 0
	HBFBNKAODPJ NCAGHHFDAOG = 14; // offset: 32, xor const: 0
}

message FAKNFKDEHJE {
	map<uint32, int32> BALBOMJCBII = 2; // offset: 104, xor const: 0
	MHCDDANEDDA MDBDJGLDFON = 3; // offset: 32, xor const: 0
	repeated uint32 DFBHAOEKHIC = 10; // offset: 72, xor const: 0
	uint32 EIGDAGJOEPE = 9; // offset: 120, xor const: 0
	HOBFCMPBINJ PHMBNOFPAHO = 5; // offset: 80, xor const: 0
	int32 NFLLOFKKGKJ = 8; // offset: 128, xor const: 0
	MKPHEJCDJAH KGGMPBNGBDJ = 7; // offset: 112, xor const: 0
	uint32 AEHLLIKIAMO = 16; // offset: 132, xor const: 0
	KFAGAKGLEPG JHIBLGBGLAH = 15; // offset: 88, xor const: 0
	NFLFJMDAMGB LOGMDKMGDDE = 12; // offset: 96, xor const: 0
	JOLEPILKLJC HHOCDKMGOPM = 4; // offset: 40, xor const: 0
	map<uint32, OCPBIOLIEBG> MLFDLEHOLBG = 6; // offset: 48, xor const: 0
	int32 BDHIFEBPHOI = 11; // offset: 124, xor const: 0
	map<uint32, int32> LCGHCELADPK = 14; // offset: 16, xor const: 0
	repeated KKFHONHEMMB NHOPHEONPDL = 1; // offset: 64, xor const: 0
	map<uint32, int32> FPGBIALCKGK = 13; // offset: 56, xor const: 0
}

// CmdId: 9402
message NBNFIIFAAFK {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 4861
}

// CmdId: 5520
message JIBBGNKAOLK {
	bool DABOOFJLECC = 8; // offset: 76, xor const: 0
	uint32 HJHFOICGOAC = 5; // offset: 64, xor const: 14026
	string KDPAGNGHMCO = 2; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 4; // offset: 80, xor const: 3238
	string OFPODKIOKBK = 12; // offset: 32, xor const: 0
	uint64 KJBFBHKKABB = 6; // offset: 56, xor const: 11590
	int32 JMFIEIEKJCL = 13; // offset: 68, xor const: 2563
	string MHGGEFAONBI = 10; // offset: 16, xor const: 0
	string OBPBNBMPJMC = 11; // offset: 40, xor const: 0
	uint32 FCEBOBDDPKA = 7; // offset: 72, xor const: 4063
}

// CmdId: 6716
message HOKHMJCGMLG {
	GDPMPPFACEJ MDFKPGBALJI = 15; // offset: 24, xor const: 0
}

// CmdId: 2062
message INKICFAILAC {
	CEFKCKICJKH CPEPJEPHPBD = 10; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 12; // offset: 40, xor const: 12331
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 4; // offset: 56, xor const: 15667
	uint32 KMKPPDICOKA = 1; // offset: 48, xor const: 16363
}

message CHAOGACNIMC {
	uint32 NMHNBHDEKBP = 11; // offset: 24, xor const: 3580
	uint32 PGBADFMPAPK = 14; // offset: 32, xor const: 12121
	uint32 AMIJIAHGPMC = 8; // offset: 28, xor const: 6673
}

message ENDOCGHNLHO {
	int32 EEIMOCGPDOE = 1; // offset: 24, xor const: 0
}

// CmdId: 7377
message BEDNCCAFONN {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 5635
}

// CmdId: 3220
message LHLLGOCIKAD {
	uint32 MHINMINPONI = 10; // offset: 24, xor const: 14679
}

message KOAGMNHAMNE {
}

message JLAIFADKPPP {
	INLFFDKGPNK AODMMCCECAP = 8; // offset: 16, xor const: 0
}

// CmdId: 9714
message EHHMFNGLDMK {
	uint32 MHINMINPONI = 1; // offset: 32, xor const: 814
	MODPPBCAPGE LDOBNOLGKCA = 11; // offset: 24, xor const: 0
}

message GHKOBJMEMND {
	FGKJFCJILIL IIIGDHJPFMI = 1; // offset: 16, xor const: 0
	FGKJFCJILIL LDIOMPOJJDJ = 2; // offset: 24, xor const: 0
}

message NCPCCINJIKC {
	repeated JGLDAINDEGL FMFJCGKNCEH = 15; // offset: 24, xor const: 0
}

// CmdId: 3698
message FEICBDGAHDP {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 6906
}

// CmdId: 3373
message IIDKMNHONJF {
	int32 IHIGNMLCHDK = 11; // offset: 28, xor const: 6181
	NKEOICFGDCC DIONHPBOEKB = 10; // offset: 32, xor const: 0
	uint32 DCENCIPOBMC = 5; // offset: 24, xor const: 12380
}

// CmdId: 6118
message FHINCIIMOOG {
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 32, xor const: 0
	LKGEJNCNABG CPEPJEPHPBD = 10; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 48, xor const: 4799
	uint32 KMKPPDICOKA = 13; // offset: 56, xor const: 10410
	uint64 HEJBMNAOJFL = 2; // offset: 40, xor const: 4296
}

enum KNEPBHOOJJC {
	KNEPBHOOJJC_DNILFJOJJHB = 0;
	KNEPBHOOJJC_GBJHDJNEMDG = 1;
	KNEPBHOOJJC_BIDLJKKLJJC = 2;
	KNEPBHOOJJC_EAGOIGAKLIF = 3;
	KNEPBHOOJJC_BJPPIKINOHJ = 4;
	KNEPBHOOJJC_MFECJDIBGBF = 5;
	KNEPBHOOJJC_BAFOLBJIMMO = 6;
	KNEPBHOOJJC_JCGLDGLCOCM = 7;
	KNEPBHOOJJC_BGBEAAEBAFA = 8;
	KNEPBHOOJJC_KIIBMCCKFCN = 9;
	KNEPBHOOJJC_BFLMKHAMHAN = 10;
	KNEPBHOOJJC_GCEPJGPJGAH = 11;
	KNEPBHOOJJC_IIHAOGKOGKI = 12;
	KNEPBHOOJJC_PELFHHPHKKO = 13;
	KNEPBHOOJJC_OCLFCGEHJPK = 14;
	KNEPBHOOJJC_OOCAMJKJAAL = 15;
}

// CmdId: 1313
message JIFNEJPLFEH {
}

message JHLBEDAPNFF {
	bool OKNLMMNCPOC = 3; // offset: 32, xor const: 0
	FGKJFCJILIL DDMIIIEJHPE = 1; // offset: 16, xor const: 0
	bool AKIHFBEENOK = 2; // offset: 33, xor const: 0
}

// CmdId: 18
message OOHMCIAGCCC {
	repeated uint32 HHEBBDEGLOC = 9; // offset: 16, xor const: 0
}

message JIMJJLJGLDL {
	map<string, EGLDICPAGJI> PMKMKHBBMCO = 14; // offset: 56, xor const: 0
	map<string, string> AAJGPGJKKOK = 5; // offset: 16, xor const: 0
	map<string, IMJIJLIDHEC> IDBJCCGMLPL = 2; // offset: 32, xor const: 0
	map<string, JCBBOKHIDHH> HBLPDDLEFDJ = 6; // offset: 64, xor const: 0
	map<string, int32> ONKEOHNGJBA = 15; // offset: 40, xor const: 0
	map<string, NJJBIIOGFDP> HKDAOHKDBID = 12; // offset: 24, xor const: 0
}

enum KDHLEPGMPAI {
	KDHLEPGMPAI_KHHONFJNPCA = 0;
	KDHLEPGMPAI_HHGGKBPJCIK = 1;
	KDHLEPGMPAI_JNDLKOFLJIF = 2;
}

// CmdId: 5690
message IGNIGOACMCF {
	uint32 HJGCHCAKKNJ = 1; // offset: 24, xor const: 10077
}

enum APFNGINMNEB {
	APFNGINMNEB_BFMPPEDPIOL = 0;
	APFNGINMNEB_DMDGKELNKNJ = 2;
	APFNGINMNEB_FFNFPEOOFGB = 4;
	APFNGINMNEB_GMALBHCHHKE = 8;
}

enum DOODFFPABPM {
	DOODFFPABPM_APNJPJMELPI = 0;
	DOODFFPABPM_BFGHLHJNGDD = 1;
	DOODFFPABPM_KLFDKJNINMN = 2;
}

// CmdId: 2370
message CBANFJNFDNF {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 1044
}

message MBMICBMKDDM {
	FGKJFCJILIL HMHIKBELPIA = 1; // offset: 40, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 3; // offset: 48, xor const: 0
	FGKJFCJILIL KKAOFFOLMOM = 4; // offset: 16, xor const: 0
	FGKJFCJILIL ALEIHPPPCCB = 2; // offset: 24, xor const: 0
}

// CmdId: 904
message KPFMKJDFOCI {
	int32 DCJCCCBIFFB = 3; // offset: 24, xor const: 6887
}

message HNKNGPFIEAA {
	repeated FGKJFCJILIL NPEFFKFJFCP = 3; // offset: 24, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 2; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 40, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 4; // offset: 48, xor const: 0
}

// CmdId: 3713
message AJIPDNHKCLG {
	uint32 HLEAEPDDBLE = 15; // offset: 24, xor const: 7613
	uint32 ABHCMMOPFHK = 5; // offset: 28, xor const: 10717
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 8643
}

message PIBPFLEKNHJ {
	bool FFMLDADIKIA = 3; // offset: 81, xor const: 0
	bool GPOAOGJICFA = 10; // offset: 80, xor const: 0
	int32 AHOLPAIBBAH = 12; // offset: 64, xor const: 15482
	bool NMIODDFCJPJ = 6; // offset: 82, xor const: 0
	float KKLEANIBMJF = 5; // offset: 40, xor const: 0
	bool HDDJLLGDMHJ = 7; // offset: 69, xor const: 0
	int32 HALPONBOMMC = 13; // offset: 76, xor const: 5642
	PBKHAAGHNKH FBHPIELOILC = 11; // offset: 32, xor const: 0
	int32 BFBMMDFJIKD = 1; // offset: 72, xor const: 11361
	float KOMIMFNADCM = 4; // offset: 56, xor const: 0
	float IIKGIHJHCEJ = 2; // offset: 52, xor const: 0
	float KBLLHKOJLOK = 8; // offset: 60, xor const: 0
	bool LFGDEKPDHIK = 15; // offset: 68, xor const: 0
	float IIPCFLEALDM = 14; // offset: 48, xor const: 0
	NIMDPKCAJMI GKDDNGOCBCC = 9; // offset: 16, xor const: 0
	int32 LOLFCPCOCLM = 1481; // offset: 44, xor const: 2362
}

// CmdId: 8390
message CENJGCODGJI {
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 5; // offset: 40, xor const: 16381
	uint64 AEDAEPKDOAL = 12; // offset: 48, xor const: 9736
	uint32 KMKPPDICOKA = 15; // offset: 56, xor const: 565
	EEGNGPOKAOJ CPEPJEPHPBD = 9; // offset: 16, xor const: 0
}

message GJEJIJPMOHA {
	repeated FGKJFCJILIL KHLFEMDCAKN = 11; // offset: 120, xor const: 0
	bool DELECGPHCIB = 17; // offset: 238, xor const: 0
	bool EINOMHOGLNI = 15; // offset: 236, xor const: 0
	string BFPIMHJHMHF = 23; // offset: 152, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 4; // offset: 128, xor const: 0
	FGKJFCJILIL ABOCKLPJHDA = 35; // offset: 160, xor const: 0
	FGKJFCJILIL EIKCJAKEABO = 5; // offset: 192, xor const: 0
	repeated FGKJFCJILIL APNELLNLBHA = 16; // offset: 184, xor const: 0
	IHHJNHHDNHN PCKANOMGKGM = 22; // offset: 228, xor const: 0
	FGKJFCJILIL FAFKLLJNCJI = 12; // offset: 80, xor const: 0
	repeated FGKJFCJILIL DHEAPAILEJC = 29; // offset: 112, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 3; // offset: 136, xor const: 0
	repeated FGKJFCJILIL HKNFDFFCOFN = 26; // offset: 104, xor const: 0
	repeated FGKJFCJILIL KOFDBOKFMHO = 7; // offset: 208, xor const: 0
	FGKJFCJILIL EIOFHGJNPOF = 10; // offset: 64, xor const: 0
	FGKJFCJILIL FFMNLLHJJGI = 33; // offset: 88, xor const: 0
	NNNBNGBBDEH NPEAEBDEBFG = 1; // offset: 232, xor const: 0
	IHHJNHHDNHN MDCBMLCCKFI = 24; // offset: 224, xor const: 0
	repeated FGKJFCJILIL BIGNBMFAOHP = 27; // offset: 40, xor const: 0
	LEHENCIPJIE CFJGLHBDPNO = 2; // offset: 248, xor const: 0
	FGKJFCJILIL DAILJGPFGIJ = 36; // offset: 176, xor const: 0
	repeated FGKJFCJILIL DDBFMGPOJCA = 28; // offset: 56, xor const: 0
	bool DFBFOFANOPA = 32; // offset: 239, xor const: 0
	repeated FGKJFCJILIL MIKGCGKLDPI = 8; // offset: 24, xor const: 0
	IHHJNHHDNHN LJFNFPCHEDO = 31; // offset: 240, xor const: 0
	IHHJNHHDNHN LINJDEEIDOB = 20; // offset: 244, xor const: 0
	string EBCGHOHIHBA = 18; // offset: 200, xor const: 0
	FGKJFCJILIL COBLPOGOFIN = 25; // offset: 16, xor const: 0
	CFHPLBHGACJ BJEECGEGEPC = 34; // offset: 72, xor const: 0
	bool ENOENPKPBLN = 9; // offset: 237, xor const: 0
	string AEBGALNHMBM = 6; // offset: 96, xor const: 0
	string BHNEPIJDNDE = 30; // offset: 144, xor const: 0
	AJENIKNKEDJ MBAGDNNHBAL = 13; // offset: 168, xor const: 0
	FGKJFCJILIL ANAOPOOOBCL = 14; // offset: 216, xor const: 0
	string DNJOMNAJCHB = 21; // offset: 48, xor const: 0
}

message PHFMGBJLKDD {
	uint32 BJKIALJIMDH = 1; // offset: 28, xor const: 0
	uint32 PFCIOMCFGKL = 2; // offset: 24, xor const: 0
}

// CmdId: 7577
message NBNMNMMOLLL {
	repeated NJCMGBIHAOD KFHPNLIBBCL = 8; // offset: 24, xor const: 0
}

message EEEEACJFNBF {
	bool PBIOOKKGJDH = 2; // offset: 40, xor const: 0
	FGKJFCJILIL PKPOEKNLJKC = 3; // offset: 32, xor const: 0
	FGKJFCJILIL AILIOJLEMPO = 1; // offset: 16, xor const: 0
}

// CmdId: 8253
message HHNNFELCLIB {
}

message NMILJFFHMCP {
	FGKJFCJILIL NMHNBHDEKBP = 1; // offset: 16, xor const: 0
}

message FDLPNOOAAMH {
	EGEEJGKCOAG JGAOGEODBFH = 13; // offset: 24, xor const: 0
	float OEEFLDIOGPH = 5; // offset: 44, xor const: 0
	int32 HHALEGBBNFO = 7; // offset: 40, xor const: 8498
	ADPGOAGNKAO GCBAGMDHCBP = 1; // offset: 32, xor const: 0
}

// CmdId: 3119
message KLJJACDAHJE {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 11853
}

message OHMKDMLOGCK {
	int32 HGDHMCEJDGI = 1; // offset: 32, xor const: 0
	string FMFBKIMIHIN = 2; // offset: 16, xor const: 0
	uint64 BFHGIPFPNIH = 3; // offset: 40, xor const: 0
}

// CmdId: 9820
message HAAKEEGIJEJ {
	AIAFJKKNJMI BKIHIFEJFDD = 7; // offset: 24, xor const: 0
	uint32 ELLAHKKNHAM = 9; // offset: 28, xor const: 7394
	uint32 NMHNBHDEKBP = 11; // offset: 32, xor const: 11419
}

// CmdId: 5021
message IBKBLJIFFLJ {
	repeated uint32 OFIGFPFLMGG = 7; // offset: 24, xor const: 0
}

message NDFNILLEGPG {
	IMFBENMKKGD OAEJPMIBGDP = 1; // offset: 40, xor const: 0
	FGKJFCJILIL EHGLMGAGAIN = 3; // offset: 32, xor const: 0
	bool FLEDONKIFBE = 5; // offset: 45, xor const: 0
	bool DDGEOMJGHOE = 4; // offset: 44, xor const: 0
	FGKJFCJILIL ADBPGCNNJBK = 2; // offset: 16, xor const: 0
}

// CmdId: 7613
message EDOEHCOHIPE {
	uint32 LIAGONOBEIG = 8; // offset: 24, xor const: 11640
}

message BOPIIGFKPOF {
	repeated AIOPLCHFIOJ CNFJHHBOMGG = 10; // offset: 40, xor const: 0
	repeated int32 GJBKMCCEEMP = 2; // offset: 32, xor const: 0
	repeated int32 MAJALPLMDBO = 13; // offset: 24, xor const: 0
}

message BGNMDPNGLML {
	repeated KILGDDFDFNI OKMCJGCLNNH = 7; // offset: 32, xor const: 0
	repeated DELHIJFCGOI CILKJPCPKCG = 10; // offset: 16, xor const: 0
	uint32 EHNIHPFJCEG = 2; // offset: 52, xor const: 12945
	uint32 EJAEBPFHBBH = 14; // offset: 48, xor const: 6004
	repeated uint32 OLNMLBEDGCM = 9; // offset: 40, xor const: 0
	uint32 IPKBPNIHDEA = 5; // offset: 56, xor const: 3934
}

// CmdId: 5799
message MEPHJBLBLHI {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 6815
}

message OACFCBIAJJJ {
	FGKJFCJILIL BCCEOLDLIFA = 6; // offset: 24, xor const: 0
	repeated uint32 NPEFFKFJFCP = 2; // offset: 32, xor const: 0
	FGKJFCJILIL FJPBKMMGLAE = 8; // offset: 48, xor const: 0
	HollowShopCurrencyType ADFBHNOBNAC = 9; // offset: 92, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 3; // offset: 64, xor const: 0
	FGKJFCJILIL IMKAOHPLMMG = 5; // offset: 56, xor const: 0
	int32 NDLIKFKBCNH = 1; // offset: 88, xor const: 0
	FGKJFCJILIL PDEJFBLBKPN = 10; // offset: 40, xor const: 0
	FGKJFCJILIL PDOIBAABLHJ = 4; // offset: 16, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 7; // offset: 80, xor const: 0
}

// CmdId: 7379
message MAOIKMCBKMP {
	int32 IHIGNMLCHDK = 7; // offset: 40, xor const: 3270
	JIMCCNADLCF PCMCIIBCGAB = 2; // offset: 24, xor const: 0
	NJNHCOMGCNO PFGJCEJCDKC = 12; // offset: 32, xor const: 0
}

message CIMPCKKIBPN {
	CJINCICAPIL AGGDHGHDMBN = 2; // offset: 32, xor const: 0
	repeated string LBIDMPHHMBN = 3; // offset: 16, xor const: 0
	AEJLOBOKMEO KBBEJLMCCDB = 1; // offset: 36, xor const: 0
}

// CmdId: 1747
message EPBAOCPDBDI {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 9914
}

message CCNCFFOODOL {
}

// CmdId: 3483
message CANKCNKHFDG {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 12407
}

// CmdId: 5610
message BJNMDEIAIFL {
}

enum LAKBOCHOCCP {
	LAKBOCHOCCP_LNFCOCMDIGA = 0;
	LAKBOCHOCCP_LPEDJHCFGAG = 1;
}

// CmdId: 6619
message IBGGFCPHFAH {
	MDLAIOAJEBJ CHLDGHLJAPK = 4; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 8; // offset: 32, xor const: 11825
}

message DCJDGMCNKCA {
	map<uint32, int32> CPOJDJLHHKK = 7; // offset: 24, xor const: 0
}

message IAJFIBALNJP {
	FGKJFCJILIL HDDODEFFPJB = 2; // offset: 16, xor const: 0
	FGKJFCJILIL PCMLMONIODN = 1; // offset: 32, xor const: 0
}

message JHHACNCALFO {
	repeated CBFIOJMGFNP PIDDKHLGPLK = 1; // offset: 24, xor const: 0
}

// CmdId: 3323
message BKGCJGKIGCJ {
	int32 FNDFDMDBCLA = 9; // offset: 24, xor const: 14453
}

message BALLNKEMPLA {
}

message KNCOBCHALPF {
	repeated LGFJHCGPEAK EHEKHHADGOB = 8; // offset: 24, xor const: 0
}

message AMFBOIFGKAA {
	uint32 HJHFOICGOAC = 15; // offset: 32, xor const: 6454
	string HNJKOBBEDGN = 13; // offset: 16, xor const: 0
}

message MDJLEEGHMEA {
	int32 BMPPMPKMODL = 1; // offset: 32, xor const: 0
	int32 ENCANOPLLDM = 3; // offset: 28, xor const: 0
	JAMBJMLILPN HLEAEPDDBLE = 2; // offset: 24, xor const: 0
}

message MPKFAMOFHDN {
	FGKJFCJILIL FGALEHFDFPD = 2; // offset: 24, xor const: 0
	bool NKPPHNELJHO = 3; // offset: 40, xor const: 0
	FGKJFCJILIL IIIGDHJPFMI = 1; // offset: 32, xor const: 0
}

// CmdId: 8699
message HFOBHPHLCOM {
	repeated int32 HHEBBDEGLOC = 3; // offset: 16, xor const: 0
}

message EKOAIDAMLDP {
	repeated uint32 BDCGCPEPMGC = 14; // offset: 48, xor const: 0
	repeated uint32 KCIAGPAFEBH = 7; // offset: 32, xor const: 0
	repeated uint32 ANCKFLCONNN = 15; // offset: 24, xor const: 0
	repeated uint32 PMNKDOHJDAP = 1; // offset: 40, xor const: 0
	uint32 PJFBHOFCEND = 8; // offset: 56, xor const: 2478
}

// CmdId: 408
message FMGJACMNLDJ {
	uint32 CIBNBECPDGE = 10; // offset: 48, xor const: 2588
	uint32 PHBHHMFAMOO = 12; // offset: 56, xor const: 8747
	uint32 KEIPIHKKBNH = 2; // offset: 60, xor const: 1939
	CHAOGACNIMC BOAPJKMOOID = 1; // offset: 32, xor const: 0
	repeated uint32 PPBCKBHDIIH = 11; // offset: 24, xor const: 0
	uint32 CMPLBHPIBLF = 9; // offset: 64, xor const: 15862
	uint32 GFCLKDAOMBM = 8; // offset: 52, xor const: 10767
	repeated uint32 GLFAIDIPKHL = 7; // offset: 16, xor const: 0
}

// CmdId: 4587
message IBFEAAIAIMJ {
	int32 IHIGNMLCHDK = 13; // offset: 28, xor const: 397
	bool BDBGLEKOLJN = 9; // offset: 24, xor const: 0
}

message CAKJIFEIAJF {
	FGKJFCJILIL ACEMBJPDCDK = 3; // offset: 32, xor const: 0
	FGKJFCJILIL IIIGDHJPFMI = 1; // offset: 16, xor const: 0
	NEPFHEONFHE NECDHHDJDDB = 2; // offset: 40, xor const: 0
}

// CmdId: 5639
message LPFKJCMEMOL {
	int32 IHIGNMLCHDK = 13; // offset: 28, xor const: 8094
	uint32 GFOBLCFLFBH = 2; // offset: 24, xor const: 1203
}

// CmdId: 2207
message HKJCIBPDIHF {
	uint32 KMKPPDICOKA = 13; // offset: 40, xor const: 5192
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 9; // offset: 56, xor const: 10994
	MJBFJGCLGCP CPEPJEPHPBD = 15; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 11470
}

message KOKLHCONANP {
	FGKJFCJILIL APBDIOHLMGB = 1; // offset: 16, xor const: 0
}

// CmdId: 1568
message JIPDALPOFCI {
	repeated MEBCHDALDHF NAHLOOAEAEJ = 15; // offset: 16, xor const: 0
}

// CmdId: 9976
message IMPGLBMEGPM {
	uint64 HEJBMNAOJFL = 14; // offset: 48, xor const: 9644
	AOHEGKLFIJH CPEPJEPHPBD = 4; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 8; // offset: 56, xor const: 3647
	uint32 KMKPPDICOKA = 13; // offset: 40, xor const: 9404
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
}

enum NGKDHPOGCIA {
	NGKDHPOGCIA_GHAJNMHENGC = 0;
	NGKDHPOGCIA_LEANCFIBKLD = 1;
	NGKDHPOGCIA_EOMPCMJGJAE = 2;
	NGKDHPOGCIA_LLKMIHLFFNP = 3;
	NGKDHPOGCIA_NLEHACGPFGO = 4;
	NGKDHPOGCIA_PGFHAJDLEFN = 5;
}

enum BODHDLOIOKM {
	BODHDLOIOKM_HPFMBBKBMJH = 0;
	BODHDLOIOKM_DHENCNAGANK = 1;
	BODHDLOIOKM_HFMPJFMOACN = 2;
	BODHDLOIOKM_LPNGEPNPDGO = 3;
}

// CmdId: 319
message LHFMAGILFDK {
	bytes JBMKEEEBFDI = 6; // offset: 32, xor const: 0
	bytes OCAIBNIHOJM = 3; // offset: 16, xor const: 0
	bytes CPEPJEPHPBD = 2; // offset: 40, xor const: 0
}

// CmdId: 9746
message MEMOKFNFJJH {
	uint64 AEDAEPKDOAL = 4; // offset: 56, xor const: 11256
	KDNIBKFFEBE CPEPJEPHPBD = 3; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 48, xor const: 291
	uint64 HEJBMNAOJFL = 1; // offset: 40, xor const: 4939
}

enum NOHJLGNFKIN {
	NOHJLGNFKIN_CJCBIFHHPDE = 0;
	NOHJLGNFKIN_FEONINOPKOE = 1;
	NOHJLGNFKIN_ANAJIBHBMJN = 2;
	NOHJLGNFKIN_LDLOIADFIOA = 3;
}

enum DNPOEOEJMNH {
	DNPOEOEJMNH_KBPANIBEKOD = 0;
	DNPOEOEJMNH_HOMBDLICJAB = 1;
	DNPOEOEJMNH_KBEOLKHBFHD = 2;
	DNPOEOEJMNH_EKJJEBCIFDG = 3;
	DNPOEOEJMNH_ADDEGCJBOHH = 4;
	DNPOEOEJMNH_AFHLGPMMDGP = 5;
	DNPOEOEJMNH_DABEBLBCCMC = 6;
	DNPOEOEJMNH_IHFFDLNBJDJ = 7;
	DNPOEOEJMNH_OCBJMDBKFGC = 8;
	DNPOEOEJMNH_MEEJPNNHAMA = 9;
	DNPOEOEJMNH_PHMBCDGHLCO = 10;
	DNPOEOEJMNH_FINNNFEDCNI = 11;
	DNPOEOEJMNH_CLGCDLABLKN = 12;
}

message KGBDIOAGNMF {
	int32 AEIHIBLACCM = 1; // offset: 24, xor const: 0
	int32 EFJPPJJFNJM = 2; // offset: 28, xor const: 0
}

enum BDHNNCIJAGA {
	BDHNNCIJAGA_OHKFLBJALKB = 0;
	BDHNNCIJAGA_OFKJALNKDEA = 1;
	BDHNNCIJAGA_FDOJEFJHIBF = 2;
	BDHNNCIJAGA_HIIDOOLCHOF = 3;
	BDHNNCIJAGA_LCJLKAEEHCB = 4;
}

message ACGPACPFPEG {
	repeated FGKJFCJILIL HCGMLFMFNAK = 2; // offset: 16, xor const: 0
	FGKJFCJILIL OHLLAJOJJEI = 1; // offset: 32, xor const: 0
}

message DADOCBMJAJB {
	bool PMJBKCMJCOG = 3; // offset: 40, xor const: 0
	bool HMGLIFOKEBO = 1; // offset: 41, xor const: 0
	repeated uint32 LKHKNEBPOJL = 11; // offset: 16, xor const: 0
	repeated uint32 KGOAOBBLHND = 6; // offset: 32, xor const: 0
}

message NPBNDMGHIHM {
	OGDDEEAOAMK ALJDMENJNMI = 3; // offset: 60, xor const: 0
	bool DPPLNJJLGBB = 4; // offset: 56, xor const: 0
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 16, xor const: 0
	FGKJFCJILIL OMAHIIBEIHA = 2; // offset: 24, xor const: 0
	FGKJFCJILIL GLBNCAKAGAL = 6; // offset: 40, xor const: 0
	FGKJFCJILIL LJCHOAPPCPB = 5; // offset: 48, xor const: 0
}

message ACDNIGKOEEB {
	repeated uint32 POECNBHNIPE = 5; // offset: 24, xor const: 0
}

message FDLGKIJCFAI {
	map<string, FGKJFCJILIL> FHIBLMBMFHN = 1; // offset: 24, xor const: 0
}

message GKKPJPAKLHP {
	int32 AALAEMOOFEG = 2; // offset: 32, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 1; // offset: 16, xor const: 0
	uint32 CBELLMGEFDA = 3; // offset: 36, xor const: 0
}

// CmdId: 5011
message EMCBHLLGPCA {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 2257
}

// CmdId: 5539
message CHIKDNDGGKN {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 3158
}

// CmdId: 5741
message NHLLENBNNEA {
	repeated uint32 JBBKPEHCJOJ = 8; // offset: 16, xor const: 0
}

message OMDAMCDCACK {
}

message DICFGINLFBF {
}

// CmdId: 6481
message CMCACDGBCHK {
	MMFBLNAGMIG CPEPJEPHPBD = 1; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 14804
	uint64 AEDAEPKDOAL = 4; // offset: 56, xor const: 14381
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 2; // offset: 48, xor const: 11
}

message ANEGLGJMMIP {
	uint32 HJHFOICGOAC = 2; // offset: 52, xor const: 5652
	uint32 PFCIOMCFGKL = 13; // offset: 60, xor const: 11577
	repeated uint32 IIGOJLGIOGF = 10; // offset: 32, xor const: 0
	uint32 BEKFLJGFLJD = 6; // offset: 48, xor const: 14222
	uint32 ODIEODCGOGA = 14; // offset: 44, xor const: 3045
	uint32 CBDBIPMJEPJ = 11; // offset: 40, xor const: 8289
	uint32 JIFJINMPBFB = 5; // offset: 56, xor const: 10671
	FMLADAJDHHM IPAOONNHFOF = 7; // offset: 24, xor const: 0
}

message HJGGFKCNIHB {
	repeated int32 PEDMMACNHCC = 4; // offset: 48, xor const: 0
	repeated uint32 AMMIGDCKFDG = 9; // offset: 56, xor const: 0
	repeated int32 BENHIPAKDJJ = 3; // offset: 40, xor const: 0
	repeated int32 CFHHNPKMMAB = 12; // offset: 24, xor const: 0
	repeated int32 JOEEHFOLBDF = 2; // offset: 32, xor const: 0
	repeated int32 MIFDAFFAJOG = 8; // offset: 16, xor const: 0
	repeated int32 HGDBHCEEGIJ = 11; // offset: 72, xor const: 0
}

// CmdId: 3195
message KALIHNFAANC {
	bool DABOOFJLECC = 5; // offset: 24, xor const: 0
}

message AJCBLJBLGBH {
	bool PDCGEGPEODA = 7; // offset: 29, xor const: 0
	bool IDJOBFHANMF = 9; // offset: 28, xor const: 0
	bool IJHPAGCPGJN = 5; // offset: 30, xor const: 0
	int64 BPCLKADELFF = 2; // offset: 32, xor const: 2097
	uint32 BCMPKLAOIHK = 4; // offset: 24, xor const: 9864
}

enum NGBFGENGCDI {
	NGBFGENGCDI_HOLLOW_POS_CHANGED_REASON_NONE = 0;
	NGBFGENGCDI_HOLLOW_POS_CHANGED_REASON_MOVE = 1;
	NGBFGENGCDI_HOLLOW_POS_CHANGED_REASON_TRANSFER = 2;
	NGBFGENGCDI_HOLLOW_POS_CHANGED_REASON_PUSH = 3;
}

message DHNEOOLNCFF {
}

message NCKGHAEDMCI {
	bool CBJOJDKKNOI = 6; // offset: 40, xor const: 0
	TimePeriodType AEIOGIJPKDA = 3; // offset: 44, xor const: 0
	ModTimeType GMIGLBEGLKA = 1; // offset: 32, xor const: 0
	int32 DAHGNKKJFAH = 2; // offset: 28, xor const: 0
	int32 ACOICHAOLPF = 5; // offset: 36, xor const: 0
	int32 HDLLDHHMPND = 4; // offset: 24, xor const: 0
}

enum EHKPCEIFBBF {
	EHKPCEIFBBF_BFOPPHBCPGG = 0;
	EHKPCEIFBBF_KIJMNBEJKLD = 99;
	EHKPCEIFBBF_NCKMPOJBCPO = 100;
	EHKPCEIFBBF_GJNAGNJFLKM = 199;
	EHKPCEIFBBF_FAFDFFBCGKO = 200;
	EHKPCEIFBBF_IJMLKLFCCGH = 299;
	EHKPCEIFBBF_CFDHMDILKKP = 300;
	EHKPCEIFBBF_ILCHPCDIKFM = 399;
	EHKPCEIFBBF_IADGGFLFGED = 400;
	EHKPCEIFBBF_HEIMMCOBDNO = 549;
	EHKPCEIFBBF_MMPOODBAIDH = 550;
	EHKPCEIFBBF_PCLILMOHMCM = 699;
	EHKPCEIFBBF_NOCCIGPMJOK = 700;
	EHKPCEIFBBF_NMIHPJPCLDM = 799;
	EHKPCEIFBBF_FBGLOAIHGAL = 800;
	EHKPCEIFBBF_KKMCJEBCDOB = 849;
	EHKPCEIFBBF_IBEOAPLGEKM = 850;
	EHKPCEIFBBF_CPNENMINIBK = 899;
	EHKPCEIFBBF_FLOEJMMBMLO = 900;
	EHKPCEIFBBF_NLBCLIJDOFL = 949;
	EHKPCEIFBBF_LMEKMGLONNA = 950;
	EHKPCEIFBBF_KIJLNJMGJOH = 999;
	EHKPCEIFBBF_PFAODLFNJPA = 1000;
	EHKPCEIFBBF_GMHFDCPNFOE = 1049;
	EHKPCEIFBBF_HJHAPLIPNNB = 1050;
	EHKPCEIFBBF_ODDHCDAIELN = 1149;
	EHKPCEIFBBF_LLPCLKNGCFD = 1150;
	EHKPCEIFBBF_OKNLKMLPCGE = 1249;
	EHKPCEIFBBF_DENPFONAHNK = 1250;
	EHKPCEIFBBF_NGBPPCBHFEJ = 1299;
	EHKPCEIFBBF_GPLKPABABLA = 1300;
	EHKPCEIFBBF_PINCHAPNAHF = 1399;
	EHKPCEIFBBF_LKLFAPNPFKH = 1450;
	EHKPCEIFBBF_EPJIAOPFLFJ = 1499;
	EHKPCEIFBBF_NGCHNCPIJKG = 1500;
	EHKPCEIFBBF_DLNANAFGOCG = 1599;
	EHKPCEIFBBF_KKGPKEOBLGF = 1600;
	EHKPCEIFBBF_KACAAPNOHPI = 1619;
	EHKPCEIFBBF_HDNFANKALAN = 1620;
	EHKPCEIFBBF_MDDNFDFHIHK = 1699;
	EHKPCEIFBBF_DLAEAJNEKKE = 1700;
	EHKPCEIFBBF_FELPGNPDPOG = 1899;
	EHKPCEIFBBF_NPFFICMNFCP = 1900;
	EHKPCEIFBBF_KCEEEOLMLBM = 1949;
	EHKPCEIFBBF_HMKBDKOOGBC = 1950;
	EHKPCEIFBBF_PAKPPJENICA = 1999;
	EHKPCEIFBBF_OCFGDJPPAJC = 2000;
	EHKPCEIFBBF_DPPJDFONABC = 2049;
	EHKPCEIFBBF_NDCMLIMEJIA = 2050;
	EHKPCEIFBBF_NEONAJIBKOK = 2099;
	EHKPCEIFBBF_CBICKMECLGA = 2100;
	EHKPCEIFBBF_AFIPKICOLCC = 2119;
	EHKPCEIFBBF_KHONJDGHMMF = 2200;
	EHKPCEIFBBF_HPDPGHCKDJF = 2219;
	EHKPCEIFBBF_OCDKMFNOKHD = 2220;
	EHKPCEIFBBF_HEFEKGJGEEK = 2399;
	EHKPCEIFBBF_OCHGNMNEHMM = 2400;
	EHKPCEIFBBF_HMGHALBEBMN = 2449;
	EHKPCEIFBBF_PJAJHGOIGHO = 2450;
	EHKPCEIFBBF_CLHHLBCDCAJ = 2499;
	EHKPCEIFBBF_BBJONDMCCLB = 2500;
	EHKPCEIFBBF_APOMNALAKJP = 2549;
	EHKPCEIFBBF_AKKPCEFMKFL = 2550;
	EHKPCEIFBBF_JBKHDPHKDHF = 2579;
	EHKPCEIFBBF_PKIOONDIFKG = 2580;
	EHKPCEIFBBF_EEEEELMBCKF = 2799;
	EHKPCEIFBBF_NBPEPGHHFLB = 2800;
	EHKPCEIFBBF_GKKNHICCMCH = 2829;
	EHKPCEIFBBF_CDIPGCBCIOF = 2830;
	EHKPCEIFBBF_PEJCKDPJFGC = 2869;
	EHKPCEIFBBF_DGLGMFCAJKM = 2870;
	EHKPCEIFBBF_AIFGENADEAG = 2929;
	EHKPCEIFBBF_NHKKMBKAKBB = 2930;
	EHKPCEIFBBF_BDAMIHKKOKN = 2999;
	EHKPCEIFBBF_KOGIHBPECAI = 3000;
	EHKPCEIFBBF_HNIGGEFIHKK = 3099;
	EHKPCEIFBBF_DMLFOKALDKJ = 3100;
	EHKPCEIFBBF_EOPLPILOCBG = 3129;
	EHKPCEIFBBF_DJEPNHHACCF = 3130;
	EHKPCEIFBBF_NKJHCAJFMHN = 3159;
	EHKPCEIFBBF_FNICAFPAFAC = 3160;
	EHKPCEIFBBF_GBGOHDFBIAJ = 3259;
	EHKPCEIFBBF_HMIGIGCFMKC = 3260;
	EHKPCEIFBBF_POGNDPGOHEJ = 3359;
	EHKPCEIFBBF_KIDJKLDHDCB = 3360;
	EHKPCEIFBBF_HKPOGHOIFAK = 3399;
	EHKPCEIFBBF_BKIBLMCBMIE = 3400;
	EHKPCEIFBBF_KDJPCPPMJMM = 3449;
	EHKPCEIFBBF_CGODOHBCPNK = 3450;
	EHKPCEIFBBF_PLHMLEPCONK = 3499;
	EHKPCEIFBBF_IBBGCHCNDLL = 3500;
	EHKPCEIFBBF_GIHGHLBNHEN = 3529;
	EHKPCEIFBBF_EFADPPGAPFO = 3530;
	EHKPCEIFBBF_ODAIGNDKLGK = 3549;
	EHKPCEIFBBF_GLIOMEFNOHN = 3550;
	EHKPCEIFBBF_MOKODKNCFLK = 3569;
	EHKPCEIFBBF_COJDFLCMFHH = 3570;
	EHKPCEIFBBF_GPOFADKLLAM = 3589;
	EHKPCEIFBBF_LEAOBDMPGDH = 3590;
	EHKPCEIFBBF_BFGLAEAJHCL = 3699;
	EHKPCEIFBBF_IGMBNDAJIKB = 3700;
	EHKPCEIFBBF_OEGHIKPBJIB = 3799;
	EHKPCEIFBBF_OHHBOGLJBJH = 3800;
	EHKPCEIFBBF_AECKNKHBMPM = 3810;
	EHKPCEIFBBF_PEAFAJMCLNN = 3811;
	EHKPCEIFBBF_IOBOAHABPCE = 3840;
	EHKPCEIFBBF_EMOIBECCPGI = 3841;
	EHKPCEIFBBF_HAPMJHHIHBA = 3859;
	EHKPCEIFBBF_GGGMLCCBAFM = 3860;
	EHKPCEIFBBF_EHEHFDCKFFP = 3879;
	EHKPCEIFBBF_CLCDMIKEBOA = 3880;
	EHKPCEIFBBF_ANLBMFKLCIH = 3899;
	EHKPCEIFBBF_HNDCCOIHFAD = 3900;
	EHKPCEIFBBF_FLOLOFPDBND = 3979;
	EHKPCEIFBBF_HKDEHMGFOFM = 4000;
	EHKPCEIFBBF_HBBGLJBFOBF = 4099;
	EHKPCEIFBBF_CENGPONPHPL = 4100;
	EHKPCEIFBBF_DBPKPJNJCBM = 4199;
	EHKPCEIFBBF_CLPAMDNMACG = 4200;
	EHKPCEIFBBF_HIPOMDCEDGE = 4299;
	EHKPCEIFBBF_AGKHMOFIBJL = 4300;
	EHKPCEIFBBF_FJGHJHNMLFB = 4399;
	EHKPCEIFBBF_CJBAAPGMPPK = 4400;
	EHKPCEIFBBF_PHNPPAMMGKP = 4499;
	EHKPCEIFBBF_EAPPMGFFKOD = 4500;
	EHKPCEIFBBF_BGBFLBABGHA = 4599;
	EHKPCEIFBBF_KIOJAMOOLLE = 4600;
	EHKPCEIFBBF_HDMGLOKDJAB = 4649;
	EHKPCEIFBBF_KEFDJIIGJHN = 4700;
	EHKPCEIFBBF_GAJJIAOMFIM = 4799;
	EHKPCEIFBBF_DKEGNFKBMMJ = 5000;
	EHKPCEIFBBF_PMJMOFIECHP = 6999;
	EHKPCEIFBBF_EHPHGPBGODK = 7000;
	EHKPCEIFBBF_CDBGCNNMDHE = 7050;
	EHKPCEIFBBF_FMIKBHMMLME = 7051;
	EHKPCEIFBBF_NEEMMKLFBFC = 7099;
	EHKPCEIFBBF_NKBACPLFPGG = 7100;
	EHKPCEIFBBF_KLMAGPHLEAK = 7149;
	EHKPCEIFBBF_OIJODJDDHOB = 10000;
	EHKPCEIFBBF_CAOIBHHHIOF = 10099;
	EHKPCEIFBBF_LHBKKFJEBPL = 10100;
	EHKPCEIFBBF_HHGDJCDHADF = 10199;
	EHKPCEIFBBF_FHOMIDGNIGJ = 10200;
	EHKPCEIFBBF_KJELGEJDCIA = 10299;
	EHKPCEIFBBF_JFCGNIPMKLE = 10300;
	EHKPCEIFBBF_NKBCKIFDGHO = 10399;
	EHKPCEIFBBF_DIIPHIELNGE = 10400;
	EHKPCEIFBBF_OCKLJMOHEJA = 10499;
	EHKPCEIFBBF_JPLOCDANDCM = 10500;
	EHKPCEIFBBF_NGJGLBDFIHJ = 10599;
	EHKPCEIFBBF_IBMDIIKKDHK = 10600;
	EHKPCEIFBBF_KHFKONEGHNN = 10799;
	EHKPCEIFBBF_EGEKPNNFDMC = 10800;
	EHKPCEIFBBF_DOCCCMKAMJP = 10899;
	EHKPCEIFBBF_CBBNNHPBFDF = 10900;
	EHKPCEIFBBF_OKEJNLMOFHK = 10999;
	EHKPCEIFBBF_FHAKNNJCJBN = 11000;
	EHKPCEIFBBF_DOGMACEBAJH = 11049;
	EHKPCEIFBBF_HOBBGADIDFP = 11050;
	EHKPCEIFBBF_DEFNLEEBEPI = 11099;
	EHKPCEIFBBF_EHIIAHHHOKF = 11100;
	EHKPCEIFBBF_OLOIBFFNHPO = 11149;
	EHKPCEIFBBF_NBPGDAHNHDL = 11150;
	EHKPCEIFBBF_CHDOONFDAGH = 11299;
	EHKPCEIFBBF_IMCDDMGBPBK = 11400;
	EHKPCEIFBBF_JPGGIHECLFD = 11499;
	EHKPCEIFBBF_KMNNCKMCOPN = 11500;
	EHKPCEIFBBF_GPKMBNPIHIM = 11549;
	EHKPCEIFBBF_CPJIMEFHEDJ = 11550;
	EHKPCEIFBBF_IHNODMOPIMN = 11649;
}

// CmdId: 6873
message IGJGODKNIIL {
	uint32 MBOABCJENFG = 15; // offset: 24, xor const: 11377
}

// CmdId: 6595
message EFNHJBOBLHE {
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 32, xor const: 0
	PJGAABFPONO CPEPJEPHPBD = 15; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 2906
	uint64 HEJBMNAOJFL = 14; // offset: 40, xor const: 1952
	uint32 KMKPPDICOKA = 5; // offset: 56, xor const: 5131
}

message GJAEEENKMJN {
	bool OFBAKEDIJHE = 2; // offset: 33, xor const: 0
	LDHKJGEMKIO OCAOFHJGJPC = 1; // offset: 16, xor const: 0
	bool ELFDMHCLLMD = 4; // offset: 34, xor const: 0
	bool BJGOFMBMJCH = 3; // offset: 32, xor const: 0
}

enum LOCJOMKALPC {
	LOCJOMKALPC_IOJCDNADCOI = 0;
}

// CmdId: 2808
message NFPAHLCIBDN {
	uint64 HEJBMNAOJFL = 14; // offset: 56, xor const: 7340
	uint32 KMKPPDICOKA = 9; // offset: 40, xor const: 961
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 48, xor const: 7265
	OLLIIKEDALP CPEPJEPHPBD = 10; // offset: 32, xor const: 0
}

message BPCHABAHAPA {
	int64 EFOCIEHGBNA = 8; // offset: 24, xor const: 13977
	uint32 FMNLIEDIAMK = 15; // offset: 32, xor const: 12791
	int64 MOHHBACKBOK = 5; // offset: 40, xor const: 3181
}

enum MDLABLBJOND {
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_NONE = 0;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_MAIN = 1;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_SIDE = 2;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_URGENT = 3;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_CHALLENGE = 5;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_HOLLOW_ZERO = 6;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_SIDE_AVATAR = 7;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_BIG_WORLD = 8;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_WEEKLY_BATTLE = 9;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_ONLY_BATTLE = 10;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_WORLD_LEVEL = 11;
	MDLABLBJOND_SCRIPT_HOLLOW_QUEST_TYPE_HARD_MODE = 12;
}

message NBHJJOOPEBK {
	uint32 OMJEPGEGPDM = 13; // offset: 40, xor const: 730
	KHINAKIAGJK BKHGIHJGCKK = 12; // offset: 24, xor const: 0
	repeated BMCHAGEMDJP JIFKKPKGAMA = 3; // offset: 16, xor const: 0
}

enum HBMKDLNNNEI {
	HBMKDLNNNEI_INIOKJCOLDD = 0;
	HBMKDLNNNEI_MJJLGIMPOKD = 1;
	HBMKDLNNNEI_PLIKPLJPEDB = 2;
	HBMKDLNNNEI_LAECJMMPKMN = 3;
	HBMKDLNNNEI_HPFDMBHBBKF = 4;
	HBMKDLNNNEI_GPEMKMHPILG = 5;
	HBMKDLNNNEI_OCKEJPPMDDP = 7;
	HBMKDLNNNEI_DKCEJOFFOCK = 8;
	HBMKDLNNNEI_EILCFLAOILO = 9;
	HBMKDLNNNEI_NKCBDPNNPKA = 10;
	HBMKDLNNNEI_CIIAMNPLOLC = 11;
	HBMKDLNNNEI_OAHHAADJFCI = 12;
	HBMKDLNNNEI_LJDBPGPLEKO = 13;
	HBMKDLNNNEI_CODNLKNCGOA = 14;
	HBMKDLNNNEI_PDMCDHFHELP = 15;
	HBMKDLNNNEI_GILENBJJFLI = 16;
	HBMKDLNNNEI_ACJJFGCANKI = 17;
	HBMKDLNNNEI_KBHCIFLNNCK = 18;
	HBMKDLNNNEI_JJBOGNGOFJJ = 19;
	HBMKDLNNNEI_CGBMFOJEMBF = 20;
	HBMKDLNNNEI_AEECBIEJPLA = 21;
	HBMKDLNNNEI_LMDJBGEMGBO = 22;
	HBMKDLNNNEI_HFAFEKOGOLP = 23;
	HBMKDLNNNEI_KDEDOECFOLD = 31;
	HBMKDLNNNEI_EPMGEGADLFE = 32;
	HBMKDLNNNEI_AAGLNCDKFEI = 34;
	HBMKDLNNNEI_HOKNMCPMJIP = 35;
	HBMKDLNNNEI_MMBNJEMPFJL = 36;
	HBMKDLNNNEI_EKHDEKHDKNP = 37;
	HBMKDLNNNEI_KCPDCFOFBMM = 38;
	HBMKDLNNNEI_JPFJJHJEDAG = 51;
	HBMKDLNNNEI_FMCDIDOBPFE = 52;
	HBMKDLNNNEI_EODCOAKDILJ = 61;
	HBMKDLNNNEI_EANHPBCEHLF = 62;
	HBMKDLNNNEI_NMFKEEKLBJH = 63;
	HBMKDLNNNEI_PDGLINLOKEF = 64;
	HBMKDLNNNEI_ANKJBDNBFHP = 65;
	HBMKDLNNNEI_JGJGLDFKCDP = 67;
	HBMKDLNNNEI_AONFNHJEGAH = 68;
	HBMKDLNNNEI_PJEHBJLPJBO = 69;
	HBMKDLNNNEI_DECBABKPLIM = 70;
	HBMKDLNNNEI_PMOICGBHAAD = 71;
	HBMKDLNNNEI_JGPFKMBKJGP = 72;
	HBMKDLNNNEI_PNCCIKPPMNL = 73;
	HBMKDLNNNEI_NFHOLBEJBFF = 74;
	HBMKDLNNNEI_FBPABFGCAAK = 75;
	HBMKDLNNNEI_ALOEFHFCNBF = 76;
	HBMKDLNNNEI_NMFDMGCOOBD = 77;
	HBMKDLNNNEI_NEKHNBJIHOL = 78;
	HBMKDLNNNEI_NPKJDLJPJIE = 79;
	HBMKDLNNNEI_KJECLIOMCEM = 80;
	HBMKDLNNNEI_OBNFBONDMNP = 81;
	HBMKDLNNNEI_NCPPLGIFJBF = 83;
	HBMKDLNNNEI_HEGPDLFGOBO = 84;
	HBMKDLNNNEI_OJHBNHBLLDK = 85;
	HBMKDLNNNEI_OJMADJLDLLG = 86;
	HBMKDLNNNEI_INOGNHOCOOI = 87;
}

// CmdId: 2329
message POFFKFDCODD {
	uint64 AEDAEPKDOAL = 10; // offset: 56, xor const: 969
	uint64 HEJBMNAOJFL = 2; // offset: 48, xor const: 5291
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 32, xor const: 0
	DCJDGMCNKCA CPEPJEPHPBD = 15; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 1; // offset: 40, xor const: 7771
}

message GCDGMGGJFOC {
	repeated uint32 PIMACAOJKBB = 1; // offset: 24, xor const: 0
	bool JILFNHHHMPE = 2; // offset: 32, xor const: 0
}

message OJJDLLFLHHP {
	bool GBKNCJDLDJB = 2; // offset: 28, xor const: 0
	uint32 OPFEAMDPIAG = 1; // offset: 24, xor const: 15852
}

message CIBPOBIONPG {
	int32 MKEOKMKNCHA = 12; // offset: 84, xor const: 0
	int32 CGDENKCGJOD = 7; // offset: 76, xor const: 0
	int32 JJIHJCNKANL = 13; // offset: 72, xor const: 0
	int32 FAIDHLNEBOK = 5; // offset: 52, xor const: 0
	int32 JBBHMDBBEOI = 11; // offset: 80, xor const: 0
	bool FCKONCOJHLD = 14; // offset: 60, xor const: 0
	int32 BGGCOAJDMEL = 4; // offset: 56, xor const: 0
	int32 HCDPCJLDEGP = 10; // offset: 40, xor const: 0
	repeated AICBCBHNANL GGANGPGAGIA = 6; // offset: 16, xor const: 0
	int32 HEEGECGOCHB = 15; // offset: 48, xor const: 0
	int32 CENMKDLDNAN = 1; // offset: 44, xor const: 0
	int32 OBCINGGBLID = 9; // offset: 64, xor const: 0
	int32 KOMIMFNADCM = 3; // offset: 68, xor const: 0
	int64 BHFCMPLJPFG = 2; // offset: 88, xor const: 0
	repeated JDAPEMOLLEH ONJLPHMDONA = 8; // offset: 24, xor const: 0
}

message JIDNHIKGGCC {
	repeated BJBMKGLBKFG OOHNLIHGLGO = 8; // offset: 16, xor const: 0
	uint32 HJHFOICGOAC = 6; // offset: 32, xor const: 4270
}

message FNLGBILAFHF {
	uint32 NOFLMOLILDP = 1; // offset: 24, xor const: 0
}

// CmdId: 4107
message ECDKPEJGGPO {
	HBFBNKAODPJ GAKIHCKINLK = 9; // offset: 16, xor const: 0
	uint64 OALGNBOFCGI = 15; // offset: 48, xor const: 6258
	int32 IHIGNMLCHDK = 14; // offset: 60, xor const: 7572
	uint32 AKEKFONOGGJ = 5; // offset: 64, xor const: 187
	bool GMNICCMEKIF = 6; // offset: 57, xor const: 0
	uint32 FELJHMBGGBG = 13; // offset: 72, xor const: 13424
	LIGOHGBIGLC KDPBPDEMOJG = 2; // offset: 32, xor const: 0
	map<uint32, uint32> BIADBCJCICL = 8; // offset: 40, xor const: 0
	bool MDJICJLMGMB = 4; // offset: 56, xor const: 0
	uint32 IODKCMMJGAF = 1; // offset: 68, xor const: 12588
}

// CmdId: 4147
message JDHEPMPNDAP {
	repeated AOKOFBENNAI DPBKAIEMMNG = 1; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 14; // offset: 32, xor const: 11603
}

message JOMMFOLEFOB {
	repeated MLNFNHMKJCK CPCJBCCMKBG = 7; // offset: 16, xor const: 0
}

// CmdId: 1074
message FKDPPGDFKMH {
}

message KJAOJGLANFL {
	string DMICGIPOOGF = 1; // offset: 32, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 2; // offset: 24, xor const: 0
}

message HKBBAJFBFKH {
	float AEIHIBLACCM = 9; // offset: 24, xor const: 0
	float EFJPPJJFNJM = 11; // offset: 36, xor const: 0
	bool MBKLAOBDGCK = 10; // offset: 28, xor const: 0
	int32 PNHBJELOLEI = 13; // offset: 40, xor const: 1187
	int32 PGBADFMPAPK = 3; // offset: 32, xor const: 13518
}

enum JHEAFLNDLGB {
	JHEAFLNDLGB_FPLBCNJHELL = 0;
	JHEAFLNDLGB_HMHPIGPKDGL = 1;
	JHEAFLNDLGB_CCDLFHFEHAB = 2;
	JHEAFLNDLGB_JOHEBOGIMPC = 3;
}

message OIJDMJPPIPN {
	int32 ACGMMMKLAJF = 4; // offset: 24, xor const: 9320
	uint32 NIJLEDIPBGF = 14; // offset: 28, xor const: 5465
	uint32 NCAGHHFDAOG = 12; // offset: 32, xor const: 5058
}

message PLHEHPIBLMC {
	uint32 AMIJIAHGPMC = 1; // offset: 24, xor const: 0
}

message OAHNAOJDFLD {
}

message KHHLFHHJONB {
	uint32 FDIJEMGKCBK = 1; // offset: 40, xor const: 1256
	repeated MMDBEFMKNEB PKKFNEHLMHF = 3; // offset: 24, xor const: 0
	repeated uint32 PFKMPPPPALE = 2; // offset: 16, xor const: 0
}

message IJMNNDKBHHP {
	string ECBFKCKFLDI = 1; // offset: 16, xor const: 0
}

enum DHHDGKMFLNB {
	DHHDGKMFLNB_AHBOFPBPNEB = 0;
	DHHDGKMFLNB_GHEOPAHHMKC = 1;
	DHHDGKMFLNB_DOLHCICPHLE = 2;
	DHHDGKMFLNB_CNLCCECIEHA = 3;
	DHHDGKMFLNB_CLCJBJINCNP = 4;
	DHHDGKMFLNB_IGDOAKBEMHK = 5;
	DHHDGKMFLNB_LCKEJMPKDFG = 6;
	DHHDGKMFLNB_MDODBCMLBED = 7;
}

message AEKLDLDPMPF {
	PFKDNJFHPFN HLEAEPDDBLE = 1; // offset: 48, xor const: 0
	LDHKJGEMKIO EIFNPOMLIAK = 3; // offset: 24, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 40, xor const: 0
	FGKJFCJILIL DDHEEFKDLJK = 4; // offset: 16, xor const: 0
}

// CmdId: 9157
message DDNLOCIKKJD {
	HBFBNKAODPJ NLPBPGDBLEL = 5; // offset: 40, xor const: 0
	bool GJMCLCFEANI = 2; // offset: 70, xor const: 0
	int32 OGPCLMDOEND = 11; // offset: 64, xor const: 11956
	int32 PKDDGCIDGGL = 9; // offset: 52, xor const: 14746
	bool AGGINBNNEEF = 13; // offset: 69, xor const: 0
	PIBPFLEKNHJ EFPPFLJIBJN = 10; // offset: 16, xor const: 0
	uint32 NFFMNACHNMG = 1; // offset: 48, xor const: 9039
	int32 FOJJGFBCAAL = 15; // offset: 60, xor const: 8820
	bool ABBJBIHGLLC = 14; // offset: 68, xor const: 0
	int32 BIKPIFGHPFH = 7; // offset: 56, xor const: 964
	HBFBNKAODPJ GHFGIGMMOOD = 6; // offset: 32, xor const: 0
}

// CmdId: 9331
message OAPMJDLEGDJ {
	uint32 AMIJIAHGPMC = 7; // offset: 32, xor const: 14811
	repeated bool NPDKIIAPBMA = 14; // offset: 16, xor const: 0
}

message EHCDJPNIAHC {
	repeated int32 BNBOCABHEAF = 5; // offset: 16, xor const: 0
	KKCGCNMCBPO AJHPPMGEKNC = 9; // offset: 24, xor const: 0
	JAMIPMDCAJB PMFHKDNNKCE = 6; // offset: 48, xor const: 0
	repeated uint32 KPBFOOGFACG = 14; // offset: 40, xor const: 0
	int32 PEECHCDDGHL = 11; // offset: 56, xor const: 11484
}

message GPPFPCPKNIJ {
	int32 FHBFHNFCKNE = 14; // offset: 44, xor const: 8186
	int32 BINAGNMFLPM = 5; // offset: 40, xor const: 13866
	map<int32, int32> KGNLJMIJFDN = 13; // offset: 24, xor const: 0
	map<int32, int32> MBBIALBLLHP = 8; // offset: 16, xor const: 0
}

enum FGNNIOHEEBL {
	FGNNIOHEEBL_AAIABFHNDOF = 0;
	FGNNIOHEEBL_JFIDEFFLDCO = 1;
}

message ENKKIOIJPDE {
	uint32 NOFLMOLILDP = 1; // offset: 36, xor const: 0
	AEBEAAJMIPH IEFLICEGJOO = 3; // offset: 16, xor const: 0
	uint32 DCMIEKANCIE = 2; // offset: 32, xor const: 0
}

message EBBJFPOEDDH {
	map<string, string> AAJGPGJKKOK = 11; // offset: 16, xor const: 0
	map<string, int32> ONKEOHNGJBA = 2; // offset: 32, xor const: 0
	bool CDOPHENOIFA = 6; // offset: 40, xor const: 0
}

message DAMADMMANIA {
	int32 ANKJPHPFMCP = 6; // offset: 28, xor const: 11696
	int32 MHINMINPONI = 7; // offset: 24, xor const: 5766
}

message KJGHKAHFCOG {
	uint32 OPFEAMDPIAG = 14; // offset: 24, xor const: 3411
}

// CmdId: 8247
message MCFABCLGLCK {
	repeated uint32 CLAJECCLAEA = 3; // offset: 16, xor const: 0
	uint32 MCMILKMHKCG = 14; // offset: 40, xor const: 323
	uint32 FDCELHDFOHC = 12; // offset: 36, xor const: 13514
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 15309
	uint32 JGLICLBJNFA = 8; // offset: 48, xor const: 3597
	bool OHCINIKOPHK = 5; // offset: 44, xor const: 0
}

// CmdId: 2433
message PAOGEBDHMOA {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 4658
}

enum PJLFLNGMHNO {
	PJLFLNGMHNO_IJDDNLMNKLN = 0;
	PJLFLNGMHNO_LFFCLIAKILI = 10010;
	PJLFLNGMHNO_CKPJMGNAOMP = 10012;
}

message FDEBPJGMEBE {
	FGKJFCJILIL PFPAHBMCJPL = 2; // offset: 40, xor const: 0
	IHHJNHHDNHN JDLIABJGLHB = 4; // offset: 48, xor const: 0
	FGKJFCJILIL NCAGHHFDAOG = 1; // offset: 16, xor const: 0
	FGKJFCJILIL JBGMHNLHHAD = 3; // offset: 24, xor const: 0
}

// CmdId: 1981
message DBOGCAIPANA {
	BOLNNMJOIDK CNLDJMAGJPL = 2; // offset: 24, xor const: 0
	uint32 AMIJIAHGPMC = 4; // offset: 28, xor const: 3418
}

enum GBIGEEBNAAD {
	GBIGEEBNAAD_QUEST_STATUS_UNLOCKED = 0;
	GBIGEEBNAAD_QUEST_STATE_INPROGRESS = 1;
	GBIGEEBNAAD_QUEST_STATE_FINISHED = 2;
	GBIGEEBNAAD_QUEST_STATE_CLOSED = 3;
}

message OMIABPIMJGP {
	FGKJFCJILIL JOJBOMLDHAO = 2; // offset: 16, xor const: 0
	FGKJFCJILIL ALEHPEKIJLC = 3; // offset: 24, xor const: 0
	FGKJFCJILIL LDLJPDBHPLJ = 1; // offset: 40, xor const: 0
}

message KENODIPMMKE {
	uint32 BMFDANPJJLN = 3; // offset: 28, xor const: 5910
	uint32 EBPKOEFDAEB = 4; // offset: 24, xor const: 12433
}

// CmdId: 2715
message FNJCOJOABDO {
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 10754
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 5; // offset: 56, xor const: 16316
	DMMDEFAPAIA CPEPJEPHPBD = 15; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 40, xor const: 4406
}

message EJDOIBHAKGO {
	FLHAGKAIMNM LJPPJNCDBNH = 11; // offset: 48, xor const: 0
	uint32 BCCEOLDLIFA = 7; // offset: 72, xor const: 496
	BKAEBCBKKCP OJOLLDNFGJH = 10; // offset: 40, xor const: 0
	JLLPDMNBNHN JALEOIKEOKA = 9; // offset: 56, xor const: 0
	FKPEGLLDDFF JMINHOJJOCM = 5; // offset: 24, xor const: 0
	EMBAOJKCMEJ HCKACFMGHAD = 6; // offset: 16, xor const: 0
	FBJAGHNPCHC CAFNCHAIPJF = 8; // offset: 64, xor const: 0
}

message FIPHFCEKHFA {
	repeated AJCBLJBLGBH KDEACCLEHHJ = 2; // offset: 16, xor const: 0
}

// CmdId: 326
message HAGPDMELNPD {
	repeated DLMEMNLJCBJ KJNBHEIJBGM = 5; // offset: 16, xor const: 0
}

// CmdId: 1353
message DHCKOBKGPOG {
	repeated AIOPLCHFIOJ CNFJHHBOMGG = 9; // offset: 24, xor const: 0
}

enum GNIFDHNFAHI {
	GNIFDHNFAHI_GLKBPDEJBDO = 0;
	GNIFDHNFAHI_BDPCIFNHPLB = 2;
	GNIFDHNFAHI_KKPNCMHCCKL = 3;
	GNIFDHNFAHI_PDPHDLFOBMI = 4;
	GNIFDHNFAHI_IPNGFBNKKCE = 5;
}

message NMPODFNEICE {
}

// CmdId: 9553
message FGMDJGEMINE {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 7411
}

// CmdId: 7840
message LMBKBECIIKF {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 6832
}

// CmdId: 8432
message GOOEBGFEFLI {
	uint32 EKLGNOIEMLA = 5; // offset: 24, xor const: 8131
}

message EKHOMJBBJFN {
	map<string, CKPHGCOEEGC> HHHKANAANCI = 1; // offset: 16, xor const: 0
}

message FGLPHCJOBOG {
	bool IPMAKEJIDJD = 2; // offset: 32, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 24, xor const: 0
}

message BJJEMPMGFFN {
	bool GIBMBJFPPBE = 13; // offset: 28, xor const: 0
	uint32 OPFEAMDPIAG = 15; // offset: 24, xor const: 8080
}

message HKEEKLCMFBL {
	int32 JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

message JDDAHHJBJJL {
	repeated uint32 JJMNKINIKCA = 3; // offset: 24, xor const: 0
	uint32 JFPGDDPDLBL = 13; // offset: 40, xor const: 3900
	repeated uint32 GCJKKFDPABN = 1; // offset: 32, xor const: 0
}

enum DHFLJAOPJAE {
	DHFLJAOPJAE_INTER_KNOT_STATE_NONE = 0;
	DHFLJAOPJAE_INTER_KNOT_STATE_DOING = 1;
	DHFLJAOPJAE_INTER_KNOT_STATE_REWARD = 2;
}

// CmdId: 7513
message IMFCNINCODD {
	repeated uint32 LGKJPBLCHFK = 15; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 2; // offset: 48, xor const: 5024
	repeated uint32 IKOPGNCHIEM = 1; // offset: 40, xor const: 0
	repeated AFNFKCMCOGG AADPNMEEKPC = 13; // offset: 32, xor const: 0
}

message MLHBLIGCPEE {
	INLFFDKGPNK AODMMCCECAP = 10; // offset: 16, xor const: 0
}

// CmdId: 6286
message EBIGNHBLBIC {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 4082
}

// CmdId: 5898
message IBCOKCLKIFF {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 10158
}

// CmdId: 423
message CNEDNGHCNKO {
	uint64 AEDAEPKDOAL = 1; // offset: 40, xor const: 12683
	INFPIHIGHAE CPEPJEPHPBD = 12; // offset: 24, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 56, xor const: 8725
	uint64 HEJBMNAOJFL = 7; // offset: 48, xor const: 8323
}

message LDALHCGKFGL {
}

message MMJBMOIIKMB {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 1507
}

message DBNNNNHLAEF {
	uint64 DIMEDPILOOA = 1; // offset: 24, xor const: 0
	uint32 OBPMOEHGAIM = 2; // offset: 32, xor const: 0
}

enum MJCPCKPAGOH {
	MJCPCKPAGOH_OLNADGDKLCE = 0;
	MJCPCKPAGOH_LBMFNKAIAMA = 1;
	MJCPCKPAGOH_CHKNMIIDOCP = 2;
}

message CMFHCMNFOCA {
	bool PLNLBCKAJGN = 2; // offset: 32, xor const: 0
	FGKJFCJILIL NEFAAKJKNDC = 1; // offset: 24, xor const: 0
}

// CmdId: 519
message MOLDDJMECJB {
	string OOOBFOIHPBB = 14; // offset: 24, xor const: 0
	uint32 GFCLKDAOMBM = 2; // offset: 32, xor const: 9425
	uint32 LGNMJDDJCDC = 12; // offset: 36, xor const: 15140
}

message IBBFJAPPPAM {
	FGKJFCJILIL DFKOCLNFPNN = 1; // offset: 24, xor const: 0
}

message CNCJBLGJEDE {
	int32 GNBFPEIBLDK = 12; // offset: 44, xor const: 4201
	int32 CLIOOGMIIIP = 9; // offset: 52, xor const: 1941
	int32 LGLGBJONIFO = 3; // offset: 48, xor const: 5725
	int32 IHIGNMLCHDK = 10; // offset: 40, xor const: 7791
	FKDDPIBBKCD KLMLCFPLMPF = 15; // offset: 16, xor const: 0
	int32 LCPDGEFCADA = 5; // offset: 32, xor const: 4677
	int32 HKCHPDBIJHC = 1; // offset: 36, xor const: 8959
}

message LGCILCMIMLE {
	uint32 NMHNBHDEKBP = 11; // offset: 32, xor const: 11816
	uint32 INJPKJCCMDC = 6; // offset: 28, xor const: 3858
	uint32 PBOAMDEBIGO = 5; // offset: 24, xor const: 4951
}

// CmdId: 8111
message GFPAOHOBPDA {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 14044
}

message DPLCDPDELCJ {
	GONMALNEEDK COAPBMGHADD = 2; // offset: 32, xor const: 0
	FGKJFCJILIL GFCLKDAOMBM = 1; // offset: 24, xor const: 0
}

// CmdId: 6232
message DMMBEEIBABF {
	NJFKCKGLJMP LHHDGDGCFAL = 7; // offset: 36, xor const: 0
	uint32 PHLHCLJGNCF = 10; // offset: 32, xor const: 6853
	uint32 DIOBNLBBKHI = 1; // offset: 28, xor const: 6962
	uint32 IKDJDPPLNOM = 4; // offset: 24, xor const: 15527
}

message FHPJOCIFIJC {
	FGKJFCJILIL EFJPPJJFNJM = 3; // offset: 24, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 2; // offset: 40, xor const: 0
	string MHINMINPONI = 4; // offset: 16, xor const: 0
	LEHENCIPJIE CKBOJACIJDI = 1; // offset: 48, xor const: 0
}

message BCPFHENIDCD {
	FHPMOJABOME PEICLJFIBJL = 1; // offset: 40, xor const: 0
	repeated AHCINDEBNMN OADDHNCDOML = 4; // offset: 56, xor const: 0
	repeated FHPMOJABOME FBKMAKLFNLP = 2; // offset: 16, xor const: 0
	repeated int32 FAFMGDFBGJI = 5; // offset: 24, xor const: 0
	repeated FHPMOJABOME HMPOJDDNAPI = 3; // offset: 48, xor const: 0
}

message EGNJLMEMKJI {
	repeated uint32 NKMKNCDKPKO = 1; // offset: 16, xor const: 0
	uint32 NNNEKMDKBFJ = 2; // offset: 32, xor const: 2926
}

message EIGPBOIECHG {
	uint32 BEKFLJGFLJD = 5; // offset: 40, xor const: 15796
	uint64 HEJBMNAOJFL = 6; // offset: 32, xor const: 3424
	uint32 HJHFOICGOAC = 3; // offset: 24, xor const: 3382
	uint32 CBDBIPMJEPJ = 10; // offset: 44, xor const: 13544
}

message EKJKFNFDBHP {
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 16, xor const: 0
}

message LPOPCAKKEKA {
}

message CMJEMGBFFED {
	uint32 EAILPOFOKLE = 14; // offset: 52, xor const: 6127
	uint32 AFNDMKOMNKH = 9; // offset: 40, xor const: 3767
	uint32 LANJNPHPJEH = 3; // offset: 48, xor const: 7058
	uint32 NMIHGNOBJKA = 2; // offset: 44, xor const: 4900
	repeated uint32 DCGHCMJKKMI = 5; // offset: 32, xor const: 0
	map<uint32, int32> JMGDCHCGMGL = 15; // offset: 16, xor const: 0
	uint32 MHINMINPONI = 11; // offset: 56, xor const: 13850
}

message BPGFKIOHAJP {
	EAFOGJBAFBB NGGDKJGKELE = 3; // offset: 44, xor const: 0
	bool NBJAGLPLBLD = 8; // offset: 40, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 14; // offset: 24, xor const: 0
	EFBCIHHFBLN HHAPDADAKHE = 12; // offset: 32, xor const: 0
	uint32 ACEMBJPDCDK = 10; // offset: 48, xor const: 2964
}

message KLKHOLGNHFK {
	uint32 LOKJHOHDPDG = 4; // offset: 60, xor const: 0
	string NFIEMFONLIK = 1; // offset: 24, xor const: 0
	map<string, string> EJKEBPHDJKL = 2; // offset: 40, xor const: 0
	map<string, string> MJLEJNJHLON = 3; // offset: 32, xor const: 0
	map<string, EDGCAIEHLHH> KMGEOGPLNNJ = 5; // offset: 48, xor const: 0
	DHMNNAPFLCB EBPKOEFDAEB = 6; // offset: 56, xor const: 0
}

enum JOLNLKCBKAM {
	JOLNLKCBKAM_LCFGEEOIANC = 0;
	JOLNLKCBKAM_KHKEEIHANCF = 1;
	JOLNLKCBKAM_HCOHOILEGOD = 2;
	JOLNLKCBKAM_JPNKPBPMNEP = 3;
	JOLNLKCBKAM_JIDEPDLAGBD = 4;
}

message MBPPMJHOGIB {
	string HAOGOPGJIJN = 5; // offset: 32, xor const: 0
	string BEMKPNCMFFE = 2; // offset: 40, xor const: 0
	bool MDOIJJOIEIC = 6; // offset: 48, xor const: 0
	bool MNBMPDPEHEA = 3; // offset: 49, xor const: 0
	bool FKCDINFGBME = 1; // offset: 50, xor const: 0
	string IPGMMIMICMA = 4; // offset: 24, xor const: 0
}

message CFHPLBHGACJ {
	bool MIJHIGIEDIC = 1; // offset: 25, xor const: 0
	bool KEMBPFDCGLK = 3; // offset: 27, xor const: 0
	bool JPMOKEIPNPF = 2; // offset: 26, xor const: 0
	bool BHPIFAPMKBD = 4; // offset: 24, xor const: 0
}

// CmdId: 1422
message NGPKIGNODGC {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 9861
}

// CmdId: 3267
message KOMBFAJIEHF {
}

message FFOKOFJOGHI {
	int32 DCHECDGMGNL = 10; // offset: 52, xor const: 4515
	uint32 EKLGNOIEMLA = 1; // offset: 68, xor const: 10304
	NNOGFNJLNHL GFMPFOINKAG = 3; // offset: 36, xor const: 0
	uint32 KCFEIJAALGK = 12; // offset: 32, xor const: 144
	HOECHDDPEFI NIDKPCDHMIP = 7; // offset: 48, xor const: 0
	uint32 NJFOLJNDPGG = 14; // offset: 72, xor const: 15230
	uint32 FPAMMKPBAGA = 9; // offset: 64, xor const: 2946
	FLBGJOBPECG PPBGIKDLBGL = 15; // offset: 16, xor const: 0
	int64 KHIPAAJAABO = 11; // offset: 56, xor const: 8319
	int64 BGGDAKCHMDP = 13; // offset: 40, xor const: 12718
}

enum IGDMADMNEKF {
	IGDMADMNEKF_LHJHEJIFKMJ = 0;
}

enum IIALJEKOFGB {
	IIALJEKOFGB_HBBOIMLMADG = 0;
	IIALJEKOFGB_APLHBNADAAC = 1;
	IIALJEKOFGB_AEBOJIPFDIN = 2;
	IIALJEKOFGB_NHINEDIBNMI = 3;
	IIALJEKOFGB_IAFGPLOGDPF = 4;
}

message FONJGFFPGNH {
}

// CmdId: 9416
message MBMNAKMLMJG {
	bool GCDACKBHFOO = 6; // offset: 24, xor const: 0
	bool GOIDNFGDKEB = 7; // offset: 25, xor const: 0
}

// CmdId: 8701
message CJAIBCGLJNH {
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 14; // offset: 48, xor const: 16324
	uint32 KMKPPDICOKA = 4; // offset: 56, xor const: 1338
	AFJEBKGOBJB CPEPJEPHPBD = 7; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 40, xor const: 7422
}

message OPBCJEGEOFD {
	uint32 NCAGHHFDAOG = 6; // offset: 28, xor const: 8101
	int32 EFFMOLNLHLM = 13; // offset: 24, xor const: 3986
}

message NKDIPCCJEDH {
}

// CmdId: 4637
message GFKFKOGJMJK {
	IODKMLDEAGC GOKDPHLGHHP = 12; // offset: 24, xor const: 0
	bool LELIMDNLOBO = 1; // offset: 32, xor const: 0
}

message FDFMKIMPNKH {
	int32 FMLDCFLCEPJ = 2; // offset: 44, xor const: 14519
	int32 CCAMAHHJJAF = 15; // offset: 40, xor const: 9361
	uint64 ONIOPKMMHHJ = 5; // offset: 24, xor const: 1100
	uint64 GHLJCJECAMB = 1; // offset: 32, xor const: 4375
	uint64 HDGBPMNPOCI = 12; // offset: 56, xor const: 6269
	int32 ODKEFDHMLNO = 9; // offset: 52, xor const: 13913
	int32 GPANAHNDHND = 3; // offset: 48, xor const: 11302
}

message GJDALEKAPNL {
	int32 JHMFEPPLDOJ = 11; // offset: 24, xor const: 1217
}

message JECCHCNJMHI {
	repeated FGKJFCJILIL HNLFIOJCAFE = 6; // offset: 32, xor const: 0
	FGKJFCJILIL PDEJFBLBKPN = 3; // offset: 16, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 2; // offset: 48, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 5; // offset: 64, xor const: 0
	repeated FGKJFCJILIL HBJNDNNLAGJ = 4; // offset: 24, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 56, xor const: 0
}

enum GHBIGFJAEDK {
	GHBIGFJAEDK_IDMKBHHFPKN = -1;
	GHBIGFJAEDK_CJCLAHBBBPH = 0;
	GHBIGFJAEDK_AILPJDGFICL = 1;
	GHBIGFJAEDK_CGIPKBHDLFF = 2;
	GHBIGFJAEDK_MKIFCDNHGNA = 9;
	GHBIGFJAEDK_EJNODPBGBCP = 10;
	GHBIGFJAEDK_JJFCEONFJJD = 20;
	GHBIGFJAEDK_NIGCCMIJOMA = 21;
	GHBIGFJAEDK_GGOKEGFBLMN = 22;
	GHBIGFJAEDK_BNCBGNNGOGP = 23;
	GHBIGFJAEDK_KKGPOKFLEMN = 25;
	GHBIGFJAEDK_JNGHMIIBIGD = 29;
	GHBIGFJAEDK_DABAKMIIDJI = 30;
	GHBIGFJAEDK_PLGLNKJFOAH = 31;
	GHBIGFJAEDK_MEDBFOGDGHM = 32;
	GHBIGFJAEDK_ILJEJALKGEE = 33;
	GHBIGFJAEDK_KIIDMFMHOGH = 34;
	GHBIGFJAEDK_AKJACLNKEJF = 70;
	GHBIGFJAEDK_EAPHLOOMJFO = 71;
	GHBIGFJAEDK_OIBJIPGJGED = 72;
	GHBIGFJAEDK_KHPDMOLAFDL = 73;
	GHBIGFJAEDK_AKMDIFFGCOM = 74;
	GHBIGFJAEDK_CLBHCHJBIIN = 75;
	GHBIGFJAEDK_BBGGIAGGKBJ = 76;
	GHBIGFJAEDK_KPIOJNDDPGN = 100;
	GHBIGFJAEDK_EKHFKNMFEAK = 101;
	GHBIGFJAEDK_KKCCENHDCLC = 102;
	GHBIGFJAEDK_BDBDECJIBBM = 200;
	GHBIGFJAEDK_MLDIHKMHDFK = 201;
	GHBIGFJAEDK_CJLHCMOCMAE = 202;
	GHBIGFJAEDK_IKDBACJIOKB = 203;
	GHBIGFJAEDK_MHKEEOHFCDL = 204;
	GHBIGFJAEDK_PALMDEHOJLF = 205;
	GHBIGFJAEDK_LOCAFLJENDB = 206;
	GHBIGFJAEDK_KMAGMDOMHIB = 207;
	GHBIGFJAEDK_OAFHGHCPIHD = 208;
	GHBIGFJAEDK_HODPPGDLCNA = 209;
	GHBIGFJAEDK_GLJIOFEEABM = 210;
	GHBIGFJAEDK_IJEEOAKDGMN = 211;
	GHBIGFJAEDK_BPFICKMJALK = 1000;
	GHBIGFJAEDK_AMPGLAGJDLE = 1001;
	GHBIGFJAEDK_IKEHGEIFKCP = 1002;
	GHBIGFJAEDK_ANKLBKKMDGC = 1003;
	GHBIGFJAEDK_FFHKCBFEPBC = 1004;
	GHBIGFJAEDK_JOIAEKHFPCC = 1005;
	GHBIGFJAEDK_GHKHOILAMHD = 1006;
	GHBIGFJAEDK_KEEIOKDPGOC = 1007;
	GHBIGFJAEDK_LABKMKBJHJA = 1008;
	GHBIGFJAEDK_JFKMNKMFICP = 1009;
	GHBIGFJAEDK_JDPHFEIMDLE = 1010;
	GHBIGFJAEDK_DEOEBIAGHMB = 1011;
	GHBIGFJAEDK_AGAPDKDFFOK = 1012;
	GHBIGFJAEDK_HPFDHPGAGPP = 1100;
	GHBIGFJAEDK_BMJLJOKDBJN = 1101;
	GHBIGFJAEDK_OMFFAOCKLJB = 1102;
	GHBIGFJAEDK_MHEGNPAJEAA = 1103;
	GHBIGFJAEDK_OMLPHLNNGLL = 1104;
	GHBIGFJAEDK_HJFMNGBKFDJ = 1105;
	GHBIGFJAEDK_IKMOPGCDGDK = 1106;
	GHBIGFJAEDK_JNKDBABFDEH = 1107;
	GHBIGFJAEDK_PHIPGGKGPLM = 1108;
	GHBIGFJAEDK_HNHHOHOMBCE = 1109;
	GHBIGFJAEDK_LKGBKPHFKOH = 1200;
	GHBIGFJAEDK_JLEDLMBONBE = 1201;
	GHBIGFJAEDK_LGAMFFCEIDE = 1202;
	GHBIGFJAEDK_PHKJNKJNNJH = 1203;
	GHBIGFJAEDK_KFBLOEHPCDJ = 1204;
	GHBIGFJAEDK_HOMPGHEAIDH = 1205;
	GHBIGFJAEDK_MPDHCOEJMGL = 1206;
	GHBIGFJAEDK_FAMCLAMOIDD = 1207;
	GHBIGFJAEDK_ENOOMLBOLAJ = 1208;
	GHBIGFJAEDK_OOABDIEDKED = 1209;
	GHBIGFJAEDK_OJLFGHCMEON = 1210;
	GHBIGFJAEDK_GIEDDPIPDFM = 1211;
	GHBIGFJAEDK_LGEHKCJNICH = 1212;
	GHBIGFJAEDK_DGIMMIDBPAM = 1213;
	GHBIGFJAEDK_BBLDNIFGPFL = 1214;
	GHBIGFJAEDK_CMCDINHLJAF = 1215;
	GHBIGFJAEDK_FFHLPGPHIIM = 1216;
	GHBIGFJAEDK_CLOJBALLKIF = 1217;
	GHBIGFJAEDK_LHIMKONKDMF = 1218;
	GHBIGFJAEDK_MMKMMIJPMDL = 1219;
	GHBIGFJAEDK_GGOOEGLHCLL = 1220;
	GHBIGFJAEDK_NFBLMLAFPJM = 1221;
	GHBIGFJAEDK_GFNCNNKLAKG = 1222;
	GHBIGFJAEDK_ACNGJLHOHBC = 1223;
	GHBIGFJAEDK_AGIFOKNODBK = 1224;
	GHBIGFJAEDK_LKDNDOEBBHI = 1225;
	GHBIGFJAEDK_OINMBNBPKKH = 1226;
	GHBIGFJAEDK_KIPHLNEIENA = 1227;
	GHBIGFJAEDK_FAKLBBAINDD = 1228;
	GHBIGFJAEDK_MGPPACHDNBH = 1229;
	GHBIGFJAEDK_JGHCPHFDFAE = 1230;
	GHBIGFJAEDK_CJNHNPGKKKL = 1231;
	GHBIGFJAEDK_NDOHGMGGCIJ = 1232;
	GHBIGFJAEDK_HDDIEEAANMA = 1233;
	GHBIGFJAEDK_HEFCEANJAKA = 1234;
	GHBIGFJAEDK_JBJLALPHDBE = 1235;
	GHBIGFJAEDK_ABGANONKLEO = 1236;
	GHBIGFJAEDK_OLLHOEKHJHF = 1237;
	GHBIGFJAEDK_KOCOCDFCLID = 1238;
	GHBIGFJAEDK_OGFOBEOFODB = 1239;
	GHBIGFJAEDK_PEDKLCEIHCC = 1300;
	GHBIGFJAEDK_FEPDPLHPDGA = 1301;
	GHBIGFJAEDK_ANPOPGEJFDB = 1302;
	GHBIGFJAEDK_APJCHHDFCEG = 1303;
	GHBIGFJAEDK_PENBMPOLJKF = 1304;
	GHBIGFJAEDK_KOGFHFIOMOL = 1305;
	GHBIGFJAEDK_FPJOMLBAGCK = 1306;
	GHBIGFJAEDK_DIOGOBIALNA = 1400;
	GHBIGFJAEDK_PDNJAEMFOMN = 1401;
	GHBIGFJAEDK_GMMGGOMPIHA = 1402;
	GHBIGFJAEDK_CNNJJGJKABA = 1404;
	GHBIGFJAEDK_LICCEDMJMMO = 1405;
	GHBIGFJAEDK_EOECFGKECLD = 1406;
	GHBIGFJAEDK_DLIFOANCOBF = 1407;
	GHBIGFJAEDK_FKNCOEPCPOK = 1408;
	GHBIGFJAEDK_DEMMNKPNBMD = 1409;
	GHBIGFJAEDK_HEHOLNDANDC = 1410;
	GHBIGFJAEDK_EOOOGNLEGFF = 1411;
	GHBIGFJAEDK_BDKBKLGMOAK = 1412;
	GHBIGFJAEDK_EHBBPIGEGLN = 1413;
	GHBIGFJAEDK_NCKEIBJMLIE = 1414;
	GHBIGFJAEDK_KPLFIANPCPG = 1415;
	GHBIGFJAEDK_BENDIOIBOOJ = 1416;
	GHBIGFJAEDK_EGAIBPCNBAI = 1417;
	GHBIGFJAEDK_EAGKEHCCEKN = 1418;
	GHBIGFJAEDK_EECNLIAIDEO = 1419;
	GHBIGFJAEDK_HFOKOLJMBNI = 1420;
	GHBIGFJAEDK_IHBMKABLJGI = 1421;
	GHBIGFJAEDK_NEMJAEKHKLL = 1422;
	GHBIGFJAEDK_PPIMMKAPCKH = 1423;
	GHBIGFJAEDK_DFNABOFLOBE = 1424;
	GHBIGFJAEDK_OGLCMPLMJID = 1425;
	GHBIGFJAEDK_MLFPCHABEKL = 1426;
	GHBIGFJAEDK_ECJGOILDAHM = 1427;
	GHBIGFJAEDK_ONKIOOBJBHC = 1428;
	GHBIGFJAEDK_DDAOPNIENCG = 1429;
	GHBIGFJAEDK_KJEKDJGGMPK = 1430;
	GHBIGFJAEDK_JCPKKKIBPPL = 1431;
	GHBIGFJAEDK_KGKAFHMJCNA = 1432;
	GHBIGFJAEDK_OLOIPIBMNJO = 1433;
	GHBIGFJAEDK_KOHNDFPLOBO = 1434;
	GHBIGFJAEDK_HNMHPIBGFII = 1435;
	GHBIGFJAEDK_IGBHKGOMPHE = 1450;
	GHBIGFJAEDK_PCEEMLLBMPB = 1451;
	GHBIGFJAEDK_CPLJACIDFLM = 1452;
	GHBIGFJAEDK_CCPLNIJEMJJ = 1453;
	GHBIGFJAEDK_DFHIMMIFEBM = 1454;
	GHBIGFJAEDK_BFLNDLCEPMI = 1456;
	GHBIGFJAEDK_DMGMLPLMNLK = 1457;
	GHBIGFJAEDK_DHCNANGEFEA = 1459;
	GHBIGFJAEDK_EBCNLOBBKAC = 1460;
	GHBIGFJAEDK_HJAACJKNMFL = 1461;
	GHBIGFJAEDK_BOFKLEFOLEJ = 1462;
	GHBIGFJAEDK_JMIBHOHEHOF = 1463;
	GHBIGFJAEDK_ACPGGDOPGFK = 1464;
	GHBIGFJAEDK_JAAIFFFCJEO = 1500;
	GHBIGFJAEDK_GNAMGJGIHIB = 1501;
	GHBIGFJAEDK_DNDBCBNKJHK = 1502;
	GHBIGFJAEDK_LPDOMOJBKIM = 1503;
	GHBIGFJAEDK_FJLMFGONPOA = 1504;
	GHBIGFJAEDK_KIOGHFDJFLA = 1505;
	GHBIGFJAEDK_GBBEFMDPBGB = 1506;
	GHBIGFJAEDK_MOKDALEKGEH = 1507;
	GHBIGFJAEDK_HLPMGFBDLON = 1508;
	GHBIGFJAEDK_ODLHFBGAMEL = 1509;
	GHBIGFJAEDK_OFDGHMAPALJ = 1510;
	GHBIGFJAEDK_JOIFBBAOICP = 1511;
	GHBIGFJAEDK_MMHOGEEHGLB = 1512;
	GHBIGFJAEDK_HKPCGPIODHJ = 1513;
	GHBIGFJAEDK_MEBEBBBJHDC = 1514;
	GHBIGFJAEDK_ABNACOALDDK = 1515;
	GHBIGFJAEDK_JILIFPKLHCF = 1516;
	GHBIGFJAEDK_OMLALBLPKHG = 1517;
	GHBIGFJAEDK_KBOMINAHODN = 1518;
	GHBIGFJAEDK_EHOCFKJKKIF = 1600;
	GHBIGFJAEDK_EFKDOPJJHJF = 1601;
	GHBIGFJAEDK_GCHOPMJHLHH = 1602;
	GHBIGFJAEDK_OEJKLDDBBJE = 1603;
	GHBIGFJAEDK_JPNIFDHKLJD = 1604;
	GHBIGFJAEDK_LHBBACFCCAM = 1605;
	GHBIGFJAEDK_BGJGOILLGMN = 1606;
	GHBIGFJAEDK_IGAIGDEKKIE = 1650;
	GHBIGFJAEDK_AFHCKLNFIAD = 1651;
	GHBIGFJAEDK_BIFAJGNEBMB = 1652;
	GHBIGFJAEDK_OPAHJAMPKPG = 1653;
	GHBIGFJAEDK_DOIMANOMOBI = 1654;
	GHBIGFJAEDK_HLOKLHMJAEI = 1655;
	GHBIGFJAEDK_DDMPDKLMMCB = 1656;
	GHBIGFJAEDK_DPPMFGJDIIC = 1657;
	GHBIGFJAEDK_FPJCCIPLAEH = 1658;
	GHBIGFJAEDK_KMHKLGCHLAB = 1700;
	GHBIGFJAEDK_PNCHOPAGLOB = 1701;
	GHBIGFJAEDK_ENFJOPLMCMB = 1702;
	GHBIGFJAEDK_KLNPJMAKCFJ = 1703;
	GHBIGFJAEDK_KEDIOADGBAB = 1704;
	GHBIGFJAEDK_KABBHHKGNAG = 1705;
	GHBIGFJAEDK_NFHKMJGJALL = 1706;
	GHBIGFJAEDK_FLKDDNALKFJ = 1707;
	GHBIGFJAEDK_JGOBIKDNNBD = 1708;
	GHBIGFJAEDK_DDMGNBOIBJL = 1709;
	GHBIGFJAEDK_EMINBLKABAE = 1710;
	GHBIGFJAEDK_LLPKBOMAHBK = 1711;
	GHBIGFJAEDK_CKGFLGPOOGF = 1712;
	GHBIGFJAEDK_FNGLAJCPIOJ = 1713;
	GHBIGFJAEDK_HMLLEFFOFII = 1714;
	GHBIGFJAEDK_KDDIOGDKFGC = 1751;
	GHBIGFJAEDK_LMBAHDJBFBH = 1752;
	GHBIGFJAEDK_NCDHCMOJFBL = 1753;
	GHBIGFJAEDK_JMLHHGOPMJO = 1754;
	GHBIGFJAEDK_PGKAOJPCBMM = 1755;
	GHBIGFJAEDK_HAMOCMOPFOF = 1756;
	GHBIGFJAEDK_OHNOODBDGNE = 1757;
	GHBIGFJAEDK_BDEJDADOIOL = 1758;
	GHBIGFJAEDK_LJMPFLKHAEA = 1759;
	GHBIGFJAEDK_EECBEIIMFAL = 1760;
	GHBIGFJAEDK_LNEBIHPLABF = 1761;
	GHBIGFJAEDK_ONLIPHDHFKK = 1762;
	GHBIGFJAEDK_GHGPKMOFGBP = 1763;
	GHBIGFJAEDK_HFPMEJIBFKP = 1764;
	GHBIGFJAEDK_NMHGBNIMBFC = 1765;
	GHBIGFJAEDK_IBBNIEAKCMA = 1766;
	GHBIGFJAEDK_NLHNGJBDIFA = 1767;
	GHBIGFJAEDK_CNCLILPAIGG = 1768;
	GHBIGFJAEDK_FEHFGBGCBIH = 1769;
	GHBIGFJAEDK_BFLHJFNMHOL = 1770;
	GHBIGFJAEDK_PMLDGPPGDMC = 1771;
	GHBIGFJAEDK_GPKFGCFPKGF = 1772;
	GHBIGFJAEDK_NFBJPCLMGMJ = 1773;
	GHBIGFJAEDK_EIINNEHMFCB = 1774;
	GHBIGFJAEDK_JPMLDNALAKD = 1800;
	GHBIGFJAEDK_LBAPEIDAPAH = 1801;
	GHBIGFJAEDK_LKNDIPMFHGC = 1802;
	GHBIGFJAEDK_JHHIKJPANDB = 1803;
	GHBIGFJAEDK_EMANLNKOHOI = 1804;
	GHBIGFJAEDK_COGOCJCLDGF = 1805;
	GHBIGFJAEDK_AJAABDAJGLJ = 1806;
	GHBIGFJAEDK_HPFAIACICJN = 1807;
	GHBIGFJAEDK_EEIIJHDOMED = 1808;
	GHBIGFJAEDK_HMDIKOGINEE = 1809;
	GHBIGFJAEDK_EGIBDPKIPMM = 1810;
	GHBIGFJAEDK_EFBNCBCGIGG = 1811;
	GHBIGFJAEDK_PKKGAGDFHJE = 1812;
	GHBIGFJAEDK_KIBOFIDPOHJ = 1813;
	GHBIGFJAEDK_NMGNPKKBMBL = 1814;
	GHBIGFJAEDK_IDOEBDDPAOH = 1815;
	GHBIGFJAEDK_CGNOCEDLEOM = 1900;
	GHBIGFJAEDK_JJAACHFONJF = 1901;
	GHBIGFJAEDK_JEMDCJINKKN = 1902;
	GHBIGFJAEDK_MLINFKCIDAG = 1903;
	GHBIGFJAEDK_HGFGPOKLGDA = 1950;
	GHBIGFJAEDK_FEMHMBBLGMO = 2050;
	GHBIGFJAEDK_JAFNOCLMMEC = 2051;
	GHBIGFJAEDK_ELJMHENPBNA = 2052;
	GHBIGFJAEDK_POKFLDJPIKH = 2053;
	GHBIGFJAEDK_OAKFLJHDIOG = 2054;
	GHBIGFJAEDK_IPGMGDFCCOF = 2055;
	GHBIGFJAEDK_AECALKIJGFC = 2056;
	GHBIGFJAEDK_FNPMKPNLHAC = 2057;
	GHBIGFJAEDK_MNGNBHOOKJC = 2058;
	GHBIGFJAEDK_BCNBOCKOHFM = 2059;
	GHBIGFJAEDK_BAGONGOLMPA = 2060;
	GHBIGFJAEDK_HAPLMIBMIHJ = 2061;
	GHBIGFJAEDK_AAFLCALOHFG = 2062;
	GHBIGFJAEDK_AEMAKPIJJEO = 2063;
	GHBIGFJAEDK_GPAFPMLJMHI = 2064;
	GHBIGFJAEDK_KIHKDIEILGP = 2065;
	GHBIGFJAEDK_KICPIKINECG = 2066;
	GHBIGFJAEDK_MGANLEHOKCI = 2067;
	GHBIGFJAEDK_GDFJLGPGEIM = 2070;
	GHBIGFJAEDK_BOFAJOMKHGD = 2100;
	GHBIGFJAEDK_HJNOELHBLCD = 2150;
	GHBIGFJAEDK_JAIDMGMFMFJ = 2151;
	GHBIGFJAEDK_OMFFLGIGEDO = 2152;
	GHBIGFJAEDK_OCDIGPDCAGL = 2153;
	GHBIGFJAEDK_IIPLCHCMAML = 2154;
	GHBIGFJAEDK_LMAMLHHAJAK = 2155;
	GHBIGFJAEDK_PLAEHLELCKF = 2156;
	GHBIGFJAEDK_HJAGJNODBAO = 2157;
	GHBIGFJAEDK_OOKCLLKEPFF = 2158;
	GHBIGFJAEDK_DCFDIOCFNOL = 2159;
	GHBIGFJAEDK_NDKNPJKJFIA = 2160;
	GHBIGFJAEDK_LJPFGKNEBBA = 2201;
	GHBIGFJAEDK_HINKJPKOKDF = 2202;
	GHBIGFJAEDK_PMMHPGMEGFG = 2203;
	GHBIGFJAEDK_AOEBAHLGDMP = 2204;
	GHBIGFJAEDK_AIKJPMFJKDB = 2205;
	GHBIGFJAEDK_FMAGLGLBKPF = 2206;
	GHBIGFJAEDK_DAHOBCJLHBE = 2250;
	GHBIGFJAEDK_NLPBAOAEILF = 2251;
	GHBIGFJAEDK_FDBGADIIAII = 2252;
	GHBIGFJAEDK_JLAKMKMKKGB = 2253;
	GHBIGFJAEDK_GNFIMPBFHFO = 2300;
	GHBIGFJAEDK_PCPFDACHFHI = 2301;
	GHBIGFJAEDK_FMHPIPDBAOM = 2302;
	GHBIGFJAEDK_GAMGFLCFMFD = 2303;
	GHBIGFJAEDK_OBEIMCKFMLK = 2304;
	GHBIGFJAEDK_PPAMHGBLJAO = 2305;
	GHBIGFJAEDK_KJDGHHEGILF = 2306;
	GHBIGFJAEDK_JAFPHPOJKPO = 2307;
	GHBIGFJAEDK_CAPEPDHGOML = 2308;
	GHBIGFJAEDK_HFOBCGFBGAM = 2309;
	GHBIGFJAEDK_CNLPIADKMNM = 2400;
	GHBIGFJAEDK_GNOOOGMHPPM = 2401;
	GHBIGFJAEDK_NIEKMALEGBF = 2402;
	GHBIGFJAEDK_GLACEFHMKEB = 2403;
	GHBIGFJAEDK_KPBEBBMDEJI = 2404;
	GHBIGFJAEDK_BNLPMPCGPJC = 2450;
	GHBIGFJAEDK_LPKNEEDMBDC = 2500;
	GHBIGFJAEDK_LONKKENFMAH = 2501;
	GHBIGFJAEDK_HJGCNOCBMKL = 2502;
	GHBIGFJAEDK_CGDPGCHBKON = 2503;
	GHBIGFJAEDK_CCMEGGEEPGG = 2504;
	GHBIGFJAEDK_PCMBNHGCIJK = 2505;
	GHBIGFJAEDK_PDOFOCEDGMO = 2506;
	GHBIGFJAEDK_MDDLHOECMAI = 2507;
	GHBIGFJAEDK_BAEEBFGGFPL = 2508;
	GHBIGFJAEDK_NHBFPNHDEPL = 2509;
	GHBIGFJAEDK_IGJGDDLELDG = 2510;
	GHBIGFJAEDK_NMJHNIPNEEP = 2511;
	GHBIGFJAEDK_BNNIFLPLINB = 2512;
	GHBIGFJAEDK_ELCALAHGNGF = 2513;
	GHBIGFJAEDK_KANJIAKHEKJ = 2514;
	GHBIGFJAEDK_FCPGEPOLIIN = 2515;
	GHBIGFJAEDK_BHNJDFCBPMM = 2516;
	GHBIGFJAEDK_KBDBOJBBCHK = 2517;
	GHBIGFJAEDK_HMCFBGKMMPJ = 2518;
	GHBIGFJAEDK_GFOJEJONJIA = 2519;
	GHBIGFJAEDK_CFOKPHLKIKE = 2520;
	GHBIGFJAEDK_OKEEIBKPFHD = 2521;
	GHBIGFJAEDK_NIHJCDJONKG = 2522;
	GHBIGFJAEDK_OHKDALCPFOK = 2523;
	GHBIGFJAEDK_IDNODEILBPN = 2524;
	GHBIGFJAEDK_HDBOCFMAEMH = 2525;
	GHBIGFJAEDK_IAPAPMHIGBI = 2526;
	GHBIGFJAEDK_NEDICLKOOIA = 2527;
	GHBIGFJAEDK_HMHFJCPOMGC = 2528;
	GHBIGFJAEDK_IFDABBADAMD = 2529;
	GHBIGFJAEDK_NHMPJMLCKMH = 2530;
	GHBIGFJAEDK_IAEMHADCCFM = 2531;
	GHBIGFJAEDK_OMFEGNBKEKN = 2532;
	GHBIGFJAEDK_OOGHLDPNGNC = 2533;
	GHBIGFJAEDK_PMJIODPDFCA = 2534;
	GHBIGFJAEDK_IJOKEMGJKHI = 2535;
	GHBIGFJAEDK_MDDGIBIFNNP = 2536;
	GHBIGFJAEDK_DCDOMMBBPNO = 2537;
	GHBIGFJAEDK_HHNCODBNCIK = 2538;
	GHBIGFJAEDK_CKDDBEDELNJ = 2550;
	GHBIGFJAEDK_APDFDMALKNA = 2551;
	GHBIGFJAEDK_DGGFFPCMJNH = 2552;
	GHBIGFJAEDK_HBFHMMJLDGE = 2553;
	GHBIGFJAEDK_CKNHPLDLAAK = 2554;
	GHBIGFJAEDK_HDLDPNOCDGF = 2555;
	GHBIGFJAEDK_GJHKMKGFAEN = 2556;
	GHBIGFJAEDK_PIBEICCGLEL = 2600;
	GHBIGFJAEDK_HKFAIKJCLCF = 2601;
	GHBIGFJAEDK_MGGADHMLGBH = 2602;
	GHBIGFJAEDK_GCKHNBBOJML = 2603;
	GHBIGFJAEDK_DOCMIDPPHKB = 2604;
	GHBIGFJAEDK_PODCPAGDLHP = 2605;
	GHBIGFJAEDK_FLHEPGEDOKL = 2606;
	GHBIGFJAEDK_COJCIEAKOBA = 2620;
	GHBIGFJAEDK_PBEACAEMAJH = 2621;
	GHBIGFJAEDK_LIPBFJPPKLJ = 2622;
	GHBIGFJAEDK_BPPCILIMIMC = 2623;
	GHBIGFJAEDK_JFLCDNCBBEN = 2624;
	GHBIGFJAEDK_HIFDCELLPOH = 2625;
	GHBIGFJAEDK_PCNEJNOFMGK = 2626;
	GHBIGFJAEDK_LOOJHFOHPKI = 2627;
	GHBIGFJAEDK_ILCEEMBGOGG = 2628;
	GHBIGFJAEDK_KCFEDMGCNKM = 2629;
	GHBIGFJAEDK_MIGALMJFOFB = 2630;
	GHBIGFJAEDK_LCMINONPEJP = 2631;
	GHBIGFJAEDK_JMDMOOBMLBA = 2632;
	GHBIGFJAEDK_FEEABHJCFIB = 2633;
	GHBIGFJAEDK_OCCNKEDPNHG = 2634;
	GHBIGFJAEDK_KDJEONKENOI = 2635;
	GHBIGFJAEDK_BHMMMMLAIAL = 2636;
	GHBIGFJAEDK_DOHKBPDIBFP = 2650;
	GHBIGFJAEDK_BKGIHMDFNOG = 2651;
	GHBIGFJAEDK_GNDGOHCEOIC = 2652;
	GHBIGFJAEDK_GGCEDMEPHHF = 2653;
	GHBIGFJAEDK_GMODKDNNIEF = 2654;
	GHBIGFJAEDK_GBIJHCAHALN = 2655;
	GHBIGFJAEDK_AFMFGNLDAIH = 2656;
	GHBIGFJAEDK_POLMBAGEGJA = 2657;
	GHBIGFJAEDK_HDHFCAGLOKD = 2658;
	GHBIGFJAEDK_LGFCKJPLENN = 2659;
	GHBIGFJAEDK_MKNFMEJNDOL = 2660;
	GHBIGFJAEDK_JLMEPIMIGOD = 2710;
	GHBIGFJAEDK_KEMFKDKMIFD = 2711;
	GHBIGFJAEDK_BJHOFMGNHCP = 2712;
	GHBIGFJAEDK_ANIDKNMPFFN = 2713;
	GHBIGFJAEDK_DNNHMDBPJJD = 2800;
	GHBIGFJAEDK_AFIMILHKCJJ = 2801;
	GHBIGFJAEDK_HGIGPIPHNIM = 2802;
	GHBIGFJAEDK_AGCIKGBOJIG = 2803;
	GHBIGFJAEDK_EDDPMLNCOBA = 2804;
	GHBIGFJAEDK_IKHDDCOICJP = 2805;
	GHBIGFJAEDK_ODLGCJILBPF = 2830;
	GHBIGFJAEDK_GPHPOLEBMPM = 2831;
	GHBIGFJAEDK_LADNGIEIJCC = 2850;
	GHBIGFJAEDK_FOCBJGKCKGA = 2851;
	GHBIGFJAEDK_BBLGHPMAMLE = 2852;
	GHBIGFJAEDK_HLBKJILNMAH = 2853;
	GHBIGFJAEDK_PCAEGBLFNBP = 2854;
	GHBIGFJAEDK_GKELPIOOIDE = 2870;
	GHBIGFJAEDK_JIAILAFELFI = 2871;
	GHBIGFJAEDK_PBEPHKKKCKO = 2872;
	GHBIGFJAEDK_PHPJAODPBLA = 2873;
	GHBIGFJAEDK_FCOPHKONNCJ = 2874;
	GHBIGFJAEDK_EIDHPPCGFND = 2875;
	GHBIGFJAEDK_CHHDELDPPBN = 2876;
	GHBIGFJAEDK_DAFIEMOBBOH = 2877;
	GHBIGFJAEDK_LNGACGKIOLL = 2890;
	GHBIGFJAEDK_IAOPOKOAHAM = 2891;
	GHBIGFJAEDK_KKCEMCEMOFH = 2892;
	GHBIGFJAEDK_KAABDFFKNMH = 2893;
	GHBIGFJAEDK_HIGLBANNHDA = 3000;
	GHBIGFJAEDK_CGMFMECHLOE = 3001;
	GHBIGFJAEDK_BHKEAHEBKKH = 3002;
	GHBIGFJAEDK_CHFGHHEPMEM = 3003;
	GHBIGFJAEDK_DPOHIACNCCE = 3004;
	GHBIGFJAEDK_FPMBPOPNICL = 3005;
	GHBIGFJAEDK_BKKIELLILPP = 3006;
	GHBIGFJAEDK_PGDALCIJMJG = 3010;
	GHBIGFJAEDK_NAFLMCEEFFI = 3011;
	GHBIGFJAEDK_EOGOHIMEAMC = 3100;
	GHBIGFJAEDK_MINBBEKCLHD = 3101;
	GHBIGFJAEDK_HHNDGPDDEME = 3102;
	GHBIGFJAEDK_GDPHMENNKOI = 3103;
	GHBIGFJAEDK_KNPAJPAMPCM = 3104;
	GHBIGFJAEDK_HJMGOBIKLFH = 3105;
	GHBIGFJAEDK_EECKAOPLMEH = 3106;
	GHBIGFJAEDK_FFJPKJOPPGE = 3107;
	GHBIGFJAEDK_KJKHCODJEHN = 3108;
	GHBIGFJAEDK_CCPAMOAMBMO = 3109;
	GHBIGFJAEDK_NKGBKACMPMI = 3110;
	GHBIGFJAEDK_NOAAAPEKEMF = 3111;
	GHBIGFJAEDK_NNENJGHNBAA = 3112;
	GHBIGFJAEDK_CJACJJJLMMH = 3151;
	GHBIGFJAEDK_NPGMCBFILKI = 3152;
	GHBIGFJAEDK_OKHIMNHJJNG = 3153;
	GHBIGFJAEDK_GIGPNLIOHGG = 3154;
	GHBIGFJAEDK_CMFJDKFBAGE = 3155;
	GHBIGFJAEDK_LJHNDNNEMGF = 3156;
	GHBIGFJAEDK_JBJNLAGLNGN = 3157;
	GHBIGFJAEDK_LIGPFLDAFCK = 3158;
	GHBIGFJAEDK_HCGKDFFMMEP = 3159;
}

// CmdId: 642
message CBCNONJAKOO {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 9145
}

// CmdId: 9374
message HEHNEMLEHEH {
	repeated uint32 PMCODLBJDAD = 13; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 2; // offset: 40, xor const: 3934
	repeated HHKCHEDCIOA OOHNLIHGLGO = 9; // offset: 32, xor const: 0
}

message CMGGHJAGDGB {
}

message NMFOCGHDMCM {
	repeated IFAHCPEMGAG GCPEDDINJEN = 1; // offset: 16, xor const: 0
	uint32 PKPOEKNLJKC = 2; // offset: 48, xor const: 7314
	repeated JFAKNDOAOFB OKMCJGCLNNH = 10; // offset: 24, xor const: 0
	string MPHLIEKKFIK = 6; // offset: 40, xor const: 0
}

// CmdId: 47
message OPJBODPKMPB {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 6802
}

message NAMMPCCDKLJ {
	repeated CJNGLBKBNEI MDPFIPHMJDH = 1; // offset: 16, xor const: 0
}

message LOPNINEKJEL {
	int32 IHIGNMLCHDK = 8; // offset: 28, xor const: 4249
	bool PPKOKAKLAIN = 15; // offset: 24, xor const: 0
}

// CmdId: 5455
message KPIMNDGBMLO {
	repeated uint32 KAGDHNPCHKJ = 9; // offset: 16, xor const: 0
	bool INMCIEMCEMN = 11; // offset: 32, xor const: 0
}

// CmdId: 1852
message LBBINODMDFP {
	uint32 PKPOEKNLJKC = 13; // offset: 32, xor const: 5298
	string JGNFLOHJKJO = 8; // offset: 24, xor const: 0
}

enum AOMEAKAOEGJ {
	AOMEAKAOEGJ_IMFILHCHNFD = 0;
	AOMEAKAOEGJ_CNFIIMNNPAM = 1;
	AOMEAKAOEGJ_IOLICKBGOHK = 2;
	AOMEAKAOEGJ_NGIEMEIOEBB = 3;
}

enum JCBCCLBNICP {
	JCBCCLBNICP_ODOENMJDHBK = 0;
}

// CmdId: 7639
message IEBHINMKKOC {
	int32 IHIGNMLCHDK = 8; // offset: 28, xor const: 102
	uint32 DCENCIPOBMC = 1; // offset: 24, xor const: 1147
}

// CmdId: 1983
message JCLNEJLGLEG {
	int32 IHIGNMLCHDK = 1; // offset: 36, xor const: 11323
	bool IHDPNGEABHC = 8; // offset: 32, xor const: 0
	repeated EBDAIGALHDI DGELDLHJHAA = 10; // offset: 16, xor const: 0
}

enum PMCLDCNCOBE {
	PMCLDCNCOBE_DEFJOCAIOMB = 0;
}

// CmdId: 5388
message GPIDAFDDHAM {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 6963
}

message CPLLFNHFGKE {
	double HEJNMINGDKJ = 1; // offset: 24, xor const: 0
}

// CmdId: 6858
message AMEOCFGDIMB {
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 5287
	NGNBCANNGDG CPEPJEPHPBD = 10; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 13; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 8; // offset: 48, xor const: 6107
	uint64 HEJBMNAOJFL = 7; // offset: 40, xor const: 3269
}

enum OMBENEAHIEL {
	OMBENEAHIEL_CONVEYER_BELT = 0;
	OMBENEAHIEL_SPRING = 1;
	OMBENEAHIEL_PUSH_BACK_ONCE = 2;
	OMBENEAHIEL_PUSH_AS_PLAYER = 3;
	OMBENEAHIEL_PUSH_DISTANCE = 4;
}

// CmdId: 2158
message KOGHJIFMCKC {
	uint32 DCENCIPOBMC = 10; // offset: 24, xor const: 3022
}

message GAABPGHONLF {
	KNBCIDMLOLA BANHBADOGII = 15; // offset: 24, xor const: 0
	AFBNMBNIGKJ KLJOOJPKDLD = 4; // offset: 40, xor const: 0
	string JJOBDEFMGEA = 1; // offset: 32, xor const: 0
	uint32 IIIGDHJPFMI = 2; // offset: 48, xor const: 15923
}

message LNIABBOEMGH {
	bool CDDKAHDKEJI = 9; // offset: 28, xor const: 0
	bool MFIEHMGDJHG = 8; // offset: 29, xor const: 0
	AimRectColor COFDNNBBPJB = 3; // offset: 24, xor const: 0
	bool NCOJIMHFBGD = 10; // offset: 30, xor const: 0
}

message ANKALOFAOHP {
	float FGACGIPOCHB = 7; // offset: 32, xor const: 0
	uint32 BOLIIHOGEFE = 3; // offset: 24, xor const: 3016
	int32 MFDADPKFGNK = 6; // offset: 28, xor const: 6907
}

message DDNJFBPLHBO {
	int32 LBPJDIJCPGF = 2; // offset: 36, xor const: 14043
	JLNLHBOGFII FDHBLNEIBDA = 3; // offset: 16, xor const: 0
	int32 HPDOFKBNAMD = 9; // offset: 32, xor const: 14780
}

message OJDNKGDPOED {
	float JDEGKCBFODP = 3; // offset: 32, xor const: 0
	uint32 IHDMDLLGOAO = 12; // offset: 52, xor const: 14553
	float HPNJKCELCKH = 8; // offset: 40, xor const: 0
	uint32 IIBJLBAOAGI = 1; // offset: 44, xor const: 8555
	uint32 NPCCHOEPCDA = 14; // offset: 48, xor const: 2382
	uint64 LAOBNJKIFOG = 5; // offset: 64, xor const: 1435
	int32 PBOAMDEBIGO = 7; // offset: 24, xor const: 15382
	float KLMGICINNCG = 10; // offset: 60, xor const: 0
	uint32 NNHPPJJAEHL = 6; // offset: 36, xor const: 2665
	float JKBBDLEGLLI = 11; // offset: 28, xor const: 0
	int32 IHLKNLJCIIA = 4; // offset: 56, xor const: 12933
}

enum NIPDMBLIGNI {
	NIPDMBLIGNI_NIIFOBHHCGE = 0;
	NIPDMBLIGNI_FGOJDPLDNNN = 1;
	NIPDMBLIGNI_NNMKCFIKBCB = 3;
	NIPDMBLIGNI_AJLFBECLGGE = 4;
	NIPDMBLIGNI_MHICOBLAFIB = 5;
	NIPDMBLIGNI_ICBCCMONGGB = 6;
	NIPDMBLIGNI_NPBDIKGIECO = 100;
}

// CmdId: 7516
message KFIGFNJAPOD {
	uint32 HJPLMHJIJPM = 7; // offset: 28, xor const: 6805
	uint32 PEDKNCIMHLA = 15; // offset: 24, xor const: 8929
}

message CJBDBCGGPAD {
	repeated uint32 JKHCMCDKJEG = 1; // offset: 16, xor const: 0
}

// CmdId: 3957
message DFILNHPEBMK {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 69
}

enum EAFOGJBAFBB {
	EAFOGJBAFBB_CMMJIENKNIM = 0;
	EAFOGJBAFBB_CAIIKOHHCEL = 1;
	EAFOGJBAFBB_PJMOCDLONAL = 2;
	EAFOGJBAFBB_AKBJPIGMPAJ = 3;
	EAFOGJBAFBB_OPEJBLFDCJK = 4;
	EAFOGJBAFBB_MKJCHNKCJMH = 5;
	EAFOGJBAFBB_IJGNOPMHAEH = 6;
}

message LNPCPPEDJNA {
}

message CFDOAKNPIAN {
	uint32 GFCLKDAOMBM = 12; // offset: 60, xor const: 0
	uint32 DKOFPDJDHGK = 9; // offset: 52, xor const: 0
	uint32 KJBJAIPODCO = 7; // offset: 68, xor const: 0
	uint32 BPIDLBJCKJL = 4; // offset: 64, xor const: 0
	uint32 OHCIOPAIBKK = 1; // offset: 76, xor const: 0
	uint32 MHMOMMMIJHJ = 5; // offset: 56, xor const: 0
	bool POBEMFBCPII = 2; // offset: 48, xor const: 0
	int64 DDAGKDOCEKG = 10; // offset: 32, xor const: 0
	uint32 HKMIKAEFOBA = 11; // offset: 72, xor const: 0
	uint32 MFHKNKFAAJC = 8; // offset: 44, xor const: 0
	uint32 GEBFAPEAGPC = 6; // offset: 40, xor const: 0
	repeated DENMEOPFNHB HNGKLNGNHGL = 3; // offset: 24, xor const: 0
}

// CmdId: 9981
message EJJNLADKAPI {
	repeated uint32 IKKCICIHKIH = 4; // offset: 24, xor const: 0
}

message BBNKIKCFKBF {
	JFDMCBJEIJM CKBOJACIJDI = 1; // offset: 16, xor const: 0
}

message EHMMJEDIAJJ {
	repeated IMJOMAPGGCB AFCENAAEMKP = 2; // offset: 32, xor const: 0
	map<uint32, uint32> PMFHKDNNKCE = 1; // offset: 24, xor const: 0
}

message JCIOAGFIFFN {
	bool MDMJNBOPKKJ = 2; // offset: 25, xor const: 0
	bool FGAIDEMCICN = 1; // offset: 24, xor const: 0
}

// CmdId: 8554
message PFJNEFBHEBG {
	JLBGLKNLFMD EGCCBCMDFLB = 9; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 208
}

// CmdId: 2377
message MCPMNAPOOCG {
	string KCOGEDGDCJH = 11; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 5; // offset: 32, xor const: 335
}

message EHPKKAMPBPB {
	repeated uint32 FLDPMBKFEKL = 4; // offset: 16, xor const: 0
	uint32 LPEEBCHKAMC = 2; // offset: 40, xor const: 0
	repeated HGIPJOCNKDF APKKBCHHMGA = 3; // offset: 32, xor const: 0
	uint32 ILMAGALDELK = 1; // offset: 44, xor const: 0
}

message NHKOIPBOBFB {
	uint32 IIIGDHJPFMI = 1; // offset: 24, xor const: 0
	int64 GKIJIMOLCGJ = 2; // offset: 32, xor const: 0
}

enum PACANDIPNOH {
	PACANDIPNOH_DKJAAHBPELE = 0;
}

// CmdId: 6007
message MFEPMFDHMPM {
	PEHPAGPDPBN CPEPJEPHPBD = 4; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 40, xor const: 1090
	uint64 HEJBMNAOJFL = 7; // offset: 48, xor const: 14052
	uint64 AEDAEPKDOAL = 8; // offset: 56, xor const: 990
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 16, xor const: 0
}

// CmdId: 5865
message GJOGBHCEGCE {
	repeated uint32 LKHKNEBPOJL = 11; // offset: 16, xor const: 0
	repeated uint32 KGOAOBBLHND = 3; // offset: 32, xor const: 0
}

enum FCJLAIMECDE {
	FCJLAIMECDE_BENNOGDHHMG = 0;
	FCJLAIMECDE_EHPDGICJLNB = 1;
	FCJLAIMECDE_AALNILNPJBP = 2;
	FCJLAIMECDE_NKAFEPEAAHM = 3;
	FCJLAIMECDE_HLBKCLJCLMC = 4;
	FCJLAIMECDE_DFLKHEAMACE = 5;
	FCJLAIMECDE_FILCILIHDEL = 6;
	FCJLAIMECDE_IAILFGGMLBF = 7;
	FCJLAIMECDE_IIFKILFCBJC = 8;
	FCJLAIMECDE_KBJJPOAAOFM = 9;
	FCJLAIMECDE_MMNPFLFCEOF = 10;
}

message DBGOCNLBCND {
	string OIDDOJOCCJH = 3; // offset: 40, xor const: 0
	string OOODKIGJBCN = 2; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 48, xor const: 0
	string HGBGHHPHBMN = 4; // offset: 24, xor const: 0
}

enum OCLAJEEICBL {
	OCLAJEEICBL_JGCFMLFDDPL = 0;
	OCLAJEEICBL_JOHLHJDKAHA = 1;
	OCLAJEEICBL_CPCIJPKAPPJ = 2;
	OCLAJEEICBL_ICDKPFMDPAF = 3;
}

message MLBKPHMICHO {
	FGKJFCJILIL HJLLKNGJKLP = 3; // offset: 40, xor const: 0
	FGKJFCJILIL MHINMINPONI = 1; // offset: 32, xor const: 0
	FGKJFCJILIL BIELNPIAMPA = 2; // offset: 24, xor const: 0
}

message HHJKHAAGIIA {
	JLNLHBOGFII ACEMBJPDCDK = 6; // offset: 24, xor const: 0
	float MCGEJEKOFEL = 8; // offset: 36, xor const: 0
	uint32 NCAGHHFDAOG = 14; // offset: 32, xor const: 5796
}

// CmdId: 2439
message GHIDPAIMJEA {
	uint32 BCCEOLDLIFA = 3; // offset: 28, xor const: 12415
	uint32 BHDLCHFDHNO = 7; // offset: 24, xor const: 7221
}

message FBIILIAINEC {
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 32, xor const: 0
}

enum PDDEDMKMMCO {
	PDDEDMKMMCO_MCOKHPHHIKC = 0;
}

// CmdId: 4811
message AHPJLJFPJCC {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 14174
}

message DHIHMOIIJBH {
	int32 MOMGDEFPOGM = 1; // offset: 40, xor const: 0
	repeated string IDNOKFABNGF = 3; // offset: 16, xor const: 0
	string OKJHCFCICNH = 2; // offset: 32, xor const: 0
}

// CmdId: 9635
message NEHAGFCJGHA {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 674
}

// CmdId: 6689
message AACAGPAHMNJ {
	IMJIJLIDHEC JAONPEPJKIB = 4; // offset: 24, xor const: 0
	repeated IMJIJLIDHEC LFLEABJHGPN = 7; // offset: 16, xor const: 0
}

message KFIDJIFIEDM {
	DHMKIHPCENA LDJADGOOKIJ = 1; // offset: 24, xor const: 0
}

message LLFEAKIELEA {
}

// CmdId: 2343
message CBACMCCPIGO {
}

// CmdId: 9087
message CIDKFHMMEBG {
	uint32 AMIJIAHGPMC = 8; // offset: 28, xor const: 14471
	uint32 CPEGJHGIFAA = 11; // offset: 24, xor const: 14198
}

// CmdId: 8896
message ONPAIHADCCG {
}

enum ALMGEINPFAK {
	ALMGEINPFAK_DMIBLBGPLCF = 0;
}

enum OKAFGOPLIKO {
	OKAFGOPLIKO_JEDBJJHBJIA = 0;
	OKAFGOPLIKO_HJPMDBIHBCK = 1;
	OKAFGOPLIKO_ELEJICJNCMO = 2;
	OKAFGOPLIKO_OLLEGJBAJNF = 3;
	OKAFGOPLIKO_HICOPCKIBFF = 4;
}

// CmdId: 9445
message BCHGLAAENCN {
	int32 IHIGNMLCHDK = 9; // offset: 64, xor const: 7949
	HOBPOLNDKHJ GPCPGDMCPAN = 11; // offset: 40, xor const: 0
	DADOCBMJAJB DJCEMMNBFMD = 12; // offset: 24, xor const: 0
	bool GBKNCJDLDJB = 15; // offset: 56, xor const: 0
	NBHOFFAMADO IDDJDIIGLPI = 14; // offset: 48, xor const: 0
	EMGFDDKHMML HICCDLBAHNJ = 7; // offset: 60, xor const: 0
	repeated BBDJGDCHMBM CJDNELEHDBJ = 3; // offset: 16, xor const: 0
}

// CmdId: 6360
message NGNHEGFCBIA {
	int32 LANJNPHPJEH = 2; // offset: 24, xor const: 3506
}

message GMNCGOIOINI {
	repeated uint32 MFCDIEAHPJM = 1; // offset: 16, xor const: 0
	bool IEJMHDDPBBK = 2; // offset: 32, xor const: 0
}

// CmdId: 4078
message HFDLLOJPMKJ {
	ECEKFPPBBAG BKIHIFEJFDD = 5; // offset: 24, xor const: 0
	uint32 ELLAHKKNHAM = 7; // offset: 28, xor const: 12326
}

message CELAIEIDEHE {
	int32 ENEGAHHFOPK = 1; // offset: 24, xor const: 1545
}

enum EDMCJDKBAKN {
	EDMCJDKBAKN_REPAIR_ZONE_STATE_NONE = 0;
	EDMCJDKBAKN_REPAIR_ZONE_STATE_FAIL = 1;
	EDMCJDKBAKN_REPAIR_ZONE_STATE_SUCC = 2;
}

message KMPHOLNJPKD {
	uint32 LJEHCDLJOIG = 1; // offset: 24, xor const: 0
}

message LEHNBFLBCPP {
}

message PFEJIKGEJCD {
	bool LKEENIDDLCK = 2; // offset: 28, xor const: 0
	float MDDJMCEJKIF = 1; // offset: 24, xor const: 0
}

message FFHLEGBFEKP {
	BGEBIEPLIIN NFFJFJBHDAF = 10; // offset: 32, xor const: 0
	repeated uint32 IGCJBDEBAAN = 13; // offset: 24, xor const: 0
}

message CENOIIMIIAO {
	FNDECKNKCIJ JFNEOPABJEF = 4; // offset: 40, xor const: 0
	IMJIJLIDHEC AGPECBDDLAG = 3; // offset: 24, xor const: 0
	IMJIJLIDHEC KHLGJGDJFFE = 2; // offset: 32, xor const: 0
	uint32 EFNFANEIJMH = 1; // offset: 44, xor const: 0
}

message DIJFLEBCALM {
	FGKJFCJILIL IKDJDPPLNOM = 1; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 40, xor const: 0
	FGKJFCJILIL HDHLPEKLFEF = 2; // offset: 32, xor const: 0
}

message PJGEGBANGLP {
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 24, xor const: 0
}

message IHPCOCKMJNE {
	FGKJFCJILIL MBKJBDEPPAC = 2; // offset: 16, xor const: 0
	bool POAAOHFPFFE = 3; // offset: 40, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 1; // offset: 32, xor const: 0
}

message KKCGCNMCBPO {
	uint32 EOPMGCMAMOO = 2; // offset: 40, xor const: 11124
	FNKFCDDANDD KAKNJMNEOCC = 4; // offset: 16, xor const: 0
	repeated int32 JFLHGCMECFI = 13; // offset: 24, xor const: 0
	int64 ECEMDOFKHLD = 3; // offset: 48, xor const: 3569
	uint32 ADIBCHEIABH = 6; // offset: 44, xor const: 15710
}

// CmdId: 6078
message ADAGDNIAJAG {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 6177
}

message CCHCCMLDFIH {
	EFPGDJLALKL EOKGJGCHAHM = 1; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 3074
}

// CmdId: 7897
message KADBOPNGBEE {
	repeated uint32 GFBFEKAJDIG = 15; // offset: 16, xor const: 0
}

// CmdId: 6280
message KKAGLGJPLDN {
	uint32 AONABNEFNBM = 5; // offset: 32, xor const: 6532
	bytes CPEPJEPHPBD = 2; // offset: 24, xor const: 0
	uint32 FJEHFFEPENP = 8; // offset: 40, xor const: 907
	uint32 NBCKDCGDMOG = 3; // offset: 36, xor const: 2157
	bool BKJJMPJOMBA = 7; // offset: 44, xor const: 0
	int32 BBLCHBANJID = 6; // offset: 48, xor const: 9745
}

enum AFHBOMCNHNN {
	AFHBOMCNHNN_NFJFFNDBAJK = 0;
	AFHBOMCNHNN_INOGEPBBPHE = 1;
	AFHBOMCNHNN_CPBDCCIBIIP = 2;
}

// CmdId: 9988
message BFKCFHMPLOD {
	bool IHDPNGEABHC = 13; // offset: 32, xor const: 0
	EBDAIGALHDI DBOACCIJPDL = 14; // offset: 16, xor const: 0
}

// CmdId: 7122
message DBJNOHBAPFN {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 4309
}

message HJMIDKEAANF {
	repeated NPJCILPDNBL KCFLLNAJEOE = 1; // offset: 24, xor const: 0
}

message AIAGAAPGIDD {
}

enum AINFJIGAOPD {
	AINFJIGAOPD_BOCKDOMJCGD = 0;
}

message LELJMLNFICH {
	uint32 EKILNIOJFIP = 2; // offset: 32, xor const: 7297
	bytes FHCFMPCNFAO = 8; // offset: 24, xor const: 0
}

message JCNHADGFACI {
	GBIGEEBNAAD PBOAMDEBIGO = 3; // offset: 32, xor const: 0
	FGKJFCJILIL MCGHAFLMODP = 1; // offset: 24, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 36, xor const: 0
}

message BBKFIMOJLAE {
	repeated PFBPNKHIFLP JFPMHJGJDNL = 12; // offset: 16, xor const: 0
}

message FMLADAJDHHM {
	HIKBCFGFFCI CCDBLBPCJOO = 1; // offset: 24, xor const: 0
}

// CmdId: 4674
message DGIHCKCNJHI {
	int32 IHIGNMLCHDK = 14; // offset: 32, xor const: 6812
	OADIJJFOGJP IFIINCJGJGH = 2; // offset: 16, xor const: 0
}

message ILPLLFDFCGM {
	uint32 NCAGHHFDAOG = 8; // offset: 24, xor const: 4210
	uint32 NIJLEDIPBGF = 11; // offset: 32, xor const: 3843
	int32 ACGMMMKLAJF = 2; // offset: 28, xor const: 2812
}

// CmdId: 1523
message HKMPHANDPHH {
	int32 IHIGNMLCHDK = 5; // offset: 32, xor const: 4341
	repeated NFIKEHAEAAN IOAPILMECLB = 1; // offset: 16, xor const: 0
}

// CmdId: 8267
message PAFLNIDHOGK {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 2380
}

// CmdId: 2831
message GNDKBFJJPML {
}

message BCCBPCGCEBA {
	FGKJFCJILIL BFCHHPKMIOM = 2; // offset: 32, xor const: 0
	FGKJFCJILIL ALMNNGFCOOP = 1; // offset: 24, xor const: 0
}

// CmdId: 8928
message LNIKBGBMOFH {
	uint32 PEDKNCIMHLA = 6; // offset: 28, xor const: 1191
	uint32 KBKLJLLBLCD = 13; // offset: 24, xor const: 10923
}

// CmdId: 1016
message HFLPMEMIEPG {
	uint32 GFCLKDAOMBM = 3; // offset: 28, xor const: 7013
	uint32 LGNMJDDJCDC = 4; // offset: 24, xor const: 15563
}

// CmdId: 4519
message LFAILLDELDL {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 11792
}

// CmdId: 3883
message PFECHBKFEEC {
	uint32 JBHFPIFLGEC = 7; // offset: 24, xor const: 1357
}

// CmdId: 176
message PJHGCJENPBJ {
	uint32 IHIEIMELEEH = 9; // offset: 40, xor const: 13140
	JAMIPMDCAJB APKAEIEAILJ = 10; // offset: 16, xor const: 0
	JAMIPMDCAJB FOFPPMPMBAN = 2; // offset: 32, xor const: 0
}

message CAPOIBEMGBG {
	uint32 NMHNBHDEKBP = 1; // offset: 24, xor const: 0
}

// CmdId: 8249
message CHJKHHPOLMD {
	repeated NJCMGBIHAOD NFCMEMJCNNJ = 14; // offset: 32, xor const: 0
	uint32 CCBJBOLJJDN = 1; // offset: 44, xor const: 12421
	int32 IHIGNMLCHDK = 3; // offset: 40, xor const: 2256
	repeated NJCMGBIHAOD KFHPNLIBBCL = 5; // offset: 16, xor const: 0
}

// CmdId: 8211
message GHDKKCMACOA {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 15937
	HBDCMALHDBF CHLDGHLJAPK = 6; // offset: 16, xor const: 0
}

message EBDAIGALHDI {
	uint32 OPFEAMDPIAG = 2; // offset: 24, xor const: 14136
}

enum KLGHCMBNDGC {
	KLGHCMBNDGC_IJAKHCPBKAN = 0;
}

// CmdId: 8925
message MHMMBPJPKNM {
	OCCOIDPFGCH CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 7; // offset: 56, xor const: 2182
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 12677
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 16320
}

// CmdId: 9098
message DBPFODECHDP {
	string LCIHMDFPAEB = 15; // offset: 16, xor const: 0
}

// CmdId: 7677
message KMEPNKNIEAM {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 6840
}

message MEKEJJHCINP {
	repeated uint32 HNIHFACJJGJ = 9; // offset: 56, xor const: 0
	repeated uint32 PPBCKBHDIIH = 1; // offset: 32, xor const: 0
	repeated uint32 ENFDJNKAGJD = 10; // offset: 40, xor const: 0
	uint32 FOAEJOBBIHE = 3; // offset: 72, xor const: 11887
	repeated uint32 BFHJIKJLKAC = 2; // offset: 48, xor const: 0
	repeated uint32 GLFAIDIPKHL = 7; // offset: 24, xor const: 0
	repeated uint32 MGDMJAODKBI = 4; // offset: 64, xor const: 0
}

// CmdId: 989
message GMGEAOAEBNP {
	JLAIFADKPPP CPEPJEPHPBD = 1; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 9; // offset: 48, xor const: 14976
	uint32 KMKPPDICOKA = 5; // offset: 40, xor const: 3326
	uint64 HEJBMNAOJFL = 11; // offset: 56, xor const: 10369
}

message AACHEHAKJFJ {
	bool GMCAJLFHOIE = 3; // offset: 40, xor const: 0
	int32 AMCIIDDGMOP = 11; // offset: 48, xor const: 3146
	ACNGKHDGKII ODLNGFGNJFK = 2; // offset: 32, xor const: 0
	int32 OIOOKCKEEMF = 7; // offset: 44, xor const: 11630
	JLNLHBOGFII ACEMBJPDCDK = 5; // offset: 16, xor const: 0
	int32 NPLEFCEKFNE = 1; // offset: 56, xor const: 7148
	int32 GNBFPEIBLDK = 4; // offset: 52, xor const: 11803
}

message APGDDNPFFFE {
	CJINCICAPIL AGGDHGHDMBN = 2; // offset: 24, xor const: 0
	int32 JOJBOMLDHAO = 4; // offset: 36, xor const: 0
	AEJLOBOKMEO KBBEJLMCCDB = 1; // offset: 28, xor const: 0
	int32 LDLJPDBHPLJ = 3; // offset: 32, xor const: 0
}

message KFDJEFOKBBO {
	string GJOIOEMOBFN = 1; // offset: 16, xor const: 0
	string HBJOLGODPID = 2; // offset: 24, xor const: 0
}

enum PGOOFHGFEFG {
	PGOOFHGFEFG_EOCGDNMDBML = 0;
	PGOOFHGFEFG_OFLCMOMHKKD = 1;
}

// CmdId: 9394
message GHDEHGMKNKC {
	JFHMADCABCE CPEPJEPHPBD = 2; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 15; // offset: 40, xor const: 4983
	uint64 AEDAEPKDOAL = 9; // offset: 56, xor const: 9750
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 13; // offset: 48, xor const: 15917
}

message KIDDKCPKEIO {
	bool MKKJCFLOAJC = 4; // offset: 29, xor const: 0
	int32 OHBMEIKLLOE = 1; // offset: 24, xor const: 0
	int32 HLEAEPDDBLE = 2; // offset: 32, xor const: 0
	bool GMCAABHABEO = 3; // offset: 28, xor const: 0
}

// CmdId: 4501
message IGBNNIAHKFA {
	uint64 HEJBMNAOJFL = 7; // offset: 56, xor const: 4224
	uint32 KMKPPDICOKA = 4; // offset: 48, xor const: 14205
	uint64 AEDAEPKDOAL = 8; // offset: 40, xor const: 1146
	OGDPHGNCELD CPEPJEPHPBD = 14; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 32, xor const: 0
}

message LBCAMPGCHMD {
	repeated uint32 OGLPCLPPDCH = 1; // offset: 32, xor const: 0
	repeated uint32 JJLNBECINEP = 14; // offset: 24, xor const: 0
}

message CMGLPAIPFDL {
}

// CmdId: 5237
message JMKHBKLHNHN {
	uint32 NODBAHCCOBD = 3; // offset: 40, xor const: 2128
	uint32 OHCIOPAIBKK = 1; // offset: 32, xor const: 9444
	repeated uint32 IONEDDKBCAD = 6; // offset: 16, xor const: 0
	uint32 BCMPKLAOIHK = 8; // offset: 36, xor const: 8547
}

enum FKFDKPJLHIL {
	FKFDKPJLHIL_BJOIBDCGLCE = 0;
	FKFDKPJLHIL_DFJJGOOKAGF = 1;
	FKFDKPJLHIL_IIDBFHKNBOL = 2;
	FKFDKPJLHIL_DNLFFNBBNKK = 3;
	FKFDKPJLHIL_DMNBDOLHKNO = 4;
	FKFDKPJLHIL_GLNHMFOHJAO = 5;
	FKFDKPJLHIL_BBFEMPLHDAI = 6;
	FKFDKPJLHIL_JCPFOHAOBJP = 7;
	FKFDKPJLHIL_BKLJGFJOKMJ = 8;
}

message JOLEPILKLJC {
	int32 PHCNOEKPCFM = 2; // offset: 48, xor const: 0
	int32 GOKJAKFGAJG = 3; // offset: 52, xor const: 0
	repeated CHODCOEGENM IAECNBNBLLH = 4; // offset: 40, xor const: 0
	map<uint32, uint32> IEDKANJKGFP = 5; // offset: 32, xor const: 0
	map<string, LPCHCBGMNEP> CIOFENGNIIF = 1; // offset: 24, xor const: 0
}

message LNHFDKNKALN {
	int32 PJBGJLDBPAH = 2; // offset: 32, xor const: 2650
	int32 CHKOAJCEBMF = 8; // offset: 40, xor const: 12879
	repeated AACHEHAKJFJ DAJKFFKBGLN = 6; // offset: 16, xor const: 0
	int32 AMLLDNIANNH = 10; // offset: 44, xor const: 8615
	int32 EBGMLHLIMPB = 3; // offset: 36, xor const: 6426
}

enum MENGECJGAKJ {
	MENGECJGAKJ_CBDOPKALPAM = 0;
	MENGECJGAKJ_NCMPPPCNFHD = 1;
	MENGECJGAKJ_EKLAOHKNFIA = 2;
}

message KGCACIJCFBO {
	repeated FLOBEMMNNOB BKHFJEOPDJN = 5; // offset: 16, xor const: 0
}

// CmdId: 9620
message CBKDJJAGAGH {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 10128
}

// CmdId: 1989
message FDHDCOLFDNJ {
	int32 LBBLOFLIMHM = 5; // offset: 40, xor const: 13813
	HBFBNKAODPJ NCAGHHFDAOG = 6; // offset: 16, xor const: 0
	IFGDJNNPCAN FOCOFNBLDCC = 13; // offset: 32, xor const: 0
}

message FPLJNBFOADH {
}

// CmdId: 755
message LHPKCHDDKOI {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 7973
}

// CmdId: 7470
message OPJDEFFCKNP {
	repeated DNKAFLFNDHF POPGNHJNLCC = 11; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 14; // offset: 56, xor const: 14194
	EJDJEEBPJJA CPEPJEPHPBD = 5; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 1; // offset: 40, xor const: 5420
	uint64 HEJBMNAOJFL = 15; // offset: 48, xor const: 8772
}

enum IPFCAAJNNJI {
	IPFCAAJNNJI_IFNDBKGKNBB = 0;
	IPFCAAJNNJI_AOGNHNIDOHA = 1;
	IPFCAAJNNJI_ADEJCNIDIJN = 2;
	IPFCAAJNNJI_JJCMHGNEJLF = 3;
	IPFCAAJNNJI_HFGNOEHIKPF = 4;
	IPFCAAJNNJI_EHNPOAPGCDL = 5;
	IPFCAAJNNJI_HBOPAJNIODA = 6;
	IPFCAAJNNJI_MPGFMDIFLME = 7;
	IPFCAAJNNJI_GHMPIPFDGKC = 8;
	IPFCAAJNNJI_GKFBCFAFOJE = 9;
	IPFCAAJNNJI_DGCJMGGOHAH = 10;
	IPFCAAJNNJI_GDOEPOJDMJP = 11;
}

// CmdId: 7679
message KADMEKHPNNP {
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 24, xor const: 0
	IPMGHECDMPM CPEPJEPHPBD = 15; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 8; // offset: 56, xor const: 12725
	uint64 AEDAEPKDOAL = 3; // offset: 40, xor const: 2677
	uint64 HEJBMNAOJFL = 1; // offset: 48, xor const: 3263
}

// CmdId: 3326
message JDIEKECHMJE {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 16044
}

message FBAOOMDFOEM {
	bool OCHJPOJHHPO = 4; // offset: 24, xor const: 0
	int32 JAHKOIJHKDA = 7; // offset: 28, xor const: 2004
}

message IIGNPLOFFEL {
	FGKJFCJILIL OIPNKILGNDI = 3; // offset: 16, xor const: 0
	int32 ADENCEDGNDP = 2; // offset: 40, xor const: 0
	FGKJFCJILIL DGPMEEKBLKG = 1; // offset: 32, xor const: 0
}

message NLGFNAMPMLM {
	int32 EPIPOAJEPEC = 4; // offset: 32, xor const: 0
	int32 KBKLJLLBLCD = 6; // offset: 24, xor const: 0
	int64 NBNJEFMBCEE = 2; // offset: 40, xor const: 0
	int32 HIEHPNNILJG = 5; // offset: 48, xor const: 0
	int32 HLEAEPDDBLE = 1; // offset: 28, xor const: 0
	int32 GCALGKGBHDO = 3; // offset: 52, xor const: 0
}

// CmdId: 9269
message IOCDPIPOKFN {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 6730
}

message KIIIEMIHAHL {
	repeated FGKJFCJILIL JIFKKPKGAMA = 3; // offset: 24, xor const: 0
	repeated FGKJFCJILIL GHFLIKFGEFJ = 1; // offset: 32, xor const: 0
	repeated FGKJFCJILIL CMIANHKFKJM = 4; // offset: 40, xor const: 0
	HollowEntityType HCOBCBNNPLD = 2; // offset: 48, xor const: 0
}

message COGFGEGCAOI {
	bool PIACCOFDGKI = 2; // offset: 32, xor const: 0
	repeated int32 KDIMAAINDHE = 1; // offset: 24, xor const: 0
}

// CmdId: 9239
message JJELDCKJICP {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 13304
}

enum HNJOMMMEPEK {
	HNJOMMMEPEK_ONJDACJIDBG = 0;
	HNJOMMMEPEK_PCCKFNDFOCN = 1;
	HNJOMMMEPEK_COLDPKDBMBB = 2;
	HNJOMMMEPEK_JHMONNAPJHJ = 3;
	HNJOMMMEPEK_OPCHAPFCPHA = 4;
	HNJOMMMEPEK_DLOIFDJGGKH = 5;
}

message EDBACCMCKNL {
	bool CBJOJDKKNOI = 6; // offset: 32, xor const: 0
	TimePeriodType AEIOGIJPKDA = 3; // offset: 24, xor const: 0
	int32 DAHGNKKJFAH = 2; // offset: 44, xor const: 0
	int32 ACOICHAOLPF = 5; // offset: 40, xor const: 0
	int32 HDLLDHHMPND = 4; // offset: 36, xor const: 0
	ModTimeType GMIGLBEGLKA = 1; // offset: 28, xor const: 0
}

// CmdId: 7045
message FGKDJHJAKAH {
	NJNHCOMGCNO MPODPDJHCNL = 12; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 7822
}

// CmdId: 253
message KGEMONMBIJC {
	uint32 BCCEOLDLIFA = 13; // offset: 24, xor const: 2098
	uint32 MPNJDHIPKNJ = 3; // offset: 28, xor const: 5963
	uint32 MHINMINPONI = 12; // offset: 32, xor const: 8927
}

// CmdId: 7509
message JFBNEBBGDOF {
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 8165
	NCDDPDDCNEP CPEPJEPHPBD = 9; // offset: 24, xor const: 0
}

// CmdId: 5934
message BJCJACEMHAE {
	uint32 AFIAFGMJCHP = 15; // offset: 28, xor const: 2101
	uint32 MPKEEGCKPFD = 14; // offset: 32, xor const: 6626
	uint32 JKNAOLOEEBO = 10; // offset: 24, xor const: 10617
}

// CmdId: 474
message OOFBMHEEIKK {
	uint32 FLOMIIDEACM = 5; // offset: 24, xor const: 5923
	uint32 NJFOLJNDPGG = 1; // offset: 28, xor const: 7690
}

message JMBNAIGDDGE {
	DHJPJJHKADF CIMKFHBNKFF = 2; // offset: 40, xor const: 0
	FGKJFCJILIL ENCANOPLLDM = 3; // offset: 16, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 24, xor const: 0
}

// CmdId: 764
message DAEPFFDLNMK {
	GDOBBOHGOBG CPEPJEPHPBD = 6; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 13; // offset: 48, xor const: 1444
	uint64 HEJBMNAOJFL = 1; // offset: 56, xor const: 12401
	uint64 AEDAEPKDOAL = 10; // offset: 40, xor const: 5202
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 16, xor const: 0
}

message JLOCILOEDGK {
	int32 JHMFEPPLDOJ = 11; // offset: 24, xor const: 1605
}

enum LBAHNLPKLEE {
	LBAHNLPKLEE_DPBFIECFDHP = 0;
	LBAHNLPKLEE_LJJFAHOKCLP = 1;
	LBAHNLPKLEE_OMPALAILDOA = 2;
	LBAHNLPKLEE_FDNKPMDOBLE = 3;
	LBAHNLPKLEE_JGPCEJKMCCB = 4;
	LBAHNLPKLEE_MPLJNHOKMLE = 5;
	LBAHNLPKLEE_KGJAJMHIINO = 6;
	LBAHNLPKLEE_IJHHFEGFGEB = 7;
	LBAHNLPKLEE_BDKDDFLICAA = 8;
	LBAHNLPKLEE_ENMIMOJILNK = 100;
	LBAHNLPKLEE_MBMGLJKHOBK = 101;
	LBAHNLPKLEE_FNJEPNKFBGK = 102;
	LBAHNLPKLEE_HCHJMAOINFJ = 103;
	LBAHNLPKLEE_LOPLEMGBDAJ = 104;
	LBAHNLPKLEE_KKKOJJFBMPC = 105;
	LBAHNLPKLEE_FFKLPIMACHC = 106;
	LBAHNLPKLEE_JKBEIJGLAPP = 107;
	LBAHNLPKLEE_AOAMIFDNEIL = 108;
	LBAHNLPKLEE_INHCOEMKAAK = 109;
}

message MBBIBJLPFEH {
	uint32 CHELJLHNGKF = 8; // offset: 36, xor const: 15462
	uint32 KCOMKNFGGAC = 4; // offset: 32, xor const: 1910
	int64 KCDAILEMPKE = 7; // offset: 24, xor const: 15164
	bool GBKNCJDLDJB = 1; // offset: 40, xor const: 0
}

message HFAMNMKCKCF {
	uint32 AACMGMLCMPF = 1; // offset: 48, xor const: 11750
	string GFJBAFBJMJB = 9; // offset: 16, xor const: 0
	string GJJGKEKIHJM = 14; // offset: 32, xor const: 0
	uint64 MOIMDGDEMDJ = 7; // offset: 40, xor const: 15953
}

message BNGCJFKLIIO {
	repeated EKNBFJLMCBA IHPGPAEANJL = 12; // offset: 16, xor const: 0
}

message EKHCKNKFLMA {
	int32 BFBMMDFJIKD = 1; // offset: 32, xor const: 0
	map<int32, int32> KLCJNDABMOF = 2; // offset: 16, xor const: 0
}

// CmdId: 2507
message EKJIPPJLNHK {
	repeated uint32 PINOOAAOFGE = 2; // offset: 40, xor const: 0
	repeated DIBEPAPEKNF AFCENAAEMKP = 7; // offset: 24, xor const: 0
	repeated uint32 DEMDDNPAAKI = 11; // offset: 16, xor const: 0
	bool FGPEHIPNLEC = 10; // offset: 52, xor const: 0
	uint32 PKGIFPAKFED = 14; // offset: 48, xor const: 2484
}

// CmdId: 8383
message ECKNLEPIACG {
	uint64 AEDAEPKDOAL = 8; // offset: 48, xor const: 7118
	uint32 KMKPPDICOKA = 15; // offset: 40, xor const: 13945
	uint64 HEJBMNAOJFL = 3; // offset: 56, xor const: 2980
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 24, xor const: 0
	PBIEAOIOCNM CPEPJEPHPBD = 12; // offset: 32, xor const: 0
}

enum JMKEHMIFLKG {
	JMKEHMIFLKG_EDGBCBKPAJE = 0;
	JMKEHMIFLKG_ABHFFBDAHIM = 1;
}

// CmdId: 2226
message FCAAADIOCIH {
	int32 AEJJPFOLCNF = 7; // offset: 24, xor const: 7447
}

// CmdId: 6304
message DOAFABNDPJL {
	uint32 GELGNCOHHLE = 6; // offset: 24, xor const: 8908
	uint32 MHDFOCGAOPO = 11; // offset: 28, xor const: 5129
}

message ENMHIBPOADD {
	LEPHGNHNNEF CPEPJEPHPBD = 2; // offset: 24, xor const: 0
	uint64 NCAGHHFDAOG = 7; // offset: 32, xor const: 7275
}

// CmdId: 5097
message KMMPJMKEDHA {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 15412
}

message MHGAGFIDKJJ {
	uint32 LMCELIADJAE = 2; // offset: 44, xor const: 0
	uint32 HJIEEMOHALD = 4; // offset: 40, xor const: 0
	repeated MDOHILOAIAE EBGCEEKCAAM = 3; // offset: 24, xor const: 0
	uint64 FFFNDAAHLCF = 1; // offset: 32, xor const: 0
}

message NGKGLKCOGLG {
	uint32 FOBNPCJLGDD = 13; // offset: 24, xor const: 12107
	uint32 NCAGHHFDAOG = 9; // offset: 28, xor const: 5428
}

message PMAMMEEBNAD {
	int32 IGEKIBJNPNA = 11; // offset: 32, xor const: 14373
	JCAIEKOGNGC KIAMDFIOGJD = 15; // offset: 24, xor const: 0
}

// CmdId: 8052
message HNMECNAKFIF {
}

message LNINNDACNPE {
	repeated string BGEJNONAKGH = 1; // offset: 24, xor const: 0
}

// CmdId: 882
message JJIIMEKBDCK {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 72
}

// CmdId: 2668
message KMPDNNPDCHG {
	repeated uint32 BPLECGANFCL = 7; // offset: 24, xor const: 0
	repeated uint32 PFKNKDCACEC = 10; // offset: 16, xor const: 0
}

message HMNHANEHCHI {
	repeated MDCMADKAICO CFIIBKDJPBO = 15; // offset: 16, xor const: 0
	repeated GKDEKBPAIAG GNLAAGJGAOE = 3; // offset: 32, xor const: 0
	uint32 CLCMGDMLLJI = 5; // offset: 56, xor const: 9208
	repeated uint32 KDFABOALLPP = 1; // offset: 40, xor const: 0
	repeated uint32 JBGCCCKMKAF = 11; // offset: 48, xor const: 0
}

message MGCCOABJHMP {
	int32 BCMPKLAOIHK = 2; // offset: 32, xor const: 7484
	int32 GPJMFJPEPKD = 10; // offset: 24, xor const: 16203
	int32 HEHOLEJKPDO = 3; // offset: 28, xor const: 1520
}

enum GAILLDBKHOE {
	GAILLDBKHOE_FJEMHLLGLPO = 0;
}

enum GLNDGHGJPPE {
	GLNDGHGJPPE_FLEIMAFCLJP = 0;
}

message ICCBABEGIDP {
	repeated FGKJFCJILIL EJADHHNHANE = 3; // offset: 16, xor const: 0
	repeated ACGPACPFPEG NDIDNLFFLDD = 2; // offset: 32, xor const: 0
	JPCENOPDAJD HLEAEPDDBLE = 1; // offset: 48, xor const: 0
	repeated IMEEODBKEFN KCEAEDDBBIF = 4; // offset: 40, xor const: 0
}

message JAANAGFBCIO {
	string GOIHDGPFHGA = 1; // offset: 24, xor const: 0
}

message CBLHLEEDDOK {
	uint32 KJOOPDCDHNE = 7; // offset: 28, xor const: 13393
	uint32 HEEKOOMEBOG = 15; // offset: 24, xor const: 12162
}

message LKKIFGGFJEI {
	repeated int32 CDDAAGIHEAM = 2; // offset: 32, xor const: 0
	FGKJFCJILIL EAMDIAKEFMI = 1; // offset: 16, xor const: 0
}

// CmdId: 5797
message EJENLCGMLKF {
	repeated FHJHFMCLGJM GJBHHDDDHPB = 10; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 12066
}

enum JACKKMAPCIM {
	JACKKMAPCIM_BPEEDKHDEFM = 0;
	JACKKMAPCIM_GJEFLHLFDIC = 1;
}

// CmdId: 797
message HBAKHOAJPLK {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 7714
}

// CmdId: 4783
message KAAHHHJDFEM {
}

message EJDJEEBPJJA {
	repeated JLNLHBOGFII OLPHIMOBMLI = 9; // offset: 24, xor const: 0
	uint32 HJHFOICGOAC = 15; // offset: 40, xor const: 85
	repeated uint32 AAILBKGGACM = 11; // offset: 32, xor const: 0
}

message MGLELMJAAHO {
	OAFBFNEKLEE HLEAEPDDBLE = 3; // offset: 24, xor const: 0
	int32 JFNKJPCIOGM = 1; // offset: 36, xor const: 0
	int32 FPAMMKPBAGA = 2; // offset: 28, xor const: 0
	int32 NBNJEFMBCEE = 4; // offset: 32, xor const: 0
}

message GGCDMOFGJBG {
	string IBONJBPBOOJ = 1; // offset: 24, xor const: 0
}

message JHMNLJCGIGJ {
	uint32 CPEGDKBNGDH = 12; // offset: 24, xor const: 832
	uint32 HDAKACOAKCN = 2; // offset: 28, xor const: 10328
}

message DMEHFOAIEED {
	bool NGKODAGJNMI = 2; // offset: 32, xor const: 0
	map<int32, int32> JMLADEAHPEH = 1; // offset: 24, xor const: 0
}

message OEHHMHLPBBD {
	int32 NMJENODBDLD = 5; // offset: 80, xor const: 0
	float MAFLFEBDBOA = 7; // offset: 72, xor const: 0
	bool ABJBKNJMMLE = 10; // offset: 76, xor const: 0
	HBFBNKAODPJ EDJBLGOBDEK = 9; // offset: 56, xor const: 0
	HBFBNKAODPJ JAJAGGEBCPO = 2; // offset: 16, xor const: 0
	MEGKPCHHBBM LDDPOILBEII = 4; // offset: 32, xor const: 0
	MEGKPCHHBBM JEGJJEMNHDD = 3; // offset: 24, xor const: 0
	CABFALHAACM MKFDBKADBIO = 8; // offset: 48, xor const: 0
	int32 BHLEOIMLMJA = 1; // offset: 68, xor const: 0
	int32 IFAJHJFKOFA = 6; // offset: 64, xor const: 0
}

message OENFFCMANDO {
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 40, xor const: 0
	FGKJFCJILIL PPCNCKBKEJB = 3; // offset: 32, xor const: 0
	FGKJFCJILIL OMAHIIBEIHA = 2; // offset: 24, xor const: 0
}

// CmdId: 9370
message EJGOBFLPEOJ {
}

message FDDFIHINGGK {
	repeated MMMMDOJIAKK GPDABCIHKPM = 13; // offset: 16, xor const: 0
	repeated KMGBINNDBNO GAKIKGLJDPJ = 2; // offset: 32, xor const: 0
}

// CmdId: 5056
message AJJBHPKHGCC {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 15567
}

message JKKHPPCNGKM {
	ADIHDDCLCHK JNKOLKFGBCA = 4; // offset: 48, xor const: 0
	IHHJNHHDNHN LJONLIGEFBL = 6; // offset: 52, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 56, xor const: 0
	FGKJFCJILIL HMHIKBELPIA = 3; // offset: 40, xor const: 0
	FGKJFCJILIL PCBKKOJNCAL = 5; // offset: 24, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 32, xor const: 0
}

enum DOCBGDHHGOI {
	DOCBGDHHGOI_JBDNCEFDFFP = 0;
	DOCBGDHHGOI_LBCDMEIMODP = 1;
}

// CmdId: 7800
message ONHAJFIOAJC {
	int32 AMIJIAHGPMC = 6; // offset: 24, xor const: 10601
}

message KLCCMFNLIMP {
	FGKJFCJILIL ICLCHMFPMMA = 2; // offset: 24, xor const: 0
	bool DLACECPOBPM = 3; // offset: 40, xor const: 0
	FGKJFCJILIL PBOAMDEBIGO = 1; // offset: 16, xor const: 0
}

message GDBPMBPDICC {
}

message EKNBFJLMCBA {
	repeated CGLGNADMHCG MCHJJNBGFBD = 9; // offset: 16, xor const: 0
	uint32 OPFEAMDPIAG = 5; // offset: 32, xor const: 9999
}

// CmdId: 5260
message LAJMBBFJBJJ {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 8003
}

enum FPJOEKBFAJC {
	FPJOEKBFAJC_IFMHJNJCOHN = 0;
	FPJOEKBFAJC_DCJFKCKCMAH = 1;
	FPJOEKBFAJC_CHINELLIKLF = 2;
	FPJOEKBFAJC_GDADILJCMJE = 5;
	FPJOEKBFAJC_KDGLPOMGHOH = 6;
	FPJOEKBFAJC_AOHMPJDMOIJ = 7;
	FPJOEKBFAJC_HHCGPEALJAD = 8;
}

// CmdId: 5990
message FHKBJPIIFJM {
	uint32 PJNNIMBHFAP = 10; // offset: 28, xor const: 15739
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 6505
}

message AKIALCODKHM {
	INLFFDKGPNK AODMMCCECAP = 14; // offset: 24, xor const: 0
}

// CmdId: 5933
message IOFFKJFBMCG {
	uint32 KMKPPDICOKA = 7; // offset: 48, xor const: 9843
	uint64 HEJBMNAOJFL = 6; // offset: 40, xor const: 3544
	repeated DNKAFLFNDHF POPGNHJNLCC = 1; // offset: 24, xor const: 0
	PAKOBOPPKOM CPEPJEPHPBD = 14; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 3; // offset: 56, xor const: 7759
}

// CmdId: 2894
message ENCLBCJFOGP {
	uint32 LJMKNHMPBDF = 4; // offset: 24, xor const: 7372
}

// CmdId: 3591
message JHGFDOLPDLD {
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 5026
	int64 JKFJAOBEAGI = 13; // offset: 24, xor const: 16087
}

enum DPMKEPOGOHP {
	DPMKEPOGOHP_ANDIONEDHJM = 0;
	DPMKEPOGOHP_ACEJHDHACPP = 1;
	DPMKEPOGOHP_JDEPIMJGDKL = 2;
}

enum MHJJLJJHEPM {
	MHJJLJJHEPM_HLDKPBJEEHK = 0;
	MHJJLJJHEPM_ACPHMNDHOFJ = 1;
	MHJJLJJHEPM_LMHABMKOFHI = 2;
	MHJJLJJHEPM_PIEFMGIHMMP = 3;
	MHJJLJJHEPM_OHDJNHLLECN = 4;
	MHJJLJJHEPM_EOIBOOPDGPF = 5;
}

// CmdId: 815
message DLOLINCNDAE {
	uint32 GFOBLCFLFBH = 8; // offset: 24, xor const: 8392
	int32 IHIGNMLCHDK = 13; // offset: 28, xor const: 11794
}

message CLIMDJKKBJC {
	int32 NBNJEFMBCEE = 10; // offset: 32, xor const: 11099
	int32 NODBAHCCOBD = 9; // offset: 36, xor const: 4199
	repeated int32 IGJDOPJFEAL = 2; // offset: 24, xor const: 0
	int32 BCMPKLAOIHK = 5; // offset: 40, xor const: 2770
}

message MDOLCAJJKEB {
	INLFFDKGPNK AODMMCCECAP = 9; // offset: 16, xor const: 0
}

enum ECEKFPPBBAG {
	ECEKFPPBBAG_NDMBCOCPLFD = 0;
	ECEKFPPBBAG_ENNNKBLDMOM = 1;
	ECEKFPPBBAG_KAHKHOBHCAA = 2;
}

// CmdId: 6121
message LEGPGOJPBKO {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 6150
	uint32 GCGPNHPGPLH = 3; // offset: 28, xor const: 13607
}

// CmdId: 3976
message KHOPGCPFFIL {
}

enum KMBGHNDKIPA {
	KMBGHNDKIPA_GLDLJCEDLIN = 0;
	KMBGHNDKIPA_EFJIENLPINJ = 1;
	KMBGHNDKIPA_CACMJHBANOH = 2;
	KMBGHNDKIPA_FPCPAJKEAAF = 3;
	KMBGHNDKIPA_GLBAJMFCJDI = 4;
}

// CmdId: 3923
message AHIFFIEFFEG {
	HBFBNKAODPJ NCAGHHFDAOG = 1; // offset: 16, xor const: 0
	uint64 MOIMDGDEMDJ = 5; // offset: 32, xor const: 3492
}

message KCMJBEDFLOL {
	int32 PAGOBFILGPB = 1; // offset: 24, xor const: 0
}

// CmdId: 7312
message DHCJOMLJIPA {
	int32 IHIGNMLCHDK = 5; // offset: 32, xor const: 4920
	repeated OFHKMMHPNDJ CHKKBHILENA = 3; // offset: 16, xor const: 0
}

enum JNGGFCIEOAB {
	JNGGFCIEOAB_OMEEIDDDBGM = 0;
	JNGGFCIEOAB_MJGPFIGOMIN = 1;
	JNGGFCIEOAB_FBPKHPFGNLK = 2;
}

// CmdId: 2425
message MIEGFGAAOEC {
}

message DLJPDINFDFE {
	uint32 EKBJILIANOI = 1; // offset: 24, xor const: 0
}

// CmdId: 4211
message KHNMIOCAGNO {
}

message JGLDAINDEGL {
	float OKAGLPFJDHD = 10; // offset: 40, xor const: 0
	JLNLHBOGFII NEGLLNDIPHC = 12; // offset: 24, xor const: 0
	float AHNAFEEJNLF = 11; // offset: 32, xor const: 0
	uint32 NCAGHHFDAOG = 5; // offset: 36, xor const: 5741
}

// CmdId: 8342
message OIGBBNAIICF {
	repeated uint32 JHFKMIGEFNM = 6; // offset: 32, xor const: 0
	repeated PFLDHLPDKLE NMLEGPNFLBJ = 4; // offset: 16, xor const: 0
	repeated PFLDHLPDKLE MFPCBCEPNGH = 5; // offset: 24, xor const: 0
	repeated PFLDHLPDKLE LNGPOEBCGAH = 8; // offset: 48, xor const: 0
}

// CmdId: 3916
message ECAFNGBKIDB {
	uint64 DIMEDPILOOA = 15; // offset: 24, xor const: 370
}

// CmdId: 5591
message OCHDLKHAOFF {
	AOKOFBENNAI GIMFOMEDGAO = 1; // offset: 16, xor const: 0
}

enum LKOOBIADHME {
	LKOOBIADHME_AADJDBDPLOJ = 0;
	LKOOBIADHME_BHAOFHJEGDA = 1;
	LKOOBIADHME_FNNMBIKAIEF = 2;
	LKOOBIADHME_DOLALMGIFME = 3;
	LKOOBIADHME_IFKNENJLCPK = 4;
	LKOOBIADHME_GNOHPIGIFAL = 5;
	LKOOBIADHME_AEOKLFPHKLI = 6;
}

message COJCKOBHDCE {
	uint32 FPAMMKPBAGA = 2; // offset: 24, xor const: 0
	uint32 NJFOLJNDPGG = 1; // offset: 28, xor const: 0
}

// CmdId: 8883
message NIJKMMEJGCJ {
	uint32 AMIJIAHGPMC = 7; // offset: 28, xor const: 6961
	uint32 FCNIKFEJMFI = 12; // offset: 24, xor const: 59
}

message IFGDJNNPCAN {
	int32 EFJPPJJFNJM = 2; // offset: 28, xor const: 0
	int32 AEIHIBLACCM = 1; // offset: 24, xor const: 0
	int32 HEDOHAABKHD = 3; // offset: 32, xor const: 0
}

message LPCHCBGMNEP {
	int64 ABAEPPIDNBK = 3; // offset: 48, xor const: 0
	double JAAFIFFBCEG = 5; // offset: 32, xor const: 0
	string NLALIOGALOD = 6; // offset: 24, xor const: 0
	uint32 HLEAEPDDBLE = 1; // offset: 40, xor const: 0
}

// CmdId: 3723
message ILJEEBLFBBE {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 6394
}

message CNAMLFMNMJK {
	FGKJFCJILIL MHINMINPONI = 1; // offset: 16, xor const: 0
	string NODBAHCCOBD = 2; // offset: 24, xor const: 0
}

// CmdId: 4335
message CKCBLDJLIKJ {
}

// CmdId: 2023
message IINBPBABABA {
	uint32 PLFCIIAEIFC = 1; // offset: 36, xor const: 5404
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 3643
	uint32 KCOMKNFGGAC = 6; // offset: 24, xor const: 13225
	uint32 CHELJLHNGKF = 5; // offset: 28, xor const: 13567
}

// CmdId: 2771
message INBACCNCCJP {
	bool COOEPOJHAOA = 12; // offset: 24, xor const: 0
}

message DFHKEPAAPGN {
	uint32 EFNFANEIJMH = 12; // offset: 32, xor const: 1135
	IMJIJLIDHEC ACEMBJPDCDK = 6; // offset: 24, xor const: 0
}

message OIIMGLJPDKH {
	map<uint32, JHIIPLMNPCH> BDBJGLMOJGN = 2; // offset: 24, xor const: 0
}

// CmdId: 2541
message CBEPKPMNJAC {
	uint32 PBGJGMJEEGH = 2; // offset: 72, xor const: 648
	uint32 DOFCIIBENDL = 9; // offset: 68, xor const: 16063
	string GAMOCNIABJK = 4; // offset: 56, xor const: 0
	uint32 AFLEDCHMEKC = 12; // offset: 84, xor const: 12279
	uint32 OIKMJCCEIBC = 10; // offset: 92, xor const: 2803
	uint32 PMAGNGPOBBB = 8; // offset: 64, xor const: 694
	uint32 BCMNJDHDEGO = 5; // offset: 88, xor const: 7098
	uint32 OKOAHNIHMMB = 3; // offset: 80, xor const: 7395
	string JPHGJFMELMO = 6; // offset: 40, xor const: 0
	string FHNGBJKLHHH = 1; // offset: 16, xor const: 0
	string OFPODKIOKBK = 7; // offset: 48, xor const: 0
	uint32 IIIGDHJPFMI = 15; // offset: 76, xor const: 3200
	string GENMDHHPBEF = 11; // offset: 32, xor const: 0
}

message FAJACHHHPBO {
	uint32 BEKFLJGFLJD = 1; // offset: 36, xor const: 0
	repeated HAGKCKDFHJK GJHPDKHHONE = 2; // offset: 16, xor const: 0
	uint32 KJHIKFEAMNF = 3; // offset: 32, xor const: 0
}

message FMFPAJBGDDH {
	map<uint32, int32> BDFCHHFLNLH = 12; // offset: 24, xor const: 0
}

// CmdId: 16
message KMLCCIDGCJC {
	uint32 MOIMDGDEMDJ = 14; // offset: 24, xor const: 9264
	uint32 AMIJIAHGPMC = 9; // offset: 28, xor const: 7850
}

// CmdId: 1370
message GNBGLEMMJMG {
	repeated IBEMPFGCLKL OPJBPHHHHKL = 13; // offset: 24, xor const: 0
	uint32 AFJOGKIENOC = 12; // offset: 40, xor const: 13898
	NKPCOAOHKHA IOPNIIBPJFN = 5; // offset: 44, xor const: 0
	repeated uint32 ENICFJBFDHI = 14; // offset: 32, xor const: 0
}

message EJPLKNOKIBE {
	repeated int32 MAJALPLMDBO = 3; // offset: 24, xor const: 0
}

message FEEJKIJJDEI {
	LKONOMJJNHB NKAJELHPDCL = 5; // offset: 16, xor const: 0
	uint32 PLFCIIAEIFC = 14; // offset: 52, xor const: 6645
	uint32 EINBPKAJCMM = 8; // offset: 48, xor const: 12784
	repeated uint32 KJPCMKLMBCN = 4; // offset: 32, xor const: 0
	uint32 APKGMCJAKBJ = 7; // offset: 56, xor const: 1170
	repeated uint32 FNEMBOOACFL = 10; // offset: 40, xor const: 0
}

message LPFKPIHPLAH {
	FGKJFCJILIL NLPFGFMMJJO = 1; // offset: 32, xor const: 0
	FGKJFCJILIL PBOAMDEBIGO = 2; // offset: 16, xor const: 0
}

// CmdId: 4777
message FMDABPDKPMA {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 11680
}

message BOEPBMKJEPE {
}

enum HHFODNDLGOO {
	HHFODNDLGOO_MAPKMONOLCG = 0;
	HHFODNDLGOO_LFONCFNMMPH = 1;
}

// CmdId: 4973
message FOADNAKACHH {
	uint64 HEJBMNAOJFL = 13; // offset: 40, xor const: 12483
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 10495
	FGJBJCONGJC CPEPJEPHPBD = 12; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 3; // offset: 48, xor const: 5278
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 16, xor const: 0
}

message HBDCMALHDBF {
	uint64 DIMEDPILOOA = 11; // offset: 32, xor const: 15028
	repeated AMMPOLGLJNL GJHPDKHHONE = 8; // offset: 16, xor const: 0
	uint32 MJHHEINMPGD = 13; // offset: 52, xor const: 15557
	BLKCBLNIOHC EFOJIHJFCOF = 12; // offset: 48, xor const: 0
	uint32 MDHJEKIIDIO = 4; // offset: 44, xor const: 12248
	bool JFPOICIPDJO = 3; // offset: 40, xor const: 0
	uint32 HJIEEMOHALD = 10; // offset: 56, xor const: 3650
}

message FJMAPKLAEGF {
	bool PMDBHALOLJA = 1; // offset: 24, xor const: 0
}

message DOHDCNNNPMP {
	EDGCAIEHLHH ACEMBJPDCDK = 1; // offset: 24, xor const: 0
}

// CmdId: 6914
message CAPKGJJBHGA {
	int32 IHIGNMLCHDK = 14; // offset: 32, xor const: 12797
	repeated PAPFGCEFNIA MCDDEIJLGAJ = 3; // offset: 24, xor const: 0
}

message JIMCCNADLCF {
	FLEFOKKNIKI ANGBNKMBLHI = 3; // offset: 24, xor const: 0
}

message FENLIJOGDOK {
	repeated ENIAFFJKLPO FMBOJKDOGGD = 1; // offset: 16, xor const: 0
}

// CmdId: 2300
message AIOMFDGNPMM {
	bool CAAJBHBABEH = 9; // offset: 24, xor const: 0
	uint32 JFHHBHAIBLF = 15; // offset: 28, xor const: 16343
}

enum AOBGOPGONEP {
	AOBGOPGONEP_MIJMDCIFOMI = 0;
	AOBGOPGONEP_COLHOKPKANB = 1;
}

// CmdId: 3470
message JCMDILCNGLO {
	NBILJAFDBGB CPEPJEPHPBD = 6; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 13; // offset: 40, xor const: 251
	uint64 AEDAEPKDOAL = 15; // offset: 48, xor const: 1499
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 7; // offset: 56, xor const: 4542
}

enum LJHFJAGEHNM {
	LJHFJAGEHNM_MONSTER_WEAKNESS_DEFAULT = 0;
	LJHFJAGEHNM_MONSTER_WEAKNESS_PHYSICS = 200;
	LJHFJAGEHNM_MONSTER_WEAKNESS_FIRE = 201;
	LJHFJAGEHNM_MONSTER_WEAKNESS_ICE = 202;
	LJHFJAGEHNM_MONSTER_WEAKNESS_ELEC = 203;
	LJHFJAGEHNM_MONSTER_WEAKNESS_ETHER = 205;
}

message OFJDNHNILNO {
	uint32 EOAIIKPEGNK = 12; // offset: 48, xor const: 11883
	repeated uint32 NHMNEBJFGDH = 7; // offset: 16, xor const: 0
	repeated CEIFHIKPEDF OPLLBPEOOGE = 1; // offset: 24, xor const: 0
	uint32 OJDHLPPEHAB = 5; // offset: 52, xor const: 8081
	repeated uint32 CBEFKMKKEJP = 8; // offset: 40, xor const: 0
}

message PFLHIFLEKBG {
	uint32 HDAKACOAKCN = 11; // offset: 24, xor const: 1117
}

// CmdId: 3448
message IIBDCJHCCEE {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 6328
}

// CmdId: 4779
message EJPNKJANJDA {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 7826
}

// CmdId: 5340
message HKHDMLPHMKD {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 12685
}

// CmdId: 9177
message JIDCBHKPIAD {
	int32 AEJJPFOLCNF = 5; // offset: 24, xor const: 8764
}

enum NNNBNGBBDEH {
	NNNBNGBBDEH_CROSS_SHAPED = 0;
	NNNBNGBBDEH_MANHATTAN_SQUARE = 1;
	NNNBNGBBDEH_SQUARE = 2;
}

enum LEHENCIPJIE {
	LEHENCIPJIE_RELATIVE = 0;
	LEHENCIPJIE_ABSOLUTE = 1;
	LEHENCIPJIE_EVENT_POS = 2;
	LEHENCIPJIE_HOLLOW_NPC_POS = 3;
}

enum HollowShopType {
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_NONE = 0;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_ITEM = 1;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_CARD = 2;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_CURSE = 3;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_HOLLOW_ITEM = 4;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_DISCOUNT = 5;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_GACHA_SHOP = 6;
	HOLLOW_SHOP_TYPE_HOLLOW_SHOP_TYPE_UPGRADE_CARD = 7;
}

enum HHPIPFDOCMP {
	HHPIPFDOCMP_DNFMOBMAHLD = 0;
	HHPIPFDOCMP_PJEHEBMGHNB = 1;
}

message LMKDHPHJKNL {
	uint32 ILBAHDGIIMC = 4; // offset: 32, xor const: 8104
	uint32 HLEAEPDDBLE = 13; // offset: 40, xor const: 4335
	repeated DNOIJBIJHNP AFCENAAEMKP = 3; // offset: 24, xor const: 0
	int32 BPPIGGJKCMP = 6; // offset: 36, xor const: 5363
}

// CmdId: 6998
message HFMDFBGFMPM {
	repeated HHKCHEDCIOA OOHNLIHGLGO = 12; // offset: 16, xor const: 0
	bool NPPHBAHBIEK = 7; // offset: 32, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 36, xor const: 15854
}

message KDFMOPLIKFL {
	repeated uint32 ECNGEMCMAHJ = 10; // offset: 88, xor const: 0
	repeated JCDEOBCOEBA NCDJIINHAMB = 6; // offset: 24, xor const: 0
	uint32 FDIJEMGKCBK = 1; // offset: 96, xor const: 14648
	repeated uint32 AEDEIFOIFBB = 13; // offset: 80, xor const: 0
	repeated uint32 LAJIJIEHLCM = 2; // offset: 48, xor const: 0
	repeated uint32 LCELJAPMOOO = 12; // offset: 64, xor const: 0
	repeated OAHEBLFKPIC MDKKOCECLCH = 3; // offset: 32, xor const: 0
	repeated uint32 AFMHKFINKJG = 4; // offset: 16, xor const: 0
	repeated uint32 IBHLNHEAIPB = 9; // offset: 56, xor const: 0
	repeated uint32 CFNMIPCPEMO = 5; // offset: 40, xor const: 0
}

message FAHHNAAPBHG {
	bool FBACDCFEENI = 3; // offset: 37, xor const: 0
	uint32 PLFCIIAEIFC = 14; // offset: 44, xor const: 15792
	uint32 EINBPKAJCMM = 6; // offset: 28, xor const: 8890
	uint32 BLKEFPJKDDP = 2; // offset: 40, xor const: 1286
	uint32 APKGMCJAKBJ = 13; // offset: 32, xor const: 15734
	bool OOGLAFBDNGL = 10; // offset: 38, xor const: 0
	bool BOEBHAICPPC = 15; // offset: 39, xor const: 0
	bool BFCJAOMNIMN = 9; // offset: 36, xor const: 0
	uint32 ANGBBHIANNA = 8; // offset: 24, xor const: 15633
}

// CmdId: 2217
message JNIMLFFJAIE {
	uint64 AEDAEPKDOAL = 3; // offset: 56, xor const: 12435
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 9; // offset: 40, xor const: 12592
	IDAOCJMFOGO CPEPJEPHPBD = 7; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 48, xor const: 4232
}

message JFHMADCABCE {
	MCGJCMHBFNB FOOKMALLLDI = 10; // offset: 24, xor const: 0
}

// CmdId: 9517
message JAEEIFNBPEB {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 15224
}

message IJCHJBHDNHL {
	bool MKKJCFLOAJC = 2; // offset: 32, xor const: 0
	FGKJFCJILIL DAILJGPFGIJ = 1; // offset: 16, xor const: 0
}

// CmdId: 2748
message MECFKBEPDAK {
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 10093
	JAMIPMDCAJB PMFHKDNNKCE = 13; // offset: 24, xor const: 0
}

// CmdId: 6620
message OCHBBLNBKBJ {
	uint32 NMHNBHDEKBP = 9; // offset: 28, xor const: 1201
	uint32 LIKCOCKMCNJ = 15; // offset: 24, xor const: 6252
}

message KCLMMGAONPB {
	repeated PMFLGCCMCPP EHHADGAPJDD = 4; // offset: 16, xor const: 0
}

// CmdId: 811
message KCLKAFIBKNB {
	uint32 DCENCIPOBMC = 14; // offset: 24, xor const: 8949
}

message KLLBCHHPBPC {
	uint32 JJJJAPLJLHB = 5; // offset: 24, xor const: 12662
	bool GFNDDLECNPH = 14; // offset: 28, xor const: 0
	uint32 JHPDANKCDHB = 8; // offset: 32, xor const: 16130
}

// CmdId: 6971
message ANEPECKDJPB {
	repeated HHKCHEDCIOA OOHNLIHGLGO = 8; // offset: 16, xor const: 0
	repeated uint32 PMCODLBJDAD = 2; // offset: 32, xor const: 0
}

// CmdId: 1611
message KFIAMEKKPFJ {
	int32 IHIGNMLCHDK = 15; // offset: 32, xor const: 12580
	repeated EDFJEJPOFFP CGHFPNBMHPN = 7; // offset: 24, xor const: 0
}

// CmdId: 8193
message FCOKIHGIHAI {
	repeated uint64 JMMGDIMGEDA = 3; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 405
}

message MCLNCNGHJFI {
	ICODPOPMPIL DGDIIAIAPIN = 3; // offset: 16, xor const: 0
	FGKJFCJILIL APBDIOHLMGB = 1; // offset: 24, xor const: 0
	repeated FGKJFCJILIL MKKJCEDCDBM = 4; // offset: 48, xor const: 0
	map<int32, string> HNLPNNBBDED = 5; // offset: 32, xor const: 0
	int32 BEGGMBDFHOM = 2; // offset: 56, xor const: 0
}

message MOOANELMKLJ {
	IMJIJLIDHEC ACEMBJPDCDK = 1; // offset: 24, xor const: 0
	uint32 NGBOBBPIKJP = 2; // offset: 32, xor const: 0
}

message AKNNPLJBODI {
	repeated uint64 NMOAEDLDMCH = 14; // offset: 16, xor const: 0
}

message EEKALFLNIJI {
	bool FCFAHBDMPFD = 14; // offset: 24, xor const: 0
	uint32 NGPBOJCPLDG = 11; // offset: 32, xor const: 0
	uint32 BDHLKIBJOLN = 1; // offset: 28, xor const: 0
}

enum KJBKGHKKLKM {
	KJBKGHKKLKM_EODKGLMPNKI = 0;
	KJBKGHKKLKM_MFMEBBDPLOK = 1;
}

message GGOEPICFDKA {
	uint32 JGJGEOIBFDK = 2; // offset: 32, xor const: 7683
	uint32 LGHEBKIHJFB = 6; // offset: 24, xor const: 3355
	uint32 FAJIAJHIMAD = 7; // offset: 28, xor const: 6632
}

enum AOMLNNPHLMD {
	AOMLNNPHLMD_IEINLLIGEBD = 0;
	AOMLNNPHLMD_NANFHDGMKFA = 1;
	AOMLNNPHLMD_EEJLMLEPMDG = 2;
}

message IJAAGDDCKMM {
	PJLNMHOFNLE GOOFPKOOBKL = 1; // offset: 24, xor const: 0
}

// CmdId: 8966
message DABLMENLKFI {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 13721
}

message OKHOCEHDLDP {
	repeated string KJIDCPPPLLE = 2; // offset: 40, xor const: 0
	EDGCAIEHLHH LJCHOAPPCPB = 4; // offset: 32, xor const: 0
	CLIDAGBGAIL FDDFLDCJGCF = 1; // offset: 60, xor const: 0
	EDGCAIEHLHH GLBNCAKAGAL = 5; // offset: 48, xor const: 0
	GLAEGNJEBPA AABMKJBBCFP = 6; // offset: 56, xor const: 0
	bool BNJNDMFOGLF = 7; // offset: 64, xor const: 0
	string JBAEAFDOBLM = 3; // offset: 16, xor const: 0
}

enum PEICDDFDGOE {
	PEICDDFDGOE_JDBKLNCPODA = 0;
	PEICDDFDGOE_NCPLCOFIDGA = 1;
}

message DCOIHKKIHMC {
	FGKJFCJILIL CONOAJMMHMB = 1; // offset: 32, xor const: 0
	FGKJFCJILIL CKBOJACIJDI = 4; // offset: 16, xor const: 0
	string DDMIIIEJHPE = 3; // offset: 24, xor const: 0
	FGKJFCJILIL LHIBKOLGPPI = 2; // offset: 48, xor const: 0
	bool JEFBCDHDNNC = 5; // offset: 56, xor const: 0
}

message NGFIKMPFCLE {
	bool LLLGLALICOG = 4; // offset: 56, xor const: 0
	FLEFOKKNIKI ANGBNKMBLHI = 7; // offset: 16, xor const: 0
	FEBDNJDAJOB PAFIKANOLPH = 8; // offset: 48, xor const: 0
	repeated uint32 NBCJICPCOED = 11; // offset: 32, xor const: 0
	repeated DHDBEIFENAJ MOPAPOHKBPO = 15; // offset: 40, xor const: 0
	uint32 CPEFKLILOKO = 1; // offset: 60, xor const: 8820
}

message OCFFGKBJPOO {
	uint32 KBKLJLLBLCD = 2; // offset: 68, xor const: 0
	uint32 CBDBIPMJEPJ = 7; // offset: 44, xor const: 0
	GHHHKDCJJDH PBOAMDEBIGO = 6; // offset: 64, xor const: 0
	FHJHFMCLGJM PEHFNKFJLGC = 8; // offset: 24, xor const: 0
	uint64 OLIDNFIANHN = 5; // offset: 56, xor const: 0
	uint32 HJHFOICGOAC = 1; // offset: 40, xor const: 0
	bool PMEOGLBCMLE = 3; // offset: 48, xor const: 0
	uint64 APLHOEFIFDA = 4; // offset: 32, xor const: 0
}

// CmdId: 379
message DHMAMCLFGMA {
	int32 IHIGNMLCHDK = 7; // offset: 32, xor const: 9533
	repeated KMGBINNDBNO GAKIKGLJDPJ = 12; // offset: 24, xor const: 0
}

message KLMPJGHCFOG {
}

// CmdId: 3049
message EIDIHCNCIEG {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 3469
}

// CmdId: 583
message IDKAHIHCMKO {
	map<uint32, uint32> PMFHKDNNKCE = 5; // offset: 16, xor const: 0
}

// CmdId: 3486
message MMCCOCLICDI {
	uint32 JJHIDNMILIL = 11; // offset: 24, xor const: 15701
}

message LCLINCBCKEI {
	BHCECCECGIC KBFBDIJGDGG = 2; // offset: 32, xor const: 0
	FGKJFCJILIL NJFOLJNDPGG = 1; // offset: 24, xor const: 0
}

// CmdId: 5433
message HNLFFNPNLPO {
	int32 AMIJIAHGPMC = 12; // offset: 28, xor const: 10299
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 13273
}

// CmdId: 6080
message IMCJKLEMCEK {
	bool PDCGEGPEODA = 13; // offset: 32, xor const: 0
	repeated string PELFOOACPAA = 11; // offset: 16, xor const: 0
}

message JGOPFNMNPOE {
	repeated uint32 IGIPCIIHLIO = 11; // offset: 88, xor const: 0
	repeated AJHGKJINFHL FPDPDAGOAHC = 12; // offset: 32, xor const: 0
	repeated uint32 JIBEEEPMKCB = 6; // offset: 80, xor const: 0
	repeated AJHGKJINFHL NCDJIINHAMB = 3; // offset: 48, xor const: 0
	repeated DIBEPAPEKNF DMMJHFCFJHH = 1; // offset: 120, xor const: 0
	repeated uint32 HLIIJECJDLL = 8; // offset: 40, xor const: 0
	repeated KMIICOOLMJO IEBFEBKFMEC = 5; // offset: 128, xor const: 0
	repeated LAIFBFLGKGJ ENABAEPIFNH = 137; // offset: 72, xor const: 0
	repeated AFNFKCMCOGG AADPNMEEKPC = 15; // offset: 64, xor const: 0
	CKKOHOICDMI EDJBLOMELAJ = 681; // offset: 24, xor const: 0
	GCBNCOAGBDO CDDLDBACFPD = 1938; // offset: 56, xor const: 0
	repeated NJIAAFJAAMN PEHKCKIOLNH = 4; // offset: 96, xor const: 0
	uint32 PKGIFPAKFED = 2; // offset: 156, xor const: 9367
	uint32 IHGNLDFFFCK = 1782; // offset: 152, xor const: 16
	repeated NOADHMBHHNN OKMCJGCLNNH = 7; // offset: 104, xor const: 0
	repeated CKKOHOICDMI GCPEDDINJEN = 10; // offset: 136, xor const: 0
	repeated IEGBEGDBNGE LFEIAELMBIG = 13; // offset: 112, xor const: 0
	repeated DEEONEFIKEG EAMKLCMBLFI = 9; // offset: 16, xor const: 0
}

// CmdId: 6235
message GIGDBGMJMLE {
	HBFBNKAODPJ NLPBPGDBLEL = 9; // offset: 24, xor const: 0
	HBFBNKAODPJ GHFGIGMMOOD = 13; // offset: 40, xor const: 0
	string JLFIIBNPCAJ = 1; // offset: 32, xor const: 0
}

// CmdId: 8097
message BFALACBGFEJ {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 13363
}

// CmdId: 2225
message CFNGOGOLBIN {
	JOMMFOLEFOB CPEPJEPHPBD = 14; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 6; // offset: 48, xor const: 9594
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 1; // offset: 56, xor const: 11656
	uint32 KMKPPDICOKA = 5; // offset: 40, xor const: 9286
}

message NOKDLFAMFKJ {
	JCAIEKOGNGC KIAMDFIOGJD = 15; // offset: 16, xor const: 0
}

enum GGGDBFEAFBN {
	GGGDBFEAFBN_AMCHPBJKJJM = 0;
	GGGDBFEAFBN_CAJEHMLOFEC = 1;
}

message FMDLLLCLGEM {
	repeated GJCBLIPGEOK MHEBDCIOMAI = 15; // offset: 24, xor const: 0
	bool GACNDEKMCKB = 8; // offset: 48, xor const: 0
	int32 LACBPMGKLJB = 12; // offset: 52, xor const: 12984
	repeated JDALJGFNGEF EHHADGAPJDD = 14; // offset: 16, xor const: 0
	repeated OKHIFIKABBC PCIECDCKDAP = 11; // offset: 32, xor const: 0
	bool CBFBFJMPPHM = 10; // offset: 50, xor const: 0
	bool CAJNKCKMLGI = 7; // offset: 49, xor const: 0
}

message NDEOGEIGMDL {
	uint32 NAHIEHJOLIK = 1; // offset: 24, xor const: 0
}

enum OJFJHHMEHCP {
	OJFJHHMEHCP_CPOIMMJJCIJ = 0;
}

// CmdId: 9308
message DGAOPDOIEPI {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 6711
}

message ILPDIHMFMCO {
	repeated POGCILDLNBH OOHNLIHGLGO = 1; // offset: 16, xor const: 0
}

enum HEJIEMOJOPI {
	HEJIEMOJOPI_HHDJGLKGJOK = 0;
	HEJIEMOJOPI_FECLJFMEHPD = 1;
	HEJIEMOJOPI_FKHJFNKDBBM = 2;
}

message HIBENMJKINC {
}

// CmdId: 6935
message ACNNDNKFEMK {
}

// CmdId: 2324
message DLGLOEAGMCO {
	int32 BCMPKLAOIHK = 9; // offset: 24, xor const: 13778
}

// CmdId: 1145
message EDKKIEFAEMO {
	bool JMLECJIFDHP = 14; // offset: 28, xor const: 0
	uint32 AMIJIAHGPMC = 6; // offset: 24, xor const: 12362
	uint32 KJOGAAFMOCH = 8; // offset: 32, xor const: 5527
}

message PCMGPLJNNFN {
	repeated int32 GEAFJOJOFPD = 14; // offset: 24, xor const: 0
	int32 EBHODILBJNL = 6; // offset: 40, xor const: 3451
	int32 GMMLBEHFJIA = 8; // offset: 32, xor const: 13429
	uint32 MIKLGCDHHBD = 10; // offset: 44, xor const: 6600
	float ODADMBPJJBC = 5; // offset: 36, xor const: 0
}

message GLHHLEBGAIO {
	INLFFDKGPNK AODMMCCECAP = 12; // offset: 16, xor const: 0
	repeated uint32 JJPEOFJCLFB = 13; // offset: 32, xor const: 0
}

// CmdId: 6857
message GFOCFKJBPPM {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 4068
}

message KPOIAEDEGHG {
	int64 BPCLKADELFF = 6; // offset: 32, xor const: 15458
	uint32 OPFEAMDPIAG = 15; // offset: 24, xor const: 12141
}

message JGNGPFKIMNA {
}

// CmdId: 1276
message DLHMFMDPCMP {
	uint32 PLFCIIAEIFC = 1; // offset: 28, xor const: 12149
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 5266
}

message OPFFOJIPIOP {
	string NHEMPPCFLEN = 3; // offset: 32, xor const: 0
	uint32 FHFBFBKIDGI = 2; // offset: 44, xor const: 0
	string BPKMEHGDOJP = 4; // offset: 16, xor const: 0
	uint32 ECGHGCACHMI = 1; // offset: 40, xor const: 0
}

message HHNAOBMJPBG {
	uint32 NMCINALHOFJ = 8; // offset: 24, xor const: 13100
}

// CmdId: 714
message BIAGMICFMJA {
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 11003
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 5; // offset: 48, xor const: 4299
	uint64 HEJBMNAOJFL = 11; // offset: 40, xor const: 1112
	FDCDGMENKCB CPEPJEPHPBD = 1; // offset: 16, xor const: 0
}

message EGOODNPKPIF {
	uint32 CCKJMLAKGAL = 3; // offset: 28, xor const: 0
	uint32 FBGMLADFMJD = 2; // offset: 32, xor const: 0
	uint32 CKNCFLLNBAM = 1; // offset: 24, xor const: 0
}

message MENABIAJFMG {
	uint32 JPGOMNAOOCE = 3; // offset: 24, xor const: 713
	uint32 DFFIDJMLOGP = 15; // offset: 36, xor const: 6017
	uint32 MOIMDGDEMDJ = 13; // offset: 28, xor const: 6685
	uint32 FLGLABOOKMA = 6; // offset: 32, xor const: 9777
	uint32 AMIJIAHGPMC = 1; // offset: 48, xor const: 11170
	uint32 PKMJKCFILGN = 10; // offset: 40, xor const: 11478
	uint32 CGGFDDIJLMG = 4; // offset: 44, xor const: 10787
}

// CmdId: 6169
message ONKBNFLMJPO {
	uint32 HAJDKPEANBC = 2; // offset: 32, xor const: 13201
	repeated uint32 IEJNJKFAHNO = 12; // offset: 24, xor const: 0
}

// CmdId: 9762
message IEAJEPHJEFN {
	uint32 NJFOLJNDPGG = 6; // offset: 24, xor const: 15192
}

message AHGIAJIPFBJ {
	FGKJFCJILIL NEFAAKJKNDC = 2; // offset: 16, xor const: 0
	FGKJFCJILIL PGBADFMPAPK = 4; // offset: 40, xor const: 0
	int32 KBFBDIJGDGG = 3; // offset: 48, xor const: 0
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 32, xor const: 0
}

message JEMPIAIHAFD {
	string PGPOIMHKFPL = 1; // offset: 32, xor const: 0
	string NKNBEAHDGCH = 3; // offset: 48, xor const: 0
	string FHIIIPELENE = 2; // offset: 16, xor const: 0
	repeated BGLDMDHBGPJ DKNJIHKFFHN = 4; // offset: 40, xor const: 0
}

enum MDIHPFCHKOG {
	MDIHPFCHKOG_MAONLKCMDPB = 0;
	MDIHPFCHKOG_BOKAJGFLDCM = 1;
	MDIHPFCHKOG_DDCCPPBDFGH = 2;
}

enum CFHNKKIBNAM {
	CFHNKKIBNAM_CPDFFDCJBPO = 0;
	CFHNKKIBNAM_KCMHFMAIEML = 1;
}

message DAFOJLDLDBC {
	enum DEFEAAAFCPN {
		DEFEAAAFCPN_NONE = 0;
		DEFEAAAFCPN_AVATAR = 10;
		DEFEAAAFCPN_MONSTER = 11;
		DEFEAAAFCPN_SUMMONEE = 12;
		DEFEAAAFCPN_BUDDY = 13;
		DEFEAAAFCPN_DROP_ITEM = 14;
		DEFEAAAFCPN_SCENE_OBJECT = 15;
		DEFEAAAFCPN_MOVE_OBJECT = 16;
		DEFEAAAFCPN_DYNAMIC_OBJECT = 17;
	}

	HKPCNAJMKLE LBHIAGHACHF = 5; // offset: 16, xor const: 0
	HBFBNKAODPJ NCAGHHFDAOG = 1; // offset: 40, xor const: 0
	int32 AKGCOOBMJEO = 2; // offset: 84, xor const: 0
	map<int32, int32> KLCJNDABMOF = 7; // offset: 56, xor const: 0
	JEFNBAFJNFD NPOHODIJKJJ = 6; // offset: 32, xor const: 0
	int32 LMICCDBPCLK = 4; // offset: 88, xor const: 0
	IFGDJNNPCAN CKBOJACIJDI = 3; // offset: 48, xor const: 0
	repeated MFKDEOEHEHI BFHGCPPPEGP = 8; // offset: 64, xor const: 0
	oneof HEBJLGHGPLK {
		BHKJPOBIOOP drop_item = 14;
		FDBDPBGIPOL summonee = 12;
		ANCPNJIHBNG avatar = 10;
		OHMKDMLOGCK scene_object = 15;
		PHNCAGGGKMA buddy = 13;
		FLECAMABLMC monster = 11;
		AGMKICJMGND move_object = 16;
		DPJEPBFIJAO dynamic_object = 17;
	}
}

// CmdId: 3479
message PANADAAPIDF {
	AKIALCODKHM CPEPJEPHPBD = 10; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 13; // offset: 40, xor const: 8228
	uint64 HEJBMNAOJFL = 8; // offset: 56, xor const: 14090
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 12; // offset: 48, xor const: 7649
}

// CmdId: 8088
message CEKKADKEJGK {
	KKCGCNMCBPO HBBOACGLLAH = 4; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 2; // offset: 32, xor const: 10261
}

message PPKBKDLIEEA {
	ABMABLFFPEN AFCENAAEMKP = 12; // offset: 24, xor const: 0
}

message OLJCHNAMFJM {
	OALKEBLKKDC PBOAMDEBIGO = 1; // offset: 24, xor const: 0
}

message GAPEGNPKDFD {
	string OOOBFOIHPBB = 12; // offset: 24, xor const: 0
	repeated NBHJJOOPEBK KHAMMCKMMEM = 7; // offset: 32, xor const: 0
	uint32 LGNMJDDJCDC = 6; // offset: 40, xor const: 4467
}

// CmdId: 5206
message OCEOODHJBFM {
}

message NEEGFIFDINO {
}

message KMHBHHCJPAH {
	int32 FKEFKOKMKHO = 9; // offset: 36, xor const: 4444
	int32 HCDCMIAKHOF = 7; // offset: 32, xor const: 12597
	uint32 PGBEANGMHMB = 12; // offset: 28, xor const: 14011
	bool IACKCNHEGKD = 13; // offset: 24, xor const: 0
	int32 PBOAMDEBIGO = 14; // offset: 40, xor const: 14370
}

enum LOBHKAIOGMM {
	LOBHKAIOGMM_OCNHNFBBOLK = 0;
	LOBHKAIOGMM_PNKLMCBNJKF = 1;
}

enum OIKFOOLONNP {
	OIKFOOLONNP_NJEBJCBMBIH = 0;
	OIKFOOLONNP_OBNIFEGKLCO = 1;
	OIKFOOLONNP_GJFGGINDMAM = 2;
	OIKFOOLONNP_NAOCOCKKODO = 3;
	OIKFOOLONNP_IOFAFCDKJIG = 4;
}

message HCBOKOMEOFG {
	repeated JCBCELCIMCG KMNALNKDFAH = 2; // offset: 24, xor const: 0
	PMAONELDKME MAKPAFIJCDE = 1; // offset: 16, xor const: 0
}

message NKODBJJPPJM {
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 24, xor const: 0
	FGKJFCJILIL AACOGNFLAAB = 1; // offset: 32, xor const: 0
}

enum GGBPEFDOKAF {
	GGBPEFDOKAF_IHOEFDEKMLC = 0;
	GGBPEFDOKAF_BJGBNCNELJN = 1;
}

message MHKFJNKNFLL {
	map<uint32, uint32> ENNIIAIBLDD = 1; // offset: 16, xor const: 0
}

message HIJJJDACHNI {
	repeated IMBJGILDJFM GNMELFAIDKE = 6; // offset: 72, xor const: 0
	repeated LAEMDNOJPAI FCDOBDJBNOG = 1; // offset: 24, xor const: 0
	repeated NOMIIFBEMDC GENOMLAJKBJ = 2; // offset: 64, xor const: 0
	FGKJFCJILIL CDDEEKBKHON = 4; // offset: 40, xor const: 0
	repeated IMHMHBLEKDN AKEHGHFJLJE = 8; // offset: 56, xor const: 0
	string OMLJLHMIMBG = 3; // offset: 32, xor const: 0
	repeated LJHFJAGEHNM KGMHHNFAKDB = 9; // offset: 48, xor const: 0
}

// CmdId: 7082
message ONIIGEMEKKF {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 570
	repeated HGEEALEMNCN AFCENAAEMKP = 15; // offset: 24, xor const: 0
}

message LBMDDCONGEM {
	PCMGPLJNNFN KMFKGJIDDOK = 2; // offset: 32, xor const: 0
	uint64 NCAGHHFDAOG = 4; // offset: 56, xor const: 16051
	MCICCJPNHGK HKHDEMMBFFK = 6; // offset: 48, xor const: 0
	LIPILJCHNGP FAKKGPCCDND = 15; // offset: 40, xor const: 0
	uint32 MIKLGCDHHBD = 13; // offset: 64, xor const: 4196
	OJDNKGDPOED HBADKBNPKBP = 1; // offset: 24, xor const: 0
}

message FNGMJFNBPHK {
	int32 PHCBPCMCPJM = 1; // offset: 24, xor const: 0
}

message PCJDFOHEHNP {
	bool EGDCIABKIHK = 6; // offset: 52, xor const: 0
	bool DEIBBAPEJPM = 5; // offset: 54, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 2; // offset: 32, xor const: 0
	bool MCNCILCODJH = 7; // offset: 53, xor const: 0
	FGKJFCJILIL AHBHFCFFCHI = 3; // offset: 40, xor const: 0
	FGKJFCJILIL EANHFCMGEFH = 4; // offset: 24, xor const: 0
	HIJPOABGBKK KBFBDIJGDGG = 1; // offset: 48, xor const: 0
}

// CmdId: 4010
message ODNKAPDJLFA {
	uint32 IKDJDPPLNOM = 2; // offset: 24, xor const: 683
}

message GONJGADJFMJ {
	FGKJFCJILIL JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

// CmdId: 6856
message PGNDKFDKNNB {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 3390
}

// CmdId: 7325
message NNMFMBIDOFN {
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 2798
	uint64 HEJBMNAOJFL = 13; // offset: 40, xor const: 1757
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 32, xor const: 0
	ILFEFKBHBHH CPEPJEPHPBD = 12; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 56, xor const: 11843
}

// CmdId: 4421
message NEPAINOGBMO {
	string KOOBCJHIBBC = 11; // offset: 16, xor const: 0
	uint32 DCENCIPOBMC = 13; // offset: 32, xor const: 4750
}

// CmdId: 5082
message GEGBIPJBKPC {
	IKFDMBEJANI LPIJOJGKLFN = 1381; // offset: 56, xor const: 0
	OFJDNHNILNO OICEGAEGDFL = 1374; // offset: 216, xor const: 0
	PCHCHAKNJNI CGPAAKFPHHF = 4; // offset: 88, xor const: 0
	GDCKMGCOCHJ CHEKBAFGPEA = 1873; // offset: 128, xor const: 0
	LGKALNKDEGA ACHGMDKGPHD = 2; // offset: 136, xor const: 0
	repeated DDIKOKDDHEC FCGGCJLJLPK = 1525; // offset: 224, xor const: 0
	HPCKGLFHMMP FKGNFFFFDCM = 15; // offset: 264, xor const: 0
	BGNMDPNGLML EMFMOIMILEH = 1262; // offset: 176, xor const: 0
	KOGIHOEFDGJ MCGHAFLMODP = 6; // offset: 280, xor const: 0
	INCKKFJBPJN EMDGDDFKIEL = 7; // offset: 248, xor const: 0
	MKBNDBCGBLO OOOHBJMLDGO = 5; // offset: 120, xor const: 0
	JDDAEEHADIL HBNDGOFBBGP = 9; // offset: 144, xor const: 0
	NDBHAKHEHEC FKCDBHFFFHO = 1332; // offset: 208, xor const: 0
	HJGGFKCNIHB FAAKEBPKMED = 603; // offset: 240, xor const: 0
	EKJHJEBADMP GJEMHCIACHP = 1265; // offset: 80, xor const: 0
	KLBFGFCEEAH BHCKFEAOLCC = 1082; // offset: 312, xor const: 0
	CKDCMBIFFCN BHOAACIKHOL = 10; // offset: 272, xor const: 0
	HOKGEIJJPIG DDJGCBMELJA = 1163; // offset: 192, xor const: 0
	JLDPHEFGADM FNKOFICDOBJ = 902; // offset: 40, xor const: 0
	AFJCAHFKNFI GPPPGJBAPKC = 1448; // offset: 72, xor const: 0
	DDIKOKDDHEC NJBLIJGEKLF = 1107; // offset: 32, xor const: 0
	CNLHCEOBHJJ FBEFAMHECHD = 1042; // offset: 112, xor const: 0
	bool IACNJDFJLGN = 47; // offset: 369, xor const: 0
	PJLAEGMFLNF DLJLCMCFEPA = 398; // offset: 256, xor const: 0
	BOLCAIPBDEN IKLEAHDFGHK = 14; // offset: 24, xor const: 0
	KGCACIJCFBO LMMMHPBBDPP = 1577; // offset: 288, xor const: 0
	NAIDPBHHFBH NNBDFMGBFMD = 8; // offset: 104, xor const: 0
	LDPHANHKEKG MEFCHKCHLMP = 1199; // offset: 184, xor const: 0
	JBFKHOEBGNA BMOBHFHBPBI = 720; // offset: 96, xor const: 0
	KDFMOPLIKFL GCLJKKGCCAB = 11; // offset: 352, xor const: 0
	CMLNPBMPNIH COMCHHNFEGK = 3; // offset: 168, xor const: 0
	bool BJKHOKABPAO = 526; // offset: 368, xor const: 0
	OIADPILGLNM CGCIDNAKBAC = 1284; // offset: 16, xor const: 0
	DAFHCNAEJAH CICFDOEAHPJ = 498; // offset: 328, xor const: 0
	BMEJIIJLNEF DELDODCEGPH = 1595; // offset: 200, xor const: 0
	AAKKMPHCOEM OMGMCEDMCBP = 13; // offset: 336, xor const: 0
	JEELBGCGAAL NBMDHNDBADO = 127; // offset: 320, xor const: 0
	FDDFIHINGGK HJDHGNALFHA = 936; // offset: 160, xor const: 0
	AIMLOOKKKKP ABOJEKKJAPE = 1193; // offset: 296, xor const: 0
	FNPEOJEEEND POJHAIGGEGN = 853; // offset: 344, xor const: 0
	GHDIOHNDCLL NNANBCMLFBL = 764; // offset: 304, xor const: 0
	GLGGALGECIA KDAIEAPJOBH = 1; // offset: 232, xor const: 0
	FMDLLLCLGEM PJPAADLAPAH = 823; // offset: 48, xor const: 0
	PFGLMOLMHBN IDKEIOOFGAA = 153; // offset: 360, xor const: 0
	CBHKALIEDPD NJNDFBAIPGA = 12; // offset: 152, xor const: 0
}

// CmdId: 4467
message MKOCGENFJNC {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 10672
}

// CmdId: 6972
message NFOGFKONIFJ {
	repeated JDMJIPGGLMG NAHLOOAEAEJ = 7; // offset: 24, xor const: 0
}

// CmdId: 8711
message JPFMCFAHEDO {
	repeated string MOKPIAGBPHJ = 6; // offset: 16, xor const: 0
	uint32 DCPCOMIKGNC = 12; // offset: 40, xor const: 5578
	repeated uint32 LNGPEFIOEFH = 7; // offset: 24, xor const: 0
}

message NCEKLLIDMOL {
	repeated int32 GKHOIBHIOBG = 8; // offset: 24, xor const: 0
	BDEANJLNPKC DDMIPKHLKDL = 11; // offset: 96, xor const: 0
	repeated int32 CPGFCDELMLO = 9; // offset: 72, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 2; // offset: 40, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 5; // offset: 48, xor const: 0
	LEHENCIPJIE MPOLOJLNGDL = 1; // offset: 100, xor const: 0
	repeated int32 LBPGCMBGPIP = 7; // offset: 64, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 6; // offset: 56, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 4; // offset: 80, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 3; // offset: 88, xor const: 0
	repeated int32 GGJLPMNCDKL = 10; // offset: 32, xor const: 0
}

message NALMCJGGGMB {
	repeated uint32 MNJALECMOKD = 9; // offset: 16, xor const: 0
}

// CmdId: 2015
message BAJACDEOEBI {
	uint32 KMKPPDICOKA = 11; // offset: 56, xor const: 4527
	uint64 HEJBMNAOJFL = 10; // offset: 40, xor const: 4562
	uint64 AEDAEPKDOAL = 13; // offset: 48, xor const: 10590
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 32, xor const: 0
	LHGEAKDPGPF CPEPJEPHPBD = 14; // offset: 16, xor const: 0
}

message AJMNHBANABI {
	uint32 NBNJEFMBCEE = 15; // offset: 40, xor const: 13303
	IFPPKBAKHGA CKBOJACIJDI = 1; // offset: 24, xor const: 0
	uint32 NCAGHHFDAOG = 8; // offset: 32, xor const: 1559
	int32 KFJIBDLHPBJ = 6; // offset: 36, xor const: 2561
}

// CmdId: 9457
message EHBKDGFMCCL {
	uint32 EDPKPJBJLNM = 6; // offset: 28, xor const: 747
	uint32 NLJKCKDHMPF = 7; // offset: 24, xor const: 5843
	uint32 IKGENKKIOBI = 1; // offset: 32, xor const: 3366
}

enum KJIGHCPKPDE {
	KJIGHCPKPDE_EEEEIMOHKLF = 0;
	KJIGHCPKPDE_EIKNLKDHAIL = 1;
	KJIGHCPKPDE_GEJJONJIOPG = 2;
}

// CmdId: 5256
message LAIOPPADMAJ {
	uint32 PLFCIIAEIFC = 5; // offset: 32, xor const: 3800
	repeated uint32 ONKIDHEMGMO = 8; // offset: 24, xor const: 0
}

// CmdId: 1152
message MKIALMLHAHN {
	CCPFAOECHGC NGMBGBBGDOG = 14; // offset: 16, xor const: 0
	uint32 JBHFPIFLGEC = 2; // offset: 36, xor const: 10814
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 6937
}

// CmdId: 9659
message OFGIOHGJGMG {
	uint32 GHBECIICKAD = 13; // offset: 56, xor const: 13427
	uint32 COPMKIHONCI = 9; // offset: 36, xor const: 5002
	uint32 MALAPBBADBE = 15; // offset: 24, xor const: 3406
	uint32 OGGCAGGAKHH = 12; // offset: 28, xor const: 3732
	bool DEMGBMKOABH = 11; // offset: 40, xor const: 0
	uint32 HMPHNEOFJLF = 2; // offset: 52, xor const: 7904
	uint32 ICFLDFGAFKC = 6; // offset: 60, xor const: 3682
	uint32 BCCEOLDLIFA = 4; // offset: 32, xor const: 15349
	uint32 ALDBCKBIMNH = 1; // offset: 44, xor const: 4367
	uint32 IBOGGIOGNJF = 8; // offset: 48, xor const: 2633
}

// CmdId: 9120
message ANKBJGLAJIO {
	repeated uint32 LNGPEFIOEFH = 6; // offset: 32, xor const: 0
	repeated string MOKPIAGBPHJ = 12; // offset: 16, xor const: 0
	uint32 DCPCOMIKGNC = 9; // offset: 40, xor const: 7099
}

message GPJFDOPGKEP {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 15545
}

enum OHPEDBNLABB {
	OHPEDBNLABB_LAFPFJBJNPM = 0;
}

// CmdId: 3822
message JLBBMFDLNOA {
}

message KIKNILICNLM {
	uint32 NMJOCCKAKHA = 4; // offset: 28, xor const: 13515
	uint32 KFNPCEPNIDB = 13; // offset: 24, xor const: 10826
}

// CmdId: 6906
message AKAAHDLCCOA {
	enum JLAOCBKDDDH {
		JLAOCBKDDDH_NONE = 0;
		JLAOCBKDDDH_MP_BATTLE_INFO = 2;
		JLAOCBKDDDH_PARTY_GAME_INFO = 13;
	}

	string OFPODKIOKBK = 1; // offset: 48, xor const: 0
	FDAHEHHHBIB GMEPHOEHPIC = 12; // offset: 16, xor const: 0
	PNHMKMECKBM LKKJHFPKECH = 10; // offset: 60, xor const: 0
	bool JDMJJHOFKFB = 7; // offset: 56, xor const: 0
	IAENIOKAEPP EJNNGCMNFCH = 6; // offset: 24, xor const: 0
	oneof CPGDADLFBIM {
		FGNGODPDABF mp_battle_info = 2;
		JBHNKHNIMLN party_game_info = 13;
	}
}

message HPCGDHEPEDE {
	uint32 GNOPMPEJPHF = 11; // offset: 24, xor const: 11653
	uint32 NGPIADDBNAN = 13; // offset: 28, xor const: 8243
}

message MILBBDNFKJO {
	float LCHHEHPMLPO = 8; // offset: 24, xor const: 0
	bool EIIFFNILHII = 6; // offset: 28, xor const: 0
}

message IPNCCGGOJCO {
	string PPIEGDBFCOJ = 2; // offset: 16, xor const: 0
	int32 OAEJPMIBGDP = 1; // offset: 60, xor const: 0
	double FCEKKJNINKI = 7; // offset: 40, xor const: 0
	int32 LGFHKMGKCDG = 6; // offset: 48, xor const: 0
	KEGNCKBIEJM NHHELNHMIPJ = 3; // offset: 56, xor const: 0
	string BHIHEJNJCCJ = 4; // offset: 32, xor const: 0
	bool NEKDGPFIBOM = 5; // offset: 52, xor const: 0
}

enum ELDNDBDEOMM {
	ELDNDBDEOMM_GKMMCLGPFEE = 0;
}

message MAEEGPCMAKC {
	repeated NINCKOKAFPJ KANNIAKOPCL = 12; // offset: 16, xor const: 0
	repeated OJJDLLFLHHP NNKDOJEMFHE = 15; // offset: 24, xor const: 0
}

message APHKLOHIBBN {
	bool BOEBHAICPPC = 2; // offset: 32, xor const: 0
	uint32 EAMDIAKEFMI = 1; // offset: 36, xor const: 0
	EDGCAIEHLHH HLADBGMOMGH = 3; // offset: 16, xor const: 0
}

enum EOCGBNHBMAL {
	EOCGBNHBMAL_AOHDIFOEGJE = 0;
	EOCGBNHBMAL_ONPPBMGOIIC = 1;
	EOCGBNHBMAL_MHPLHAGJLOB = 2;
	EOCGBNHBMAL_HOOIIELIPEN = 3;
	EOCGBNHBMAL_BPCFAJPFLPC = 4;
}

message EABIBGKJBBF {
	repeated BGBCMCFAKPL ONDKOLPNHLO = 3; // offset: 24, xor const: 0
	repeated ODMPEFMGNKF CINLLDANPHN = 4; // offset: 16, xor const: 0
	FGKJFCJILIL KMJBJLCIBNI = 1; // offset: 40, xor const: 0
	FGKJFCJILIL LGACBJMGNKH = 2; // offset: 32, xor const: 0
}

// CmdId: 9793
message NDDIFOKOEPD {
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 5; // offset: 56, xor const: 1754
	uint64 HEJBMNAOJFL = 8; // offset: 40, xor const: 3581
	ECKLMIMFPCL CPEPJEPHPBD = 4; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 6; // offset: 48, xor const: 12767
}

message GALIHFEDNPE {
}

enum AIAFJKKNJMI {
	AIAFJKKNJMI_NGGHAFICNML = 0;
	AIAFJKKNJMI_MEOLKNOLACH = 1;
	AIAFJKKNJMI_NFEIKLOCMGN = 2;
}

message ONKGKNAGPMH {
}

message FEKEALPCBBE {
	INLFFDKGPNK AODMMCCECAP = 5; // offset: 24, xor const: 0
}

message EPLIHEBECAG {
	bool MALAOMAKEPB = 1; // offset: 24, xor const: 0
}

// CmdId: 3421
message JCJFJFCGGAC {
	repeated LCFIKODLLON CFILHFPJKMG = 10; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 9; // offset: 32, xor const: 14786
	bool HPFJEMIIFLA = 14; // offset: 36, xor const: 0
}

message IFPPKBAKHGA {
	int32 EFJPPJJFNJM = 7; // offset: 24, xor const: 15049
	int32 AEIHIBLACCM = 4; // offset: 28, xor const: 15048
}

enum JMFHGAMPCIP {
	JMFHGAMPCIP_NLONFMCOBAD = 0;
}

message GDOMDIIDCOD {
	FGKJFCJILIL AMIJIAHGPMC = 1; // offset: 24, xor const: 0
}

message BFKHMGBDHFN {
	FGKJFCJILIL OKAINAFBHOF = 2; // offset: 16, xor const: 0
	FGKJFCJILIL NLPFGFMMJJO = 1; // offset: 24, xor const: 0
}

message KOLGGBMDDOO {
	repeated uint32 KBEGCHNENHA = 15; // offset: 48, xor const: 0
	repeated BPCHABAHAPA CCMNBFIEMFL = 2; // offset: 32, xor const: 0
	bool PAOGLKDLPPG = 12; // offset: 56, xor const: 0
	repeated uint32 BBFEDPBAPGM = 3; // offset: 24, xor const: 0
	repeated uint32 COOLODFHKPO = 1; // offset: 16, xor const: 0
}

message BIFLMGLOEKD {
	uint32 CNNFHILKJPI = 1; // offset: 24, xor const: 0
}

enum AimRectColor {
	AIM_RECT_COLOR_AIM_RECT_COLOR_NONE = 0;
	AIM_RECT_COLOR_AIM_RECT_COLOR_GREEN = 1;
	AIM_RECT_COLOR_AIM_RECT_COLOR_RED = 2;
}

message GDNDILLEIHD {
	uint32 BOFLBMIHJAM = 1; // offset: 24, xor const: 0
}

message OMLDHANIEGM {
	double BCBICNIDNHF = 10; // offset: 88, xor const: 0
	bool LNAFPANPEOB = 5; // offset: 52, xor const: 0
	double OLFEOOHBPEN = 15; // offset: 64, xor const: 0
	double NDIBKPELMOC = 12; // offset: 56, xor const: 0
	bool KLGLPIPIMFO = 8; // offset: 53, xor const: 0
	double GIFHENNPOEF = 3; // offset: 80, xor const: 0
	map<uint32, string> HNLPNNBBDED = 7; // offset: 16, xor const: 0
	bool KKFHMPFGPKG = 1; // offset: 55, xor const: 0
	double EKOCCHOGBEL = 6; // offset: 72, xor const: 0
	int32 BEGGMBDFHOM = 13; // offset: 48, xor const: 10014
	string MPHLIEKKFIK = 9; // offset: 24, xor const: 0
	bool HOJDKEFMOBH = 4; // offset: 54, xor const: 0
	repeated EDBFCIANEAO MLENPAKNFBL = 14; // offset: 40, xor const: 0
}

// CmdId: 4318
message OKPHOBKLFDI {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 10215
}

message EFPODNIAMMI {
	string DICHOLEBGIH = 1; // offset: 16, xor const: 0
	bool FJLKHHDAKFA = 3; // offset: 36, xor const: 0
	int32 MBFAFFLKBME = 2; // offset: 32, xor const: 0
}

message ILFILLBKGFA {
	int32 KBFBDIJGDGG = 2; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 24, xor const: 0
}

message FHBCHKAHGMN {
	int32 DAILJGPFGIJ = 1; // offset: 28, xor const: 0
	bool MKKJCFLOAJC = 2; // offset: 24, xor const: 0
}

// CmdId: 1766
message MMAELEJPDDD {
	uint32 AMIJIAHGPMC = 3; // offset: 24, xor const: 13480
}

// CmdId: 1575
message NBEGHDMKFDE {
	uint32 CFFJGPJECBK = 13; // offset: 24, xor const: 7527
}

message EAALECJCOKC {
	repeated int32 PIDCICHMOKE = 9; // offset: 24, xor const: 0
	repeated int32 DCHDPJALODJ = 15; // offset: 16, xor const: 0
}

message HEOBEBDOKDH {
	bool HODOMMBIDEK = 1; // offset: 24, xor const: 0
}

message DOCFPPKNEBO {
	FGKJFCJILIL MNOOLAJMEAD = 4; // offset: 16, xor const: 0
	bool MJJDECLGGOD = 1; // offset: 48, xor const: 0
	FGKJFCJILIL INACMNNDLBO = 2; // offset: 32, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 3; // offset: 24, xor const: 0
}

enum HKLHGGAEOCJ {
	HKLHGGAEOCJ_JKEODIMPMAH = 0;
	HKLHGGAEOCJ_MAPLNAAEHLD = 1;
	HKLHGGAEOCJ_ICONLKNKOHN = 2;
	HKLHGGAEOCJ_FGFOEIBNMME = 3;
}

// CmdId: 6369
message EMMOFGJKJDB {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 9629
}

enum ONLBAGACGAI {
	ONLBAGACGAI_FOAABJDKCOG = 0;
	ONLBAGACGAI_KJLGELFDBHA = 1;
	ONLBAGACGAI_GPNGNIJHGLI = 2;
}

message OOPHBKJJPCG {
}

// CmdId: 3059
message HOLEMPOLKNO {
	bool JMNIJLIMLMC = 13; // offset: 32, xor const: 0
	repeated EBDAIGALHDI DGELDLHJHAA = 9; // offset: 16, xor const: 0
}

message IIHPIFHLCFP {
	uint32 EGCHHEJAMPD = 5; // offset: 48, xor const: 0
	FGKJFCJILIL CKEALEBCPAA = 3; // offset: 24, xor const: 0
	FGKJFCJILIL FJFGAPOFNJH = 2; // offset: 40, xor const: 0
	FGKJFCJILIL FHIIIPELENE = 1; // offset: 16, xor const: 0
	uint32 GPOGNDBOCPC = 4; // offset: 52, xor const: 0
}

message GANGIAAKOEL {
	FGKJFCJILIL LGACBJMGNKH = 2; // offset: 24, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 40, xor const: 0
	repeated BGBCMCFAKPL ONDKOLPNHLO = 3; // offset: 32, xor const: 0
	HollowEntityType AKGNDIDKHGO = 4; // offset: 48, xor const: 0
}

// CmdId: 2980
message GJFCHPMLCKN {
	DHHDGKMFLNB OAEJPMIBGDP = 2; // offset: 32, xor const: 0
	string OGDINHBBPOA = 10; // offset: 16, xor const: 0
	bool KHGLCJHJDGD = 6; // offset: 36, xor const: 0
	uint32 DCENCIPOBMC = 1; // offset: 40, xor const: 1706
	uint32 KMJBJLCIBNI = 7; // offset: 52, xor const: 9138
	uint32 PHLHADCPFHF = 9; // offset: 48, xor const: 4602
	uint32 AGDDDGNMKPE = 8; // offset: 44, xor const: 8103
}

// CmdId: 1578
message FAFPOFLHNAO {
	bool DNHEODGDCMN = 7; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 28, xor const: 489
}

message ONIAFONDFHP {
	bool BEPCPAFDEMP = 7; // offset: 35, xor const: 0
	bool MALAOMAKEPB = 1; // offset: 34, xor const: 0
	uint32 EBLEALAIENH = 4; // offset: 36, xor const: 0
	bool ECOKDEDFAIK = 3; // offset: 33, xor const: 0
	bool HKOCFKBBMJF = 2; // offset: 32, xor const: 0
	OLPBIDDABFD PDLDLOHPLEJ = 6; // offset: 24, xor const: 0
	uint32 ELIHGIDOGEJ = 5; // offset: 40, xor const: 0
}

message EEGNGPOKAOJ {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 3266
	repeated DDNJFBPLHBO KHCNECFENAG = 13; // offset: 24, xor const: 0
}

enum MMAHEBIOHKB {
	MMAHEBIOHKB_FMGCMJMJMHM = 0;
	MMAHEBIOHKB_NNLBBONOIAJ = 1;
	MMAHEBIOHKB_BDADMCBCHJK = 2;
	MMAHEBIOHKB_ALBGEPDNNDO = 3;
	MMAHEBIOHKB_CLBNAMHINLB = 4;
	MMAHEBIOHKB_GGIJMOLIEND = 5;
	MMAHEBIOHKB_JFMIFJJHFHL = 6;
	MMAHEBIOHKB_IEKFOMIFFLC = 7;
}

message LAEIDAJPAMD {
	JHMNLJCGIGJ NKEDDJKGOPI = 4; // offset: 16, xor const: 0
	uint32 EAFLFKCFANH = 9; // offset: 32, xor const: 8315
}

enum DKNLLCLGBMK {
	DKNLLCLGBMK_OFJOMEHFKIE = 0;
	DKNLLCLGBMK_GKNJMMFBPFH = 1;
	DKNLLCLGBMK_GDKIEFFEIEP = 2;
	DKNLLCLGBMK_MLFNEIHFAJK = 3;
}

enum MCBCEJKHAGI {
	MCBCEJKHAGI_BIONMBIDNEC = 0;
	MCBCEJKHAGI_OOFKKEJBDAK = 1;
	MCBCEJKHAGI_AAKJGIOICIM = 2;
}

// CmdId: 3528
message MAJEIEAAIIL {
	int32 IHIGNMLCHDK = 8; // offset: 32, xor const: 5707
	repeated ADLBPLIHAFC LNNOMPNEPNA = 1; // offset: 16, xor const: 0
}

message CPPLMJHLIPF {
	EFBNADIGKGE PBOAMDEBIGO = 1; // offset: 24, xor const: 0
}

// CmdId: 8742
message HGGIBOGABJC {
	IMJIJLIDHEC CAEPOMEOOLO = 8; // offset: 32, xor const: 0
	uint32 KCJLECGKGKL = 14; // offset: 40, xor const: 8913
	IMJIJLIDHEC FCFCDCLHHNN = 3; // offset: 16, xor const: 0
	bool IEMKAPBCECA = 13; // offset: 60, xor const: 0
	FNDECKNKCIJ MDFKPGBALJI = 11; // offset: 48, xor const: 0
	int32 ICGKJCMGHGI = 10; // offset: 44, xor const: 5207
	uint32 LKMFIMMEAAD = 6; // offset: 56, xor const: 7288
	uint32 LBFKENOEOHF = 5; // offset: 52, xor const: 12459
}

// CmdId: 2751
message FIBGEHBHPLI {
	bool ALPLGBAEPOJ = 15; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 13; // offset: 28, xor const: 10321
}

// CmdId: 5088
message IHOPHMPBJCC {
	int32 APBDIOHLMGB = 10; // offset: 24, xor const: 9155
}

message LIIFIIOEJOK {
}

message ACIOABMJAJH {
	FGKJFCJILIL AMIJIAHGPMC = 1; // offset: 24, xor const: 0
}

message LDIOEKLBBDI {
	repeated FGKJFCJILIL JJNHKELHECP = 2; // offset: 32, xor const: 0
	repeated FGKJFCJILIL MNIHGAGLCMP = 1; // offset: 24, xor const: 0
	repeated FGKJFCJILIL HPIDODDAHNI = 3; // offset: 16, xor const: 0
	repeated FGKJFCJILIL MHMPFOKEOHL = 4; // offset: 48, xor const: 0
}

message OANENBPMALI {
	bool INBENOIMHAO = 9; // offset: 104, xor const: 0
	string CFDADOHPPNI = 3; // offset: 48, xor const: 0
	FGKJFCJILIL IONKFAMHHBD = 8; // offset: 32, xor const: 0
	uint32 CBELLMGEFDA = 11; // offset: 108, xor const: 0
	FGKJFCJILIL COPPIDLDGPF = 7; // offset: 24, xor const: 0
	FGKJFCJILIL GPMMDGNHBLJ = 4; // offset: 96, xor const: 0
	int32 GIIDABOKJDH = 13; // offset: 112, xor const: 0
	FGKJFCJILIL BBHOCMGEKEJ = 6; // offset: 16, xor const: 0
	string DMICGIPOOGF = 1; // offset: 56, xor const: 0
	FGKJFCJILIL MEPDLLGAFEE = 2; // offset: 40, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 5; // offset: 72, xor const: 0
	repeated HGIPJOCNKDF NKBIMCNHCOI = 10; // offset: 80, xor const: 0
	repeated uint32 KAPHIGAFCGA = 12; // offset: 88, xor const: 0
}

message OADFGALEEIK {
	bool PPKOKAKLAIN = 15; // offset: 28, xor const: 0
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 10599
}

enum AFKEKCNBNHJ {
	AFKEKCNBNHJ_MFLMIBBEFKO = 0;
	AFKEKCNBNHJ_OJFPBPAIAIK = 1;
	AFKEKCNBNHJ_BIAFDJPCGEH = 2;
}

enum EGAGOLDHFKH {
	EGAGOLDHFKH_REFRESH_AUTO = 0;
	EGAGOLDHFKH_REFRESH_TRUE = 1;
	EGAGOLDHFKH_REFRESH_FALSE = 2;
}

enum ENGOAMNLENO {
	ENGOAMNLENO_OINDNCAJCNG = 0;
	ENGOAMNLENO_CCOHKJGBFAL = 1;
	ENGOAMNLENO_GMHMEGGLCLK = 2;
}

enum OAFBFNEKLEE {
	OAFBFNEKLEE_BUBBLE_INSERT_TYPE_NONE = 0;
	OAFBFNEKLEE_BUBBLE_INSERT_TYPE_BEGIN = 1;
	OAFBFNEKLEE_EBUBBLE_INSERT_TYPE_ND = 2;
	OAFBFNEKLEE_DBUBBLE_INSERT_TYPE_URATION = 3;
}

message AOHHJMAEPMM {
	int32 DNAENEJOADB = 6; // offset: 44, xor const: 9255
	bool NHEEIDPPAAP = 5; // offset: 24, xor const: 0
	uint32 NPOIOKADNFA = 2; // offset: 40, xor const: 854
	uint64 HEJBMNAOJFL = 4; // offset: 32, xor const: 5836
}

message HPCKGLFHMMP {
	repeated uint32 NHKBCENPDMA = 2; // offset: 16, xor const: 0
	bool KKLHNHBKFDM = 14; // offset: 65, xor const: 0
	bool OCOJPIDDKIN = 6; // offset: 64, xor const: 0
	repeated uint32 IMDHBHGLEFE = 10; // offset: 56, xor const: 0
	repeated int32 DALBJGKKDAC = 3; // offset: 32, xor const: 0
	map<uint32, uint32> JMBNGNMDIGA = 13; // offset: 40, xor const: 0
	uint32 JOPKNFKKKLI = 5; // offset: 72, xor const: 6153
	uint32 JEABLEIPFMJ = 15; // offset: 68, xor const: 2810
	repeated uint32 LALIKMDHCHJ = 4; // offset: 48, xor const: 0
}

message IBFAIHONKOE {
	string FCHNHEJBNOG = 21; // offset: 88, xor const: 0
	repeated FGKJFCJILIL KFKPONLJDPM = 8; // offset: 104, xor const: 0
	FGKJFCJILIL MDEBHDLCALH = 7; // offset: 56, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 9; // offset: 16, xor const: 0
	APABMNLCAMO FIHDOKPOBDK = 1; // offset: 160, xor const: 0
	repeated FGKJFCJILIL LMOLLBOEGEH = 15; // offset: 128, xor const: 0
	bool BJLJJHNJDJB = 17; // offset: 159, xor const: 0
	repeated FGKJFCJILIL ACMFLJDGOEF = 12; // offset: 80, xor const: 0
	bool GMCNGBPBOJC = 16; // offset: 158, xor const: 0
	FGKJFCJILIL ONGHHPFFNPL = 18; // offset: 96, xor const: 0
	repeated FGKJFCJILIL BCHMFALGALA = 14; // offset: 40, xor const: 0
	FGKJFCJILIL ONIJOBCFHED = 6; // offset: 144, xor const: 0
	FGKJFCJILIL BKBGBJHLNFA = 4; // offset: 136, xor const: 0
	repeated FGKJFCJILIL JBKEBHIPLPP = 11; // offset: 72, xor const: 0
	FGKJFCJILIL CLAPEIBGOMD = 3; // offset: 24, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 5; // offset: 64, xor const: 0
	LEHENCIPJIE HKJGLBFDMIF = 2; // offset: 152, xor const: 0
	bool ENFPIALNLIJ = 19; // offset: 156, xor const: 0
	repeated FGKJFCJILIL GJBPAJLCDKJ = 10; // offset: 32, xor const: 0
	repeated FGKJFCJILIL JLIEOBCLOKO = 22; // offset: 120, xor const: 0
	bool BGJEJPBLMDF = 20; // offset: 157, xor const: 0
	repeated FGKJFCJILIL GECCHBHNBJB = 13; // offset: 48, xor const: 0
}

message FLJACNGIIGH {
	uint32 DEFFOFMKOFG = 8; // offset: 24, xor const: 7918
}

// CmdId: 2340
message CAJPJNLFNEG {
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 2; // offset: 40, xor const: 3401
	uint32 KMKPPDICOKA = 8; // offset: 56, xor const: 14011
	uint64 AEDAEPKDOAL = 7; // offset: 48, xor const: 9431
	CHBCCCKDOOD CPEPJEPHPBD = 12; // offset: 16, xor const: 0
}

// CmdId: 2753
message JPNFNEABGMM {
	int64 IMBKLJJDBJA = 15; // offset: 24, xor const: 9872
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 1222
}

message NFLFJMDAMGB {
	repeated int32 JIGPCMFODKD = 4; // offset: 16, xor const: 0
	repeated KABDNAMHDHG DKNEIMJBHDM = 3; // offset: 24, xor const: 0
}

message MBLFBFGOAGC {
	bool COALJDMLICD = 6; // offset: 32, xor const: 0
	uint32 NIJLEDIPBGF = 12; // offset: 36, xor const: 8910
	repeated CALMNENKOHH BBCMGLFKBLF = 4; // offset: 16, xor const: 0
}

// CmdId: 3458
message BKILBGAPLGO {
	repeated uint32 DOEOLLNDLMF = 9; // offset: 16, xor const: 0
	CLMDILKJFOL MPKEEGCKPFD = 8; // offset: 32, xor const: 0
}

message NBPGIDMONOL {
	AOOFLMBFHHP OHCHGMHAABJ = 2; // offset: 72, xor const: 0
	string FHIIIPELENE = 1; // offset: 32, xor const: 0
	repeated HKOFKFMGODC HFPEBMAHCEA = 7; // offset: 56, xor const: 0
	FGKJFCJILIL BENNHKHKELC = 3; // offset: 40, xor const: 0
	repeated HKOFKFMGODC ALLMEBMKONG = 6; // offset: 48, xor const: 0
	repeated KCOGKMCKAEN DKNJIHKFFHN = 4; // offset: 16, xor const: 0
	FGKJFCJILIL FMFBALBHPOF = 5; // offset: 24, xor const: 0
}

enum NodeVisible {
	NODE_VISIBLE_NODE_VISIBLE_ALL = 0;
	NODE_VISIBLE_VISIBLE = 1;
	NODE_VISIBLE_VISIBLE_AT_GRID_AROUND = 2;
	NODE_VISIBLE_VISIBLE_BY_TRIGGER_EVENT = 3;
	NODE_VISIBLE_TEMPORARY_VISIBLE_AT_AROUND = 4;
	NODE_VISIBLE_BLOCKED = 5;
}

message AMOBDKHMEBE {
	uint32 KJOOPDCDHNE = 1; // offset: 36, xor const: 0
	uint32 HEEKOOMEBOG = 2; // offset: 32, xor const: 0
	string LPEKBBJAKBP = 3; // offset: 24, xor const: 0
	bool PAGEDJGPPJE = 4; // offset: 41, xor const: 0
	bool HBFALCHNCLF = 5; // offset: 40, xor const: 0
}

message HKHKFBIJJCD {
	uint32 HEEKOOMEBOG = 2; // offset: 44, xor const: 0
	BMCHAGEMDJP BPIOGPIFLDE = 3; // offset: 16, xor const: 0
	int32 IFNNCGDEFJD = 4; // offset: 48, xor const: 0
	repeated uint32 PIJLBHGOHOO = 5; // offset: 32, xor const: 0
	uint32 KFBCDDCIKAM = 1; // offset: 40, xor const: 0
	uint32 PNGLCJLGABP = 6; // offset: 52, xor const: 0
}

message HEJJNBDAGIG {
	JLNLHBOGFII ACEMBJPDCDK = 10; // offset: 24, xor const: 0
	uint32 NCAGHHFDAOG = 15; // offset: 32, xor const: 10304
}

enum FBGHBKBFFBK {
	FBGHBKBFFBK_NLDMECODCMD = 0;
	FBGHBKBFFBK_GBHKCAODCAC = 1;
	FBGHBKBFFBK_LCPBGEICGMJ = 2;
}

message LENNFEEDOJP {
	repeated FGKJFCJILIL GPFNPNDPMPC = 3; // offset: 16, xor const: 0
	FGKJFCJILIL DLFCPOIEBAN = 1; // offset: 32, xor const: 0
	bool LLNHMALLDFD = 5; // offset: 48, xor const: 0
	FGKJFCJILIL BCLKGNKJEMF = 2; // offset: 24, xor const: 0
	BDEANJLNPKC DDMIPKHLKDL = 4; // offset: 52, xor const: 0
}

message FMOPANNNOCI {
	FGKJFCJILIL PJFLHPDGIGO = 1; // offset: 16, xor const: 0
}

// CmdId: 5006
message AONNFGLICLI {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 14587
}

enum GBHAELPJFEO {
	GBHAELPJFEO_EBAEOPAJCON = 0;
}

message JDMJIPGGLMG {
	int32 ENCANOPLLDM = 10; // offset: 28, xor const: 12835
	BCGDAFBAGFD HLEAEPDDBLE = 11; // offset: 24, xor const: 0
}

message HLGDHJAOIOB {
	uint32 PNPDINELBEE = 7; // offset: 72, xor const: 0
	string NKCCJMIAOHB = 6; // offset: 24, xor const: 0
	uint32 CPEGDKBNGDH = 4; // offset: 52, xor const: 0
	uint32 PGPOIMHKFPL = 10; // offset: 76, xor const: 0
	uint32 PGNHCFJNBAC = 3; // offset: 68, xor const: 0
	uint32 PBGJGMJEEGH = 11; // offset: 56, xor const: 0
	string KNEPHHIBEOP = 5; // offset: 32, xor const: 0
	uint32 AMIJIAHGPMC = 8; // offset: 64, xor const: 0
	string JJOBDEFMGEA = 2; // offset: 16, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 48, xor const: 0
	bool CJCHOLMIIDM = 9; // offset: 60, xor const: 0
}

enum HNDMNOEKHIL {
	HNDMNOEKHIL_PEGFGPHBLMK = 0;
	HNDMNOEKHIL_MNBDLJEOIKA = 1;
	HNDMNOEKHIL_NCAKMGHLMBB = 2;
	HNDMNOEKHIL_GHOANGBCOBG = 3;
}

enum MBMMFGAADHF {
	MBMMFGAADHF_OHDHKBJGDED = 0;
	MBMMFGAADHF_GNEFPAAADPG = 1;
	MBMMFGAADHF_GNPCKKGOMCA = 2;
	MBMMFGAADHF_KGNELMBPPJB = 3;
}

enum BGEBIEPLIIN {
	BGEBIEPLIIN_FCMKBHOCHEH = 0;
	BGEBIEPLIIN_AJEEFFCPGNC = 1;
	BGEBIEPLIIN_HJALKDKEBEM = 2;
	BGEBIEPLIIN_HJDLODHHHEO = 4;
	BGEBIEPLIIN_NFDKBEOHIPK = 8;
}

// CmdId: 2998
message MPGOEANLIBA {
	repeated uint32 NLJNPENCPFO = 4; // offset: 24, xor const: 0
}

message LNODHGJPJIO {
	int32 GNBFPEIBLDK = 2; // offset: 36, xor const: 196
	int32 CLIOOGMIIIP = 5; // offset: 28, xor const: 2067
	int32 LCPDGEFCADA = 15; // offset: 32, xor const: 8101
	int32 LGLGBJONIFO = 7; // offset: 24, xor const: 7676
}

// CmdId: 2248
message FOEKEHAFDAL {
	uint64 HEJBMNAOJFL = 7; // offset: 40, xor const: 12757
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 24, xor const: 0
	FOHEJDIEIEB CPEPJEPHPBD = 13; // offset: 32, xor const: 0
	uint32 KMKPPDICOKA = 2; // offset: 56, xor const: 8553
	uint64 AEDAEPKDOAL = 5; // offset: 48, xor const: 9582
}

// CmdId: 7975
message IIIGHCOCLPG {
	uint32 LLNPIFPKJGM = 8; // offset: 28, xor const: 3630
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 11777
}

// CmdId: 8062
message LMLNJDLLKJI {
	int32 IHIGNMLCHDK = 8; // offset: 28, xor const: 2634
	bool KHOGCGJIFDG = 13; // offset: 24, xor const: 0
}

// CmdId: 5667
message CBBCMICODKP {
	uint32 GFCLKDAOMBM = 7; // offset: 24, xor const: 13610
	int32 KDMDEBIBENP = 5; // offset: 28, xor const: 5461
}

enum PHFJPCHBLPC {
	PHFJPCHBLPC_GREATER = 0;
	PHFJPCHBLPC_GREATER_EQUAL = 1;
	PHFJPCHBLPC_EQUAL = 2;
	PHFJPCHBLPC_LESS = 3;
	PHFJPCHBLPC_LESS_EQUAL = 4;
	PHFJPCHBLPC_NOT_EQUAL = 6;
}

// CmdId: 8261
message OILDMLCECNM {
	string MPHLIEKKFIK = 14; // offset: 16, xor const: 0
	uint32 MHINMINPONI = 6; // offset: 32, xor const: 9477
}

message FGEJBMFNFIO {
	int32 OLJICNLKCBG = 1; // offset: 24, xor const: 0
	bool NGKODAGJNMI = 2; // offset: 32, xor const: 0
	int32 LPEKBBJAKBP = 3; // offset: 28, xor const: 0
}

message DMHBAKDEAHH {
	AGDMNOGHNEE AFAHJLBFLBL = 2; // offset: 24, xor const: 0
}

message KIDPHCMBOAH {
	int64 KCDAILEMPKE = 12; // offset: 24, xor const: 11283
}

message IMDCCMAKBDB {
	repeated EDGCAIEHLHH DBMGECDBLOD = 1; // offset: 16, xor const: 0
}

// CmdId: 9691
message HNHIDFPFFLI {
	uint32 LJEHCDLJOIG = 3; // offset: 32, xor const: 3569
	string GACIFFBDGCF = 15; // offset: 24, xor const: 0
}

// CmdId: 8825
message PKNMCPNKLIE {
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 9620
}

message GOCACFNKEPL {
	EGMFOFFEAKK HLEAEPDDBLE = 2; // offset: 64, xor const: 0
	string EHIJDBIDDPG = 6; // offset: 48, xor const: 0
	string JEKJNJMFMML = 7; // offset: 56, xor const: 0
	string JNPEOOCMNKC = 5; // offset: 40, xor const: 0
	bool BJDMBECLGBE = 3; // offset: 68, xor const: 0
	string HMFDILBMLDP = 4; // offset: 16, xor const: 0
	string PECAFAPOHND = 1; // offset: 24, xor const: 0
}

enum OEABJPKBMNI {
	OEABJPKBMNI_HMAPLDPCKEN = 0;
	OEABJPKBMNI_GGMFEKJFAFB = 1;
	OEABJPKBMNI_EECALJGCGFE = 2;
}

message JIINNFLKPAE {
}

message AHNENPPHPLD {
	uint32 CMPLBHPIBLF = 4; // offset: 40, xor const: 15039
	uint32 KEIPIHKKBNH = 7; // offset: 36, xor const: 5753
	uint32 PHBHHMFAMOO = 9; // offset: 32, xor const: 8340
	repeated JKHNMPEIHFB INNLDHJAENF = 5; // offset: 24, xor const: 0
}

// CmdId: 1287
message GAIIAGOGJPD {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 10857
}

// CmdId: 3675
message MBJGIKAGCNI {
	uint32 NKMEBFEBGPH = 8; // offset: 28, xor const: 4817
	uint32 IPADEMLINMB = 3; // offset: 24, xor const: 15856
	bool HNDCBPADDHG = 13; // offset: 32, xor const: 0
}

enum IOHJLHCJMPD {
	IOHJLHCJMPD_PPJONGOIGJG = 0;
	IOHJLHCJMPD_FEJOEPLMJPI = 1;
	IOHJLHCJMPD_DEFIDIBPNGK = 2;
	IOHJLHCJMPD_FLFBCJFJLJG = 3;
}

message KDKCCFHNNHO {
	repeated uint32 LJIKAOCDPHC = 8; // offset: 24, xor const: 0
}

message DELHIJFCGOI {
	KKPIOBCAGAF PBOAMDEBIGO = 7; // offset: 28, xor const: 0
	uint32 MNHMFPCHHDF = 2; // offset: 24, xor const: 9195
}

// CmdId: 6474
message AEANKEDLKHP {
	uint32 DCENCIPOBMC = 5; // offset: 24, xor const: 15457
	int32 IHIGNMLCHDK = 12; // offset: 28, xor const: 6814
}

// CmdId: 5716
message EEHIDMLCCFH {
	uint32 KMKPPDICOKA = 2; // offset: 48, xor const: 15635
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 32, xor const: 0
	HBHCPICAGFN CPEPJEPHPBD = 14; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 40, xor const: 9694
	uint64 HEJBMNAOJFL = 4; // offset: 56, xor const: 4768
}

message PEBKNADKNBD {
	uint32 AFJOGKIENOC = 1; // offset: 24, xor const: 0
}

message NGIGLFDFAKH {
	repeated IHNPCNCGBDK ONDKOLPNHLO = 1; // offset: 16, xor const: 0
}

// CmdId: 8501
message LJGBHGBIOCN {
	NMPODFNEICE CPEPJEPHPBD = 15; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 5; // offset: 56, xor const: 12847
	uint64 HEJBMNAOJFL = 3; // offset: 40, xor const: 8387
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 6; // offset: 48, xor const: 432
}

// CmdId: 7806
message LECHGOACLGM {
	uint32 OLLGOHGDBPE = 9; // offset: 44, xor const: 8377
	CKKOHOICDMI EDJBLOMELAJ = 2; // offset: 24, xor const: 0
	GCBNCOAGBDO CDDLDBACFPD = 14; // offset: 32, xor const: 0
	uint32 IKBIHNMFEBA = 7; // offset: 40, xor const: 3352
}

// CmdId: 6467
message FPGEMDNNIJA {
	int32 IHIGNMLCHDK = 5; // offset: 36, xor const: 4812
	repeated CEIFHIKPEDF OPLLBPEOOGE = 15; // offset: 16, xor const: 0
	uint32 OJDHLPPEHAB = 3; // offset: 32, xor const: 15783
}

enum PCGCOKKCJLE {
	PCGCOKKCJLE_RP_RECOMMEND_RESULT_NONE = 0;
	PCGCOKKCJLE_RP_RECOMMEND_RESULT_SUCC = 1;
	PCGCOKKCJLE_RP_RECOMMEND_RESULT_FAIL = 2;
}

// CmdId: 188
message HAINCNABCPH {
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 12550
	LECIHLEDELK KCPGPPBCEHL = 9; // offset: 16, xor const: 0
}

message ENMJFIONPCL {
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 16, xor const: 0
}

// CmdId: 8110
message MBMDPECPHKH {
}

message ICFGODJBAOM {
	uint32 MBOABCJENFG = 12; // offset: 36, xor const: 6418
	repeated uint32 ONKIDHEMGMO = 3; // offset: 24, xor const: 0
	bool GBKNCJDLDJB = 8; // offset: 32, xor const: 0
}

message DGONDOCDDPI {
	uint32 PCJIIBJKJDJ = 4; // offset: 48, xor const: 0
	FGKJFCJILIL NBCKDCGDMOG = 3; // offset: 32, xor const: 0
	FGKJFCJILIL PEDKNCIMHLA = 1; // offset: 40, xor const: 0
	repeated string JGGKGHJMDFA = 2; // offset: 24, xor const: 0
}

message LBPLKMLFGFI {
	bool CGCJILBNFLN = 5; // offset: 42, xor const: 0
	FGKJFCJILIL HCIKOCHONNP = 1; // offset: 16, xor const: 0
	bool ONEBMNEOBNA = 4; // offset: 40, xor const: 0
	bool NAODGHJGPGE = 6; // offset: 41, xor const: 0
	PBADIIBPLCN AJNAAAHKKKA = 7; // offset: 32, xor const: 0
	uint32 PEOCJCBFHJE = 2; // offset: 36, xor const: 0
	uint32 MPCJAJNKKDE = 3; // offset: 44, xor const: 0
}

// CmdId: 8558
message CFNFAMFKMGN {
	uint32 EKLGNOIEMLA = 15; // offset: 24, xor const: 6542
}

enum JOIFNMPMDHI {
	JOIFNMPMDHI_MFABBEICBEH = 0;
	JOIFNMPMDHI_GPHIICMJIBN = 1;
	JOIFNMPMDHI_GEMELEOAHPJ = 2;
	JOIFNMPMDHI_LGFKAIGNFLJ = 3;
	JOIFNMPMDHI_ODFOGDIHKOD = 4;
}

// CmdId: 7647
message IDFFLLMOJEN {
}

enum HIJPOABGBKK {
	HIJPOABGBKK_DO_ADD = 0;
	HIJPOABGBKK_DO_REMOVE = 1;
}

// CmdId: 7450
message EIIBFLPEGOJ {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 11913
}

// CmdId: 1860
message ICINCAHOKKH {
	bytes CPEPJEPHPBD = 14; // offset: 24, xor const: 0
}

message FDFFGHBCJOM {
	uint32 NCAGHHFDAOG = 10; // offset: 28, xor const: 2659
	int32 HHFJCCDOMGK = 12; // offset: 36, xor const: 9971
	int32 MHJBMLNIGCJ = 14; // offset: 32, xor const: 2055
	int32 GCMKCJCFDOL = 13; // offset: 24, xor const: 3888
}

// CmdId: 7158
message CDBOLEJOBLK {
	LOPNINEKJEL CPEPJEPHPBD = 4; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 14; // offset: 56, xor const: 2657
	uint64 AEDAEPKDOAL = 15; // offset: 48, xor const: 4534
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 11881
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 24, xor const: 0
}

message IHPKAAFEBCH {
	uint32 BFFPIMBNPOJ = 11; // offset: 56, xor const: 0
	bool MOBHKEDBILB = 9; // offset: 52, xor const: 0
	uint32 IHIEIMELEEH = 2; // offset: 60, xor const: 0
	repeated BMCHAGEMDJP BHNAECDIIOC = 7; // offset: 16, xor const: 0
	uint32 HHJAHEDAPIE = 5; // offset: 48, xor const: 0
	int32 NODBAHCCOBD = 3; // offset: 68, xor const: 0
	uint32 IHHFMBNACIF = 10; // offset: 64, xor const: 0
	map<string, uint32> MNCFGBGOEPO = 8; // offset: 40, xor const: 0
	uint32 HJHFOICGOAC = 1; // offset: 72, xor const: 0
	uint32 OHCIOPAIBKK = 4; // offset: 76, xor const: 0
	map<uint32, uint32> DAJKECDLLEC = 6; // offset: 24, xor const: 0
}

message LDGOJOCFIIB {
	string APBDIOHLMGB = 1; // offset: 32, xor const: 0
	repeated FGKJFCJILIL MKKJCEDCDBM = 4; // offset: 40, xor const: 0
	ICODPOPMPIL DGDIIAIAPIN = 3; // offset: 48, xor const: 0
	int32 BEGGMBDFHOM = 2; // offset: 56, xor const: 0
	map<int32, string> HNLPNNBBDED = 5; // offset: 24, xor const: 0
}

// CmdId: 6591
message FKCNMFAPACG {
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 16, xor const: 0
	GMIHONLPHLL CPEPJEPHPBD = 8; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 6975
	uint64 HEJBMNAOJFL = 4; // offset: 56, xor const: 8993
	uint32 KMKPPDICOKA = 1; // offset: 48, xor const: 7507
}

// CmdId: 7507
message FKBDOBKLHNG {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 6703
}

message KFIKIOIFIJH {
	int32 MCDHHLKDBDB = 4; // offset: 44, xor const: 1639
	uint64 BMPIBAFKBOI = 1; // offset: 24, xor const: 8636
	int32 MLKHOCBGJFP = 13; // offset: 36, xor const: 7188
	bool IACKCNHEGKD = 3; // offset: 48, xor const: 0
	int32 CHPOBAPJEAP = 7; // offset: 52, xor const: 9133
	int32 DCKANAHNNKD = 9; // offset: 40, xor const: 15211
	int32 PMJDODFLAIB = 14; // offset: 56, xor const: 1449
	int32 MHOKNPBNIDP = 15; // offset: 32, xor const: 1624
}

message EPGPLJJPCPP {
	int64 JMPKNEPPJMA = 7; // offset: 32, xor const: 10076
	int32 NIHNHKHNIFM = 10; // offset: 52, xor const: 7332
	int32 ECAPMCDCLJF = 4; // offset: 24, xor const: 11207
	int32 PPCILPIKLKM = 5; // offset: 40, xor const: 13555
	int32 PLFCIIAEIFC = 11; // offset: 48, xor const: 4807
	int32 JDLHFPGIAAH = 1; // offset: 44, xor const: 397
}

// CmdId: 1185
message KCLCLBAMOJB {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 5999
}

enum OHBCGKMCLLC {
	OHBCGKMCLLC_FAKKPHJJAGB = 0;
	OHBCGKMCLLC_AMCPOAOJMOH = 1;
	OHBCGKMCLLC_CMOEFEEIPMH = 100;
	OHBCGKMCLLC_LHJOCKDJBCL = 101;
	OHBCGKMCLLC_JIHCJDILLCP = 102;
	OHBCGKMCLLC_DDGMCDJKMCN = 103;
}

message CPCMBNGLEHM {
	IHHJNHHDNHN JDDNAHKAFIK = 1; // offset: 32, xor const: 0
	FGKJFCJILIL CMEKBIGGDMF = 2; // offset: 16, xor const: 0
}

enum KGMNLEAKEBJ {
	KGMNLEAKEBJ_KNKFFHOOHAJ = 0;
	KGMNLEAKEBJ_OJOOBBOKIKE = 1;
}

message HFPDGINGAJC {
	bool LOCCBCHMHBJ = 1; // offset: 24, xor const: 0
	int32 CGFKPEHPMHP = 2; // offset: 28, xor const: 0
}

enum EIHHHKMLNGI {
	EIHHHKMLNGI_CBBEOHEPGPI = 0;
	EIHHHKMLNGI_PJDNGLGPMIB = 1;
	EIHHHKMLNGI_MDPGIGFGGEJ = 2;
}

// CmdId: 5105
message MKJEHGPEEEJ {
	GEHKNLCAAOE AADKLGBDEFO = 12; // offset: 16, xor const: 0
	uint32 JPNBOODNEFB = 8; // offset: 40, xor const: 3028
	repeated LAPENMBKAJH EPDLJMJMHDK = 15; // offset: 24, xor const: 0
}

// CmdId: 7112
message OGDIOMGGIHC {
}

message LBGEHFDIOHB {
	bool KLOGAIOIGEO = 1; // offset: 24, xor const: 0
}

enum CLPGLOLILFF {
	CLPGLOLILFF_MODIFY_ADD = 0;
	CLPGLOLILFF_MODIFY_REPLACE = 1;
	CLPGLOLILFF_MODIFY_REDUCE = 2;
}

enum HFDDBLCIAJG {
	HFDDBLCIAJG_GDDJCLNDBCL = 0;
	HFDDBLCIAJG_GBKAPOHMPKL = 1;
	HFDDBLCIAJG_EOLJKPGNLJL = 2;
	HFDDBLCIAJG_HAHMBJMJENG = 3;
	HFDDBLCIAJG_CIDLKMBDNGO = 4;
	HFDDBLCIAJG_DHJDEBKGPAE = 5;
}

// CmdId: 7351
message IDAMAMGFJII {
	uint32 JFOEEJABPGO = 8; // offset: 28, xor const: 6245
	uint32 PLFCIIAEIFC = 1; // offset: 24, xor const: 11137
}

// CmdId: 6291
message POJBODFLGGL {
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 11329
	map<uint32, GKDEKBPAIAG> ONBALIGFGJK = 8; // offset: 16, xor const: 0
}

message HLBFEFKEJBE {
	repeated JLPFPMJIFIK GJHPDKHHONE = 2; // offset: 24, xor const: 0
	uint32 BEKFLJGFLJD = 1; // offset: 32, xor const: 0
}

// CmdId: 5149
message OOIHEJLFPJO {
	repeated MEEJJPAAPCG KJNBHEIJBGM = 14; // offset: 24, xor const: 0
}

message MAIPCLCILCA {
	INLFFDKGPNK AODMMCCECAP = 3; // offset: 16, xor const: 0
}

message AGLILFJFGKA {
	bool LLDNDIBFPGE = 11; // offset: 36, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 32, xor const: 10925
	repeated PFLKLLCBJAO EOJMIINOIOM = 10; // offset: 16, xor const: 0
}

// CmdId: 146
message MCCLAOAPHAP {
	repeated IMJOMAPGGCB AFCENAAEMKP = 5; // offset: 24, xor const: 0
	bool BKFADLJNBPJ = 2; // offset: 36, xor const: 0
	uint32 GFCLKDAOMBM = 15; // offset: 32, xor const: 10885
}

message DCACAOCFDLI {
	bool IKDCPEPLLBE = 1; // offset: 24, xor const: 0
}

// CmdId: 759
message ABKKBADECBE {
	uint32 CPEGDKBNGDH = 1; // offset: 24, xor const: 5526
}

message IMCBPOHMJDC {
	ENCGALKCOHD POFMLBLCCHP = 4; // offset: 16, xor const: 0
	uint32 NCAGHHFDAOG = 7; // offset: 32, xor const: 8547
}

// CmdId: 505
message ADMGDNMECGL {
	uint32 BCMPKLAOIHK = 11; // offset: 28, xor const: 1979
	uint32 HNCCBHBOJGE = 6; // offset: 24, xor const: 5209
}

enum LBLLOOPIFFC {
	LBLLOOPIFFC_GKDICBDPEFM = 0;
	LBLLOOPIFFC_CMCKEEEDKDF = 1;
	LBLLOOPIFFC_JAMCGOPNMAE = 2;
	LBLLOOPIFFC_BICBCOLFIDB = 3;
	LBLLOOPIFFC_GIGCFPFHGIF = 4;
	LBLLOOPIFFC_NPDACKMKCFN = 5;
	LBLLOOPIFFC_PIEFPPJBPDM = 6;
	LBLLOOPIFFC_BGPFEKLMGCO = 7;
	LBLLOOPIFFC_KLIIOKCECIE = 8;
	LBLLOOPIFFC_GPAJFMDLBML = 9;
	LBLLOOPIFFC_HMMOOEKBMND = 11;
	LBLLOOPIFFC_OPEAFCJLGNL = 12;
	LBLLOOPIFFC_IOOOCNOAIAD = 13;
	LBLLOOPIFFC_HFAMGPHMCLO = 14;
	LBLLOOPIFFC_GKDIDKALJEF = 15;
	LBLLOOPIFFC_OFMBMEGBKDP = 101;
	LBLLOOPIFFC_LJGEBFINJOE = 102;
	LBLLOOPIFFC_LBJLGHOHCLN = 103;
	LBLLOOPIFFC_PHEACMECMBD = 104;
	LBLLOOPIFFC_HMCHHMAHFNF = 105;
	LBLLOOPIFFC_HLLDJDFDOFO = 106;
	LBLLOOPIFFC_OCAJHBDLDEE = 107;
	LBLLOOPIFFC_JPNBNNOCNAC = 108;
	LBLLOOPIFFC_AJOKNEAKBFK = 109;
	LBLLOOPIFFC_EGNKFAPCFJH = 110;
	LBLLOOPIFFC_HPGEPPFMCAD = 111;
	LBLLOOPIFFC_DFNELFOKDHN = 112;
	LBLLOOPIFFC_DIBIPKNBNPM = 113;
	LBLLOOPIFFC_JNMIEIOKINK = 114;
	LBLLOOPIFFC_DIIDHMEDHNJ = 115;
	LBLLOOPIFFC_FOFDBDEPNOC = 116;
	LBLLOOPIFFC_BPJBFINBPMN = 117;
	LBLLOOPIFFC_HGBIPALOCAL = 118;
	LBLLOOPIFFC_AKOFGDAADFM = 119;
	LBLLOOPIFFC_CHGMBGCEGNL = 120;
	LBLLOOPIFFC_HKDHCAHABFF = 121;
	LBLLOOPIFFC_LMMEAIFLNBL = 122;
	LBLLOOPIFFC_MNOPKKPMGKD = 123;
	LBLLOOPIFFC_HIBNDJAHCFJ = 124;
	LBLLOOPIFFC_IMPDKKDNJKL = 125;
	LBLLOOPIFFC_NBEIJPIAFCF = 126;
	LBLLOOPIFFC_HACDHLPHKFN = 127;
	LBLLOOPIFFC_ABBOFCLAIMF = 128;
	LBLLOOPIFFC_JMGPGLBCFDP = 129;
	LBLLOOPIFFC_EEIFJMHELNM = 130;
	LBLLOOPIFFC_AMHHJGBGIEN = 131;
	LBLLOOPIFFC_IJALJDNKDBI = 132;
	LBLLOOPIFFC_IAOMJIPHCLH = 133;
	LBLLOOPIFFC_ODCFIJPDLJK = 134;
	LBLLOOPIFFC_EFAIGHHNAOP = 998;
	LBLLOOPIFFC_CCDCBCGCPKE = 999;
}

// CmdId: 4513
message BPPNGLKMNLD {
	uint64 AEDAEPKDOAL = 2; // offset: 56, xor const: 5512
	repeated DNKAFLFNDHF POPGNHJNLCC = 11; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 15; // offset: 40, xor const: 7240
	uint64 HEJBMNAOJFL = 3; // offset: 48, xor const: 10234
	EOLFNBDOMAN CPEPJEPHPBD = 14; // offset: 32, xor const: 0
}

// CmdId: 3381
message MLJCIBFDNBE {
	uint32 DJOKBCBOMAC = 15; // offset: 24, xor const: 770
}

message BMFILAJPFMC {
	int32 GGNKBBEPPHA = 13; // offset: 32, xor const: 6561
	repeated DCECDPPFNGC BACKBCOIHOH = 7; // offset: 24, xor const: 0
}

// CmdId: 4132
message HKKJDEAGAJJ {
}

message PNGGDHKELKE {
	map<uint32, OMDDFOOEMAA> BDBJGLMOJGN = 1; // offset: 16, xor const: 0
}

// CmdId: 7959
message FGFPGNANLCA {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 2765
}

message DHJEHGBGMAD {
	FGKJFCJILIL CAAMGIAGHIE = 2; // offset: 16, xor const: 0
	FGKJFCJILIL LJEHCDLJOIG = 1; // offset: 24, xor const: 0
}

// CmdId: 9397
message AHAGGJNAKDN {
	uint32 PLBMNDKCBAG = 5; // offset: 28, xor const: 8173
	uint32 DIPDCCLHGEL = 7; // offset: 24, xor const: 9982
}

message DBCDKLMELEF {
	uint32 BCMPKLAOIHK = 2; // offset: 28, xor const: 0
	int32 NBCKDCGDMOG = 3; // offset: 24, xor const: 0
	uint32 PCJIIBJKJDJ = 4; // offset: 36, xor const: 0
	int32 PEDKNCIMHLA = 1; // offset: 32, xor const: 0
}

message PCHHBCGBMFG {
	int32 PFPNIHLKLEO = 6; // offset: 52, xor const: 0
	IMJIJLIDHEC GLBNCAKAGAL = 4; // offset: 40, xor const: 0
	uint32 EFNFANEIJMH = 1; // offset: 56, xor const: 0
	IMJIJLIDHEC LJCHOAPPCPB = 3; // offset: 24, xor const: 0
	int32 ECCPBAANOOJ = 5; // offset: 48, xor const: 0
	IMJIJLIDHEC ACEMBJPDCDK = 2; // offset: 32, xor const: 0
}

message ELGOIFPDEHD {
	map<uint64, KIPGCAMBLCM> FMDDDPHMNJN = 1; // offset: 16, xor const: 0
	map<int32, KIPGCAMBLCM> DDIKGAKALMN = 12; // offset: 24, xor const: 0
}

message CAELFNHONHD {
	bool DLFDBILCKIB = 7; // offset: 32, xor const: 0
	uint32 PGNHCFJNBAC = 11; // offset: 40, xor const: 14743
	uint32 IIIGDHJPFMI = 15; // offset: 36, xor const: 10834
	string JJOBDEFMGEA = 12; // offset: 16, xor const: 0
}

message CHIBGLBJALM {
	int32 JFNKJPCIOGM = 1; // offset: 24, xor const: 0
}

message OFIIFKENFKF {
	FGKJFCJILIL IOEFEPHHDEI = 1; // offset: 24, xor const: 0
	repeated ONPIIJJMEIF NABLGPNCKKF = 2; // offset: 16, xor const: 0
}

// CmdId: 1869
message PMLOACCKCIE {
	uint32 JPEPDHLHFKD = 15; // offset: 32, xor const: 11358
	IMJIJLIDHEC ELGLOBKHGDP = 9; // offset: 24, xor const: 0
}

message PIKFEFBGDKK {
	repeated NMFOCGHDMCM JOKOHDHNHDM = 13; // offset: 16, xor const: 0
}

// CmdId: 8595
message PJEOBADIHDK {
	uint32 MJMJPCCAPNE = 3; // offset: 28, xor const: 13145
	uint32 EELDLMADHPK = 10; // offset: 24, xor const: 6441
}

message NAIDPBHHFBH {
	repeated CBLMJKPANPI BBNFHKLPKCJ = 1; // offset: 72, xor const: 0
	repeated GJGEFNGDAAI HBCFONDIMLH = 9; // offset: 88, xor const: 0
	repeated uint32 KOPPAFHNCOO = 3; // offset: 32, xor const: 0
	repeated uint32 HAGAPPKDFGH = 13; // offset: 56, xor const: 0
	repeated uint32 NMLBIEONLBF = 11; // offset: 40, xor const: 0
	repeated uint32 LKJKNDNEMPN = 2; // offset: 24, xor const: 0
	bool LCGOJIGPACO = 5; // offset: 100, xor const: 0
	repeated uint32 HEEHBIJLGDJ = 8; // offset: 64, xor const: 0
	map<uint32, int32> COCDKBNGNPP = 4; // offset: 16, xor const: 0
	uint32 IOKAKHFJEGB = 6; // offset: 96, xor const: 4961
	repeated uint32 KLNICPAMMEI = 14; // offset: 80, xor const: 0
}

enum JCNCCGPPMFO {
	JCNCCGPPMFO_LKLJMPPFLKG = 0;
	JCNCCGPPMFO_PCJMNKMLBOI = 1;
	JCNCCGPPMFO_KIHONDDKDGP = 2;
	JCNCCGPPMFO_NGIBEPPFNCP = 3;
	JCNCCGPPMFO_PLFPIFEFHPD = 4;
	JCNCCGPPMFO_EDMADJKMONJ = 5;
}

enum FBKOGGAEADJ {
	FBKOGGAEADJ_GACDGOFFMAH = 0;
	FBKOGGAEADJ_ECMPBDNKCDC = 6602;
}

message NKIGCLEHHME {
}

// CmdId: 228
message NPFEHBDADME {
	repeated int32 OMFCBFIPNON = 5; // offset: 24, xor const: 0
}

// CmdId: 9600
message GKMGJOHMHFD {
}

enum BAKCFADLCEF {
	BAKCFADLCEF_GUEST_STATUS_NONE = 0;
	BAKCFADLCEF_GUEST_STATUS_SUCCESS = 1;
	BAKCFADLCEF_GUEST_STATUS_FAIL = 2;
	BAKCFADLCEF_GUEST_STATUS_CLOSE_QUEST = 3;
}

message CNPGHJLFMFB {
	FGKJFCJILIL LPEKBBJAKBP = 1; // offset: 16, xor const: 0
	OGDDEEAOAMK ALJDMENJNMI = 2; // offset: 32, xor const: 0
}

enum KABNJDPHKNB {
	KABNJDPHKNB_AMOGLDMFFEJ = 0;
	KABNJDPHKNB_KELAFPLKMOF = 1;
}

// CmdId: 1679
message OOEPPHHMELB {
	int32 IHIGNMLCHDK = 12; // offset: 36, xor const: 9246
	bool ALHPHKFKOEA = 6; // offset: 32, xor const: 0
	EHCDJPNIAHC NOEILDHEMEK = 8; // offset: 24, xor const: 0
}

message ADLBPLIHAFC {
	int64 FNHCLGNDFCP = 3; // offset: 32, xor const: 0
	uint32 IIIGDHJPFMI = 1; // offset: 24, xor const: 0
	bool FFODBEHPODO = 2; // offset: 44, xor const: 0
	int32 MPIJKLDBGNA = 4; // offset: 40, xor const: 0
}

// CmdId: 7715
message CPBJLIBBIHF {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 9925
}

enum NHADEHAABGK {
	NHADEHAABGK_APDFFGCKLPB = 0;
	NHADEHAABGK_MHOFNMGFHFF = 5;
}

message FFDPHNIOKFD {
	repeated int32 MAJALPLMDBO = 8; // offset: 16, xor const: 0
	repeated int32 JICLPHPLODM = 5; // offset: 32, xor const: 0
	repeated int32 EPBIJNNMMHI = 4; // offset: 24, xor const: 0
}

// CmdId: 985
message MOPGBILHDGI {
}

// CmdId: 8181
message LJIEMNHPFLO {
}

// CmdId: 3968
message PEDMOABPOLG {
}

message DHEOMBFKEAK {
	uint32 NKHMBCNPMOJ = 3; // offset: 24, xor const: 11964
	uint32 GBDIIDOJFLD = 9; // offset: 28, xor const: 6105
}

// CmdId: 178
message INDDFNKIINM {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 2969
}

// CmdId: 9172
message POOEECKDOEE {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 14063
}

message LDOMGHJBIOF {
	uint32 NKNJOBJHCPI = 35; // offset: 136, xor const: 0
	int32 MBABMAGHDAD = 12; // offset: 104, xor const: 0
	int32 HLFGCKDCLNO = 18; // offset: 80, xor const: 0
	repeated KLKLNMDNLKC MFIEOCAPNBG = 29; // offset: 40, xor const: 0
	int32 NOLEKELHABA = 5; // offset: 108, xor const: 0
	uint32 FCNLGLHKOCB = 34; // offset: 144, xor const: 0
	int32 LBAMCDFALMG = 16; // offset: 72, xor const: 0
	int32 BPIDLBJCKJL = 23; // offset: 64, xor const: 0
	int32 EMMLLHBLNBK = 19; // offset: 176, xor const: 0
	repeated EHMGDCOJEMF GGANGPGAGIA = 14; // offset: 48, xor const: 0
	uint32 FOHDMLKJCCO = 32; // offset: 116, xor const: 0
	int32 BNFCMHPMEJE = 15; // offset: 156, xor const: 0
	int32 LEOMAHBENHH = 30; // offset: 148, xor const: 0
	int32 OCGHENIKGBA = 10; // offset: 180, xor const: 0
	int64 JCMAEJNHNOH = 2; // offset: 96, xor const: 0
	repeated EDPCMPOLEAC HBBEEMPEACC = 21; // offset: 16, xor const: 0
	int32 CGKDEHCHBDJ = 22; // offset: 172, xor const: 0
	int32 AMIJIAHGPMC = 1; // offset: 160, xor const: 0
	int32 KDPPHGKLIEA = 3; // offset: 132, xor const: 0
	uint32 EJGCEOOIEMG = 33; // offset: 152, xor const: 0
	int32 FCNIKFEJMFI = 37; // offset: 168, xor const: 0
	int32 KOMIMFNADCM = 7; // offset: 140, xor const: 0
	int32 MABKAGLICPL = 25; // offset: 60, xor const: 0
	int32 OKPHHPOAKMM = 36; // offset: 56, xor const: 0
	int32 GJKPGBIALLL = 31; // offset: 92, xor const: 0
	int32 GGCMOKKEBCN = 4; // offset: 124, xor const: 0
	int32 POKAIAOPKHH = 38; // offset: 88, xor const: 0
	int32 PHLPFLOFMNI = 13; // offset: 164, xor const: 0
	int32 MKEOKMKNCHA = 8; // offset: 84, xor const: 0
	int32 CGDENKCGJOD = 17; // offset: 76, xor const: 0
	int32 EFBGPFGLADD = 24; // offset: 68, xor const: 0
	int32 MBDDPINLOGI = 11; // offset: 120, xor const: 0
	repeated DCEPFFPLOLM ONJLPHMDONA = 20; // offset: 32, xor const: 0
	int32 EBDKFCKDGIO = 9; // offset: 128, xor const: 0
	int32 EFCFBIFDBJF = 6; // offset: 112, xor const: 0
}

message NONFGDAFAMC {
}

message PALKPBLIFMA {
	FGKJFCJILIL NMHNBHDEKBP = 1; // offset: 24, xor const: 0
}

// CmdId: 2979
message FIJFLJIOHMK {
	uint32 EKLGNOIEMLA = 10; // offset: 24, xor const: 6627
	uint32 IAGMHLGLNEI = 7; // offset: 28, xor const: 6546
}

message CBAKOKKLELN {
}

message MODMJCJGGHP {
}

// CmdId: 4452
message NEBDPJMIILJ {
	uint32 BCCEOLDLIFA = 5; // offset: 32, xor const: 14362
	string EBGONDCPMJO = 15; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 12; // offset: 40, xor const: 13520
	uint32 BHDLCHFDHNO = 14; // offset: 36, xor const: 12413
}

message LGKEBCCADII {
	repeated FGKJFCJILIL NPEFFKFJFCP = 2; // offset: 56, xor const: 0
	repeated FGKJFCJILIL AHPEDNEOCKK = 5; // offset: 16, xor const: 0
	repeated FGKJFCJILIL PDEJFBLBKPN = 6; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 4; // offset: 24, xor const: 0
	repeated FGKJFCJILIL BPINHPPKMIP = 7; // offset: 64, xor const: 0
	FGKJFCJILIL NMHNBHDEKBP = 1; // offset: 48, xor const: 0
}

message DDHEFCBNEFE {
	repeated uint32 HBMIPIMNKBJ = 14; // offset: 24, xor const: 0
	bool HDHMCDFLEOG = 7; // offset: 48, xor const: 0
	int64 ODJBLJOHKIF = 5; // offset: 40, xor const: 11047
	repeated uint32 PBLJNLLDPGP = 8; // offset: 16, xor const: 0
}

// CmdId: 4406
message MBNPKDNGADD {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 14297
}

message DNCIBDKEJAL {
	uint32 OPOBAMBNKCC = 12; // offset: 32, xor const: 11351
	uint32 LANJNPHPJEH = 13; // offset: 36, xor const: 11203
	uint32 DEFFOFMKOFG = 3; // offset: 56, xor const: 7645
	repeated uint32 LCPCGHDKDHG = 9; // offset: 24, xor const: 0
	uint32 LBGDLDMAMAO = 4; // offset: 44, xor const: 15428
	uint32 DMFDGCDNHDE = 1; // offset: 48, xor const: 15057
	uint32 JOOOICHOOPK = 6; // offset: 52, xor const: 13285
	uint32 ALBPBCENINN = 15; // offset: 40, xor const: 4218
}

// CmdId: 7272
message IFLMNJAEIKK {
	uint32 AMIJIAHGPMC = 2; // offset: 24, xor const: 7021
}

// CmdId: 810
message CGLFLAOLEHC {
	uint64 DIMEDPILOOA = 9; // offset: 24, xor const: 7431
}

// CmdId: 736
message MDIFBNILAPG {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 15972
}

message MBKLAJMKIOF {
	map<int32, EIFOGHMICIK> JHAPHKKNMGP = 10; // offset: 24, xor const: 0
	repeated int32 PDNCMCOCBME = 14; // offset: 16, xor const: 0
}

// CmdId: 1367
message FPLJANGOHBD {
	uint32 PEDKNCIMHLA = 15; // offset: 24, xor const: 5003
}

// CmdId: 1703
message DLJFIFKOICA {
	BKAEBCBKKCP OJOLLDNFGJH = 6; // offset: 16, xor const: 0
	uint32 BCCEOLDLIFA = 2; // offset: 32, xor const: 2099
}

// CmdId: 2271
message KLEHNCEKPLE {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 15882
}

// CmdId: 6453
message GLKIFGNCPKP {
	uint32 LGNMJDDJCDC = 2; // offset: 32, xor const: 5471
	uint32 GFCLKDAOMBM = 6; // offset: 36, xor const: 4609
	NBHJJOOPEBK JHGCDCNKOPK = 14; // offset: 16, xor const: 0
}

enum NOMIIFBEMDC {
	NOMIIFBEMDC_BATTLE_TAG_DEFAULT = 0;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL = 1;
	NOMIIFBEMDC_BATTLE_TAG_CHALLENGE = 2;
	NOMIIFBEMDC_BATTLE_TAG_GOLDEN_BUDDY = 3;
	NOMIIFBEMDC_BATTLE_TAG_CHALLENGE_OCCUPY = 4;
	NOMIIFBEMDC_BATTLE_TAG_BONUS = 5;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_DOUBLE_ELITE = 6;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_EVOLVE_ELITE = 7;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_BIG_CHEESE = 8;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_BOSS_ELITE = 9;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_BIG_CHEESE_ELITE = 10;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_DOUBLE_BOSS = 11;
	NOMIIFBEMDC_BATTLE_TAG_NORMAL_EVOLVE_BOSS = 12;
}

enum JKBAEPMKBCK {
	JKBAEPMKBCK_IKCCMMEAJPI = 0;
}

message ODMPEFMGNKF {
	string PPOOOHEPNGI = 2; // offset: 16, xor const: 0
	string JDCAIHHLJGF = 1; // offset: 32, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 3; // offset: 40, xor const: 0
}

enum MDCDCKKDOKH {
	MDCDCKKDOKH_DPMBDLAIEOA = 0;
	MDCDCKKDOKH_AFGCDGAGAPG = 1;
	MDCDCKKDOKH_FKKNLKJAPPP = 2;
}

enum BDBLGKJOGFM {
	BDBLGKJOGFM_TIME_EVENT_STATUS_LOCK = 0;
	BDBLGKJOGFM_TIME_EVENT_STATUS_UNLOCK = 1;
	BDBLGKJOGFM_TIME_EVENT_STATUS_ENDED = 2;
}

// CmdId: 5659
message BIKJHBKBPOJ {
	int32 IHIGNMLCHDK = 4; // offset: 32, xor const: 7169
	EDCMBDAAJLK FFMODEAGONC = 9; // offset: 24, xor const: 0
}

// CmdId: 8829
message LHKJPPHBIJO {
	int32 IHIGNMLCHDK = 12; // offset: 24, xor const: 6961
}

message BMKBNHLNFHB {
}

// CmdId: 7572
message BKCOGNGHFEM {
	uint32 FILKKMHLNJI = 1; // offset: 24, xor const: 2241
}

// CmdId: 8633
message IILABCMMBLN {
	repeated uint32 OKMCJGCLNNH = 4; // offset: 16, xor const: 0
}

// CmdId: 3006
message IJNJKLEMCBG {
	AOMLNNPHLMD NODBAHCCOBD = 11; // offset: 36, xor const: 0
	string EMLNLEBFOOB = 6; // offset: 16, xor const: 0
	uint32 DCENCIPOBMC = 3; // offset: 32, xor const: 565
}

message FDACAJLKAKK {
	int32 EAILPOFOKLE = 1; // offset: 32, xor const: 0
	int32 MHDFOCGAOPO = 2; // offset: 28, xor const: 0
	int32 NBNJEFMBCEE = 3; // offset: 24, xor const: 0
}

message MHODKLJBLDI {
	PLMOLMHGOBD OIDDOJOCCJH = 6; // offset: 16, xor const: 0
	bool OHPKBAGBOAA = 7; // offset: 33, xor const: 0
	bool LPKDNCPCGAE = 8; // offset: 32, xor const: 0
}

enum DACAEBIBIFM {
	DACAEBIBIFM_HPEJKGLMHDM = 0;
	DACAEBIBIFM_ELNHOCNAJHO = 1;
	DACAEBIBIFM_NFJMMPMAIJF = 3;
}

enum JHEMIBPHNFO {
	JHEMIBPHNFO_TYPE_OF_SET_LIST_NONE = 0;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_INIT = 1;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_APPEND = 2;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_INSERT = 3;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_SORT = 4;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_UNIQUE = 5;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_REMOVE = 6;
	JHEMIBPHNFO_TYPE_OF_SET_LIST_MODIFY = 7;
}

// CmdId: 3080
message IHBCLGLAHJK {
}

// CmdId: 5907
message NFNBOHOBBDK {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 7617
}

message HIFJLLPLFOC {
	repeated int32 GNFGPMEMAOK = 4; // offset: 32, xor const: 0
	repeated int32 NCDNIHJGKBJ = 3; // offset: 24, xor const: 0
	int32 KBKLJLLBLCD = 2; // offset: 40, xor const: 0
	int32 KFBCDDCIKAM = 1; // offset: 44, xor const: 0
}

// CmdId: 5408
message LEKNAIEJOHE {
	uint64 GEENLDPINFI = 15; // offset: 24, xor const: 11031
	bool IBNNBEMFCMH = 8; // offset: 32, xor const: 0
}

message APHAKDPNIGD {
	map<int32, LNHFDKNKALN> LBACJKMEFOE = 6; // offset: 16, xor const: 0
	map<uint32, int64> CCNFMHKBKGE = 7; // offset: 40, xor const: 0
	int32 JLEJDLOCPJO = 15; // offset: 56, xor const: 3173
	JLNLHBOGFII EIHLNIIBGJP = 4; // offset: 48, xor const: 0
	int32 BDKEPMPELIF = 13; // offset: 60, xor const: 11852
	JLNLHBOGFII PFFEPHBMBAP = 5; // offset: 32, xor const: 0
}

enum ACOGLKILALC {
	ACOGLKILALC_CLIENT_HOLLOW_ENTITY_TYPE_NONE = 0;
	ACOGLKILALC_CLIENT_HOLLOW_ENTITY_TYPE_NONINTERACTOR = 1;
}

enum BEPMOFMEJKI {
	BEPMOFMEJKI_GKLIMOCPPKO = 0;
	BEPMOFMEJKI_JFEDHFPKHMF = 1;
	BEPMOFMEJKI_JPMNJMIOGGO = 2;
	BEPMOFMEJKI_FKCGLAJDIAK = 3;
	BEPMOFMEJKI_EBAPJMHKLMO = 4;
	BEPMOFMEJKI_HJFPGAIBJKB = 5;
	BEPMOFMEJKI_HCDPIINPFLB = 6;
}

// CmdId: 8745
message COANKAKCHOA {
}

message NPOJLEABBBA {
	map<uint32, uint32> GLPLNJBEIPF = 13; // offset: 24, xor const: 0
	int64 KCDAILEMPKE = 8; // offset: 40, xor const: 323
	bool GBKNCJDLDJB = 9; // offset: 36, xor const: 0
	bool BILIFPHPGHN = 5; // offset: 37, xor const: 0
	uint32 MNHMFPCHHDF = 12; // offset: 32, xor const: 2711
}

message POBBNAODCDI {
	uint32 CBELLMGEFDA = 1; // offset: 24, xor const: 0
}

// CmdId: 8570
message CFPFGOIMAPL {
	NJHCCJPHMCC FPPHBHBOAOP = 13; // offset: 16, xor const: 0
}

enum INNDHEHACGE {
	INNDHEHACGE_LPIPMGIKOGP = 0;
	INNDHEHACGE_OKPKBMEEHEP = 1;
	INNDHEHACGE_BAIMAJGCEKB = 2;
	INNDHEHACGE_NKMAEKOILEN = 3;
	INNDHEHACGE_NNCJMBMMEPL = 4;
	INNDHEHACGE_KBDBIEOPFAP = 5;
	INNDHEHACGE_HJGINPGJPHB = 6;
	INNDHEHACGE_LLPKAMLBOAF = 7;
	INNDHEHACGE_JDPKGJDNNPH = 8;
	INNDHEHACGE_BOMOMOLBJJD = 9;
	INNDHEHACGE_CIDBDJDAAOP = 10;
	INNDHEHACGE_EDOADIFBOJJ = 11;
	INNDHEHACGE_LMFHLLNHGNA = 12;
}

message ELAHFHJNLJM {
	string OMLJLHMIMBG = 1; // offset: 24, xor const: 0
}

message CIOIJBPBNDG {
	repeated HABMPPGMPEO BMKHBFJAACC = 5; // offset: 24, xor const: 0
}

message AFDAIICLOJP {
	int32 GPOOIBMEHOK = 1; // offset: 48, xor const: 2145
	repeated int32 FAOGDJDOJAF = 6; // offset: 24, xor const: 0
	repeated int32 MGDMJAODKBI = 13; // offset: 16, xor const: 0
	repeated int32 NCJJDMHHJIE = 5; // offset: 32, xor const: 0
}

message GACANCCDGDC {
	EDGCAIEHLHH LKJJBGEOPFP = 8; // offset: 72, xor const: 0
	EDGCAIEHLHH ACEMBJPDCDK = 1; // offset: 56, xor const: 0
	bytes NHDPKIFOEMF = 6; // offset: 64, xor const: 0
	bool MNNJDAFFEKP = 4; // offset: 80, xor const: 0
	bytes DHLEGHCPJDI = 5; // offset: 48, xor const: 0
	repeated bytes IPHNDOEIHML = 7; // offset: 32, xor const: 0
	GCFLBGBAPMJ KAHNBJKCCHA = 2; // offset: 40, xor const: 0
	GCFLBGBAPMJ OAEIFBNNCNJ = 3; // offset: 16, xor const: 0
}

message GHDIOHNDCLL {
	repeated EPGPLJJPCPP GDDLDODPNJN = 13; // offset: 24, xor const: 0
	repeated uint32 ENJDNEFMBOG = 11; // offset: 32, xor const: 0
}

enum ELGFCIECEAA {
	ELGFCIECEAA_CGPBNJFIADG = 0;
	ELGFCIECEAA_DFOCDKFLOOF = 1;
	ELGFCIECEAA_BMKGBEDMLCD = 2;
	ELGFCIECEAA_BCDENPPHJPD = 3;
	ELGFCIECEAA_HMIKDJJILGC = 4;
	ELGFCIECEAA_BDKGFLDHICI = 5;
	ELGFCIECEAA_LIEEOICKJLD = 6;
	ELGFCIECEAA_DAMEJBNPDBD = 7;
	ELGFCIECEAA_HPHOJNNJBAK = 8;
	ELGFCIECEAA_DDCPEGAEIFG = 9;
	ELGFCIECEAA_MHAHBBIDGEI = 10;
	ELGFCIECEAA_MIMDOJKNIFF = 11;
	ELGFCIECEAA_MJMEBOPOMIL = 12;
	ELGFCIECEAA_MGAFDKPEKKD = 13;
	ELGFCIECEAA_JJKCNCFOOEA = 14;
	ELGFCIECEAA_ALPCEAFPBMC = 15;
	ELGFCIECEAA_PJHLHBIOHGF = 16;
}

// CmdId: 9596
message OIPGCPAGMNH {
	int32 IHIGNMLCHDK = 8; // offset: 24, xor const: 1867
}

message JHIIPLMNPCH {
	repeated EIBEHNLOLNE ACIGKDGNONK = 6; // offset: 24, xor const: 0
	uint32 JMJKGMPADIB = 4; // offset: 48, xor const: 0
	DAGDMBCAIFC BKPJCKGFLIP = 5; // offset: 40, xor const: 0
	BBCNAPPHLJN IDHGCALLFEP = 7; // offset: 32, xor const: 0
}

message EGBJKHINAFH {
	repeated int32 KPOFFBOODOC = 1; // offset: 24, xor const: 0
}

enum MHLKHPLJKJF {
	MHLKHPLJKJF_BKBHFKMNDIF = 0;
	MHLKHPLJKJF_OKMPLEGCCDM = 1;
	MHLKHPLJKJF_DOLIDNNMKJL = 2;
	MHLKHPLJKJF_OMIFCPDDNAJ = 3;
}

message JEFNBAFJNFD {
	repeated KEJFHALLCNK PNIEILPLPOA = 1; // offset: 24, xor const: 0
	repeated MDJLEEGHMEA JPHHMDAKJBA = 2; // offset: 32, xor const: 0
}

message HMDHELCLLHD {
	map<int32, string> HNLPNNBBDED = 2; // offset: 24, xor const: 0
	uint32 APBDIOHLMGB = 1; // offset: 32, xor const: 0
}

message GDOJINENNBA {
	int32 IGNPNBKMNJD = 13; // offset: 24, xor const: 10924
}

message NELNFEENILC {
	uint32 IHIEIMELEEH = 3; // offset: 32, xor const: 0
	map<uint32, int32> IDENMBAHBIH = 2; // offset: 24, xor const: 0
	uint32 OHCIOPAIBKK = 1; // offset: 36, xor const: 0
}

enum MILONCGNDLG {
	MILONCGNDLG_HOLLOW_LIGHT_TYPE_NONE = 0;
	MILONCGNDLG_HOLLOW_LIGHT_TYPE_DEFAULT = 1;
	MILONCGNDLG_HOLLOW_LIGHT_TYPE_GHOST = 2;
	MILONCGNDLG_HOLLOW_LIGHT_TYPE_UNSTABLE = 3;
}

message BGAABBCIEND {
	uint32 NLPFGFMMJJO = 9; // offset: 36, xor const: 10091
	bool BKFADLJNBPJ = 1; // offset: 32, xor const: 0
	repeated uint32 APHCHJBDPEA = 6; // offset: 16, xor const: 0
}

message GCABMNIMDNI {
	JBOJGEAHGAH HLEAEPDDBLE = 2; // offset: 32, xor const: 0
	FGKJFCJILIL AMDFPDIKMIJ = 1; // offset: 16, xor const: 0
}

// CmdId: 1837
message DBFIOJDGINF {
	repeated NJIAAFJAAMN PEHKCKIOLNH = 14; // offset: 80, xor const: 0
	repeated uint32 PINOOAAOFGE = 12; // offset: 120, xor const: 0
	IMJIJLIDHEC LGCMAPKKKMI = 4; // offset: 24, xor const: 0
	repeated LAIFBFLGKGJ ENABAEPIFNH = 1; // offset: 56, xor const: 0
	repeated KMIICOOLMJO IEBFEBKFMEC = 5; // offset: 72, xor const: 0
	uint32 MDFKPGBALJI = 9; // offset: 128, xor const: 9694
	repeated AJHGKJINFHL MICHONCOKGC = 2; // offset: 64, xor const: 0
	bool INBGIFMNDAI = 7; // offset: 132, xor const: 0
	repeated uint32 IBJKILKGBIE = 11; // offset: 104, xor const: 0
	repeated uint32 PHBPHEOEPDA = 6; // offset: 32, xor const: 0
	repeated AJHGKJINFHL NCDJIINHAMB = 15; // offset: 16, xor const: 0
	repeated DEEONEFIKEG EAMKLCMBLFI = 13; // offset: 40, xor const: 0
	repeated uint32 ADCHMBDBOIE = 428; // offset: 96, xor const: 0
	repeated uint32 PACDDNABELD = 8; // offset: 112, xor const: 0
	repeated uint32 IJOEGFIFILD = 3; // offset: 88, xor const: 0
}

// CmdId: 2115
message MNBONJCGOKE {
	int32 BCMPKLAOIHK = 2; // offset: 24, xor const: 2642
	int32 IHIGNMLCHDK = 14; // offset: 28, xor const: 3288
}

message AOFKOBAGENE {
	repeated uint32 IGCJBDEBAAN = 14; // offset: 24, xor const: 0
	BGEBIEPLIIN NFFJFJBHDAF = 1; // offset: 32, xor const: 0
	uint32 MNOOLAJMEAD = 4; // offset: 36, xor const: 7788
}

message AJDPFAGPJLK {
	FGKJFCJILIL NODBAHCCOBD = 2; // offset: 24, xor const: 0
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 16, xor const: 0
	bool MLBGHOAICKB = 3; // offset: 40, xor const: 0
}

// CmdId: 8947
message ODLHNPPDNKD {
	repeated uint32 KPOFFBOODOC = 11; // offset: 16, xor const: 0
}

message JAMEPMPKGAP {
	repeated DAJHIFEHDMO GLENGCDAEFP = 2; // offset: 32, xor const: 0
	repeated CLIDAGBGAIL IGAAEOLKBIF = 4; // offset: 16, xor const: 0
	repeated OKHOCEHDLDP GPPENEKDFLM = 3; // offset: 48, xor const: 0
	string DICHAMEKMKL = 1; // offset: 24, xor const: 0
}

message GGLJEODJBAA {
	uint32 OEAKLPENHNC = 4; // offset: 72, xor const: 2629
	repeated int32 PKFIJIJIMCG = 3; // offset: 64, xor const: 0
	KKCGCNMCBPO HBBOACGLLAH = 13; // offset: 48, xor const: 0
	map<uint32, FNKFCDDANDD> BJLFGBJKNJF = 10; // offset: 56, xor const: 0
	PFFBFNFKAIC DKDIDGMLFIP = 2; // offset: 24, xor const: 0
	FFOANLHLKOP AMCPLODDFGD = 1; // offset: 16, xor const: 0
	IOIKADNIIAD FHFCMKMJPHJ = 11; // offset: 32, xor const: 0
	bool NAHDOKKAAND = 8; // offset: 76, xor const: 0
}

enum HollowEntityType {
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_NONE = 0;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_PLAYER = 1;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_NPC = 2;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_GRID = 3;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_EVENT = 4;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_LIGHT = 5;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_PIN = 6;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_SECTION = 7;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_GLOBAL = 9;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_BARRIER = 10;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_SECTION_EVENT = 11;
	HOLLOW_ENTITY_TYPE_HOLLOW_ENTITY_TYPE_TERRAIN = 12;
}

enum NOHHFIKOEMH {
	NOHHFIKOEMH_KEENAGICJDD = 0;
	NOHHFIKOEMH_ECNOAPILLMG = 1;
	NOHHFIKOEMH_GDJJEOMGBGD = 2;
}

// CmdId: 3865
message KBGEOIDFAID {
	uint32 OEAKLPENHNC = 11; // offset: 24, xor const: 2301
}

// CmdId: 3868
message LDNIIGKJAAB {
	uint64 AEDAEPKDOAL = 3; // offset: 40, xor const: 16013
	uint64 HEJBMNAOJFL = 10; // offset: 56, xor const: 9840
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 6; // offset: 48, xor const: 3831
	NKIGCLEHHME CPEPJEPHPBD = 5; // offset: 24, xor const: 0
}

message HHKCHEDCIOA {
	uint32 DCIGFJKJBKL = 11; // offset: 36, xor const: 1476
	LPBKFOMFEED PFCIOMCFGKL = 12; // offset: 32, xor const: 0
	bool GBKNCJDLDJB = 4; // offset: 40, xor const: 0
	uint32 EJJCNHFHPJL = 3; // offset: 24, xor const: 15088
	uint32 HJPLMHJIJPM = 7; // offset: 28, xor const: 3509
}

// CmdId: 3861
message FGNNCPAPFCI {
	repeated uint32 KAGDHNPCHKJ = 6; // offset: 16, xor const: 0
}

message DCMCKIGGOAG {
	uint32 NAHIEHJOLIK = 1; // offset: 24, xor const: 0
}

// CmdId: 5756
message MJGBNPGCHNK {
}

message DPDOJJBLDAN {
	FGKJFCJILIL ACEMBJPDCDK = 1; // offset: 24, xor const: 0
	HollowEntityType HCOBCBNNPLD = 2; // offset: 36, xor const: 0
	MILONCGNDLG FMKEDPLBDOJ = 3; // offset: 32, xor const: 0
}

message LGKKLKGIHHL {
	repeated HGIPJOCNKDF NKBIMCNHCOI = 1; // offset: 32, xor const: 0
	repeated uint32 KAPHIGAFCGA = 2; // offset: 16, xor const: 0
}

enum DGKDEGOOJBK {
	DGKDEGOOJBK_PNIDMDMDAMK = 0;
	DGKDEGOOJBK_KCEPBFKGAFE = 1;
	DGKDEGOOJBK_ODCNKLPGOLC = 2;
	DGKDEGOOJBK_KACCKHICBKH = 3;
	DGKDEGOOJBK_LIOLLMGNGGC = 4;
	DGKDEGOOJBK_CFPHGJOFJFO = 5;
	DGKDEGOOJBK_DCJFDMADCKI = 6;
}

message HNNHIKMMIOK {
	PGDMANGLMND LNKCAABKGIK = 2; // offset: 72, xor const: 0
	FGKJFCJILIL ECCPBAANOOJ = 6; // offset: 24, xor const: 0
	FGKJFCJILIL GLBNCAKAGAL = 5; // offset: 32, xor const: 0
	FGKJFCJILIL PFPNIHLKLEO = 7; // offset: 56, xor const: 0
	FGKJFCJILIL ILNKJIMOLEF = 1; // offset: 64, xor const: 0
	FGKJFCJILIL LJCHOAPPCPB = 4; // offset: 40, xor const: 0
	FGKJFCJILIL CKBOJACIJDI = 3; // offset: 48, xor const: 0
}

message EMEKEGCALJJ {
	bool PPKOKAKLAIN = 12; // offset: 24, xor const: 0
}

message BCMDCEFGNKP {
	FGKJFCJILIL BDAGOLKDEAB = 2; // offset: 24, xor const: 0
	int32 PIIPPIBBFBE = 1; // offset: 36, xor const: 0
	CLPGLOLILFF KBFBDIJGDGG = 3; // offset: 32, xor const: 0
}

// CmdId: 497
message KCEHFECJBIO {
	uint64 AEDAEPKDOAL = 7; // offset: 48, xor const: 412
	uint64 HEJBMNAOJFL = 11; // offset: 56, xor const: 14569
	uint32 KMKPPDICOKA = 3; // offset: 40, xor const: 446
	repeated DNKAFLFNDHF POPGNHJNLCC = 15; // offset: 32, xor const: 0
	OEPIHFOEEDJ CPEPJEPHPBD = 14; // offset: 16, xor const: 0
}

// CmdId: 3199
message CPMJBJIKGOH {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 5301
}

message JPEHNFGHKEF {
	ChessUIColor MIHBIKHOAJH = 12; // offset: 28, xor const: 0
	ChessUIIconType LEEEDDIMDGO = 8; // offset: 32, xor const: 0
	int32 POIJJPBOHKF = 4; // offset: 24, xor const: 14708
	ChessUIColor COFDNNBBPJB = 1; // offset: 40, xor const: 0
	ENGOAMNLENO KGCKHNEKFMO = 2; // offset: 52, xor const: 0
	ChessUIControlType MLOCGOPJHKA = 3; // offset: 36, xor const: 0
	ChessUIControlType AMOMJALKDED = 9; // offset: 56, xor const: 0
	int32 PGBADFMPAPK = 14; // offset: 44, xor const: 11849
	ChessUIIconType FDBGIBHCPOK = 13; // offset: 48, xor const: 0
}

message FDCLNKAMFBM {
	repeated FGKJFCJILIL ALIFLHFMJGM = 1; // offset: 16, xor const: 0
	HollowEntityType DNAENEJOADB = 2; // offset: 40, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 3; // offset: 24, xor const: 0
}

// CmdId: 4296
message CJGBGNFFGIM {
	repeated int32 MFCDIEAHPJM = 6; // offset: 32, xor const: 0
	repeated int32 HDNPMDHHAOH = 5; // offset: 24, xor const: 0
}

message FDCDGMENKCB {
	uint32 NCAGHHFDAOG = 6; // offset: 40, xor const: 7852
	int32 KFJIBDLHPBJ = 12; // offset: 32, xor const: 3186
	uint32 NBNJEFMBCEE = 8; // offset: 36, xor const: 6480
	IFPPKBAKHGA CKBOJACIJDI = 1; // offset: 16, xor const: 0
}

// CmdId: 8593
message NJIDBDHFNEC {
	int32 IHIGNMLCHDK = 8; // offset: 36, xor const: 7949
	DNLCMMNCBMI DOGDICBKOCI = 1; // offset: 24, xor const: 0
	uint32 JFPJLMJBEBE = 15; // offset: 32, xor const: 15405
}

message HFNDHHCLOKL {
	FGKJFCJILIL FNNGEDGDEPE = 1; // offset: 16, xor const: 0
}

// CmdId: 705
message KJLMCMMELNP {
	uint32 OMGOMPKNPGM = 1; // offset: 24, xor const: 13233
	uint32 GNOPMPEJPHF = 3; // offset: 28, xor const: 467
}

message JLELDLHDDCJ {
	repeated int32 MAJALPLMDBO = 9; // offset: 24, xor const: 0
}

// CmdId: 7957
message DIEAJKGFONM {
	repeated DEEGIKMFFBG EPDLJMJMHDK = 11; // offset: 16, xor const: 0
	uint32 JPNBOODNEFB = 7; // offset: 32, xor const: 11759
}

// CmdId: 3138
message KHMJCNLADAE {
	repeated FHJHFMCLGJM EDJNPANEAGO = 14; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 10; // offset: 32, xor const: 15561
}

message JLMCDMAJKBG {
	FGKJFCJILIL EHIJDBIDDPG = 6; // offset: 24, xor const: 0
	FGKJFCJILIL HMFDILBMLDP = 4; // offset: 32, xor const: 0
	string PECAFAPOHND = 1; // offset: 48, xor const: 0
	FGKJFCJILIL JNPEOOCMNKC = 5; // offset: 56, xor const: 0
	bool BJDMBECLGBE = 3; // offset: 64, xor const: 0
	EGMFOFFEAKK HLEAEPDDBLE = 2; // offset: 68, xor const: 0
	FGKJFCJILIL JEKJNJMFMML = 7; // offset: 16, xor const: 0
}

// CmdId: 6020
message PKNIECBDNHG {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 11687
}

message BHAMIBOLHME {
}

// CmdId: 9937
message DJKFEEDCCJG {
	int32 IHIGNMLCHDK = 2; // offset: 24, xor const: 5789
}

enum BOKEMLFMOFL {
	BOKEMLFMOFL_CHARACTER_MODE_BY_SLOT = 0;
	BOKEMLFMOFL_CHARACTER_MODE_BY_ROBOT_ID = 1;
	BOKEMLFMOFL_CHARACTER_MODE_BY_AVATAR_ID = 2;
}

message CNEKCPOECFA {
	uint32 AMIJIAHGPMC = 15; // offset: 28, xor const: 6354
	uint32 LJOIOAEGNAM = 2; // offset: 24, xor const: 6614
}

message LECIHLEDELK {
	repeated LFNODLENPID AFCENAAEMKP = 11; // offset: 24, xor const: 0
}

message EKJHJEBADMP {
	IOIKADNIIAD FHFCMKMJPHJ = 10; // offset: 48, xor const: 0
	PFFBFNFKAIC DKDIDGMLFIP = 1; // offset: 40, xor const: 0
	bool NAHDOKKAAND = 11; // offset: 64, xor const: 0
	FFOANLHLKOP AMCPLODDFGD = 12; // offset: 56, xor const: 0
	map<uint32, FNKFCDDANDD> BJLFGBJKNJF = 13; // offset: 24, xor const: 0
	uint32 OEAKLPENHNC = 15; // offset: 68, xor const: 1217
	KKCGCNMCBPO HBBOACGLLAH = 14; // offset: 16, xor const: 0
}

enum ILIHKAILBKI {
	ILIHKAILBKI_NFNJCDKGIPF = 0;
	ILIHKAILBKI_JBECHGOPKPD = 1;
	ILIHKAILBKI_POIBCEAONHP = 2;
}

// CmdId: 4044
message HEKNOLFFFPL {
	FLHAGKAIMNM LJPPJNCDBNH = 11; // offset: 16, xor const: 0
	uint32 BCCEOLDLIFA = 14; // offset: 32, xor const: 11052
}

enum PMBNKOBPJLH {
	PMBNKOBPJLH_FBEMGNMBGFN = 0;
}

enum APOOOFKDOPA {
	APOOOFKDOPA_EFEPIKNBAEG = 0;
	APOOOFKDOPA_OPNFHLPFCKC = 1;
	APOOOFKDOPA_KMENBLBIOFG = 2;
	APOOOFKDOPA_FOLGBDJIGLK = 3;
	APOOOFKDOPA_LCGGLADKGGO = 4;
	APOOOFKDOPA_IGHDFHOHHIL = 5;
}

message CAGCBKHCDJN {
	int32 HLEAEPDDBLE = 1; // offset: 24, xor const: 0
}

// CmdId: 5406
message JKLBBPMGNMH {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 8334
}

message ENKDCGBCPOJ {
	map<uint32, uint32> JCNBBGGMHGH = 2; // offset: 40, xor const: 0
	repeated LNJGJMINLNP KFJOJAMAJEN = 15; // offset: 32, xor const: 0
	map<uint32, uint32> BEKJMOCEFLH = 14; // offset: 24, xor const: 0
}

// CmdId: 8169
message BMLILKNFJHE {
	map<uint32, int32> ABGCDKPNNBN = 15; // offset: 24, xor const: 0
}

message HKOFKFMGODC {
	repeated HGIPJOCNKDF NKBIMCNHCOI = 1; // offset: 16, xor const: 0
	repeated uint32 KAPHIGAFCGA = 2; // offset: 32, xor const: 0
	uint32 CBELLMGEFDA = 3; // offset: 40, xor const: 0
}

enum HCGMBFHEECA {
	HCGMBFHEECA_HOLLOW_DESTORY_NPC_TYPE_NONE = 0;
	HCGMBFHEECA_HOLLOW_DESTORY_NPC_TYPE_BY_POS = 1;
	HCGMBFHEECA_HOLLOW_DESTORY_NPC_TYPE_BY_NPC_UID = 2;
}

enum CIMMAPCPLFL {
	CIMMAPCPLFL_OCHDLOGAFGC = 0;
	CIMMAPCPLFL_AECLNKNPMCE = 1;
}

// CmdId: 1819
message OIELNCLHMIB {
	repeated uint32 GGFJMMFFFMG = 14; // offset: 48, xor const: 0
	int32 IHIGNMLCHDK = 7; // offset: 56, xor const: 3451
	uint32 IPKBPNIHDEA = 9; // offset: 68, xor const: 14026
	uint32 EJAEBPFHBBH = 4; // offset: 64, xor const: 12216
	uint32 EHNIHPFJCEG = 3; // offset: 60, xor const: 3017
	repeated KILGDDFDFNI OKMCJGCLNNH = 6; // offset: 16, xor const: 0
	repeated uint32 GBBENNJLEHJ = 1; // offset: 40, xor const: 0
	repeated DELHIJFCGOI CILKJPCPKCG = 15; // offset: 32, xor const: 0
}

message BDFOKAGDJNO {
	AEGFGJILMEJ EMBAAGJGMMP = 1; // offset: 24, xor const: 0
}

message CBONLDPEEGL {
	int32 LFIPGDIJNPE = 1; // offset: 76, xor const: 15853
	map<int32, int32> FBKFJINMAMH = 14; // offset: 16, xor const: 0
	int32 PLDCCCLNOIK = 10; // offset: 72, xor const: 15835
	NEDCHKONEKO KGFAAIAJCJD = 12; // offset: 32, xor const: 0
	int32 GHMKBGLADBB = 15; // offset: 84, xor const: 11009
	int32 AIKNCOOPAHN = 4; // offset: 92, xor const: 11518
	uint32 DOJAJFGINCI = 2; // offset: 80, xor const: 6439
	repeated NEDCHKONEKO PKABGHFHCMM = 11; // offset: 40, xor const: 0
	repeated uint32 NHJPBOFJMEA = 5; // offset: 64, xor const: 0
	int32 MMGDMHLIOHN = 9; // offset: 88, xor const: 12993
	int32 GHGCJMCGCDA = 8; // offset: 96, xor const: 13791
	repeated int32 IINJGLIHEKI = 7; // offset: 56, xor const: 0
	map<uint32, uint32> AKAGLHEKKOK = 13; // offset: 48, xor const: 0
}

// CmdId: 9723
message IAJEFHCFPOO {
	uint32 ENEGAHHFOPK = 12; // offset: 32, xor const: 9739
	bytes CIEJJLHMOMB = 2; // offset: 16, xor const: 0
}

message JMBIFPDFMCD {
	int32 HHJMHKJIMDL = 4; // offset: 60, xor const: 0
	int32 NIGHDCFALDK = 5; // offset: 52, xor const: 0
	int32 IODIFNBEANL = 2; // offset: 48, xor const: 0
	float LKJKHAFGFGE = 8; // offset: 64, xor const: 0
	string DNPHHNAOBHD = 12; // offset: 40, xor const: 0
	string BNIHBLFNJHG = 6; // offset: 32, xor const: 0
	float NEEMNPDMAFE = 10; // offset: 68, xor const: 0
	float KNENBDCPEMO = 9; // offset: 84, xor const: 0
	float LEMKKAKDMIO = 11; // offset: 56, xor const: 0
	int32 AEEMPHMFNBJ = 3; // offset: 72, xor const: 0
	int32 MOMGDEFPOGM = 1; // offset: 76, xor const: 0
	string KAGNLCFDCPA = 7; // offset: 24, xor const: 0
	int32 GGOHJFLMMJP = 14; // offset: 80, xor const: 0
}

// CmdId: 7035
message DLFBAJJFKEC {
	uint32 KMKPPDICOKA = 14; // offset: 56, xor const: 13388
	uint64 HEJBMNAOJFL = 4; // offset: 48, xor const: 963
	MANBNAFPOFD CPEPJEPHPBD = 2; // offset: 16, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 5; // offset: 40, xor const: 10664
}

enum CMAFNBGDFFL {
	CMAFNBGDFFL_KMDPNCHBMED = 0;
	CMAFNBGDFFL_DMIMDBBMGDI = 1;
	CMAFNBGDFFL_KJCEBMACNNK = 2;
	CMAFNBGDFFL_BLEIHJADPBI = 3;
}

// CmdId: 8795
message DJODMEDKMJF {
	bool INIPBAKGBNE = 13; // offset: 64, xor const: 0
	string NPIAKBEDBLE = 9; // offset: 56, xor const: 0
	repeated LJBNIMPPPNM LBBJEPPPJMH = 15; // offset: 16, xor const: 0
	string MJBLHHJOJNO = 3; // offset: 48, xor const: 0
	string IIDOBBKIPFF = 5; // offset: 40, xor const: 0
	string OLFNEGHNDDL = 8; // offset: 32, xor const: 0
}

message PGGPALNHKLE {
	FGKJFCJILIL DBOACCIJPDL = 1; // offset: 24, xor const: 0
}

enum PDABMGDABAN {
	PDABMGDABAN_IMNBFFHBOCE = 0;
	PDABMGDABAN_EEHAHBKKBJG = 1;
}

message GNEJKMCNEKP {
	int32 JFNKJPCIOGM = 1; // offset: 36, xor const: 0
	OAFBFNEKLEE HLEAEPDDBLE = 3; // offset: 40, xor const: 0
	int32 NBNJEFMBCEE = 4; // offset: 32, xor const: 0
	FGKJFCJILIL FPAMMKPBAGA = 2; // offset: 24, xor const: 0
}

message IOAAMBFCKLK {
	FGKJFCJILIL CMJFABFIBOE = 14; // offset: 112, xor const: 0
	bool NDOJICKCIEE = 15; // offset: 152, xor const: 0
	FGKJFCJILIL HDACKHHPGNL = 1; // offset: 64, xor const: 0
	FGKJFCJILIL MJHEFNOIBPA = 3; // offset: 80, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 12; // offset: 128, xor const: 0
	int32 DLILNCMKDHA = 9; // offset: 148, xor const: 0
	repeated FGKJFCJILIL GJJFBJMMLHB = 16; // offset: 24, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 17; // offset: 120, xor const: 0
	repeated FGKJFCJILIL FCCONGDNBNE = 8; // offset: 32, xor const: 0
	int32 PBBDNBIGFMI = 20; // offset: 136, xor const: 0
	repeated int32 ODAGEAELHMB = 19; // offset: 88, xor const: 0
	repeated FGKJFCJILIL CEPFADNEGHL = 4; // offset: 72, xor const: 0
	BDEANJLNPKC DDMIPKHLKDL = 21; // offset: 164, xor const: 0
	repeated int32 GOFEHNNFFFC = 7; // offset: 48, xor const: 0
	FGKJFCJILIL BIELNPIAMPA = 22; // offset: 96, xor const: 0
	COFJGCHEKCF OJIAMEFKGHI = 2; // offset: 160, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 11; // offset: 104, xor const: 0
	LEHENCIPJIE CKBOJACIJDI = 13; // offset: 144, xor const: 0
	int32 NLMHFPBBNNI = 10; // offset: 140, xor const: 0
	FGKJFCJILIL HJLLKNGJKLP = 23; // offset: 56, xor const: 0
	HGLOMBGGODB HBHKBJALABO = 5; // offset: 156, xor const: 0
	repeated int32 PFIJODDLPDL = 6; // offset: 16, xor const: 0
}

message JLFDFDDIJJA {
	int32 GFAPGMFHGDK = 10; // offset: 32, xor const: 14110
	int32 NFPCCNIGIKA = 4; // offset: 24, xor const: 2845
	int32 HLEAEPDDBLE = 7; // offset: 28, xor const: 14620
}

message GPHNFCCCMON {
}

enum NPMKEHCCAIJ {
	NPMKEHCCAIJ_MHFJHKHPHJP = 0;
	NPMKEHCCAIJ_FLFPLJEGBME = 1003;
	NPMKEHCCAIJ_JENJAEGPMOA = 1020;
	NPMKEHCCAIJ_DGDFDICJACB = 1029;
	NPMKEHCCAIJ_KELDNIIAEOH = 1036;
	NPMKEHCCAIJ_FEIIGMOACDD = 1038;
	NPMKEHCCAIJ_CPKPHKDMCLP = 1040;
	NPMKEHCCAIJ_GJBPOMGFMNH = 1042;
	NPMKEHCCAIJ_OBDDJBOMADJ = 1052;
	NPMKEHCCAIJ_FHONABAFJAL = 1063;
	NPMKEHCCAIJ_ACFAEDPGGBH = 1064;
	NPMKEHCCAIJ_EJLMNKEPECM = 1066;
	NPMKEHCCAIJ_IMIJIBMCGAH = 1068;
	NPMKEHCCAIJ_AHALOJFEHFN = 2000;
	NPMKEHCCAIJ_PLLABMBONDJ = 2001;
	NPMKEHCCAIJ_MGEKKEGNIDE = 10008;
	NPMKEHCCAIJ_DFOKKNPKOCL = 10010;
	NPMKEHCCAIJ_BGPDCHPPLFM = 10021;
	NPMKEHCCAIJ_GGNNAGICAJI = 10022;
	NPMKEHCCAIJ_FDLALICJMKI = 10024;
	NPMKEHCCAIJ_JPPMLEGDPHN = 10033;
	NPMKEHCCAIJ_CDCKBDBNNDL = 10034;
	NPMKEHCCAIJ_BFJBEFMDNHK = 10035;
	NPMKEHCCAIJ_AJCHKNMGOOC = 10038;
	NPMKEHCCAIJ_KJGLMKHLFMI = 10040;
	NPMKEHCCAIJ_CLAKMLLJJLE = 10070;
	NPMKEHCCAIJ_EGGNDEBBIHC = 10080;
	NPMKEHCCAIJ_JHGMGIPLAGP = 10087;
	NPMKEHCCAIJ_CIAGPDPJENC = 10094;
	NPMKEHCCAIJ_ANNJBKELCPK = 10100;
	NPMKEHCCAIJ_ECOLCBNDABE = 10101;
	NPMKEHCCAIJ_GNMLEFIBNHN = 30004;
	NPMKEHCCAIJ_CIHDMNHGAMA = 30005;
	NPMKEHCCAIJ_HAEADDINKLF = 30014;
	NPMKEHCCAIJ_KPNLJDBCLEL = 30015;
	NPMKEHCCAIJ_FFKANNHKIGL = 30016;
}

// CmdId: 8018
message CAIJFLJOHHJ {
	bool CAKABODFEHL = 7; // offset: 28, xor const: 0
	uint32 MDHJEKIIDIO = 5; // offset: 24, xor const: 14223
}

enum NNOGFNJLNHL {
	NNOGFNJLNHL_GKAEPDGENBF = 0;
	NNOGFNJLNHL_BGEHBDOGMEC = 1;
	NNOGFNJLNHL_AICIJPKBNID = 2;
}

message LEPHGNHNNEF {
	OJDNKGDPOED HBADKBNPKBP = 3; // offset: 24, xor const: 0
}

message CJPJJBHCEOA {
	uint32 GFIPNGEILAB = 2; // offset: 28, xor const: 0
	bool PMDBHALOLJA = 3; // offset: 24, xor const: 0
	uint32 NDOEONEDMJH = 1; // offset: 32, xor const: 0
}

// CmdId: 5945
message BIPJACDNHFI {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 6106
}

message JKDCPAPGDCL {
	double AEIHIBLACCM = 1; // offset: 56, xor const: 0
	double HEDOHAABKHD = 3; // offset: 48, xor const: 0
	double LNHKNCIEFIF = 5; // offset: 32, xor const: 0
	double EFJPPJJFNJM = 2; // offset: 24, xor const: 0
	double JKLNHAJEOGA = 4; // offset: 40, xor const: 0
}

// CmdId: 8067
message OBEPIHBADHO {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 8293
	bool LDCEPMIOBLD = 13; // offset: 28, xor const: 0
}

// CmdId: 5983
message MMBNKHOGOHI {
	uint32 NJFOLJNDPGG = 11; // offset: 24, xor const: 413
}

enum KKPIOBCAGAF {
	KKPIOBCAGAF_EHBGJIONAGH = 0;
	KKPIOBCAGAF_PKNHCNJANPN = 1;
	KKPIOBCAGAF_MLNBAJIBLIO = 2;
}

// CmdId: 3818
message EGFJAJOOPLB {
	repeated HFAMNMKCKCF AAPNHNDAKGD = 8; // offset: 16, xor const: 0
}

enum CBFEILOELOA {
	CBFEILOELOA_KMNHAOBKKGI = 0;
	CBFEILOELOA_CKDAENMEOEB = 1;
}

// CmdId: 5730
message DCHOFMPAIJC {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 4483
}

message FLFKKPHMPIN {
	int32 EKLGNOIEMLA = 1; // offset: 28, xor const: 0
	int32 CFMCBFMMLMM = 2; // offset: 24, xor const: 0
}

message OCNDMPMDONK {
	int32 INEMAMOLPEK = 12; // offset: 28, xor const: 11076
	int32 DDHAIAPKEOD = 5; // offset: 24, xor const: 9904
}

message GOMHIJDEFHJ {
	FGKJFCJILIL BDAGOLKDEAB = 1; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 32, xor const: 0
	INFCFHOCBGC PIIPPIBBFBE = 2; // offset: 36, xor const: 0
}

message CALDHHDBJAF {
	bool LKEENIDDLCK = 7; // offset: 44, xor const: 0
	FGKJFCJILIL DDMIIIEJHPE = 1; // offset: 24, xor const: 0
	bool POAIKAELCEI = 6; // offset: 42, xor const: 0
	bool AKIHFBEENOK = 4; // offset: 43, xor const: 0
	bool OKNLMMNCPOC = 5; // offset: 40, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 2; // offset: 16, xor const: 0
	bool FGBPLOKICAF = 3; // offset: 41, xor const: 0
}

message POJJBHGNAGK {
	bool ANKICHEGGGJ = 1; // offset: 24, xor const: 0
	uint32 CINAJFDNJBD = 3; // offset: 28, xor const: 0
	bool IECFPMALADI = 2; // offset: 25, xor const: 0
}

message JBJKKIKHHPL {
}

message JPPNFLGHPHF {
	repeated DHOJGNHOGAH EBMHMLNANAF = 15; // offset: 24, xor const: 0
}

message BJAEGDHNHOG {
	uint32 NNEKEEFEKAG = 11; // offset: 24, xor const: 13632
	uint32 DCIGFJKJBKL = 5; // offset: 32, xor const: 1509
	uint32 EJJCNHFHPJL = 10; // offset: 28, xor const: 7728
}

enum IMFBENMKKGD {
	IMFBENMKKGD_TIME_SEGMENT_INDEX_TYPE_NONE = 0;
	IMFBENMKKGD_TIME_SEGMENT_INDEX_TYPE_SELF = 1;
	IMFBENMKKGD_TIME_SEGMENT_INDEX_TYPE_INDEX = 2;
	IMFBENMKKGD_TIME_SEGMENT_INDEX_TYPE_UID = 3;
}

message EEPDCIENCAL {
	repeated uint32 DJNOGOMHOMN = 1; // offset: 16, xor const: 0
	uint32 HBMEILDBOHM = 12; // offset: 60, xor const: 9782
	bool DJECGBNLMPE = 7; // offset: 57, xor const: 0
	bool DFCHBKGBIMC = 13; // offset: 58, xor const: 0
	map<uint32, NKGKAAONIJC> PLEOGILPJPE = 10; // offset: 24, xor const: 0
	bool AICJJGBHANO = 6; // offset: 56, xor const: 0
	repeated LKOMPIGADIP CHHNEGIBCEL = 4; // offset: 40, xor const: 0
	uint32 CEPHMILBBOD = 2; // offset: 48, xor const: 2464
	uint32 HFAMJACJFPG = 3; // offset: 52, xor const: 5912
}

message BHEIFODMNDJ {
	repeated uint32 FPEPKKDLFBD = 8; // offset: 16, xor const: 0
	repeated uint32 MAMOIMIFBKM = 11; // offset: 48, xor const: 0
	repeated NBACDAGGAHE KGABIPNIKBK = 3; // offset: 24, xor const: 0
	repeated uint32 CAAIIAOJANE = 6; // offset: 40, xor const: 0
}

// CmdId: 8087
message IOFGJPFOKJN {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 1031
}

// CmdId: 2452
message FNMMLAJHKEE {
	uint32 CEGDCAGOMND = 5; // offset: 32, xor const: 1628
	repeated uint32 JHGJOEDKONA = 11; // offset: 16, xor const: 0
	bool BKDHFLEJNAC = 12; // offset: 36, xor const: 0
}

message MMMMDOJIAKK {
	repeated uint32 NOLEMKEELIN = 15; // offset: 24, xor const: 0
	int64 AFIOONDLKOC = 9; // offset: 40, xor const: 15086
	uint32 OPFEAMDPIAG = 7; // offset: 32, xor const: 8871
	uint32 AGABKPHAECG = 3; // offset: 36, xor const: 11296
}

enum MAFLNKIJLKE {
	MAFLNKIJLKE_INEGOBAMHEP = 0;
}

message PIONAOEANNG {
	uint32 NCAGHHFDAOG = 11; // offset: 32, xor const: 1591
	PJOFBKFIKIK FEHPAKHIBHL = 5; // offset: 16, xor const: 0
}

message OIODKKKJHMI {
	int32 BOGKAHJIMAO = 14; // offset: 24, xor const: 1413
	uint64 GGAALANHDED = 12; // offset: 32, xor const: 7184
}

enum LIIFLJHKNIJ {
	LIIFLJHKNIJ_CJLCAHGEMHH = 0;
	LIIFLJHKNIJ_CNFALDMDEKA = 1;
	LIIFLJHKNIJ_ACMMJPPIJFK = 2;
}

// CmdId: 307
message NKHBDDCJFEC {
	repeated DNKAFLFNDHF POPGNHJNLCC = 2; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 10; // offset: 40, xor const: 7978
	uint64 AEDAEPKDOAL = 4; // offset: 56, xor const: 14447
	uint32 KMKPPDICOKA = 5; // offset: 48, xor const: 4953
	KPIOLGMPIHN CPEPJEPHPBD = 1; // offset: 16, xor const: 0
}

// CmdId: 6831
message NBMGOLNGFBB {
	repeated uint32 LCDGLAEPBPF = 7; // offset: 16, xor const: 0
}

// CmdId: 4357
message JCFFIBJNHBF {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 8053
}

enum INPKKNCMFJN {
	INPKKNCMFJN_PEPECLIDMOI = 0;
}

enum NGICOGKAEBG {
	NGICOGKAEBG_FLHEKIHAOOB = 0;
	NGICOGKAEBG_LDHCCEHGCLK = 1;
	NGICOGKAEBG_NOBOBICMNGD = 2;
}

message DGOLEMCLKGE {
}

enum MHDPLOKGGGE {
	MHDPLOKGGGE_BAGIBCLBLOD = 0;
	MHDPLOKGGGE_KECIEGFEKCF = 1;
	MHDPLOKGGGE_OLOMKEBKGEL = 2;
	MHDPLOKGGGE_GHOKDMBCDBL = 3;
	MHDPLOKGGGE_EOALOAHNDNO = 4;
}

// CmdId: 4087
message IJMDEEBFOGH {
	DNCPEJNCNEK CPEPJEPHPBD = 11; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 4; // offset: 48, xor const: 4988
	uint32 KMKPPDICOKA = 14; // offset: 40, xor const: 15214
	uint64 AEDAEPKDOAL = 13; // offset: 56, xor const: 12949
	repeated DNKAFLFNDHF POPGNHJNLCC = 3; // offset: 24, xor const: 0
}

message LAEMBIKJBPG {
	uint32 BCMPKLAOIHK = 4; // offset: 28, xor const: 369
	uint32 JBGFHILKOIP = 10; // offset: 24, xor const: 5446
}

// CmdId: 3106
message JBEAIPMEAPE {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 723
}

// CmdId: 4177
message DPPIKNEHIAO {
	repeated int32 LFLEABJHGPN = 4; // offset: 16, xor const: 0
}

message FFFENGOFBMJ {
	FGKJFCJILIL PGBADFMPAPK = 1; // offset: 24, xor const: 0
}

// CmdId: 6827
message LOHEBPOJEIB {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 2606
}

// CmdId: 2356
message LGGMOFCNPOO {
	EFGCJLNBNHP CPEPJEPHPBD = 5; // offset: 32, xor const: 0
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 12; // offset: 40, xor const: 11555
	uint64 AEDAEPKDOAL = 8; // offset: 56, xor const: 9353
	uint64 HEJBMNAOJFL = 2; // offset: 48, xor const: 2513
}

message GGDAJJJNMJO {
	repeated int64 LCNBOOGAAJN = 1; // offset: 16, xor const: 0
}

message KIOIGKMFPHL {
	FGKJFCJILIL LDGGCICOMLA = 4; // offset: 24, xor const: 0
	HollowGridLink ACPGPLMFNOL = 3; // offset: 48, xor const: 0
	FGKJFCJILIL JOELANGNPAH = 1; // offset: 32, xor const: 0
	FGKJFCJILIL CKBOJACIJDI = 2; // offset: 16, xor const: 0
}

message LOIIPNKICBA {
	repeated ENNHHBMIPPP ICEBNMIPCEG = 15; // offset: 24, xor const: 0
	uint32 KEEDNFANNOA = 4; // offset: 84, xor const: 10421
	repeated ENNHHBMIPPP PONENLHBIDF = 12; // offset: 32, xor const: 0
	uint32 HLEAEPDDBLE = 8; // offset: 92, xor const: 8801
	map<uint32, uint32> DKAAPIBODFE = 11; // offset: 56, xor const: 0
	repeated uint32 HEABDKPHHJM = 13; // offset: 16, xor const: 0
	string PPPPHGNCNMI = 6; // offset: 72, xor const: 0
	uint32 NFBBINNKNKI = 3; // offset: 88, xor const: 10044
	repeated ENNHHBMIPPP LDOHMAAMCOP = 10; // offset: 64, xor const: 0
	repeated ENNHHBMIPPP CNHBJNBAPHL = 1; // offset: 40, xor const: 0
	uint32 CPEGJHGIFAA = 7; // offset: 80, xor const: 12409
}

// CmdId: 5159
message KNNNFDNNDFD {
	repeated MEBCHDALDHF NAHLOOAEAEJ = 13; // offset: 16, xor const: 0
}

message KDEAIPEPJFI {
	map<uint32, uint32> FPEBCCNKDCN = 1; // offset: 24, xor const: 0
}

message JDALJGFNGEF {
	int64 KCDAILEMPKE = 5; // offset: 32, xor const: 9943
	int64 MOHHBACKBOK = 13; // offset: 40, xor const: 5168
	uint32 MNHMFPCHHDF = 8; // offset: 48, xor const: 2453
	bool GIBMBJFPPBE = 6; // offset: 52, xor const: 0
	map<uint32, uint32> GLPLNJBEIPF = 3; // offset: 16, xor const: 0
	bool GBKNCJDLDJB = 12; // offset: 53, xor const: 0
}

message DNOIJBIJHNP {
	uint32 FADOABJLFEH = 2; // offset: 24, xor const: 10151
	uint32 PBOAMDEBIGO = 11; // offset: 28, xor const: 2461
}

message CKPHGCOEEGC {
	LDHKJGEMKIO MEPNMNJALHG = 4; // offset: 24, xor const: 0
	FGKJFCJILIL KLBOGJOEKCJ = 3; // offset: 32, xor const: 0
	string CEEAJBNFKDB = 2; // offset: 16, xor const: 0
	DDPDIHDHDIB MFIOHKNGJLA = 1; // offset: 48, xor const: 0
}

message DLJEPEGFAFB {
	map<uint32, uint32> GLPLNJBEIPF = 8; // offset: 48, xor const: 0
	uint32 APKGMCJAKBJ = 7; // offset: 56, xor const: 9107
	ECHLCJKDMIG PFCIOMCFGKL = 12; // offset: 76, xor const: 0
	int64 EFOCIEHGBNA = 2; // offset: 64, xor const: 3762
	MIMIIBIPDLF LKEBAFIIFED = 11; // offset: 40, xor const: 0
	uint32 OPFEAMDPIAG = 14; // offset: 80, xor const: 5460
	FEEJKIJJDEI GDOFFGDIDKP = 13; // offset: 16, xor const: 0
	uint32 PLFCIIAEIFC = 15; // offset: 72, xor const: 14064
	int64 BPCLKADELFF = 10; // offset: 88, xor const: 6715
	uint32 FJINPLKKPOJ = 9; // offset: 60, xor const: 3803
	FAHHNAAPBHG JGKBOIEHNBF = 4; // offset: 24, xor const: 0
}

message EDPCMPOLEAC {
	int32 NJEIBPLDLGO = 1; // offset: 28, xor const: 0
	int32 MHDFOCGAOPO = 2; // offset: 24, xor const: 0
}

enum HKFNGOHGADC {
	HKFNGOHGADC_HENSHIN_TYPE_NONE = 0;
	HKFNGOHGADC_DEFAULT_PLAYER = 1;
	HKFNGOHGADC_PACMANV_1 = 2;
	HKFNGOHGADC_PACMANV_2 = 3;
	HKFNGOHGADC_BOMBER = 4;
	HKFNGOHGADC_BOMBER_TICK_0 = 5;
	HKFNGOHGADC_BOMBER_TICK_1 = 6;
	HKFNGOHGADC_BOMBER_TICK_2 = 7;
	HKFNGOHGADC_BOMBER_TICK_3 = 8;
	HKFNGOHGADC_BOMBER_TICK_4 = 9;
	HKFNGOHGADC_BOMBER_TICK_5 = 10;
	HKFNGOHGADC_TUGGER = 11;
	HKFNGOHGADC_NIGHT_MODE = 12;
	HKFNGOHGADC_RINA_BANGBOO_1 = 13;
	HKFNGOHGADC_RINA_BANGBOO_2 = 14;
	HKFNGOHGADC_GOODS_LOADER = 15;
	HKFNGOHGADC_QIN_YI = 16;
	HKFNGOHGADC_AVATAR_CORIN = 17;
	HKFNGOHGADC_AVATAR_NEKOMIYA = 18;
	HKFNGOHGADC_SPEEDUP_MOVE = 19;
	HKFNGOHGADC_SPEEDUP_RUSH = 20;
	HKFNGOHGADC_ACTIVITY_HACKER = 21;
}

message AELEDMNAFMH {
	bool NCPKBCEMCEH = 7; // offset: 74, xor const: 0
	string OIDDOJOCCJH = 1; // offset: 24, xor const: 0
	bool KPOGDNJFBFH = 5; // offset: 73, xor const: 0
	EBDAIGALHDI DBOACCIJPDL = 12; // offset: 16, xor const: 0
	repeated string BIFPBBCLENA = 15; // offset: 48, xor const: 0
	string PGPOIMHKFPL = 11; // offset: 64, xor const: 0
	string HBHCMOIIIKN = 14; // offset: 56, xor const: 0
	bool FKPLAHFGGPC = 9; // offset: 72, xor const: 0
	int64 IGIDEGGJKFC = 4; // offset: 96, xor const: 1761
	int64 PPOCCDJJECJ = 3; // offset: 80, xor const: 7657
	uint32 IHMOBBGCNGF = 13; // offset: 88, xor const: 5977
	uint32 JPBCGGACFHH = 8; // offset: 92, xor const: 7142
	DICLPNEFFLO PGHPDBDMOCH = 6; // offset: 32, xor const: 0
}

message KGNDGHEDFAM {
	CLIDAGBGAIL FDDFLDCJGCF = 1; // offset: 56, xor const: 0
	IMJIJLIDHEC LJCHOAPPCPB = 7; // offset: 16, xor const: 0
	string JBAEAFDOBLM = 14; // offset: 32, xor const: 0
	GLAEGNJEBPA AABMKJBBCFP = 12; // offset: 60, xor const: 0
	repeated string KJIDCPPPLLE = 9; // offset: 40, xor const: 0
	IMJIJLIDHEC GLBNCAKAGAL = 11; // offset: 48, xor const: 0
	bool BNJNDMFOGLF = 10; // offset: 64, xor const: 0
}

// CmdId: 553
message BBOJBEGAIEP {
	uint32 DCENCIPOBMC = 8; // offset: 24, xor const: 13380
}

// CmdId: 6484
message NBPDPICBHIG {
	uint32 KMKPPDICOKA = 13; // offset: 40, xor const: 2825
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 8; // offset: 48, xor const: 7612
	FPFMJMDLFIG CPEPJEPHPBD = 7; // offset: 24, xor const: 0
	uint64 HEJBMNAOJFL = 10; // offset: 56, xor const: 5145
}

message ICLNOPIHKFG {
	int32 GELGNCOHHLE = 1; // offset: 24, xor const: 0
}

message IMIBFFFDDMN {
	repeated KCDCHOIKCDL EOECDMOEOJO = 9; // offset: 24, xor const: 0
	repeated uint32 FMAOCGLEGLL = 14; // offset: 32, xor const: 0
}

message OKHIFIKABBC {
	bool GIBMBJFPPBE = 4; // offset: 24, xor const: 0
	uint32 OPFEAMDPIAG = 1; // offset: 28, xor const: 2555
}

// CmdId: 1775
message BKDNLCMBLBP {
	repeated uint32 ONKIDHEMGMO = 6; // offset: 24, xor const: 0
}

message OBMFKNDCAJE {
	int32 LCPDGEFCADA = 1; // offset: 28, xor const: 11220
	int32 LGLGBJONIFO = 2; // offset: 36, xor const: 4715
	int32 GNBFPEIBLDK = 7; // offset: 32, xor const: 7126
	int32 CLIOOGMIIIP = 11; // offset: 24, xor const: 1300
}

message KCOPMILAGHH {
	JADEILGOIKG IBFBFPAPHGA = 1; // offset: 24, xor const: 0
	repeated JADEILGOIKG IGCJBDEBAAN = 2; // offset: 16, xor const: 0
}

// CmdId: 8192
message GMAGFIPIEFK {
	uint32 PLFCIIAEIFC = 8; // offset: 24, xor const: 15922
}

message EIKJCAIFDAF {
	int32 CAEPOMEOOLO = 1; // offset: 32, xor const: 0
	int32 ACHJDNJBFPL = 3; // offset: 28, xor const: 0
	int32 FJLNEIBFMAG = 4; // offset: 24, xor const: 0
	int32 CIAHEFIJODM = 2; // offset: 36, xor const: 0
}

enum JOEBLEOABCF {
	JOEBLEOABCF_MEMGMFGBNHF = 0;
	JOEBLEOABCF_BDIJDBKEJJA = 1;
	JOEBLEOABCF_DNFJBNHEDCI = 2;
}

message EAHOHBHJKID {
	int32 OLELGJLFEMK = 9; // offset: 28, xor const: 3002
	int32 EGIEELOMLDI = 15; // offset: 32, xor const: 9574
	int32 HLEAEPDDBLE = 6; // offset: 24, xor const: 14688
	int32 BHBNKFGCMNL = 5; // offset: 36, xor const: 11835
}

// CmdId: 2540
message EIHIIAFAGHL {
}

message PAKOBOPPKOM {
	uint64 IAELFPDCIGB = 2; // offset: 24, xor const: 9066
}

message HFFJCDCDOBC {
	uint32 ODLBABDEAIG = 14; // offset: 32, xor const: 15153
	uint32 OIKDBENLJIB = 7; // offset: 28, xor const: 1694
	bool PJMKIKCPFBN = 11; // offset: 24, xor const: 0
}

message APHBEHJMFND {
	MHODKLJBLDI OFJAEJIMIAE = 8; // offset: 16, xor const: 0
	uint32 IEJAFPFIMEN = 1; // offset: 64, xor const: 4526
	BNGCJFKLIIO DBIOICLFEFB = 7; // offset: 24, xor const: 0
	bool BFOKPAJHIMD = 10; // offset: 72, xor const: 0
	FGBKHODHPNL KBHCJCBHMNF = 5; // offset: 56, xor const: 0
	FHJHFMCLGJM GGPPMELMEEM = 13; // offset: 48, xor const: 0
	string LCIHMDFPAEB = 6; // offset: 40, xor const: 0
	uint32 ECPANJGKLDE = 9; // offset: 68, xor const: 7737
}

message IDKIJHEOEEL {
}

// CmdId: 5001
message AIOMAGNGCNA {
	repeated string POLDFCJIEBG = 10; // offset: 24, xor const: 0
	repeated uint32 KFJFIAKHOCN = 4; // offset: 32, xor const: 0
}

// CmdId: 7750
message GPIDPPJJBKP {
	uint32 BCCEOLDLIFA = 9; // offset: 24, xor const: 15022
	uint32 HJGCHCAKKNJ = 4; // offset: 28, xor const: 13744
}

message NGDMCEHFIDH {
	repeated uint32 EOBBJNILNKH = 6; // offset: 16, xor const: 0
	uint32 EECKGELEGOE = 8; // offset: 32, xor const: 12922
	bool EDEIIAKPECE = 13; // offset: 36, xor const: 0
}

enum GHEDAHCKGGP {
	GHEDAHCKGGP_NMMMKDMNCJB = 0;
	GHEDAHCKGGP_DJGGALDPELJ = 1;
	GHEDAHCKGGP_FBOGLCCEEDA = 2;
}

message LDJMHOFHJHK {
	repeated uint32 JJPEOFJCLFB = 3; // offset: 24, xor const: 0
	INLFFDKGPNK AODMMCCECAP = 8; // offset: 16, xor const: 0
}

// CmdId: 5322
message HNLNOGGLJBO {
	int32 IHIGNMLCHDK = 14; // offset: 24, xor const: 10624
}

enum CCFACOACAKJ {
	CCFACOACAKJ_JBPCPPAIJMB = 0;
	CCFACOACAKJ_CDHDOFOLEEF = 1;
}

message KOPEDNJFLKG {
	FGKJFCJILIL OCJJDOCNPEN = 2; // offset: 24, xor const: 0
	FGKJFCJILIL NLPFGFMMJJO = 1; // offset: 32, xor const: 0
}

message AOEEPAJKGMC {
	repeated MENABIAJFMG HEODGLMMFEM = 8; // offset: 24, xor const: 0
	repeated MIJMPCIKHJI BKHFJEOPDJN = 14; // offset: 16, xor const: 0
	repeated uint32 IPGBAGOLMPJ = 10; // offset: 40, xor const: 0
	uint32 DCIGFJKJBKL = 11; // offset: 60, xor const: 4167
	int32 ECFNNFKLEPH = 7; // offset: 56, xor const: 12587
	uint32 HAJDKPEANBC = 15; // offset: 64, xor const: 1904
	uint32 BGBMLDAAIDD = 6; // offset: 68, xor const: 7145
	repeated uint32 JELAMDGCAKF = 13; // offset: 32, xor const: 0
}

// CmdId: 7563
message DJFAACPKHKA {
	uint32 EKLGNOIEMLA = 9; // offset: 24, xor const: 6868
}

// CmdId: 6422
message GIGNGBLLCGK {
	ECEKFPPBBAG BKIHIFEJFDD = 9; // offset: 32, xor const: 0
	uint32 ELLAHKKNHAM = 10; // offset: 28, xor const: 15957
	uint32 NMHNBHDEKBP = 6; // offset: 24, xor const: 873
}

message KLAJLIAANKK {
	PNHMKMECKBM LKKJHFPKECH = 1; // offset: 40, xor const: 0
	PCFEPJDNMBM FJJLFABNKGG = 2; // offset: 32, xor const: 0
	JNIKJGJIMDH MINJNMPLDFA = 3; // offset: 16, xor const: 0
}

// CmdId: 6172
message GEKGFMENHLO {
	int32 OFAJAJFGEJF = 5; // offset: 56, xor const: 16343
	int32 KADBIEIMCBD = 4; // offset: 44, xor const: 416
	string MOHHBACKBOK = 7; // offset: 32, xor const: 0
	int32 EKHOOOKBNHI = 12; // offset: 60, xor const: 3626
	int32 NODBAHCCOBD = 14; // offset: 40, xor const: 9567
	int32 ALOODABEJDO = 9; // offset: 68, xor const: 14275
	string DEHDJDKCBKG = 10; // offset: 24, xor const: 0
	int32 BCMPKLAOIHK = 11; // offset: 52, xor const: 7678
	int32 ICMLEAFAPIK = 15; // offset: 48, xor const: 1045
	int32 NBNJEFMBCEE = 2; // offset: 64, xor const: 9682
}

// CmdId: 9224
message PABMOFDNJII {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 3904
	uint32 HJPLMHJIJPM = 9; // offset: 28, xor const: 11700
}

message DNLCMMNCBMI {
	KDCCAMDNIDH KHGBBGFIGDH = 10; // offset: 16, xor const: 0
	HIBENMJKINC DOGDICBKOCI = 4; // offset: 80, xor const: 0
	JEPOINPGDGK OHEHEDEMBMB = 9; // offset: 72, xor const: 0
	LMKDHPHJKNL IKNNAEIAEGG = 5; // offset: 24, xor const: 0
	LLEJAHGKPDB HEIEDHNNLLO = 1; // offset: 32, xor const: 0
	DNCIBDKEJAL FLCONKCEEMO = 2; // offset: 88, xor const: 0
	JFFGMMLEAGJ CMHFMBAONFA = 15; // offset: 56, xor const: 0
	PPKBKDLIEEA BCKOJAJDADH = 3; // offset: 48, xor const: 0
	BHPEJOOPKAK AOKONHJOHHA = 11; // offset: 64, xor const: 0
}

enum HEINIFCCJBI {
	HEINIFCCJBI_MLMPIOMCGHF = 0;
	HEINIFCCJBI_MAKKHOMOPOP = 1;
	HEINIFCCJBI_OHBMKEKGBFD = 2;
}

// CmdId: 845
message FJJFBMOADPE {
	int32 IHIGNMLCHDK = 1; // offset: 24, xor const: 2025
}

enum BHCECCECGIC {
	BHCECCECGIC_LINK_EVENT_MODIFY_PUSH = 0;
	BHCECCECGIC_LINK_EVENT_MODIFY_BREAK = 1;
}

// CmdId: 9845
message EPEFJMHDHFF {
}

message IODKMLDEAGC {
	uint64 ONIGFOBEEGG = 2; // offset: 56, xor const: 48
	uint32 NJCHLOHINAE = 14; // offset: 68, xor const: 13038
	bool GNIPFOFDPBG = 15; // offset: 64, xor const: 0
	map<uint32, CMJEMGBFFED> HMNGINOGDKK = 11; // offset: 32, xor const: 0
	uint64 OKICIMAHKJG = 5; // offset: 48, xor const: 13408
	map<uint32, APCGFJOIFLH> LDGMOBHPCEK = 7; // offset: 24, xor const: 0
	repeated BMGNLGIKIKK MHHOCGAOCNB = 9; // offset: 40, xor const: 0
	uint32 PNKDKBOPMEH = 10; // offset: 72, xor const: 8330
	uint32 JFPJLMJBEBE = 3; // offset: 76, xor const: 13606
}

message CONNAONBKAN {
	string KFHKGELKJBD = 3; // offset: 32, xor const: 0
	FGKJFCJILIL AMIJIAHGPMC = 2; // offset: 24, xor const: 0
	FGKJFCJILIL NIMMBLPCMCH = 1; // offset: 16, xor const: 0
}

// CmdId: 8275
message HCEHNKKBBAP {
	repeated DBNNNNHLAEF CKDIGAJBCLF = 11; // offset: 24, xor const: 0
}

message NIFKKJNLLII {
	string IPOHAJMNEHL = 3; // offset: 24, xor const: 0
	HMBDJFECKCL HLEAEPDDBLE = 1; // offset: 40, xor const: 0
	repeated FGKJFCJILIL NPEFFKFJFCP = 2; // offset: 32, xor const: 0
}

// CmdId: 3573
message HJEMKMENLNB {
	int32 IHIGNMLCHDK = 9; // offset: 24, xor const: 6810
}

message FLNDOFNNCLG {
}

message CMOIIMMCDFL {
	string KOEHBBBALHE = 2; // offset: 40, xor const: 0
	repeated string GFBIEJLFPNH = 4; // offset: 32, xor const: 0
	repeated string JJIEEGMOBJF = 1; // offset: 24, xor const: 0
	repeated int32 DNFOKFLMOAJ = 5; // offset: 16, xor const: 0
}

enum LIBCNIBGDEJ {
	LIBCNIBGDEJ_OLKLKPNFIGF = 0;
	LIBCNIBGDEJ_DDPMHBIFAOM = 1;
	LIBCNIBGDEJ_JFENLDMBHGB = 2;
	LIBCNIBGDEJ_OJCCIFFMMIH = 3;
}

enum LBKCFMGOPNI {
	LBKCFMGOPNI_GOOPGAAIKFA = 0;
}

message PHHAKJFGCIB {
	DJIHLKNEKCK HLEAEPDDBLE = 1; // offset: 32, xor const: 0
	FGKJFCJILIL MJBLNIKMNOD = 2; // offset: 24, xor const: 0
}

// CmdId: 3063
message JAHFJPKEBMI {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 15752
}

message DDIKOKDDHEC {
	int32 ECFNNFKLEPH = 12; // offset: 68, xor const: 122
	repeated uint32 JELAMDGCAKF = 3; // offset: 16, xor const: 0
	repeated uint32 IPGBAGOLMPJ = 11; // offset: 32, xor const: 0
	uint32 BGBMLDAAIDD = 5; // offset: 60, xor const: 14597
	repeated MIJMPCIKHJI BKHFJEOPDJN = 14; // offset: 48, xor const: 0
	uint32 HAJDKPEANBC = 15; // offset: 56, xor const: 2749
	uint32 DCIGFJKJBKL = 1; // offset: 64, xor const: 2482
	repeated MENABIAJFMG HEODGLMMFEM = 2; // offset: 40, xor const: 0
}

message OJGFCFJIENH {
}

message EAHKHBIAJJP {
	FGKJFCJILIL DMPGICGABKH = 2; // offset: 16, xor const: 0
	repeated MICALNMDKAN EGBFBPHKLCC = 1; // offset: 24, xor const: 0
	IHHJNHHDNHN JDLIABJGLHB = 3; // offset: 40, xor const: 0
}

message FLAIJMNPKAF {
	string JGNFLOHJKJO = 2; // offset: 16, xor const: 0
	int32 HLEAEPDDBLE = 1; // offset: 32, xor const: 0
}

message GBCOFNONGJI {
	uint32 KKOOBMNIBCH = 6; // offset: 32, xor const: 9726
	uint32 MHEBGJDAHIL = 12; // offset: 40, xor const: 15533
	uint32 DHLCPNBLAPD = 10; // offset: 48, xor const: 3980
	int32 GEGINGBHNEK = 3; // offset: 44, xor const: 9643
	int32 GDHBDIEAOFI = 2; // offset: 36, xor const: 2333
	repeated uint32 OGLPCLPPDCH = 11; // offset: 16, xor const: 0
}

// CmdId: 7010
message PBMDMPAADOB {
}

// CmdId: 8735
message DEJPBOIHJDC {
	uint32 MOIMDGDEMDJ = 12; // offset: 24, xor const: 6667
}

message FDAHEHHHBIB {
	uint32 GFMHBPABPND = 2; // offset: 40, xor const: 0
	string GPDNCMBPOFB = 1; // offset: 32, xor const: 0
	string JIDKLKMELEB = 3; // offset: 16, xor const: 0
}

message MIBCKNMINCC {
	FGKJFCJILIL MPHLIEKKFIK = 1; // offset: 32, xor const: 0
	FGKJFCJILIL ENCANOPLLDM = 2; // offset: 24, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 3; // offset: 40, xor const: 0
}

// CmdId: 6343
message GBGNJENHIOD {
	uint32 MIKKPEJFEOD = 9; // offset: 52, xor const: 4966
	uint32 EFNFANEIJMH = 15; // offset: 48, xor const: 3768
	IFGDJNNPCAN DOJOAAAAJDC = 13; // offset: 40, xor const: 0
	string MDFKPGBALJI = 4; // offset: 24, xor const: 0
	IFGDJNNPCAN CKBOJACIJDI = 7; // offset: 16, xor const: 0
}

// CmdId: 6132
message HFKJMJKEFIC {
	uint32 BNKPHAGNJFL = 4; // offset: 24, xor const: 6075
	uint32 DCLCMCCDFMK = 14; // offset: 28, xor const: 947
}

message PBJEJLLOJKF {
	repeated HPLGHHIFMPH LCEFNEJHGKI = 15; // offset: 16, xor const: 0
}

message GIAFLDDDPPL {
	FGKJFCJILIL MCLIPIPICMO = 1; // offset: 16, xor const: 0
}

message KCCEABLGBBJ {
}

// CmdId: 37
message ANKFFHPDGFJ {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 9854
}

// CmdId: 487
message PJPCMPDLGHB {
	uint32 MPEHHLEOPAP = 3; // offset: 24, xor const: 10995
}

message ABNKJGHHNLC {
	FMLADAJDHHM IPAOONNHFOF = 11; // offset: 24, xor const: 0
	uint32 PFCIOMCFGKL = 1; // offset: 32, xor const: 9472
	uint32 HJHFOICGOAC = 9; // offset: 40, xor const: 3621
	uint32 BEKFLJGFLJD = 6; // offset: 36, xor const: 4025
	uint32 CBDBIPMJEPJ = 12; // offset: 44, xor const: 13562
}

message EIGOEBIOMMG {
	uint32 OPFEAMDPIAG = 7; // offset: 24, xor const: 5162
	int64 EBOADDLHOCO = 8; // offset: 40, xor const: 15695
	int64 BPCLKADELFF = 13; // offset: 32, xor const: 4604
}

message FBDFKGHPPFG {
	FGKJFCJILIL MDKOACALCPO = 1; // offset: 24, xor const: 0
}

// CmdId: 2809
message BKEKCNPGMOA {
	repeated int32 FNEMBOOACFL = 8; // offset: 24, xor const: 0
}

// CmdId: 9264
message OBOBPNJMKPC {
}

message IKHIGIACDMJ {
	int32 PHLPFLOFMNI = 4; // offset: 44, xor const: 0
	int32 KOMIMFNADCM = 3; // offset: 60, xor const: 0
	int32 EMMLLHBLNBK = 8; // offset: 56, xor const: 0
	int32 MPNDKCLBMBN = 6; // offset: 72, xor const: 0
	repeated DCEPFFPLOLM ONJLPHMDONA = 9; // offset: 32, xor const: 0
	int32 GFCLKDAOMBM = 1; // offset: 52, xor const: 0
	int32 POKAIAOPKHH = 10; // offset: 48, xor const: 0
	repeated EHMGDCOJEMF GGANGPGAGIA = 7; // offset: 24, xor const: 0
	int64 JJDBEPEENOB = 2; // offset: 64, xor const: 0
	int32 EBDKFCKDGIO = 5; // offset: 40, xor const: 0
}

// CmdId: 907
message LICGCIEIJFN {
	int32 OMAGKOPBJEB = 8; // offset: 24, xor const: 1647
}

// CmdId: 3674
message GBPNLCLDNNO {
	DMHBAKDEAHH CPEPJEPHPBD = 14; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 1; // offset: 48, xor const: 6272
	repeated DNKAFLFNDHF POPGNHJNLCC = 9; // offset: 32, xor const: 0
	uint64 HEJBMNAOJFL = 10; // offset: 56, xor const: 2819
	uint32 KMKPPDICOKA = 12; // offset: 40, xor const: 6119
}

message PKIHOFFEBKE {
	repeated FGKJFCJILIL DADAPAILOII = 8; // offset: 48, xor const: 0
	FGKJFCJILIL CMJFABFIBOE = 4; // offset: 24, xor const: 0
	FNNFKBFGGGO CCHBCDDMCMO = 6; // offset: 112, xor const: 0
	HGLOMBGGODB OEGNJPJCIOI = 7; // offset: 116, xor const: 0
	FGKJFCJILIL AEIHIBLACCM = 1; // offset: 40, xor const: 0
	repeated int32 DCLNCMIBHFA = 9; // offset: 32, xor const: 0
	FGKJFCJILIL BDAGOLKDEAB = 11; // offset: 88, xor const: 0
	LEHENCIPJIE CKBOJACIJDI = 3; // offset: 104, xor const: 0
	repeated FGKJFCJILIL FCCONGDNBNE = 5; // offset: 72, xor const: 0
	repeated int32 APKGADLNBKF = 13; // offset: 56, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 12; // offset: 108, xor const: 0
	FGKJFCJILIL EFJPPJJFNJM = 2; // offset: 96, xor const: 0
	repeated FGKJFCJILIL GPFNPNDPMPC = 14; // offset: 64, xor const: 0
	repeated int32 JJNHKELHECP = 10; // offset: 16, xor const: 0
}

message GDCKMGCOCHJ {
	bool DLGLKEBKCGL = 9; // offset: 69, xor const: 0
	repeated uint32 BKHHIINMGEC = 8; // offset: 56, xor const: 0
	uint32 BEGOEADMEGG = 3; // offset: 64, xor const: 2043
	bool JDMFLOPCNDL = 5; // offset: 68, xor const: 0
	repeated uint32 FEHEOPPPIFN = 4; // offset: 16, xor const: 0
	PLMOLMHGOBD OIDDOJOCCJH = 1; // offset: 40, xor const: 0
	repeated uint32 GDNPCECHKFM = 14; // offset: 48, xor const: 0
	repeated MODPPBCAPGE GOPPGNFIJAA = 13; // offset: 32, xor const: 0
}

message DICJPHCNLDE {
	bool IGADOMHOINM = 1; // offset: 25, xor const: 0
	bool BBCJIIHCKFB = 2; // offset: 24, xor const: 0
}

enum DHCDIOHCKHC {
	DHCDIOHCKHC_AJHPJDGNNEC = 0;
	DHCDIOHCKHC_PLDPBEGMFCK = 1;
	DHCDIOHCKHC_ANMLBOPHDGE = 2;
	DHCDIOHCKHC_OBBKJPADFNH = 3;
}

message CAINPIIIIJO {
	IHHJNHHDNHN JDDNAHKAFIK = 2; // offset: 48, xor const: 0
	FGKJFCJILIL LOIEJIDBLEN = 3; // offset: 32, xor const: 0
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 16, xor const: 0
	FGKJFCJILIL JODDMDEBAFG = 4; // offset: 40, xor const: 0
}

// CmdId: 827
message IOOIJKPKBFF {
	repeated uint32 GFBFEKAJDIG = 13; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 3; // offset: 32, xor const: 9365
}

// CmdId: 4926
message GLMKKKGDFCJ {
	int32 ENEGAHHFOPK = 13; // offset: 24, xor const: 4295
}

message DDGENGBPHMK {
	FDDNGHKJDJA PPIACOGDLJM = 11; // offset: 88, xor const: 0
	JIMCCNADLCF MKEHIDHJCIN = 5; // offset: 40, xor const: 0
	OMHPKOJBPMM FPDGMLJENFC = 12; // offset: 32, xor const: 0
	BKDLGHCFDFA PHGOHMKLMKE = 14; // offset: 80, xor const: 0
	BKAPFDIJEGH ANNNPJOBJJK = 4; // offset: 64, xor const: 0
	uint32 AEJJPFOLCNF = 2; // offset: 104, xor const: 7887
	uint32 PMHDIDFIJGH = 6; // offset: 108, xor const: 10113
	OLBJGCFEPHF OKJMJEFAHLI = 3; // offset: 24, xor const: 0
	bool PCGFEFAEPCK = 9; // offset: 116, xor const: 0
	uint32 ACDBPOKEDCC = 13; // offset: 124, xor const: 5965
	EDBDGDJAOGE CJHKGAGHFBF = 15; // offset: 48, xor const: 0
	NGFIKMPFCLE GBFPJMHKGDI = 1; // offset: 96, xor const: 0
	uint32 GOCDCFBHNDL = 10; // offset: 120, xor const: 10903
	CBMHCEEKHKL JJKPBIJAOHD = 8; // offset: 72, xor const: 0
	uint32 LJMKNHMPBDF = 7; // offset: 112, xor const: 13343
	BFINALDNIEK PHHDEMFHHAH = 589; // offset: 56, xor const: 0
}

// CmdId: 6281
message JPAILCBMMMF {
	int32 IHIGNMLCHDK = 7; // offset: 24, xor const: 6752
}

// CmdId: 8104
message IAGAAKNFABL {
}

// CmdId: 6693
message MHMBIHHMLPP {
	uint32 LGNMJDDJCDC = 15; // offset: 28, xor const: 16212
	uint32 GFCLKDAOMBM = 1; // offset: 24, xor const: 7094
}

message BFNGIGDKKJN {
	repeated BDFEGMAKMGJ FBCIEONGFEI = 10; // offset: 24, xor const: 0
	int32 GPOOIBMEHOK = 15; // offset: 56, xor const: 5364
	repeated int32 FAOGDJDOJAF = 4; // offset: 48, xor const: 0
	repeated int32 MGDMJAODKBI = 2; // offset: 40, xor const: 0
	repeated int32 DMKDABMLBIH = 8; // offset: 32, xor const: 0
}

message FHJDNCIGGMK {
	repeated FGKJFCJILIL AEAMBCAGKEC = 2; // offset: 40, xor const: 0
	FGKJFCJILIL PDEJFBLBKPN = 1; // offset: 24, xor const: 0
	repeated FGKJFCJILIL AHPEDNEOCKK = 3; // offset: 16, xor const: 0
	string BBJIHHAOPPP = 4; // offset: 48, xor const: 0
}

message IDDMBGOFFGO {
}

message NNOGPBFKGNI {
	bool KDDECMDNHEL = 13; // offset: 32, xor const: 0
	repeated IHNPCNCGBDK ONDKOLPNHLO = 10; // offset: 16, xor const: 0
}

enum DEHPMELLJMG {
	DEHPMELLJMG_FIKDFABPGJD = 0;
	DEHPMELLJMG_JMCIDFPLBOG = 1;
	DEHPMELLJMG_PNMMMECDKJJ = 2;
	DEHPMELLJMG_OBHHAMAGJLC = 3;
}

// CmdId: 4716
message MKKLBJJEBDC {
	uint32 IMIBEBEKOEO = 15; // offset: 24, xor const: 3806
}

message JOMIHPPCBJE {
	repeated PHHAKJFGCIB ONDKOLPNHLO = 1; // offset: 24, xor const: 0
}

message CAJLCDGPHJL {
	int32 NKHMBCNPMOJ = 3; // offset: 32, xor const: 0
	int32 GFCLKDAOMBM = 2; // offset: 24, xor const: 0
	int32 MDDJMCEJKIF = 1; // offset: 28, xor const: 0
}

message FOHEJDIEIEB {
	uint32 NIJLEDIPBGF = 5; // offset: 36, xor const: 9925
	bool COALJDMLICD = 13; // offset: 32, xor const: 0
	repeated ANEGLGJMMIP BBCMGLFKBLF = 9; // offset: 16, xor const: 0
}

// CmdId: 6889
message DOFCGFBOJMJ {
	uint32 AMIJIAHGPMC = 1; // offset: 24, xor const: 6397
	bool JMLECJIFDHP = 10; // offset: 28, xor const: 0
	uint32 GCGPNHPGPLH = 14; // offset: 32, xor const: 13401
}

// CmdId: 7113
message FHMGDFIMIPF {
}

message LAJBHNLGHHH {
	string OFPODKIOKBK = 1; // offset: 16, xor const: 0
	IAENIOKAEPP EJNNGCMNFCH = 3; // offset: 40, xor const: 0
	map<uint32, string> MLANOOCDHHG = 4; // offset: 24, xor const: 0
	FDAHEHHHBIB GMEPHOEHPIC = 2; // offset: 48, xor const: 0
}

message CAHPLDCKODF {
	FGKJFCJILIL DGPMEEKBLKG = 1; // offset: 16, xor const: 0
}

message OMNEFOBCPBB {
	string OOODKIGJBCN = 13; // offset: 24, xor const: 0
	int32 IHIGNMLCHDK = 6; // offset: 40, xor const: 3220
	repeated JKKIDGOBEPF ONLDIMKJONC = 14; // offset: 16, xor const: 0
}

message FKBBLHKIHBK {
	string DICHOLEBGIH = 1; // offset: 24, xor const: 0
}

// CmdId: 8977
message JMCFFBKLCHG {
	uint64 HEJBMNAOJFL = 4; // offset: 48, xor const: 8585
	uint32 KMKPPDICOKA = 14; // offset: 56, xor const: 4858
	repeated DNKAFLFNDHF POPGNHJNLCC = 7; // offset: 24, xor const: 0
	ILPLLFDFCGM CPEPJEPHPBD = 15; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 40, xor const: 9343
}

message HHPFFCGOBBF {
	repeated DNLCMMNCBMI LDGGNEAFELM = 7; // offset: 24, xor const: 0
}

enum EEPFPPCPPGE {
	EEPFPPCPPGE_KEJPBBCGLHJ = 0;
	EEPFPPCPPGE_BJCDFKHMGPE = 1;
	EEPFPPCPPGE_IPOGJEKEDJP = 2;
	EEPFPPCPPGE_CBHECHHCOHC = 3;
	EEPFPPCPPGE_KPKEFPIDNIK = 4;
	EEPFPPCPPGE_FMIFNOFANOJ = 6;
}

// CmdId: 8996
message ECPNPJEDPDJ {
	repeated uint32 MOCNDIDNNIE = 12; // offset: 24, xor const: 0
	uint32 BCCEOLDLIFA = 13; // offset: 32, xor const: 15814
}

// CmdId: 5352
message LCOBJIFOLAF {
}

message ADKIPNDBLLE {
	repeated uint32 FHGKKAEOIDO = 14; // offset: 24, xor const: 0
}

// CmdId: 9359
message CCBOHJIGODP {
	int64 LBHOJDGKNBH = 6; // offset: 32, xor const: 7951
	int32 BCDFMMCFFEM = 9; // offset: 44, xor const: 9419
	int32 IHIGNMLCHDK = 2; // offset: 40, xor const: 13003
	repeated IMJOMAPGGCB AFCENAAEMKP = 7; // offset: 16, xor const: 0
}

// CmdId: 6022
message MJEDLOBDDOA {
	PGOPAPAFJNG CPEPJEPHPBD = 1; // offset: 32, xor const: 0
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 1979
	uint64 HEJBMNAOJFL = 4; // offset: 40, xor const: 5108
	uint32 KMKPPDICOKA = 14; // offset: 48, xor const: 6126
	repeated DNKAFLFNDHF POPGNHJNLCC = 10; // offset: 16, xor const: 0
}

// CmdId: 4383
message AFKKGHDGBCH {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 1447
}

// CmdId: 9669
message KBDJIDFCOCJ {
	string OOODKIGJBCN = 14; // offset: 16, xor const: 0
}

message LGFJHCGPEAK {
	IFPPKBAKHGA CKBOJACIJDI = 15; // offset: 24, xor const: 0
	uint32 NBNJEFMBCEE = 1; // offset: 36, xor const: 11339
	uint32 NCAGHHFDAOG = 9; // offset: 32, xor const: 10112
}

message OAKCNBBAIDH {
	bool EFHKPGKDCOP = 14; // offset: 93, xor const: 0
	FGKJFCJILIL CKILDKNGINN = 7; // offset: 72, xor const: 0
	FGKJFCJILIL OFNJMHMENDK = 10; // offset: 16, xor const: 0
	repeated JBBKPAGMCLK EPDLJMJMHDK = 3; // offset: 40, xor const: 0
	bool BNHLDEHJCDM = 15; // offset: 92, xor const: 0
	FGKJFCJILIL EHCELHPLKIA = 5; // offset: 48, xor const: 0
	JMDOBAEPMFP HLEAEPDDBLE = 1; // offset: 96, xor const: 0
	bool NBMIGHKEDOE = 17; // offset: 91, xor const: 0
	string IMMPAOGLOLG = 6; // offset: 80, xor const: 0
	FGKJFCJILIL AEMGKDCDLGG = 11; // offset: 32, xor const: 0
	bool IONAIHFONID = 16; // offset: 89, xor const: 0
	FGKJFCJILIL NGFLBMOBPMJ = 8; // offset: 56, xor const: 0
	bool IJOGBNLFPDK = 13; // offset: 95, xor const: 0
	bool KGKEABFPKBL = 4; // offset: 90, xor const: 0
	repeated CJAMGDDCGBI NLOCFBHBIPA = 2; // offset: 64, xor const: 0
	bool BLDDNHPNIIJ = 12; // offset: 94, xor const: 0
	bool FKMGHFBAFID = 9; // offset: 88, xor const: 0
}

message MDJIABIEBHM {
	OMJAODEMIGP GEFPNMFEBEN = 10; // offset: 16, xor const: 0
}

enum GGDBNPKALBM {
	GGDBNPKALBM_PLOT_PLAY = 0;
	GGDBNPKALBM_DIALOG = 1;
	GGDBNPKALBM_BUBBLE = 2;
}

// CmdId: 4073
message MHCDCHCCLLM {
	uint32 BHDLCHFDHNO = 7; // offset: 36, xor const: 139
	bool MNIEGOJIKPP = 5; // offset: 24, xor const: 0
	uint32 BCCEOLDLIFA = 10; // offset: 32, xor const: 3561
	uint32 MHINMINPONI = 8; // offset: 28, xor const: 6291
}

message JBBKPAGMCLK {
	FGKJFCJILIL KCJLECGKGKL = 1; // offset: 32, xor const: 0
	FGKJFCJILIL NGBOBBPIKJP = 2; // offset: 24, xor const: 0
}

enum KEBEAONDIDB {
	KEBEAONDIDB_ELMAAPIEFOE = 0;
	KEBEAONDIDB_JHABIGDALPJ = 1;
}

// CmdId: 959
message MJOLCIKLECB {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 2625
	uint32 ODIEODCGOGA = 11; // offset: 28, xor const: 5263
}

// CmdId: 1226
message OKFNIAJAIPG {
	uint64 HEJBMNAOJFL = 2; // offset: 48, xor const: 11593
	uint32 KMKPPDICOKA = 11; // offset: 40, xor const: 11885
	uint64 AEDAEPKDOAL = 15; // offset: 56, xor const: 795
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 32, xor const: 0
	BOEPBMKJEPE CPEPJEPHPBD = 3; // offset: 16, xor const: 0
}

message MENPCNFKGNM {
	repeated BGBCMCFAKPL OOIOLOBOHNH = 4; // offset: 32, xor const: 0
	string MPHLIEKKFIK = 5; // offset: 16, xor const: 0
	JBPJKFLCAEK HLEAEPDDBLE = 6; // offset: 40, xor const: 0
}

enum KNELANMFIGH {
	KNELANMFIGH_CDDOGFDINGJ = 0;
	KNELANMFIGH_KJGNLHAHLMK = 1;
	KNELANMFIGH_CGAKDIGHLLE = 2;
}

enum FDIEHFMBOKJ {
	FDIEHFMBOKJ_CHELOLLAMKK = 0;
	FDIEHFMBOKJ_CAAGJEDLNNJ = 1;
	FDIEHFMBOKJ_GAMKNKCIHFG = 2;
}

// CmdId: 3285
message OBBIDKINDOB {
	uint32 NFKEFHINEOL = 4; // offset: 28, xor const: 11263
	uint32 BCMPKLAOIHK = 1; // offset: 24, xor const: 7417
}

enum HEFHEECENLF {
	HEFHEECENLF_KEGJIIHBDGJ = 0;
	HEFHEECENLF_CHMAMFDFJLG = 1;
	HEFHEECENLF_HHAJPMENONA = 2;
	HEFHEECENLF_COOGILFIOMF = 3;
	HEFHEECENLF_KIIMOGFIAKP = 4;
	HEFHEECENLF_HMIOAJKLFFJ = 5;
}

// CmdId: 4139
message DBOMALDPPOH {
	uint32 JHPDANKCDHB = 14; // offset: 24, xor const: 366
	uint32 JJJJAPLJLHB = 15; // offset: 28, xor const: 2600
}

message HGPKDFHCMFP {
	int32 KFBCDDCIKAM = 1; // offset: 24, xor const: 0
}

message LONLBNAMKCE {
	int32 DICPEFACGEH = 978; // offset: 48, xor const: 8002
	int32 OFPMFFGILFN = 15; // offset: 72, xor const: 8777
	int32 DMIKOLMLDNM = 7; // offset: 80, xor const: 1757
	int32 MAIEIMPHALM = 1853; // offset: 76, xor const: 567
	int32 APGFHCHHKLK = 6; // offset: 44, xor const: 7240
	int32 HLHBNNENFLE = 1609; // offset: 88, xor const: 11682
	int32 GNKKFNPIOPG = 12; // offset: 96, xor const: 13530
	int32 KGHFOLOCDJN = 13; // offset: 52, xor const: 10359
	float AKPIAFHFFDP = 1; // offset: 64, xor const: 0
	uint32 KBKLJLLBLCD = 4; // offset: 60, xor const: 8411
	int32 CBBPJPAOMEC = 9; // offset: 40, xor const: 133
	int32 AKBLICMCPJB = 10; // offset: 68, xor const: 1975
	repeated JDJDMPAOFDK AFCENAAEMKP = 2; // offset: 24, xor const: 0
	int32 JFHOCOKFLHD = 14; // offset: 84, xor const: 11096
	int32 NALDDDKAODD = 3; // offset: 36, xor const: 14650
	int32 LDEFBNHMJKK = 11; // offset: 32, xor const: 2494
	int32 AALNDJPOHBB = 5; // offset: 92, xor const: 4586
	int32 CPEGDKBNGDH = 8; // offset: 56, xor const: 10702
}

message LHCHMNFIOAB {
	HBFBNKAODPJ FNNGEDGDEPE = 11; // offset: 16, xor const: 0
	IFGDJNNPCAN FGALEHFDFPD = 14; // offset: 24, xor const: 0
	int32 DAOBDMOKKNO = 8; // offset: 40, xor const: 3115
}

message KCODHMHPHHO {
	int32 KMBOJNIJCFF = 8; // offset: 24, xor const: 11815
	int32 IGHOEJLCOPC = 1; // offset: 28, xor const: 2797
}

enum NIKALECEMBD {
	NIKALECEMBD_NGPAFHFICBB = 0;
	NIKALECEMBD_CICBKELBAAP = 1;
	NIKALECEMBD_PMNFLJIDLGI = 2;
	NIKALECEMBD_BNADGBBADBH = 3;
}

// CmdId: 8622
message NBMKFIAKEEC {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 3171
}

// CmdId: 2385
message CODJDOCDEGC {
	repeated uint32 AFAIMHMGEHK = 5; // offset: 16, xor const: 0
}

// CmdId: 7937
message IEAGMBBCAJK {
	uint64 HEJBMNAOJFL = 4; // offset: 56, xor const: 1515
	uint64 AEDAEPKDOAL = 10; // offset: 48, xor const: 7405
	repeated DNKAFLFNDHF POPGNHJNLCC = 6; // offset: 16, xor const: 0
	uint32 KMKPPDICOKA = 11; // offset: 40, xor const: 9195
	OBMFKNDCAJE CPEPJEPHPBD = 13; // offset: 32, xor const: 0
}

message AECBMDFBPPG {
	uint32 MHGGEFAONBI = 2; // offset: 40, xor const: 0
	uint32 AAHEOBDBNGM = 1; // offset: 32, xor const: 0
	bytes EDCCDBGMJFJ = 3; // offset: 24, xor const: 0
	bool LHDDAENDCFF = 4; // offset: 36, xor const: 0
}

message HAJCGCMAPAC {
	uint64 AEDAEPKDOAL = 9; // offset: 24, xor const: 6175
	uint64 KHJBNCBPCDN = 14; // offset: 40, xor const: 6550
	uint64 HEJBMNAOJFL = 10; // offset: 32, xor const: 3690
	uint64 HKCHPDBIJHC = 6; // offset: 56, xor const: 3511
	uint32 NIJLEDIPBGF = 13; // offset: 48, xor const: 14266
}

// CmdId: 4606
message LCKINOMOJCD {
	int32 ALMNNGFCOOP = 3; // offset: 24, xor const: 14642
	uint32 OJNNMPEPDNC = 4; // offset: 28, xor const: 9264
	uint32 NMHNBHDEKBP = 1; // offset: 32, xor const: 2520
}

message NAFOADACBAN {
	MEGKPCHHBBM DBOACCIJPDL = 11; // offset: 16, xor const: 0
	float ENCANOPLLDM = 1; // offset: 32, xor const: 0
}

// CmdId: 5547
message KOICHNFAHAA {
	ABMABLFFPEN AFCENAAEMKP = 15; // offset: 24, xor const: 0
	uint32 JCFCKNIIGID = 5; // offset: 36, xor const: 3304
	int32 IHIGNMLCHDK = 1; // offset: 32, xor const: 2134
}

// CmdId: 8986
message LAAOGADDNPN {
	map<uint32, uint32> MOMABGNEJJA = 10; // offset: 24, xor const: 0
	uint32 JMGIOILAMOJ = 7; // offset: 48, xor const: 9705
	map<uint32, uint32> ONBALIGFGJK = 14; // offset: 16, xor const: 0
	int32 IHIGNMLCHDK = 15; // offset: 44, xor const: 7587
	uint32 JLHGOPMFLAA = 11; // offset: 40, xor const: 10892
}

// CmdId: 5942
message OLNBAKNAIEF {
}

// CmdId: 6430
message LBMBNGPIKMJ {
	uint32 HIDNPJDGPJL = 12; // offset: 24, xor const: 13005
}

message MPLOIHHKGLM {
	uint32 OOCEDODOFAA = 1; // offset: 24, xor const: 0
}

message HEOABPLAEFB {
	DLCEMKGCCCA EILDHJJLINK = 14; // offset: 24, xor const: 0
}

message BGBCMCFAKPL {
	FGKJFCJILIL ENCANOPLLDM = 3; // offset: 16, xor const: 0
	bool DPAHOEKFHIA = 2; // offset: 48, xor const: 0
	repeated FGKJFCJILIL GBGPCFAIENH = 4; // offset: 32, xor const: 0
	string MPHLIEKKFIK = 1; // offset: 24, xor const: 0
}

message DAJHIFEHDMO {
	EDGCAIEHLHH GLBNCAKAGAL = 6; // offset: 48, xor const: 0
	CLIDAGBGAIL FDDFLDCJGCF = 1; // offset: 64, xor const: 0
	GLAEGNJEBPA AABMKJBBCFP = 7; // offset: 60, xor const: 0
	bool DHDCBAHLKNB = 2; // offset: 56, xor const: 0
	string JBAEAFDOBLM = 4; // offset: 32, xor const: 0
	repeated string KJIDCPPPLLE = 3; // offset: 24, xor const: 0
	EDGCAIEHLHH LJCHOAPPCPB = 5; // offset: 16, xor const: 0
	bool BNJNDMFOGLF = 8; // offset: 57, xor const: 0
}

enum HollowSystemType {
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_NONE = 0;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_CARD = 1;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_MEMU = 2;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_CURSE = 3;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_BAG = 4;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_HOLLOW_ITEM = 5;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_HOLLOW_RESULT_PAGE = 6;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_CURSE_INFO = 7;
	HOLLOW_SYSTEM_TYPE_HOLLOW_SYSTEM_TYPE_HOLLOW_BOTTOM = 8;
}

message BDOMCBOAHCP {
	FGKJFCJILIL CPEGDKBNGDH = 1; // offset: 16, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 2; // offset: 32, xor const: 0
}

// CmdId: 5545
message PMIADCNAPKJ {
	uint32 DCENCIPOBMC = 11; // offset: 28, xor const: 2035
	NKEOICFGDCC DIONHPBOEKB = 12; // offset: 24, xor const: 0
}

// CmdId: 2850
message DLGEAIKDMCN {
	int32 IHIGNMLCHDK = 3; // offset: 24, xor const: 12191
}

// CmdId: 6978
message JNCJIGJCLGF {
	int32 IHIGNMLCHDK = 6; // offset: 24, xor const: 11113
}

message KHFLNKBPCMO {
	repeated HGIPJOCNKDF NKBIMCNHCOI = 1; // offset: 24, xor const: 0
	repeated uint32 KAPHIGAFCGA = 2; // offset: 32, xor const: 0
}

// CmdId: 7560
message FGPIJBGFFFJ {
	uint64 AEDAEPKDOAL = 10; // offset: 40, xor const: 6398
	repeated DNKAFLFNDHF POPGNHJNLCC = 4; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 12; // offset: 48, xor const: 13662
	uint64 HEJBMNAOJFL = 6; // offset: 56, xor const: 6879
	MOHOFAAEGDG CPEPJEPHPBD = 2; // offset: 16, xor const: 0
}

message DPDGLOECLKH {
	bool ADBBBJLEBMD = 3; // offset: 24, xor const: 0
	int32 JOJBOMLDHAO = 2; // offset: 32, xor const: 0
	int32 LDLJPDBHPLJ = 1; // offset: 28, xor const: 0
}

message ACNOGDBPIFE {
	repeated MFPJFIHOHDB DKNJIHKFFHN = 1; // offset: 24, xor const: 0
}

// CmdId: 9191
message GHMLEFNAPJO {
	int32 IHIGNMLCHDK = 9; // offset: 40, xor const: 5444
	repeated KNJKFHMPMCP FIJMGGMEMEB = 8; // offset: 32, xor const: 0
	CCPFAOECHGC NGMBGBBGDOG = 15; // offset: 16, xor const: 0
	uint32 MHDFOCGAOPO = 3; // offset: 44, xor const: 13606
}

enum MJCFEIDFHEB {
	MJCFEIDFHEB_NBBLIONHKMK = 0;
	MJCFEIDFHEB_GAFAEPCLDKD = 1;
	MJCFEIDFHEB_EALNBJIHLPM = 2;
}

enum HFHICHIMJOL {
	HFHICHIMJOL_HIBMKKPLPDF = 0;
	HFHICHIMJOL_GOLOHCDKNEP = 3;
	HFHICHIMJOL_FMFFCBCBOPP = 4;
}

message PFLKLLCBJAO {
	uint32 HJHFOICGOAC = 1; // offset: 28, xor const: 967
	uint32 AMIJIAHGPMC = 10; // offset: 24, xor const: 13024
}

// CmdId: 3834
message DCODMLGLAMC {
}

message HKPCNAJMKLE {
	repeated PCJAKPLKPGH NFJKCKOMHLN = 6; // offset: 48, xor const: 0
	repeated OEHHMHLPBBD MLIHDDBBGIH = 4; // offset: 16, xor const: 0
	repeated CKBPEJBCMIO BKKCEGFLBNJ = 5; // offset: 32, xor const: 0
	repeated PGBFJLGLIFB JDHDOAACEMG = 2; // offset: 56, xor const: 0
	repeated CGNOCJFODJE AHJBOICGCGJ = 3; // offset: 40, xor const: 0
	bool JFIMOGOEHAD = 1; // offset: 64, xor const: 0
}

message EJDCJNBMMBA {
	uint32 PGGCLACGFMH = 6; // offset: 24, xor const: 5551
	int32 ECAPMCDCLJF = 5; // offset: 32, xor const: 14377
	int32 KBGOOPJMICJ = 15; // offset: 28, xor const: 3025
}

// CmdId: 2902
message HICCPCFEBFK {
	int32 IHIGNMLCHDK = 15; // offset: 24, xor const: 11661
}

// CmdId: 6650
message LLGAMFGOECJ {
	uint32 AMIJIAHGPMC = 6; // offset: 28, xor const: 8793
	int32 IHIGNMLCHDK = 5; // offset: 24, xor const: 8153
}

message DBMMHGDLKLL {
	NMNCDMGDDDI EMFHHAMNGPF = 12; // offset: 48, xor const: 0
	FFKIJEGPICP OMGMCEDMCBP = 5; // offset: 56, xor const: 0
	MBKLAJMKIOF LKNGLDHMMGN = 7; // offset: 16, xor const: 0
	GCMBJIINODE NJHFOLJFGFH = 10; // offset: 40, xor const: 0
	NABFKKGKNMK BDHFKOKOFAH = 9; // offset: 32, xor const: 0
}

message HAMONOLKEHN {
}

// CmdId: 4815
message FHBPHGIIPMI {
	repeated JGKLEOEDGCM PGOFJFPNNLJ = 8; // offset: 24, xor const: 0
}

message ABMCGKFPMBH {
}

message OFOGIGNONPK {
	uint32 EELDLMADHPK = 7; // offset: 24, xor const: 15956
}

// CmdId: 8107
message MCPLNEBFPAO {
	uint32 DCENCIPOBMC = 7; // offset: 40, xor const: 839
	uint32 OLKGMLCCFAC = 8; // offset: 32, xor const: 2131
	string KNEPHHIBEOP = 4; // offset: 24, xor const: 0
	bool EDJIBBBFAIF = 10; // offset: 36, xor const: 0
}

// CmdId: 6811
message MOKADOFAMPH {
	uint32 DHNDNHIAMNG = 6; // offset: 96, xor const: 2373
	uint32 IFIIAAEANDC = 2; // offset: 116, xor const: 12819
	int32 IHIGNMLCHDK = 3; // offset: 104, xor const: 7330
	string AKPIAFHFFDP = 12; // offset: 32, xor const: 0
	repeated uint32 KDFABOALLPP = 1; // offset: 40, xor const: 0
	uint32 HIMPFGLFPPC = 5; // offset: 100, xor const: 6629
	uint32 LJGGMKKMCAL = 7; // offset: 108, xor const: 7890
	IODKMLDEAGC GOKDPHLGHHP = 960; // offset: 56, xor const: 0
	string MGEMBOOEJFP = 11; // offset: 24, xor const: 0
	repeated uint32 FJJDLJFPKGJ = 15; // offset: 16, xor const: 0
	HMNHANEHCHI LOCKKKOCJLO = 10; // offset: 80, xor const: 0
	repeated GKDEKBPAIAG GNLAAGJGAOE = 13; // offset: 64, xor const: 0
	map<uint32, HMNHANEHCHI> DEFPGANMAGH = 4; // offset: 72, xor const: 0
	uint32 LJCIJFAIFOL = 8; // offset: 112, xor const: 15257
	uint32 EMEGBPMABPD = 9; // offset: 120, xor const: 5479
	repeated uint32 JBGCCCKMKAF = 14; // offset: 48, xor const: 0
}

message GLOFKPPIHNB {
	float GKJNPOEJAND = 9; // offset: 24, xor const: 0
}

message JHCODHLLOFI {
}

message BNIGIMEBLHA {
	repeated DELBKBHMBEA DKNJIHKFFHN = 2; // offset: 16, xor const: 0
	EBGLGFBKAEK HFPEBMAHCEA = 5; // offset: 56, xor const: 0
	EBGLGFBKAEK ALLMEBMKONG = 4; // offset: 32, xor const: 0
	string FHIIIPELENE = 1; // offset: 24, xor const: 0
	string FMFBALBHPOF = 3; // offset: 40, xor const: 0
}

// CmdId: 860
message MLGJMJIABAA {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 9628
}

// CmdId: 5042
message DPLNOCJEJFL {
	map<uint32, uint32> NKGPHLLFNOB = 15; // offset: 16, xor const: 0
	uint32 GNOPMPEJPHF = 14; // offset: 36, xor const: 4261
	uint32 HJGCHCAKKNJ = 5; // offset: 32, xor const: 9998
}

// CmdId: 2349
message MCIADKDDPFD {
}

// CmdId: 4844
message AHCHDCICMOD {
	uint32 IIIGDHJPFMI = 1; // offset: 24, xor const: 3930
	bool NCPNFNHCGNH = 7; // offset: 28, xor const: 0
}

message JKHNMPEIHFB {
	uint32 DFKOCLNFPNN = 1; // offset: 28, xor const: 5349
	uint32 IKGENKKIOBI = 3; // offset: 24, xor const: 4975
}

// CmdId: 4274
message FGEOHMCMMHE {
	NJHJIDGJPHN CPEPJEPHPBD = 10; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 2; // offset: 56, xor const: 11158
	uint64 HEJBMNAOJFL = 15; // offset: 40, xor const: 329
	uint32 KMKPPDICOKA = 6; // offset: 48, xor const: 14305
	repeated DNKAFLFNDHF POPGNHJNLCC = 14; // offset: 32, xor const: 0
}

message EEMDNFCNMIM {
}

message CAINJMNKOOL {
	FHJHFMCLGJM GGPPMELMEEM = 1; // offset: 24, xor const: 0
	JHCLBOKGMIK IDANNPKMANM = 2; // offset: 16, xor const: 0
	bool DLFDBILCKIB = 3; // offset: 40, xor const: 0
}

message OAJECCPGACM {
	bool GDMAOALJPNF = 3; // offset: 66, xor const: 0
	bool ADAOKHLNODJ = 10; // offset: 65, xor const: 0
	repeated AKBJFOBGGAH JAIPILJKHOG = 6; // offset: 48, xor const: 0
	repeated int32 HILLEFPNONG = 9; // offset: 24, xor const: 0
	bool JIEECKLFIAL = 8; // offset: 64, xor const: 0
	repeated int32 AGPFALIIODG = 12; // offset: 32, xor const: 0
	repeated DHEOMBFKEAK BANPACGJJOO = 14; // offset: 56, xor const: 0
	repeated AKBJFOBGGAH OGNNGBPCBJE = 11; // offset: 16, xor const: 0
}

message ODECEBNJIPC {
	uint32 CINAJFDNJBD = 1; // offset: 32, xor const: 0
	bool EPJLOKGODOD = 4; // offset: 25, xor const: 0
	uint32 NMHNBHDEKBP = 2; // offset: 28, xor const: 0
	bool PGMEFNADEJN = 3; // offset: 24, xor const: 0
}

message DCEPFFPLOLM {
	int32 MJBLNIKMNOD = 2; // offset: 28, xor const: 0
	int32 PIIPPIBBFBE = 1; // offset: 24, xor const: 0
}

message HGIILFDHICG {
	int32 OPFEAMDPIAG = 1; // offset: 28, xor const: 0
	bool PNKNDEPJJED = 2; // offset: 24, xor const: 0
}

message MNLFGBLDAIN {
}

message NCJKBPCGAMB {
	int32 LCPDGEFCADA = 7; // offset: 32, xor const: 3720
	int32 LGLGBJONIFO = 6; // offset: 28, xor const: 8562
	int32 CLIOOGMIIIP = 12; // offset: 24, xor const: 626
	int32 GNBFPEIBLDK = 4; // offset: 36, xor const: 5214
}

enum JCLGCIMJDEA {
	JCLGCIMJDEA_ADD_CHARACTER_MODE_BY_ROBOT_ID = 0;
	JCLGCIMJDEA_ADD_CHARACTER_MODE_BY_PLAYER = 1;
}

message OJGMHJMDDND {
	int32 JAINEDAJDMP = 3; // offset: 24, xor const: 703
}

enum JBOJGEAHGAH {
	JBOJGEAHGAH_SERVER_ABILITY = 0;
	JBOJGEAHGAH_CLIENT_ABILITY = 1;
}

message FNHGCPDMLIE {
}

message OCBENCEOBIF {
	string FAKKFDPKMNM = 1; // offset: 24, xor const: 0
	uint32 EFNFANEIJMH = 2; // offset: 32, xor const: 0
}

// CmdId: 1409
message HEJMENBPGBA {
	repeated uint32 KPOFFBOODOC = 1; // offset: 16, xor const: 0
}

enum CJOAEPBHACK {
	CJOAEPBHACK_IIKJAOBLKON = 0;
	CJOAEPBHACK_CKEMMLHIAII = 1;
	CJOAEPBHACK_GCCIICGOCGH = 2;
	CJOAEPBHACK_LHHMNCCPELN = 3;
	CJOAEPBHACK_FNGFAHKELEN = 4;
	CJOAEPBHACK_EHOJLADKOBM = 5;
	CJOAEPBHACK_LIIMCOOFIHN = 6;
	CJOAEPBHACK_IFMNIPLLDMI = 7;
}

// CmdId: 8496
message HDFCFEBHHAF {
	int32 IHIGNMLCHDK = 11; // offset: 24, xor const: 9926
	uint32 MHINMINPONI = 8; // offset: 28, xor const: 16233
}

// CmdId: 674
message DIECPOJLLHL {
	CNCJBLGJEDE CPEPJEPHPBD = 14; // offset: 24, xor const: 0
	uint64 AEDAEPKDOAL = 5; // offset: 56, xor const: 8031
	uint32 KMKPPDICOKA = 9; // offset: 40, xor const: 12263
	uint64 HEJBMNAOJFL = 12; // offset: 48, xor const: 8886
	repeated DNKAFLFNDHF POPGNHJNLCC = 8; // offset: 32, xor const: 0
}

// CmdId: 9296
message GEOBHHLAOOL {
	repeated DNKAFLFNDHF POPGNHJNLCC = 5; // offset: 16, xor const: 0
	uint64 AEDAEPKDOAL = 11; // offset: 56, xor const: 1401
	LLKGPNFKBPP CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 10; // offset: 40, xor const: 11273
	uint64 HEJBMNAOJFL = 2; // offset: 48, xor const: 10272
}

message EJOGDMCDKPE {
}

// CmdId: 4236
message FDEDPFPFIEI {
	uint64 AEDAEPKDOAL = 7; // offset: 40, xor const: 5405
	repeated DNKAFLFNDHF POPGNHJNLCC = 12; // offset: 16, xor const: 0
	uint64 HEJBMNAOJFL = 14; // offset: 56, xor const: 9230
	GJFGFMAFBEJ CPEPJEPHPBD = 1; // offset: 24, xor const: 0
	uint32 KMKPPDICOKA = 4; // offset: 48, xor const: 14055
}

enum KEGNCKBIEJM {
	KEGNCKBIEJM_INT = 0;
	KEGNCKBIEJM_BOOL = 1;
	KEGNCKBIEJM_TRIGGER = 2;
	KEGNCKBIEJM_FLOAT = 3;
}

message AEBEAAJMIPH {
	uint32 FOGIGMHBMMI = 1; // offset: 40, xor const: 0
	repeated uint32 KDMLEOEMNGG = 2; // offset: 16, xor const: 0
	repeated CKIAKPIPBFO NFGGNHFAPEP = 3; // offset: 32, xor const: 0
}

message PMLPGBEKKAL {
	FGKJFCJILIL CEEAJBNFKDB = 1; // offset: 32, xor const: 0
	PHFJPCHBLPC NINCGEHHAHN = 3; // offset: 40, xor const: 0
	FGKJFCJILIL BBLCHBANJID = 2; // offset: 24, xor const: 0
	IHHJNHHDNHN JDDNAHKAFIK = 4; // offset: 44, xor const: 0
}

message AKKLJGELENH {
	FGKJFCJILIL GNKDCMJABEC = 7; // offset: 40, xor const: 0
	repeated FGKJFCJILIL FOEFODCFIHB = 4; // offset: 16, xor const: 0
	IHHJNHHDNHN MONLMCAIJOO = 6; // offset: 56, xor const: 0
	string NKIJGOBFOJL = 5; // offset: 24, xor const: 0
	FGKJFCJILIL MJHPOPNDGGP = 8; // offset: 32, xor const: 0
}

enum BEKLDHELDBB {
	BEKLDHELDBB_EDLDODPMKMD = 0;
	BEKLDHELDBB_LFNPOLMPDCC = 1;
}

message ALALCIDBCBK {
	uint32 KFDGHNOGJEH = 4; // offset: 36, xor const: 8120
	JJIOMDMMIGG LMJBDCCFLJD = 8; // offset: 40, xor const: 0
	uint32 ICJGBJKLEBL = 15; // offset: 32, xor const: 12173
	repeated EIGOEBIOMMG CPKLCHCKFGP = 3; // offset: 24, xor const: 0
}

message ENFFEJAMHAB {
	repeated GPEFNIABBPJ OJKDMCAEMON = 1; // offset: 16, xor const: 0
}

enum DDPDIHDHDIB {
	DDPDIHDHDIB_VAR_TYPE_NONE = 0;
	DDPDIHDHDIB_VAR_TYPE_INT = 1;
	DDPDIHDHDIB_VAR_TYPE_STRING = 2;
	DDPDIHDHDIB_VAR_TYPE_VECTOR_2 = 3;
	DDPDIHDHDIB_VAR_TYPE_LIST_INT = 4;
	DDPDIHDHDIB_VAR_TYPE_LIST_STRING = 5;
	DDPDIHDHDIB_VAR_TYPE_LIST_VECTOR_2 = 6;
}

// CmdId: 2774
message NDFNBOPFIHC {
	repeated uint32 GFBFEKAJDIG = 13; // offset: 24, xor const: 0
}

// CmdId: 1325
message JOJODKIMBAP {
	uint64 DIMEDPILOOA = 10; // offset: 24, xor const: 6022
}

// CmdId: 3216
message ADFJCDFPLGI {
	int32 NAHIEHJOLIK = 14; // offset: 24, xor const: 14976
}

message PKKADEHKINI {
	FGKJFCJILIL GJAIAFDIPHM = 1; // offset: 24, xor const: 0
}

// CmdId: 1846
message PDOOFMGDNPG {
	int32 IHIGNMLCHDK = 13; // offset: 32, xor const: 13872
	repeated LAFOEEKAAAC NAHLOOAEAEJ = 12; // offset: 24, xor const: 0
}

message LFDPBKPDKMH {
	string GJNCANEGADM = 2; // offset: 32, xor const: 0
	repeated int32 AHFPHBMAKFI = 3; // offset: 16, xor const: 0
	map<uint32, uint32> PMFHKDNNKCE = 1; // offset: 40, xor const: 0
}

// CmdId: 2636
message CADICCBOADK {
	int32 IHIGNMLCHDK = 4; // offset: 24, xor const: 1508
}

// CmdId: 3837
message GCOGBBBKOIJ {
	int32 IHIGNMLCHDK = 13; // offset: 24, xor const: 534
}

message JKCPEGIPFDM {
	int32 LDIEGCFOLMN = 2; // offset: 32, xor const: 0
	repeated int32 LDJEOEBFDED = 1; // offset: 24, xor const: 0
}

// CmdId: 3808
message KIJEEADHMKB {
	int32 IHIGNMLCHDK = 10; // offset: 24, xor const: 786
}

message CEDHKINCLGG {
	bool INMCIEMCEMN = 1; // offset: 24, xor const: 0
}

message EIHHHFJJPKM {
	uint32 KCJLECGKGKL = 2; // offset: 36, xor const: 0
	HollowEntityType DNAENEJOADB = 1; // offset: 32, xor const: 0
	string FPBOFDFLDGE = 3; // offset: 16, xor const: 0
}

message OLIHHGDIHDL {
	FGKJFCJILIL EKLGNOIEMLA = 1; // offset: 24, xor const: 0
}

enum POFDPJPFPJJ {
	POFDPJPFPJJ_TIME_REWIND_INTERACT_TYPE_NONE = 0;
	POFDPJPFPJJ_TIME_REWIND_INTERACT_TYPE_ALL = 1;
	POFDPJPFPJJ_TIME_REWIND_INTERACT_TYPE_EXIT = 2;
	POFDPJPFPJJ_TIME_REWIND_INTERACT_TYPE_PLAY = 3;
	POFDPJPFPJJ_TIME_REWIND_INTERACT_TYPE_SWITCH = 4;
}

